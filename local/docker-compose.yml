version: "3"
services:

  # Our load generator
  load-generator:
    image: curlimages/curl:latest
    volumes:
      - ./load-generator.sh:/tmp/load-generator.sh
    entrypoint: ["sh", "-c", "chmod +x /tmp/load-generator.sh && /tmp/load-generator.sh"]

  
  loki:
    image: grafana/loki:latest
    volumes:
      - ./config/loki-config.yaml:/etc/config/loki.yaml
    ports:
      - "3100:3100"
     
  tempo:
    image: grafana/tempo:1.5.0
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./config/tempo-local.yaml:/etc/tempo.yaml
      - ./config/tempo-data:/tmp/tempo
    ports:
      - "14268"  # jaeger ingest
      - "3200"   # tempo
      - "4317:4317"  # otlp grpc
      - "4318"  # otlp http
      - "9411"   # zipkin

  prometheus:
    image: prom/prometheus:latest
    command: [
      "--config.file=/etc/prometheus.yaml", 
      "--enable-feature=exemplar-storage",
      "--storage.tsdb.path=/prometheus",
      "--web.console.libraries=/usr/share/prometheus/console_libraries",
      "--web.console.templates=/usr/share/prometheus/consoles",
      "--web.enable-remote-write-receiver"
    ]
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:9.1.0
    volumes:
      # grafana.ini
      # see: https://grafana.com/docs/grafana/latest/setup-grafana/configure-docker/#default-paths
      - ./config/grafana.ini:/etc/grafana/grafana.ini
      # Pre-load the data sources
      - ./config/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      # Pre-load the Hello Observability dashboard
      - ./dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_USERS_DEFAULT_THEME=light
      - GF_FEATURE_TOGGLES_ENABLE=tempoSearch,tempoServiceGraph,tempoApmTable

    ports:
      - "3000:3000"

  # The pet-clinic application
  spring-petclinic:
    image: spring-petclinic:latest
    volumes:
      - ./logs/pet-clinic.log:/tmp/pet-clinic.log
      - ./logs/tomcat_log.log:/tmp/tomcat_log.log
    environment:
      JAVA_TOOL_OPTIONS: -javaagent:/opentelemetry-javaagent.jar
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://agent:4317
      OTEL_SERVICE_NAME: pet-clinic
      OTEL_TRACES_EXPORTER: otlp
#      OTEL_TRACES_EXPORTER: logging
    ports:
      - "8080:8080"

  # Our load generator
#  load-generator:
#    image: curlimages/curl:latest
#    volumes:
#      - ../hello-observability/load-generator.sh:/tmp/load-generator.sh
#    command: /bin/sh -c "/tmp/load-generator.sh"

  agent:
    image: grafana/agent:latest
    volumes:
      - ./config/agent.yaml:/etc/agent.yaml
      - ./logs/pet-clinic.log:/etc/pet-clinic.log
      - ./logs/tomcat_log.log:/etc/tomcat_log.log
    environment:
      HOSTNAME: agent
      LOKI_HOST: loki:3100
      TEMPO_HOST: tempo:3200
    ports:
      - "12345:12345"
#      - "4318:4318"   # OTLP http receiver
    depends_on:
      - loki
      - tempo

  # OTEL Collector
  otel-collector:
    image: otel/opentelemetry-collector:0.58.0
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./config/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
#      - "1888:1888"   # pprof extension
#      - "8888:8888"   # Prometheus metrics exposed by the collector
#      - "8889:8889"   # Prometheus exporter metrics
#      - "13133:13133" # health_check extension
#      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP http receiver
#      - "55679:55679" # zpages extension