{"mappings":"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AC;CACF,CAAC,AAAC;AACH,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAA,GAAA,gCAAkB,CAAA,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC5D,QAAQ,CAAC,QAAQ,CAAC;IACjB,cAAc,EAAE,IAAI,CAAA,GAAA,+BAAkB,CAAA,EAAE;CACxC,CAAC,CAAC;AAEH,CAAA,GAAA,yCAAwB,CAAA,CAAC;IACxB,gBAAgB,EAAE;QAChB,CAAA,GAAA,mDAA0B,CAAA,CAAC;YACzB,iEAAiE;YACjE,iDAAiD,EAAE;gBACjD,4BAA4B,EAAE;;iBAE3B;aACJ;YACD,sDAAsD;YACtD,sCAAsC,EAAE;gBACtC,4BAA4B,EAAE;;iBAE3B;aACJ;SACF,CAAC;KACH;CACD,CAAC,CAAC;;;AEvBH;;AAhBA;;;;;;;;;;;;;;GAcG,CAEH,uDAAoC;AAApC,wBAAA,kBAAoC,UAAA;AACpC,2DAAsC;AAAtC,wBAAA,oBAAsC,UAAA;AACtC,uEAA+C;AAA/C,wBAAA,uBAA+C,UAAA;AAC/C,+BAAwB;AAAxB,wBAAA,MAAwB,UAAA;AACxB,+BAAwB;AAAxB,wBAAA,MAAwB,UAAA;;;A;;A,uD,iB,C;AEJxB,4DAIuC;AACvC,2DAA4D;AArB5D;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,A,W;I,I,a,G,S,C,E,C,E;Q,a,G,M,C,c,I,C;Y,S,E,E;S,C,Y,K,I,S,C,E,C,E;Y,C,C,S,G,C,C;S,I,S,C,E,C,E;Y,I,I,C,I,C,C,I,M,C,S,C,c,C,I,C,C,E,C,C,E,C,C,C,C,G,C,C,C,C,C;S,C;Q,O,a,C,C,E,C,C,C;K,A;I,O,S,C,E,C,E;Q,I,O,C,K,U,I,C,K,I,E,M,I,S,C,sB,G,M,C,C,C,G,+B,C,C;Q,a,C,C,E,C,C,C;Q,S,E,G;Y,I,C,W,G,C,C;S;Q,C,C,S,G,C,K,I,G,M,C,M,C,C,C,G,C,E,C,S,G,C,C,S,E,I,E,E,C,A,C;K,C;C,E,A;AAcH;;GAEG,CACH,IAAA,iBAAA,GAAA,aAAA,CAAA,SAAA,MAAA,EAAA;IAAuC,SAAA,CAAA,iBAAA,EAAA,MAAA,CAAA,CAAmB;IACxD;;;OAGG,CACH,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AgB,EAApD;IACE,OAAO,OAAO,CAAC,QAAQ,CAAC,oBAAoB,CAAC,KAAK,IAAI,CAAC;CACxD;;;A;;AEdD,wDAAgB,kBAAkB,CAwBjC;AAED,oDAAgB,cAAc,CAE7B;AAED,sDAAgB,gBAAgB,CAU/B;AA1CD,wCAA8E;AAhB9E;;;;;;;;;;;;;;GAcG,C,I,Q,G,a,U,Q,I,S,C,E;I,I,C,G,O,M,K,U,I,M,C,Q,E,C,G,C,I,C,C,C,C,E,C,G,C,A;I,I,C,E,O,C,C,I,C,C,C,C;I,I,C,I,O,C,C,M,K,Q,E,O;Q,I,E,W;Y,I,C,I,C,I,C,C,M,E,C,G,K,C,C;Y,O;gB,K,E,C,I,C,C,C,E,C;gB,I,E,C,C;a,C;S;K,C;I,M,I,S,C,C,G,yB,G,iC,C,C;C,A;A,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I,O,E,C;C,A;AAIG,SAAU,kBAAkB,CAAC,UAAmB,EAAtD;I,I,G,E,E,A;IACE,IAAM,GAAG,GAAmB,EAAE,AAAC;IAE/B,IAAI,OAAO,UAAU,KAAK,QAAQ,IAAI,UAAU,IAAI,IAAI,EACtD,OAAO,GAAG,CAAC;I,I;QAGb,IAAyB,IAAA,EAAA,GAAA,QAAA,CAAA,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,CAAE;YAA1C,IAAA,EAAA,GAAA,MAAA,CAAA,EAAA,CAAA,KAAA,EAAA,CAAA,CAAU,EAAT,GAAG,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,GAAG,GAAA,EAAA,CAAA,CAAA,CAAA,AAA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,C,C,C,E,C,G,C,A;I,I,C,E,O,C,C,I,C,C,C,C;I,I,C,I,O,C,C,M,K,Q,E,O;Q,I,E,W;Y,I,C,I,C,I,C,C,M,E,C,G,K,C,C;Y,O;gB,K,E,C,I,C,C,C,E,C;gB,I,E,C,C;a,C;S;K,C;I,M,I,S,C,C,G,yB,G,iC,C,C;C,A;AA1BK,SAAU,UAAU,CAAC,GAAW,EAAE,UAA2B,EAAnE;IACE,IAAI,OAAO,UAAU,KAAK,QAAQ,EAChC,OAAO,GAAG,KAAK,UAAU,CAAC;SAE1B,OAAO,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;CAElC;AAMK,SAAU,YAAY,CAC1B,GAAW,EACX,WAAoC,EAFtC;I,I,G,E,E,A;IAIE,IAAI,CAAC,WAAW,EACd,OAAO,KAAK,CAAC;I,I;QAGf,IAAwB,IAAA,aAAA,GAAA,QAAA,CAAA,WAAW,CAAA,EAAA,eAAA,GAAA,aAAA,CAAA,IAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,eAAA,GAAA,aAAA,CAAA,IAAA,EAAA,CAAE;YAAhC,IAAM,SAAS,GAAA,eAAA,CAAA,KAAA,AAAf;YACH,IAAI,UAAU,CAAC,GAAG,EAAE,SAAS,CAAC,EAC5B,OAAO,IAAI,CAAC;SAEf;K,C,O,K,E;Q,G,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,e,I,C,e,C,I,I,C,E,G,a,C,M,C,A,E,E,C,I,C,a,C,C;S,Q;Y,I,G,E,M,G,C,K,C;S;K;IACD,OAAO,KAAK,CAAC;CACd;;;AEnBD;;AAtBA;;;;;;;;;;;;;;GAcG,CAIH;;;GAGG,CACH,+CAAgB,SAAS,CAOxB;AAPK,SAAU,SAAS,CAAC,IAAa,EAAvC;IACE,OACE,OAAO,IAAI,KAAK,UAAU,IAC1B,OAAQ,IAAoB,CAAC,UAAU,KAAK,UAAU,IACtD,OAAQ,IAAoB,CAAC,QAAQ,KAAK,UAAU,IACnD,IAAoB,CAAC,SAAS,KAAK,IAAI,CACxC;CACH;;;A;;A,oD,c,C;AEbD,mCAAqC;AAhBrC;;;;;;;;;;;;;;GAcG,C,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I,O,E,C;C,A;A,I,a,G,a,U,a,I,S,E,E,I,E,I,E;I,I,I,I,S,C,M,K,C,E;Q,I,I,C,G,C,E,C,G,I,C,M,E,E,E,C,G,C,E,C,E,C,I,E,I,C,C,C,I,I,C,A,E;Y,I,C,E,E,E,G,K,C,S,C,K,C,I,C,I,E,C,E,C,C,C;Y,E,C,C,C,G,I,C,C,C,C;S;K;I,O,E,C,M,C,E,I,K,C,S,C,K,C,I,C,I,C,C,C;C,A;AAIH;;GAEG,CACH,IAAA,cAAA,GAAA,aAAA,CAAA,WAAA;IAOE,SAAA,cAAA,CAAoB,SAAY,EAAU,KAAW,EAArD;QAAoB,IAAA,CAAA,SAAS,GAAT,SAAS,CAAG;QAAU,IAAA,CAAA,KAAK,GAAL,KAAK,CAAM;QAF7C,IAAA,CAAA,SAAS,GAAG,KAAK,CAAC;QAClB,IAAA,CAAA,SAAS,GAAG,IAAI,CAAA,GAAA,iBAAQ,CAAA,EAAK,CAAC;KACmB;IAEzD,MAAA,CAAA,cAAA,CAAI,cAAA,CAAA,SAAA,EAAA,UAAQ,EAAZ;QAAA,GAAA,EAAA,WAAA;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;SACvB;Q,U,E,K;Q,Y,E,I;KAAA,CAAA,CAAA;IAED,MAAA,CAAA,cAAA,CAAI,cAAA,CAAA,SAAA,EAAA,SAAO,EAAX;QAAA,GAAA,EAAA,WAAA;YACE,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;SAC/B;Q,U,E,K;Q,Y,E,I;KAAA,CAAA,CAAA;IAED,cAAA,CAAA,SAAA,CAAA,IAAI,GAAJ,WAAA;Q,I,E,A;QAAA,IAAA,KAAA,GAAA,IAAA,AAcC;QAdI,IAAA,IAAA,GAAA,EAAA,AAAsB;QAAtB,IAAA,IAAA,EAAA,GAAA,CAAsB,EAAtB,EAAA,GAAA,SAAA,CAAA,MAAsB,EAAtB,EAAA,EAAsB,CAAtB,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA,CAAsB;QACzB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI;gBACF,OAAO,CAAC,OAAO,CAAC,AAAA,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,CAAA,CAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAA,aAAA,CAAA;oBAAC,IAAI,CAAC,KAAK;iBAAA,EAAA,MAAA,CAAK,IAAI,CAAA,EAAA,KAAA,CAAA,CAAA,CAAE,CACtD,IAAI,CACH,SAAA,GAAG,EAAA;oBAAI,OAAA,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;iBAAA,EAClC,SAAA,GAAG,EAAA;oBAAI,OAAA,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;iBAAA,CAClC,CAAC;aACL,CAAC,OAAO,GAAG,EAAE;gBACZ,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aAC5B;SACF;QACD,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;KAC/B,CAAD;IACF,OAAA,cAAC,CAAD;CAhCA,EAAA,AAAA,AAgCC;;;AErCD;;A,8C,Q,C;AAhBA;;;;;;;;;;;;;;GAcG,CAEH,IAAA,QAAA,GAAA,aAAA,CAAA,WAAA;IAIE,SAAA,QAAA,GAAA;QAAA,IAAA,KAAA,GAAA,IAAA,AAKC;QAJC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,SAAC,OAAO,EAAE,MAAM,EAA5C;YACE,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;SACvB,CAAC,CAAC;KACJ;IAED,MAAA,CAAA,cAAA,CAAI,QAAA,CAAA,SAAA,EAAA,SAAO,EAAX;QAAA,GAAA,EAAA,WAAA;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;Q,U,E,K;Q,Y,E,I;KAAA,CAAA,CAAA;IAED,QAAA,CAAA,SAAA,CAAA,OAAO,GAAP,SAAQ,GAAM,EAAd;QACE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;KACpB,CAAD;IAEA,QAAA,CAAA,SAAA,CAAA,MAAM,GAAN,SAAO,GAAY,EAAnB;QACE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;KACnB,CAAD;IACF,OAAA,QAAC,CAAD;CAtBA,EAAA,AAAA,AAsBC;;;A;;A,0C,I,C;AEtBD,wCAA0C;AAC1C,0CAQ6B;AAE7B,yEAAyE;AAOzE,+BAA6C;AAlC7C;;;;;;;;;;;;;;GAcG,C,I,Q,G,a,U,Q,I,S,C,E;I,I,C,G,O,M,K,U,I,M,C,Q,E,C,G,C,I,C,C,C,C,E,C,G,C,A;I,I,C,E,O,C,C,I,C,C,C,C;I,I,C,I,O,C,C,M,K,Q,E,O;Q,I,E,W;Y,I,C,I,C,I,C,C,M,E,C,G,K,C,C;Y,O;gB,K,E,C,I,C,C,C,E,C;gB,I,E,C,C;a,C;S;K,C;I,M,I,S,C,C,G,yB,G,iC,C,C;C,A;A,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I,O,E,C;C,A;AAsBH;;GAEG,CACH,IAAA,IAAA,GAAA,aAAA,CAAA,WAAA;IAuBE,sCAAsC,CACtC,SAAA,IAAA,CACE,YAAoB,EACpB,OAAgB,EAChB,QAAgB,EAChB,WAA4B,EAC5B,IAAkB,EAClB,YAAqB,EACrB,KAAsB,EACtB,SAAmC,EARrC;QAOE,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,KAAA,GAAA,EAAsB,CAAtB;QACA,IAAA,SAAA,KAAA,KAAA,CAAA,EAAA,SAAA,GAA2B,CAAA,GAAA,YAAM,CAAA,EAAE,CAAnC;QA1BO,IAAA,CAAA,UAAU,GAAuB,EAAE,CAAC;QACpC,IAAA,CAAA,K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AAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,qBAAqB,CAAC,EAC5D,EAAA,CAAA,CAAA,CAAC;KACJ,CAAD;IAWA;;;;;;;OAOG,CACH,QAAA,CAAA,SAAA,CAAA,KAAK,GAAL,SAAM,KAAsB,EAA5B;QACE,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC;QAEjE,yEAAyE;QACzE,IAAM,gBAAgB,GAAG,MAAM,CAAC,MAAM,CACpC,EAAE,EACF,IAAI,CAAC,UAAU,EACf,KAAK,CAAC,UAAU,CACjB,AAAC;QACF,OAAO,IAAI,QAAQ,CAAC,gBAAgB,CAAC,CAAC;KACvC,CAAD;IAnDgB,QAAA,CAAA,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,CAAC,CAAC;IAoD3C,OAAA,QAAC,CAAD;CArDA,EAAA,AAAA,AAqDC;;;AE9DD;;AAhBA;;;;;;;;;;;;;;GAcG,CAEH,2DAAuC;AAAvC,wBAAA,mBAAuC,UAAA;AACvC,oDAAmC;AAAnC,wBAAA,gBAAmC,UAAA;AACnC,6CAA+B;AAA/B,wBAAA,aAA+B,UAAA;AAC/B,yCAA6B;AAA7B,wBAAA,WAA6B,UAAA;;;AEH7B;;AAhBA;;;;;;;;;;;;;;GAcG,CAEH,wDAAgB,kBAAkB,CAEjC;AAFK,SAAU,kBAAkB,GAAlC;IACE,OAAO,iBAAiB,CAAC;CAC1B;;;A;;qDEQY,eAAe;AAV5B,yCAA0C;AAE1C,wCAA0C;AAlB1C;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,S,O,E,U,E,C,E,S,E;I,S,K,C,K,E;Q,O,K,Y,C,G,K,G,I,C,C,S,O,E;Y,O,C,K,C,C;S,C,C;K;I,O,I,C,C,I,C,C,G,O,C,A,C,C,S,O,E,M,E;Q,S,S,C,K,E;Y,I;gB,I,C,S,C,I,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,Q,C,K,E;Y,I;gB,I,C,S,C,O,C,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,I,C,M,E;Y,M,C,I,G,O,C,M,C,K,C,G,K,C,M,C,K,C,C,I,C,S,E,Q,C,C;S;Q,I,C,A,C,S,G,S,C,K,C,O,E,U,I,E,C,C,C,I,E,C,C;K,C,C;C,A;A,I,W,G,a,U,W,I,S,O,E,I,E;I,I,C,G;Q,K,E,C;Q,I,E,W;Y,I,C,C,C,C,G,C,E,M,C,C,C,C,C;Y,O,C,C,C,C,C;S;Q,I,E,E;Q,G,E,E;K,E,C,E,C,E,C,E,C,A;I,O,C,G;Q,I,E,I,C,C,C;Q,O,E,I,C,C,C;Q,Q,E,I,C,C,C;K,E,O,M,K,U,I,C,C,C,M,C,Q,C,G,W;Q,O,I,C;K,C,A,E,C,C;I,S,I,C,C,E;Q,O,S,C,E;Y,O,I,C;gB,C;gB,C;a,C,C;S,C;K;I,S,I,C,E,E;Q,I,C,E,M,I,S,C,iC,C,C;Q,M,C,C,I;Y,I,C,G,C,E,C,I,C,C,G,E,C,C,C,G,C,G,C,C,Q,C,G,E,C,C,C,G,C,C,O,C,I,C,A,C,C,G,C,C,Q,C,C,I,C,C,I,C,C,C,E,C,C,A,G,C,C,I,C,I,C,A,C,C,G,C,C,I,C,C,E,E,C,C,C,C,C,C,I,E,O,C,C;Y,I,C,G,C,E,C,E,E,G;gB,E,C,C,C,G,C;gB,C,C,K;a,C;Y,O,E,C,C,C;gB,K,C,C;gB,K,C;oB,C,G,E,C;oB,M;gB,K,C;oB,C,C,K,E,C;oB,O;wB,K,E,E,C,C,C;wB,I,E,K;qB,C;gB,K,C;oB,C,C,K,E,C;oB,C,G,E,C,C,C,C;oB,E,G;A,yB;qB,C;oB,S;gB,K,C;oB,E,G,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;gB;oB,I,C,C,C,G,C,C,I,E,C,G,C,C,M,G,C,I,C,C,C,C,M,G,C,C,C,A,I,C,E,C,C,C,K,C,I,E,C,C,C,K,C,C,A,E;wB,C,G,C,C;wB,S;qB;oB,I,E,C,C,C,K,C,I,C,C,C,I,E,C,C,C,G,C,C,C,C,I,E,C,C,C,G,C,C,C,C,A,C,A,E;wB,C,C,K,G,E,C,C,C,C;wB,M;qB;oB,I,E,C,C,C,K,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,G,E,C;wB,M;qB;oB,I,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,C,G,C,I,C,E,C,C;wB,M;qB;oB,I,C,C,C,C,E,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;a;Y,E,G,I,C,I,C,O,E,C,C,C;S,C,O,C,E;Y,E,G;A,iB;gB,C;a,C;Y,C,G,C,C;S,Q;Y,C,G,C,G,C,C;S;Q,I,E,C,C,C,G,C,E,M,E,C,C,C,C;Q,O;Y,K,E,E,C,C,C,G,E,C,C,C,G,K,C;Y,I,E,I;S,C;K;C,A;AAYI,IAAM,eAAe,GAAG,SAC7B,MAAoC,EADtC;IACE,IAAA,MAAA,KAAA,KAAA,CAAA,EAAA,MAAA,GAAA,EAAoC,CAApC;I,O,S,C,K,C,E,K,C,E,K,C,E,W;Q,I,c,E,S,A;Q,O,W,C,I,E,S,E,E;Y,O,E,C,K;gB,K,C;oBAEM,cAAc,GAA4B,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBAExC,OAAA;AAAA,yBAAA,CAAA,SAAA;wBAAM,OAAO,CAAC,GAAG,CAC7C,AAAC,CAAA,cAAc,CAAC,SAAS,IAAI,EAAE,CAAA,CAAE,GAAG,CAAC,SAAM,CAAC,EADhB;4BAAA,OAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,WAAA;gC,I,Q,E,G,A;gC,O,W,C,I,E,S,E,E;oC,O,E,C,K;wC,K,C;4C,E,C,I,C,I,C;A,iD;A,iD;;A,iD;6C,C,C;4CAGP,OAAA;AAAA,iDAAA,CAAA,SAAA;gDAAM,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC;6CAAA,CAAA;wC,K,C;4CAAzC,QAAQ,GAAG,EAAA,CAAA,IAAA,EAA8B,CAAzC;4CACN,CAAA,GAAA,SAAI,CAAA,CAAC,KAAK,CAAI,CAAC,CAAC,WAAW,CAAC,IAAI,GAAA,kBAAkB,EAAE,QAAQ,CAAC,CAAC;4CAC9D,OAAA;AAAA,iDAAA,CAAA,UAAA;gDAAO,QAAQ;6CAAA,CAAC;wC,K,C;4C,G,G,E,C,I,E,C;4CAEhB,CAAA,GAAA,SAAI,CAAA,CAAC,KAAK,CAAI,CAAC,CAAC,WAAW,CAAC,IAAI,GAAA,WAAA,GAAY,GAAC,CAAC,OAAS,CAAC,CAAC;4CACzD,OAAA;AAAA,iDAAA,CAAA,UAAA;gDAAO,CAAA,GAAA,kBAAQ,CAAA,CAAC,KAAK,EAAE;6CAAA,CAAC;wC,K,C;4C,O;A,iD,C,U;6C,C;qC;iC,C,C;6BAE3B,CAAA,CAAA;yBAAA,CAAC,CACH;qBAAA,CAAA;gB,K,C;oBAXK,SAAS,GAAe,EAAA,CAAA,IAAA,EAW7B,CAXK;oBAaN,OAAA;AAAA,yBAAA,CAAA,UAAA;wBAAO,SAAS,CAAC,MAAM,CACrB,SAAC,GAAG,EAAE,QAAQ,EAAA;4BAAK,OAAA,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;yBAAA,EACtC,CAAA,GAAA,kBAAQ,CAAA,CAAC,KAAK,EAAE,CACjB;qBAAA,CAAC;a;S,C,C;K,C,C;CACH,AAAC;;;AEhCF;;kDAEa,YAAY;AAlBzB;;;;;;;;;;;;;;GAcG,CAEH,2DAA4D;AAErD,IAAM,YAAY,GAAG,CAAA,GAAA,0BAAY,CAAA,AAAC;;;A;;A,kD,Y,C;kDEO5B,YAAY;AATzB,sCAAuC;AAhBvC;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,S,O,E,U,E,C,E,S,E;I,S,K,C,K,E;Q,O,K,Y,C,G,K,G,I,C,C,S,O,E;Y,O,C,K,C,C;S,C,C;K;I,O,I,C,C,I,C,C,G,O,C,A,C,C,S,O,E,M,E;Q,S,S,C,K,E;Y,I;gB,I,C,S,C,I,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,Q,C,K,E;Y,I;gB,I,C,S,C,O,C,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,I,C,M,E;Y,M,C,I,G,O,C,M,C,K,C,G,K,C,M,C,K,C,C,I,C,S,E,Q,C,C;S;Q,I,C,A,C,S,G,S,C,K,C,O,E,U,I,E,C,C,C,I,E,C,C;K,C,C;C,A;A,I,W,G,a,U,W,I,S,O,E,I,E;I,I,C,G;Q,K,E,C;Q,I,E,W;Y,I,C,C,C,C,G,C,E,M,C,C,C,C,C;Y,O,C,C,C,C,C;S;Q,I,E,E;Q,G,E,E;K,E,C,E,C,E,C,E,C,A;I,O,C,G;Q,I,E,I,C,C,C;Q,O,E,I,C,C,C;Q,Q,E,I,C,C,C;K,E,O,M,K,U,I,C,C,C,M,C,Q,C,G,W;Q,O,I,C;K,C,A,E,C,C;I,S,I,C,C,E;Q,O,S,C,E;Y,O,I,C;gB,C;gB,C;a,C,C;S,C;K;I,S,I,C,E,E;Q,I,C,E,M,I,S,C,iC,C,C;Q,M,C,C,I;Y,I,C,G,C,E,C,I,C,C,G,E,C,C,C,G,C,G,C,C,Q,C,G,E,C,C,C,G,C,C,O,C,I,C,A,C,C,G,C,C,Q,C,C,I,C,C,I,C,C,C,E,C,C,A,G,C,C,I,C,I,C,A,C,C,G,C,C,I,C,C,E,E,C,C,C,C,C,C,I,E,O,C,C;Y,I,C,G,C,E,C,E,E,G;gB,E,C,C,C,G,C;gB,C,C,K;a,C;Y,O,E,C,C,C;gB,K,C,C;gB,K,C;oB,C,G,E,C;oB,M;gB,K,C;oB,C,C,K,E,C;oB,O;wB,K,E,E,C,C,C;wB,I,E,K;qB,C;gB,K,C;oB,C,C,K,E,C;oB,C,G,E,C,C,C,C;oB,E,G;A,yB;qB,C;oB,S;gB,K,C;oB,E,G,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;gB;oB,I,C,C,C,G,C,C,I,E,C,G,C,C,M,G,C,I,C,C,C,C,M,G,C,C,C,A,I,C,E,C,C,C,K,C,I,E,C,C,C,K,C,C,A,E;wB,C,G,C,C;wB,S;qB;oB,I,E,C,C,C,K,C,I,C,C,C,I,E,C,C,C,G,C,C,C,C,I,E,C,C,C,G,C,C,C,C,A,C,A,E;wB,C,C,K,G,E,C,C,C,C;wB,M;qB;oB,I,E,C,C,C,K,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,G,E,C;wB,M;qB;oB,I,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,C,G,C,I,C,E,C,C;wB,M;qB;oB,I,C,C,C,C,E,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;a;Y,E,G,I,C,I,C,O,E,C,C,C;S,C,O,C,E;Y,E,G;A,iB;gB,C;a,C;Y,C,G,C,C;S,Q;Y,C,G,C,G,C,C;S;Q,I,E,C,C,C,G,C,E,M,E,C,C,C,C;Q,O;Y,K,E,E,C,C,C,G,E,C,C,C,G,K,C;Y,I,E,I;S,C;K;C,A;AAKH,IAAA,YAAA,GAAA,aAAA,CAAA,WAAA;IAAA,SAAA,YAAA,GAAA,EAIC;IAHO,YAAA,CAAA,SAAA,CAAA,MAAM,GAAZ,WAAM;Q,O,S,C,I,E,K,C,E,K,C,E,W;Y,O,W,C,I,E,S,E,E;gBACJ,OAAA;AAAA,qBAAA,CAAA,UAAA;oBAAO,IAAI,CAAA,GAAA,kBAAQ,CAAA,CAAC,EAAE,CAAC;iBAAA,CAAC;a,C,C;S,C,C;KACzB,CAAA;IACH,OAAA,YAAC,CAAD;CAJA,EAAA,AAAA,AAIC;AAEM,IAAM,YAAY,GAAG,IAAI,YAAY,EAAE,AAAC;;;AET/C;;gDAEa,UAAU;AAlBvB;;;;;;;;;;;;;;GAcG,CAEH,2DAA4D;AAErD,IAAM,UAAU,GAAG,CAAA,GAAA,0BAAY,CAAA,AAAC;;;A;;;;A;;;;AMFvC;;AAhBA;;;;;;;;;;;;;;GAcG,CAEH,mDAAkC;AAAlC,wBAAA,gBAAkC,UAAA;AAClC,2CAA8B;AAA9B,wBAAA,YAA8B,UAAA;AAC9B,mDAAkC;AAAlC,wBAAA,gBAAkC,UAAA;;;A;;qDE8CrB,eAAe;AAhD5B,wCAA0C;AAC1C,yEAAiF;AACjF,qBAAiE;AAlBjE;;;;;;;;;;;;;;GAcG,C,I,Q,G,a,U,Q,I,W;I,Q,G,M,C,M,I,S,C,E;Q,I,I,C,E,C,G,C,E,C,G,S,C,M,E,C,G,C,E,C,E,C;Y,C,G,S,C,C,C,C;Y,I,I,C,I,C,C,I,M,C,S,C,c,C,I,C,C,E,C,C,E,C,C,C,C,G,C,C,C,C,C;S;Q,O,C,C;K,C;I,O,Q,C,K,C,I,E,S,C,C;C,A;A,I,S,G,a,U,S,I,S,O,E,U,E,C,E,S,E;I,S,K,C,K,E;Q,O,K,Y,C,G,K,G,I,C,C,S,O,E;Y,O,C,K,C,C;S,C,C;K;I,O,I,C,C,I,C,C,G,O,C,A,C,C,S,O,E,M,E;Q,S,S,C,K,E;Y,I;gB,I,C,S,C,I,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,Q,C,K,E;Y,I;gB,I,C,S,C,O,C,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,I,C,M,E;Y,M,C,I,G,O,C,M,C,K,C,G,K,C,M,C,K,C,C,I,C,S,E,Q,C,C;S;Q,I,C,A,C,S,G,S,C,K,C,O,E,U,I,E,C,C,C,I,E,C,C;K,C,C;C,A;A,I,W,G,a,U,W,I,S,O,E,I,E;I,I,C,G;Q,K,E,C;Q,I,E,W;Y,I,C,C,C,C,G,C,E,M,C,C,C,C,C;Y,O,C,C,C,C,C;S;Q,I,E,E;Q,G,E,E;K,E,C,E,C,E,C,E,C,A;I,O,C,G;Q,I,E,I,C,C,C;Q,O,E,I,C,C,C;Q,Q,E,I,C,C,C;K,E,O,M,K,U,I,C,C,C,M,C,Q,C,G,W;Q,O,I,C;K,C,A,E,C,C;I,S,I,C,C,E;Q,O,S,C,E;Y,O,I,C;gB,C;gB,C;a,C,C;S,C;K;I,S,I,C,E,E;Q,I,C,E,M,I,S,C,iC,C,C;Q,M,C,C,I;Y,I,C,G,C,E,C,I,C,C,G,E,C,C,C,G,C,G,C,C,Q,C,G,E,C,C,C,G,C,C,O,C,I,C,A,C,C,G,C,C,Q,C,C,I,C,C,I,C,C,C,E,C,C,A,G,C,C,I,C,I,C,A,C,C,G,C,C,I,C,C,E,E,C,C,C,C,C,C,I,E,O,C,C;Y,I,C,G,C,E,C,E,E,G;gB,E,C,C,C,G,C;gB,C,C,K;a,C;Y,O,E,C,C,C;gB,K,C,C;gB,K,C;oB,C,G,E,C;oB,M;gB,K,C;oB,C,C,K,E,C;oB,O;wB,K,E,E,C,C,C;wB,I,E,K;qB,C;gB,K,C;oB,C,C,K,E,C;oB,C,G,E,C,C,C,C;oB,E,G;A,yB;qB,C;oB,S;gB,K,C;oB,E,G,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;gB;oB,I,C,C,C,G,C,C,I,E,C,G,C,C,M,G,C,I,C,C,C,C,M,G,C,C,C,A,I,C,E,C,C,C,K,C,I,E,C,C,C,K,C,C,A,E;wB,C,G,C,C;wB,S;qB;oB,I,E,C,C,C,K,C,I,C,C,C,I,E,C,C,C,G,C,C,C,C,I,E,C,C,C,G,C,C,C,C,A,C,A,E;wB,C,C,K,G,E,C,C,C,C;wB,M;qB;oB,I,E,C,C,C,K,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,G,E,C;wB,M;qB;oB,I,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,C,G,C,I,C,E,C,C;wB,M;qB;oB,I,C,C,C,C,E,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;a;Y,E,G,I,C,I,C,O,E,C,C,C;S,C,O,C,E;Y,E,G;A,iB;gB,C;a,C;Y,C,G,C,C;S,Q;Y,C,G,C,G,C,C;S;Q,I,E,C,C,C,G,C,E,M,E,C,C,C,C;Q,O;Y,K,E,E,C,C,C,G,E,C,C,C,G,K,C;Y,I,E,I;S,C;K;C,A;AAOH;;GAEG,CACH,IAAA,eAAA,GAAA,aAAA,CAAA,WAAA;IAAA,SAAA,eAAA,GAAA,EAqCC;IApCO,eAAA,CAAA,SAAA,CAAA,MAAM,GAAZ,SAAa,MAAgC,EAAvC;Q,O,S,C,I,E,K,C,E,K,C,E,W;Y,I,S,E,e,A;Y,I,E,A;Y,O,W,C,I,E,S,E,E;gBACE,SAAS,GAAG,OAAO,SAAS,KAAK,WAAW,CAAC;gBACnD,IAAI,CAAC,SAAS,EACZ,OAAA;AAAA,qBAAA,CAAA,UAAA;oBAAO,CAAA,GAAA,UAAQ,CAAA,CAAC,KAAK,EAAE;iBAAA,CAAC;gBAEpB,eAAe,GAAf,CAAA,EAAA,GAAA,EAAA,EACJ,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,oBAAoB,CAAA,GAAG,SAAS,EAC5D,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,2BAA2B,CAAA,GAAG,aAAa,EACvE,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,uBAAuB,CAAA,GAAG,SAAS,CAAC,SAAS,EAC1E,EAAA,CAAA,AAAA,CAAC;gBACF,OAAA;AAAA,qBAAA,CAAA,UAAA;oBAAO,IAAI,CAAC,sBAAsB,CAAC,eAAe,EAAE,MAAM,CAAC;iBAAA,CAAC;a,C,C;S,C,C;KAC7D,CAAA;IACD;;;;;;OAMG,CACK,eAAA,CAAA,SAAA,CAAA,sBAAsB,GAA9B,SACE,eAAmC,EACnC,OAAiC,EAF3B;QAIN,IACE,eAAe,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,uBAAuB,CAAC,KAAK,EAAE,EAC1E;YACA,CAAA,GAAA,SAAI,CAAA,CAAC,KAAK,CACR,qEAAqE,CACtE,CAAC;YACF,OAAO,CAAA,GAAA,UAAQ,CAAA,CAAC,KAAK,EAAE,CAAC;SACzB,MACC,OAAO,IAAI,CAAA,GAAA,UAAQ,CAAA,CAAA,QAAA,CAAA,EAAA,EACd,eAAe,CAAA,CAClB,CAAC;KAEN,CAAD;IACF,OAAA,eAAC,CAAD;CArCA,EAAA,AAAA,AAqCC;AAGM,IAAM,eAAe,GAAG,IAAI,eAAe,EAAE,AAAC;;;A;;iDE6FxC,WAAW;AA7IxB,wCAA0C;AAC1C,0CAA6C;AAC7C,yEAAiF;AACjF,sCAAuC;AAnBvC;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,S,O,E,U,E,C,E,S,E;I,S,K,C,K,E;Q,O,K,Y,C,G,K,G,I,C,C,S,O,E;Y,O,C,K,C,C;S,C,C;K;I,O,I,C,C,I,C,C,G,O,C,A,C,C,S,O,E,M,E;Q,S,S,C,K,E;Y,I;gB,I,C,S,C,I,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,Q,C,K,E;Y,I;gB,I,C,S,C,O,C,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,I,C,M,E;Y,M,C,I,G,O,C,M,C,K,C,G,K,C,M,C,K,C,C,I,C,S,E,Q,C,C;S;Q,I,C,A,C,S,G,S,C,K,C,O,E,U,I,E,C,C,C,I,E,C,C;K,C,C;C,A;A,I,W,G,a,U,W,I,S,O,E,I,E;I,I,C,G;Q,K,E,C;Q,I,E,W;Y,I,C,C,C,C,G,C,E,M,C,C,C,C,C;Y,O,C,C,C,C,C;S;Q,I,E,E;Q,G,E,E;K,E,C,E,C,E,C,E,C,A;I,O,C,G;Q,I,E,I,C,C,C;Q,O,E,I,C,C,C;Q,Q,E,I,C,C,C;K,E,O,M,K,U,I,C,C,C,M,C,Q,C,G,W;Q,O,I,C;K,C,A,E,C,C;I,S,I,C,C,E;Q,O,S,C,E;Y,O,I,C;gB,C;gB,C;a,C,C;S,C;K;I,S,I,C,E,E;Q,I,C,E,M,I,S,C,iC,C,C;Q,M,C,C,I;Y,I,C,G,C,E,C,I,C,C,G,E,C,C,C,G,C,G,C,C,Q,C,G,E,C,C,C,G,C,C,O,C,I,C,A,C,C,G,C,C,Q,C,C,I,C,C,I,C,C,C,E,C,C,A,G,C,C,I,C,I,C,A,C,C,G,C,C,I,C,C,E,E,C,C,C,C,C,C,I,E,O,C,C;Y,I,C,G,C,E,C,E,E,G;gB,E,C,C,C,G,C;gB,C,C,K;a,C;Y,O,E,C,C,C;gB,K,C,C;gB,K,C;oB,C,G,E,C;oB,M;gB,K,C;oB,C,C,K,E,C;oB,O;wB,K,E,E,C,C,C;wB,I,E,K;qB,C;gB,K,C;oB,C,C,K,E,C;oB,C,G,E,C,C,C,C;oB,E,G;A,yB;qB,C;oB,S;gB,K,C;oB,E,G,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;gB;oB,I,C,C,C,G,C,C,I,E,C,G,C,C,M,G,C,I,C,C,C,C,M,G,C,C,C,A,I,C,E,C,C,C,K,C,I,E,C,C,C,K,C,C,A,E;wB,C,G,C,C;wB,S;qB;oB,I,E,C,C,C,K,C,I,C,C,C,I,E,C,C,C,G,C,C,C,C,I,E,C,C,C,G,C,C,C,C,A,C,A,E;wB,C,C,K,G,E,C,C,C,C;wB,M;qB;oB,I,E,C,C,C,K,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,G,E,C;wB,M;qB;oB,I,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,C,G,C,I,C,E,C,C;wB,M;qB;oB,I,C,C,C,C,E,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;a;Y,E,G,I,C,I,C,O,E,C,C,C;S,C,O,C,E;Y,E,G;A,iB;gB,C;a,C;Y,C,G,C,C;S,Q;Y,C,G,C,G,C,C;S;Q,I,E,C,C,C,G,C,E,M,E,C,C,C,C;Q,O;Y,K,E,E,C,C,C,G,E,C,C,C,G,K,C;Y,I,E,I;S,C;K;C,A;A,I,Q,G,a,U,Q,I,S,C,E;I,I,C,G,O,M,K,U,I,M,C,Q,E,C,G,C,I,C,C,C,C,E,C,G,C,A;I,I,C,E,O,C,C,I,C,C,C,C;I,I,C,I,O,C,C,M,K,Q,E,O;Q,I,E,W;Y,I,C,I,C,I,C,C,M,E,C,G,K,C,C;Y,O;gB,K,E,C,I,C,C,C,E,C;gB,I,E,C,C;a,C;S;K,C;I,M,I,S,C,C,G,yB,G,iC,C,C;C,A;A,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I,O,E,C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CAAA,SAAA,CAAA,QAAQ,GAAhB,SAAiB,IAAY,EAArB;QACN,OAAO,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;KACzE,CAAD;IAEQ,WAAA,CAAA,SAAA,CAAA,kBAAkB,GAA1B,SAA2B,GAAW,EAA9B;QACN,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;YACnC,IAAM,EAAE,GAAW,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,AAAC;YACjC,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,EACxB,OAAO,KAAK,CAAC;SAEhB;QACD,OAAO,IAAI,CAAC;KACb,CAAD;IAEA;;;;;;OAMG,CACK,WAAA,CAAA,SAAA,CAAA,mBAAmB,GAA3B,SAA4B,GAAW,EAA/B;QACN,OAAO,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;KAC7C,CAAD;IACF,OAAA,WAAC,CAAD;CAhIA,EAAA,AAAA,AAgIC;AAEM,IAAM,WAAW,GAAG,IAAI,WAAW,EAAE,AAAC;;;A;;qDEjFhC,eAAe;AA5D5B,wCAA0C;AAC1C,yEAAiF;AACjF,sCAAuC;;AAlBvC;;;;;;;;;;;;;;GAcG,C,I,Q,G,a,U,Q,I,W;I,Q,G,M,C,M,I,S,C,E;Q,I,I,C,E,C,G,C,E,C,G,S,C,M,E,C,G,C,E,C,E,C;Y,C,G,S,C,C,C,C;Y,I,I,C,I,C,C,I,M,C,S,C,c,C,I,C,C,E,C,C,E,C,C,C,C,G,C,C,C,C,C;S;Q,O,C,C;K,C;I,O,Q,C,K,C,I,E,S,C,C;C,A;A,I,S,G,a,U,S,I,S,O,E,U,E,C,E,S,E;I,S,K,C,K,E;Q,O,K,Y,C,G,K,G,I,C,C,S,O,E;Y,O,C,K,C,C;S,C,C;K;I,O,I,C,C,I,C,C,G,O,C,A,C,C,S,O,E,M,E;Q,S,S,C,K,E;Y,I;gB,I,C,S,C,I,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,Q,C,K,E;Y,I;gB,I,C,S,C,O,C,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,I,C,M,E;Y,M,C,I,G,O,C,M,C,K,C,G,K,C,M,C,K,C,C,I,C,S,E,Q,C,C;S;Q,I,C,A,C,S,G,S,C,K,C,O,E,U,I,E,C,C,C,I,E,C,C;K,C,C;C,A;A,I,W,G,a,U,W,I,S,O,E,I,E;I,I,C,G;Q,K,E,C;Q,I,E,W;Y,I,C,C,C,C,G,C,E,M,C,C,C,C,C;Y,O,C,C,C,C,C;S;Q,I,E,E;Q,G,E,E;K,E,C,E,C,E,C,E,C,A;I,O,C,G;Q,I,E,I,C,C,C;Q,O,E,I,C,C,C;Q,Q,E,I,C,C,C;K,E,O,M,K,U,I,C,C,C,M,C,Q,C,G,W;Q,O,I,C;K,C,A,E,C,C;I,S,I,C,C,E;Q,O,S,C,E;Y,O,I,C;gB,C;gB,C;a,C,C;S,C;K;I,S,I,C,E,E;Q,I,C,E,M,I,S,C,iC,C,C;Q,M,C,C,I;Y,I,C,G,C,E,C,I,C,C,G,E,C,C,C,G,C,G,C,C,Q,C,G,E,C,C,C,G,C,C,O,C,I,C,A,C,C,G,C,C,Q,C,C,I,C,C,I,C,C,C,E,C,C,A,G,C,C,I,C,I,C,A,C,C,G,C,C,I,C,C,E,E,C,C,C,C,C,C,I,E,O,C,C;Y,I,C,G,C,E,C,E,E,G;gB,E,C,C,C,G,C;gB,C,C,K;a,C;Y,O,E,C,C,C;gB,K,C,C;gB,K,C;oB,C,G,E,C;oB,M;gB,K,C;oB,C,C,K,E,C;oB,O;wB,K,E,E,C,C,C;wB,I,E,K;qB,C;gB,K,C;oB,C,C,K,E,C;oB,C,G,E,C,C,C,C;oB,E,G;A,yB;qB,C;oB,S;gB,K,C;oB,E,G,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;gB;oB,I,C,C,C,G,C,C,I,E,C,G,C,C,M,G,C,I,C,C,C,C,M,G,C,C,C,A,I,C,E,C,C,C,K,C,I,E,C,C,C,K,C,C,A,E;wB,C,G,C,C;wB,S;qB;oB,I,E,C,C,C,K,C,I,C,C,C,I,E,C,C,C,G,C,C,C,C,I,E,C,C,C,G,C,C,C,C,A,C,A,E;wB,C,C,K,G,E,C,C,C,C;wB,M;qB;oB,I,E,C,C,C,K,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,G,E,C;wB,M;qB;oB,I,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,C,G,C,I,C,E,C,C;wB,M;qB;oB,I,C,C,C,C,E,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;a;Y,E,G,I,C,I,C,O,E,C,C,C;S,C,O,C,E;Y,E,G;A,iB;gB,C;a,C;Y,C,G,C,C;S,Q;Y,C,G,C,G,C,C;S;Q,I,E,C,C,C,G,C,E,M,E,C,C,C,C;Q,O;Y,K,E,E,C,C,C,G,E,C,C,C,G,K,C;Y,I,E,I;S,C;K;C,A;AAQH;;;GAGG,CACH,IAAA,eAAA,GAAA,aAAA,CAAA,WAAA;IAAA,SAAA,eAAA,GAAA,EAgDC;IA/CO,eAAA,CAAA,SAAA,CAAA,MAAM,GAAZ,SAAa,MAAgC,EAAvC;Q,O,S,C,I,E,K,C,E,K,C,E,W;Y,I,e,A;Y,I,E,A;Y,O,W,C,I,E,S,E,E;gBACJ,sCAAsC;gBACtC,IAAI,OAAO,OAAO,KAAK,QAAQ,EAC7B,OAAA;AAAA,qBAAA,CAAA,UAAA;oBAAO,CAAA,GAAA,kBAAQ,CAAA,CAAC,KAAK,EAAE;iBAAA,CAAC;gBAEpB,eAAe,GAAf,CAAA,EAAA,GAAA,EAAA,EACJ,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,WAAW,CAAA,GAAG,OAAO,CAAC,GAAG,EACrD,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,uBAAuB,CAAA,GAAG,OAAO,CAAC,KAAK,IAAI,EAAE,EACzE,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,eAAe,CAAA,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,EACnE,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,oBAAoB,CAAA,GAC9C,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,EAC9B,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,uBAAuB,CAAA,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,EAC3E,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,oBAAoB,CAAA,GAAG,QAAQ,EAC3D,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,2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K,E,K;a,C;S,Q;Y,I;gB,I,E,I,C,E,C,I,I,C,E,G,E,C,M,C,A,E,E,C,I,C,E,C,C;a,Q;gB,I,G,E,M,G,C,K,C;a;S;KACF,CAAD;IAEA,kBAAA,CAAA,SAAA,CAAA,KAAK,GAAL,SAAM,IAAkB,EAAxB;Q,I,G,E,E,A;Q,I;YACE,IAA4B,IAAA,EAAA,GAAA,QAAA,CAAA,IAAI,CAAC,eAAe,CAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,CAAE;gBAA7C,IAAM,aAAa,GAAA,EAAA,CAAA,KAAA,AAAnB;gBACH,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC3B;S,C,O,K,E;Y,G,G;gB,K,E,K;a,C;S,Q;Y,I;gB,I,E,I,C,E,C,I,I,C,E,G,E,C,M,C,A,E,E,C,I,C,E,C,C;a,Q;gB,I,G,E,M,G,C,K,C;a;S;KACF,CAAD;IAEA,kBAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,WAAA;Q,I,G,E,E,A;QACE,IAAM,QAAQ,GAAoB,EAAE,AAAC;Q,I;YAErC,IAA4B,IAAA,EAAA,GAAA,QAAA,CAAA,IAAI,CAAC,eAAe,CAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,CAAE;gBAA7C,IAAM,aAAa,GAAA,EAAA,CAAA,KAAA,AAAnB;gBACH,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;aACzC;S,C,O,K,E;Y,G,G;gB,K,E,K;a,C;S,Q;Y,I;gB,I,E,I,C,E,C,I,I,C,E,G,E,C,M,C,A,E,E,C,I,C,E,C,C;a,Q;gB,I,G,E,M,G,C,K,C;a;S;QACD,OAAO,IAAI,OAAO,CAAC,SAAC,OAAO,EAAE,MAAM,EAAnC;YACE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,WAA3B;gBACE,OAAO,EAAE,CAAC;aACX,EAAE,MAAM,CAAC,CAAC;SACZ,CAAC,CAAC;KACJ,CAAD;IACF,OAAA,k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,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I,O,E,C;C,A;A,I,a,G,a,U,a,I,S,E,E,I,E,I,E;I,I,I,I,S,C,M,K,C,E;Q,I,I,C,G,C,E,C,G,I,C,M,E,E,E,C,G,C,E,C,E,C,I,E,I,C,C,C,I,I,C,A,E;Y,I,C,E,E,E,G,K,C,S,C,K,C,I,C,I,E,C,E,C,C,C;Y,E,C,C,C,G,I,C,C,C,C;S;K;I,O,E,C,M,C,E,I,K,C,S,C,K,C,I,C,I,C,C,C;C,A;AAMH;;;;GAIG,CACH,IAAA,oBAAA,GAAA,aAAA,CAAA,WAAA;IAAA,SAAA,oBAAA,GAAA;QACU,IAAA,CAAA,cAAc,GAAmB,EAAE,CAAC;QAC5C;;;WAGG,CACO,IAAA,CAAA,QAAQ,GAAG,KAAK,CAAC;KA6B5B;IA3BC,oBAAA,CAAA,SAAA,CAAA,MAAM,GAAN,SACE,KAAqB,EACrB,cAA8C,EAFhD;Q,I,E,A;QAIE,IAAI,IAAI,CAAC,QAAQ,EACf,OAAO,cAAc,CAAC;YACpB,IAAI,EAAE,CAAA,GAAA,sBAAgB,CAAA,CAAC,MAAM;YAC7B,KAAK,EAAE,IAAI,KAAK,CAAC,2BAA2B,CAAC;SAC9C,CAAC,CAAC;QACL,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,CAAA,CAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAA,aAAA,CAAA,EAAA,EAAA,MAAA,CAAI,KAAK,CAAA,EAAA,KAAA,CAAA,CAAA,CAAE;QAEnC,UAAU,CAAC,WAAA;YAAM,OAAA,cAAc,CAAC;gBAAE,IAAI,EAAE,CAAA,GAAA,sBAAgB,CAAA,CAAC,OAAO;aAAE,CAAC,CAAA;SAAA,EAAE,CAAC,CAAC,CAAC;KACzE,CAAD;IAEA,oBAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,WAAA;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;KAC1B,CAAD;IAEA,oBAAA,CAAA,SAAA,CAAA,KAAK,GAAL,WAAA;QACE,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;KAC1B,CAAD;IAEA,oBAAA,CAAA,SAAA,CAAA,gBAAgB,GAAhB,WAAA;QACE,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B,CAAD;IACF,OAAA,oBAAC,CAAD;CAnCA,EAAA,AAAA,AAmCC;;;A;;;;AI5CD;;A,yD,mB,C;AAhBA;;;;;;;;;;;;;;GAcG,CAEH,wCAAkE;AAClE,0CAK6B;AAM7B;;;;;GAKG,CACH,IAAA,mBAAA,GAAA,aAAA,CAAA,WAAA;IAGE,SAAA,mBAAA,CAA6B,SAAuB,EAApD;QAA6B,IAAA,CAAA,SAAS,GAAT,SAAS,CAAc;QAClD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAA,GAAA,oBAAc,CAAA,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;KAC/D;IAED,mBAAA,CAAA,SAAA,CAAA,UAAU,GAAV,WAAA;QACE,6DAA6D;QAC7D,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;KAC1B,CAAD;IAEA,gBAAgB;IAChB,mBAAA,CAAA,SAAA,CAAA,OAAO,GAAP,SAAQ,KAAW,EAAE,cAAuB,EAAA,EAAU,CAAtD;IAEA,mBAAA,CAAA,SAAA,CAAA,KAAK,GAAL,SAAM,IAAkB,EAAxB;QAAA,IAAA,KAAA,GAAA,IAAA,AAsBC;QArBC,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,EAC7B,OAAO;QAGT,IAAI,AAAC,CAAA,IAAI,CAAC,WAAW,EAAE,CAAC,UAAU,GAAG,CAAA,GAAA,eAAU,CAAA,CAAC,OAAO,CAAA,KAAM,CAAC,EAC5D,OAAO;QAGT,0DAA0D;QAC1D,CAAA,GAAA,YAAO,CAAA,CAAC,IAAI,CAAC,CAAA,GAAA,qBAAe,CAAA,CAAC,CAAA,GAAA,YAAO,CAAA,CAAC,MAAM,EAAE,CAAC,EAAE,WAAhD;YACE,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAAC,IAAI;aAAC,EAAE,SAAA,MAAM,EAApC;gB,I,E,A;gBACE,IAAI,MAAM,CAAC,IAAI,KAAK,CAAA,GAAA,sBAAgB,CAAA,CAAC,OAAO,EAC1C,CAAA,GAAA,wBAAkB,CAAA,CAChB,AAAA,CAAA,EAAA,GAAA,MAAM,CAAC,KAAK,CAAA,KAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GACV,IAAI,KAAK,CACP,kDAAA,GAAmD,MAAM,GAAA,GAAG,CAC7D,CACJ,CAAC;aAEL,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ,CAAD;IAEA,mBAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,WAAA;QACE,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;KAClC,CAAD;IAEQ,mBAAA,CAAA,SAAA,CAAA,SAAS,GAAjB,WAAQ;QACN,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;KAClC,CAAD;IACF,OAAA,mBAAC,CAAD;CA9CA,EAAA,AAAA,AA8CC;;;A;;;;A;;;;A;;;;A;;;;A;;;;A;;A,yD,mB,C;AYhED,wCAA2E;AAhB3E;;;;;;;;;;;;;;GAcG,C,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I,O,E,C;C,A;A,I,a,G,a,U,a,I,S,E,E,I,E,I,E;I,I,I,I,S,C,M,K,C,E;Q,I,I,C,G,C,E,C,G,I,C,M,E,E,E,C,G,C,E,C,E,C,I,E,I,C,C,C,I,I,C,A,E;Y,I,C,E,E,E,G,K,C,S,C,K,C,I,C,I,E,C,E,C,C,C;Y,E,C,C,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CAAC,CAAC;SACf;KACF;IAED,OAAO,gBAAgB,CAAC;CACzB;;;AEzDD;;AAhBA;;;;;;;;;;;;;;GAcG,CAEH,mDAAkC;AAAlC,wBAAA,gBAAkC,UAAA;;;A;;A,iE,2B,C;AEAlC,wCAM4B;AAC5B,0CAAyE;AACzE,0DAMsC;AACtC,gEAGwC;AACxC,uDAAwD;AACxD,mCAAoC;AACpC,yEAAyE;AACzE,+BAGiB;AAzCjB;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,A,W;I,I,a,G,S,C,E,C,E;Q,a,G,M,C,c,I,C;Y,S,E,E;S,C,Y,K,I,S,C,E,C,E;Y,C,C,S,G,C,C;S,I,S,C,E,C,E;Y,I,I,C,I,C,C,I,M,C,S,C,c,C,I,C,C,E,C,C,E,C,C,C,C,G,C,C,C,C,C;S,C;Q,O,a,C,C,E,C,C,C;K,A;I,O,S,C,E,C,E;Q,I,O,C,K,U,I,C,K,I,E,M,I,S,C,sB,G,M,C,C,C,G,+B,C,C;Q,a,C,C,E,C,C,C;Q,S,E,G;Y,I,C,W,G,C,C;S;Q,C,C,S,G,C,K,I,G,M,C,M,C,C,C,G,C,E,C,S,G,C,C,S,E,I,E,E,C,A,C;K,C;C,E,A;AA6BH;;GAEG,CACH,IAAA,2BAAA,GAAA,aAAA,CAAA,SAAA,MAAA,EAAA;IAAiD,SAAA,CAAA,2BAAA,EAAA,MAAA,CAAA,CAA4B;IAK3E;;;OAGG,CACH,SAAA,2BAAA,CAAY,MAAkC,EAA9C;QAAY,IAAA,MAAA,KAAA,KAAA,CAAA,EAAA,MAAA,GAAA,EAAkC,CAAlC;QAAZ,IAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,8CAA8C,EAAE,CAAA,GAAA,gBAAO,CAAA,EAAE,MAAM,CAAC,IAAA,IAAA,AACvE;QAVQ,KAAA,CAAA,SAAS,GAAW,eAAe,CAAC;QACpC,KAAA,CAAA,OAAO,GAAW,GAAG,CAAC;QAC/B,KAAA,CAAA,UAAU,GAAG,KAAI,CAAC,SAAS,CAAC;Q,O,K,C;KAQ3B;IAED,2BAAA,CAAA,SAAA,CAAA,IAAI,GAAJ,WAAA,EAAS,CAAT;IAEA;;OAEG,CACK,2BAAA,CAAA,SAAA,CAAA,iBAAiB,GAAzB,WAAQ;QAAR,IAA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AU,EACrC,gBAAgB,CAAC,IAAI,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;aAC/B,IAAK,MAA0B,CAAC,mBAAmB,EACxD,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAEjC;IAED,OAAO;QAAE,gBAAgB,EAAA,gBAAA;KAAE,CAAC;CAC7B;AAQK,SAAU,sBAAsB,CACpC,gBAAmC,EACnC,cAA+B,EAC/B,aAA6B,EAH/B;IAKE,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;QACvD,IAAM,eAAe,GAAG,gBAAgB,CAAC,CAAC,CAAC,AAAC;QAC5C,IAAI,cAAc,EAChB,eAAe,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;QAEpD,IAAI,aAAa,EACf,eAAe,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;QAElD,6DAA6D;QAC7D,oEAAoE;QACpE,mEAAmE;QACnE,yCAAyC;QACzC,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC,OAAO,EACtC,eAAe,CAAC,MAAM,EAAE,CAAC;KAE5B;CACF;AAMK,SAAU,uBAAuB,CAAC,gBAAmC,EAA3E;IACE,gBAAgB,CAAC,OAAO,CAAC,SAAA,eAAe,EAAA;QAAI,OAAA,eAAe,CAAC,OAAO,EAAE,CAAA;KAAA,CAAC,CAAC;CACxE;;;AEjED;;AAhBA;;;;;;;;;;;;;;GAcG,CAEH,mDAAkC;AAAlC,wBAAA,gBAAkC,UAAA;;;A;;A,yD,mB,C;AEAlC,uDAAgE;AAhBhE;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,A,W;I,I,a,G,S,C,E,C,E;Q,a,G,M,C,c,I,C;Y,S,E,E;S,C,Y,K,I,S,C,E,C,E;Y,C,C,S,G,C,C;S,I,S,C,E,C,E;Y,I,I,C,I,C,C,I,M,C,S,C,c,C,I,C,C,E,C,C,E,C,C,C,C,G,C,C,C,C,C;S,C;Q,O,a,C,C,E,C,C,C;K,A;I,O,S,C,E,C,E;Q,I,O,C,K,U,I,C,K,I,E,M,I,S,C,sB,G,M,C,C,C,G,+B,C,C;Q,a,C,C,E,C,C,C;Q,S,E,G;Y,I,C,W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,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,Q,C,K,E;Y,I;gB,I,C,S,C,O,C,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,I,C,M,E;Y,M,C,I,G,O,C,M,C,K,C,G,K,C,M,C,K,C,C,I,C,S,E,Q,C,C;S;Q,I,C,A,C,S,G,S,C,K,C,O,E,U,I,E,C,C,C,I,E,C,C;K,C,C;C,A;A,I,W,G,a,U,W,I,S,O,E,I,E;I,I,C,G;Q,K,E,C;Q,I,E,W;Y,I,C,C,C,C,G,C,E,M,C,C,C,C,C;Y,O,C,C,C,C,C;S;Q,I,E,E;Q,G,E,E;K,E,C,E,C,E,C,E,C,A;I,O,C,G;Q,I,E,I,C,C,C;Q,O,E,I,C,C,C;Q,Q,E,I,C,C,C;K,E,O,M,K,U,I,C,C,C,M,C,Q,C,G,W;Q,O,I,C;K,C,A,E,C,C;I,S,I,C,C,E;Q,O,S,C,E;Y,O,I,C;gB,C;gB,C;a,C,C;S,C;K;I,S,I,C,E,E;Q,I,C,E,M,I,S,C,iC,C,C;Q,M,C,C,I;Y,I,C,G,C,E,C,I,C,C,G,E,C,C,C,G,C,G,C,C,Q,C,G,E,C,C,C,G,C,C,O,C,I,C,A,C,C,G,C,C,Q,C,C,I,C,C,I,C,C,C,E,C,C,A,G,C,C,I,C,I,C,A,C,C,G,C,C,I,C,C,E,E,C,C,C,C,C,C,I,E,O,C,C;Y,I,C,G,C,E,C,E,E,G;gB,E,C,C,C,G,C;gB,C,C,K;a,C;Y,O,E,C,C,C;gB,K,C,C;gB,K,C;oB,C,G,E,C;oB,M;gB,K,C;oB,C,C,K,E,C;oB,O;wB,K,E,E,C,C,C;wB,I,E,K;qB,C;gB,K,C;oB,C,C,K,E,C;oB,C,G,E,C,C,C,C;oB,E,G;A,yB;qB,C;oB,S;gB,K,C;oB,E,G,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;gB;oB,I,C,C,C,G,C,C,I,E,C,G,C,C,M,G,C,I,C,C,C,C,M,G,C,C,C,A,I,C,E,C,C,C,K,C,I,E,C,C,C,K,C,C,A,E;wB,C,G,C,C;wB,S;qB;oB,I,E,C,C,C,K,C,I,C,C,C,I,E,C,C,C,G,C,C,C,C,I,E,C,C,C,G,C,C,C,C,A,C,A,E;wB,C,C,K,G,E,C,C,C,C;wB,M;qB;oB,I,E,C,C,C,K,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,G,E,C;wB,M;qB;oB,I,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,C,G,C,I,C,E,C,C;wB,M;qB;oB,I,C,C,C,C,E,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;a;Y,E,G,I,C,I,C,O,E,C,C,C;S,C,O,C,E;Y,E,G;A,iB;gB,C;a,C;Y,C,G,C,C;S,Q;Y,C,G,C,G,C,C;S;Q,I,E,C,C,C,G,C,E,M,E,C,C,C,C;Q,O;Y,K,E,E,C,C,C,G,E,C,C,C,G,K,C;Y,I,E,I;S,C;K;C,A;AASG,SAAU,sBAAsB,CACpC,OAAgB,EAChB,QAA+D,EAC/D,oBAA8B,EAHhC;IAKE,IAAI,KAAwB,AAAC;IAC7B,IAAI,MAAqB,AAAC;IAC1B,IAAI;QACF,MAAM,GAAG,OAAO,EAAE,CAAC;KACpB,CAAC,OAAO,CAAC,EAAE;QACV,KAAK,GAAG,CAAC,CAAC;KACX,QAAS;QACR,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACxB,IAAI,KAAK,IAAI,CAAC,oBAAoB,EAChC,6CAA6C;QAC7C,MAAM,KAAK,CAAC;QAEd,6CAA6C;QAC7C,OAAO,MAAW,CAAC;KACpB;CACF;AAOK,SAAgB,2BAA2B,CAC/C,OAAgB,EAChB,QAA+D,EAC/D,oBAA8B,EAHhC;I,O,S,C,I,E,K,C,E,K,C,E,W;Q,I,K,E,M,E,G,A;Q,O,W,C,I,E,S,E,E;Y,O,E,C,K;gB,K,C;oB,E,C,I,C,I,C;A,yB;A,yB;A,yB;A,yB;qB,C,C;oBAQa,OAAA;AAAA,yBAAA,CAAA,SAAA;wBAAM,OAAO,EAAE;qBAAA,CAAA;gB,K,C;oBAAxB,MAAM,GAAG,EAAA,CAAA,IAAA,EAAe,CAAC;oB,O;A,yB,C,S;A,yB;qB,C;gB,K,C;oB,G,G,E,C,I,E,C;oBAEzB,KAAK,GAAG,GAAC,CAAC;oB,O;A,yB,C,S;A,yB;qB,C;gB,K,C;oBAEV,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;oBACxB,IAAI,KAAK,IAAI,CAAC,oBAAoB,EAChC,6CAA6C;oBAC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AAA,CAAA,SAAA,AAAf;QAChC,IAAI,CAAA,GAAA,mBAAM,CAAA,CAAC,qBAAqB,EAAE,IAAI,CAAC,EACrC,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAAE,SAAS,CAAC,CAAC;KAEzD,CAAC,CAAC;CAEN,AAAC;;;AE9DF;;gDAAY,UAGX;AAHD,IAAY,UAGX,AAHD;AAAA,CAAA,SAAY,UAAU,EAAtB;IACE,UAAA,CAAA,aAAA,CAAA,GAAA,YAA0B,CAAA;IAC1B,UAAA,CAAA,wBAAA,CAAA,GAAA,sBAA+C,CAAA;CAChD,CAAA,CAHW,UAAU,IAAV,CAAA,UAAU,GAAA,EAAA,CAAA,AAAA,CAAA,CAGrB;;;AEHD;;AAhBA;;;;;;;;;;;;;;GAcG,CAEH,+BAAwB;AAAxB,wBAAA,MAAwB,UAAA;;;A;;A,0D,oB,C;AEAxB,wCAA0C;AAC1C,gEAKwC;AACxC,0CAA4C;AAC5C,0DAAoD;AACpD,uDAAwD;AACxD,yEAAyE;AAEzE,mCAAoC;AA5BpC;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,A,W;I,I,a,G,S,C,E,C,E;Q,a,G,M,C,c,I,C;Y,S,E,E;S,C,Y,K,I,S,C,E,C,E;Y,C,C,S,G,C,C;S,I,S,C,E,C,E;Y,I,I,C,I,C,C,I,M,C,S,C,c,C,I,C,C,E,C,C,E,C,C,C,C,G,C,C,C,C,C;S,C;Q,O,a,C,C,E,C,C,C;K,A;I,O,S,C,E,C,E;Q,I,O,C,K,U,I,C,K,I,E,M,I,S,C,sB,G,M,C,C,C,G,+B,C,C;Q,a,C,C,E,C,C,C;Q,S,E,G;Y,I,C,W,G,C,C;S;Q,C,C,S,G,C,K,I,G,M,C,M,C,C,C,G,C,E,C,S,G,C,C,S,E,I,E,E,C,A,C;K,C;C,E,A;AAiBH,uEAAuE;AACvE,2DAA2D;AAC3D,kEAAkE;AAClE,cAAc;AACd,IAAM,qBAAqB,GAAG,GAAG,AAAC;AAgClC;;GAEG,CACH,IAAA,oBAAA,GAAA,aAAA,CAAA,SAAA,MAAA,EAAA;IAA0C,SAAA,CAAA,oBAAA,EAAA,MAAA,CAAA,CAAsC;IAO9E,SAAA,oBAAA,CAAY,MAAmC,EAA/C;QAAA,IAAA,KAAA,GAC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;AACrC,mEAAiD;AAAjD,wBAAA,iBAAiD,UAAA;AACjD,iEAAgD;AAAhD,wBAAA,gBAAgD,UAAA;AAChD,uEAAmD;AAAnD,wBAAA,mBAAmD,UAAA;AACnD,mFAAyD;AAAzD,wBAAA,yBAAyD,UAAA;AACzD,0DAAyC;AAAzC,wBAAA,gBAAyC,UAAA;AACzC,+CAAmC;AAAnC,wBAAA,WAAmC,UAAA;AACnC,iDAAoC;AAApC,wBAAA,YAAoC,UAAA;AACpC,qCAA8B;AAA9B,wBAAA,MAA8B,UAAA;AAC9B,2CAAiC;AAAjC,wBAAA,SAAiC,UAAA;AACjC,iCAA4B;AAA5B,wBAAA,IAA4B,UAAA;AAC5B,mCAA6B;AAA7B,wBAAA,KAA6B,UAAA;AAC7B,2CAAiC;AAAjC,wBAAA,SAAiC,UAAA;AACjC,wBAAA,QAA0B,UAAA;;;A;;AEjB1B,uDAAgB,iBAAiB,CAMhC;AAED,iDAAgB,WAAW,CAY1B;AAED,uDAAgB,iBAAiB,CAgBhC;AAED;;;GAGG,CACH,6DAAgB,uBAAuB,CAatC;AAlFD;;;;;;;;;;;;;;GAcG,CACH,wCAAmG;AACnG,uCAKqB;A,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I,O,E,C;C,A;AAIf,SAAU,iBAAiB,CAAC,QAAkB,EAApD;IACE,OAAO,QAAQ,CAAC,MAAM,CAAC,SAAC,MAAc,EAAE,OAAe,EAAvD;QACE,IAAM,KAAK,GAAG,EAAA,GAAG,MAAM,GAAG,CAAA,MAAM,KAAK,EAAE,GAAG,CAAA,GAAA,kCAAuB,CAAA,GAAG,EAAE,CAAA,GACnE,OAAS,AAAC;QACb,OAAO,KAAK,CAAC,MAAM,GAAG,CAAA,GAAA,mCAAwB,C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I,O,C,C,M,K,Q,E,O;Q,I,E,W;Y,I,C,I,C,I,C,C,M,E,C,G,K,C,C;Y,O;gB,K,E,C,I,C,C,C,E,C;gB,I,E,C,C;a,C;S;K,C;I,M,I,S,C,C,G,yB,G,iC,C,C;C,A;A,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I,O,E,C;C,A;AAIG,SAAU,kBAAkB,CAAC,UAAmB,EAAtD;I,I,G,E,E,A;IACE,IAAM,GAAG,GAAmB,EAAE,AAAC;IAE/B,IAAI,OAAO,UAAU,KAAK,QAAQ,IAAI,UAAU,IAAI,IAAI,EACtD,OAAO,GAAG,CAAC;I,I;QAGb,IAAyB,IAAA,EAAA,GAAA,QAAA,CAAA,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,CAAE;YAA1C,IAAA,EAAA,GAAA,MAAA,CAAA,EAAA,CAAA,KAAA,EAAA,CAAA,CAAU,EAAT,GAAG,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,GAAG,GAAA,EAAA,CAAA,CAAA,CAAA,AAAT;YACT,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBACxB,CAAA,GAAA,SAAI,CAAA,CAAC,IAAI,CAAC,yBAAA,GAA0B,GAAK,CAAC,CAAC;gBAC3C,SAAS;aACV;YACD,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE;gBAC1B,CAAA,GAAA,SAAI,CAAA,CAAC,IAAI,CAAC,uCAAA,GAAwC,GAAK,CAAC,CAAC;gBACzD,SAAS;aACV;YACD,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAA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I,I,C,E,O,C,C,I,C,C,C,C;I,I,C,I,O,C,C,M,K,Q,E,O;Q,I,E,W;Y,I,C,I,C,I,C,C,M,E,C,G,K,C,C;Y,O;gB,K,E,C,I,C,C,C,E,C;gB,I,E,C,C;a,C;S;K,C;I,M,I,S,C,C,G,yB,G,iC,C,C;C,A;AA1BK,SAAU,UAAU,CAAC,GAAW,EAAE,UAA2B,EAAnE;IACE,IAAI,OAAO,UAAU,KAAK,QAAQ,EAChC,OAAO,GAAG,KAAK,UAAU,CAAC;SAE1B,OAAO,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;CAElC;AAMK,SAAU,YAAY,CAC1B,GAAW,EACX,WAAoC,EAFtC;I,I,G,E,E,A;IAIE,IAAI,CAAC,WAAW,EACd,OAAO,KAAK,CAAC;I,I;QAGf,IAAwB,IAAA,aAAA,GAAA,QAAA,CAAA,WAAW,CAAA,EAAA,eAAA,GAAA,aAAA,CAAA,IAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,eAAA,GAAA,aAAA,CAAA,IAAA,EAAA,CAAE;YAAhC,IAAM,SAAS,GAAA,eAAA,CAAA,KAAA,AAAf;YACH,IAAI,UAAU,CAAC,GAAG,EAAE,SAAS,CAAC,EAC5B,OAAO,IAAI,CAAC;SAEf;K,C,O,K,E;Q,G,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,e,I,C,e,C,I,I,C,E,G,a,C,M,C,A,E,E,C,I,C,a,C,C;S,Q;Y,I,G,E,M,G,C,K,C;S;K;IACD,OAAO,KAAK,CAAC;CACd;;;AEnBD;;AAtBA;;;;;;;;;;;;;;GAcG,CAIH;;;GAGG,CACH,+CAAgB,SAAS,CAOxB;AAPK,SAAU,SAAS,CAAC,IAAa,EAAvC;IACE,OACE,OAAO,IAAI,KAAK,UAAU,IAC1B,OAAQ,IAAoB,CAAC,UAAU,KAAK,UAAU,IACtD,OAAQ,IAAoB,CAAC,QAAQ,KAAK,UAAU,IACnD,IAAoB,CAAC,SAAS,KAAK,IAAI,CACxC;CACH;;;A;;A,oD,c,C;AEbD,mCAAqC;AAhBrC;;;;;;;;;;;;;;GAcG,C,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I,O,E,C;C,A;A,I,a,G,a,U,a,I,S,E,E,I,E,I,E;I,I,I,I,S,C,M,K,C,E;Q,I,I,C,G,C,E,C,G,I,C,M,E,E,E,C,G,C,E,C,E,C,I,E,I,C,C,C,I,I,C,A,E;Y,I,C,E,E,E,G,K,C,S,C,K,C,I,C,I,E,C,E,C,C,C;Y,E,C,C,C,G,I,C,C,C,C;S;K;I,O,E,C,M,C,E,I,K,C,S,C,K,C,I,C,I,C,C,C;C,A;AAIH;;GAEG,CACH,IAAA,cAAA,GAAA,aAAA,CAAA,WAAA;IAOE,SAAA,cAAA,CAAoB,SAAY,EAAU,KAAW,EAArD;QAAoB,IAAA,CAAA,SAAS,GAAT,SAAS,CAAG;QAAU,IAAA,CAAA,KAAK,GAAL,KAAK,CAAM;QAF7C,IAAA,CAAA,SAAS,GAAG,KAAK,CAAC;QAClB,IAAA,CAAA,SAAS,GAAG,IAAI,CAAA,GAAA,iBAAQ,CAAA,EAAK,CAAC;KACmB;IAEzD,MAAA,CAAA,cAAA,CAAI,cAAA,CAAA,SAAA,EAAA,UAAQ,EAAZ;QAAA,GAAA,EAAA,WAAA;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;SACvB;Q,U,E,K;Q,Y,E,I;KAAA,CAAA,CAAA;IAED,MAAA,CAAA,cAAA,CAAI,cAAA,CAAA,SAAA,EAAA,SAAO,EAAX;QAAA,GAAA,EAAA,WAAA;YACE,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;SAC/B;Q,U,E,K;Q,Y,E,I;KAAA,CAAA,CAAA;IAED,cAAA,CAAA,SAAA,CAAA,IAAI,GAAJ,WAAA;Q,I,E,A;QAAA,IAAA,KAAA,GAAA,IAAA,AAcC;QAdI,IAAA,IAAA,GAAA,EAAA,AAAsB;QAAtB,IAAA,IAAA,EAAA,GAAA,CAAsB,EAAtB,EAAA,GAAA,SAAA,CAAA,MAAsB,EAAtB,EAAA,EAAsB,CAAtB,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA,CAAsB;QACzB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI;gBACF,OAAO,CAAC,OAAO,CAAC,AAAA,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,CAAA,CAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAA,aAAA,CAAA;oBAAC,IAAI,CAAC,KAAK;iBAAA,EAAA,MAAA,CAAK,IAAI,CAAA,EAAA,KAAA,CAAA,CAAA,CAAE,CACtD,IAAI,CACH,SAAA,GAAG,EAAA;oBAAI,OAAA,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;iBAAA,EAClC,SAAA,GAAG,EAAA;oBAAI,OAAA,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;iBAAA,CAClC,CAAC;aACL,CAAC,OAAO,GAAG,EAAE;gBACZ,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aAC5B;SACF;QACD,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;KAC/B,CAAD;IACF,OAAA,cAAC,CAAD;CAhCA,EAAA,AAAA,AAgCC;;;AErCD;;A,8C,Q,C;AAhBA;;;;;;;;;;;;;;GAcG,CAEH,IAAA,QAAA,GAAA,aAAA,CAAA,WAAA;IAIE,SAAA,QAAA,GAAA;QAAA,IAAA,KAAA,GAAA,IAAA,AAKC;QAJC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,SAAC,OAAO,EAAE,MAAM,EAA5C;YACE,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;SACvB,CAAC,CAAC;KACJ;IAED,MAAA,CAAA,cAAA,CAAI,QAAA,CAAA,SAAA,EAAA,SAAO,EAAX;QAAA,GAAA,EAAA,WAAA;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;Q,U,E,K;Q,Y,E,I;KAAA,CAAA,CAAA;IAED,QAAA,CAAA,SAAA,CAAA,OAAO,GAAP,SAAQ,GAAM,EAAd;QACE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;KACpB,CAAD;IAEA,QAAA,CAAA,SAAA,CAAA,MAAM,GAAN,SAAO,GAAY,EAAnB;QACE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;KACnB,CAAD;IACF,OAAA,QAAC,CAAD;CAtBA,EAAA,AAAA,AAsBC;;;AEtBD;;AAhBA;;;;;;;;;;;;;;GAcG,CAEH,uDAAoC;AAApC,wBAAA,kBAAoC,UAAA;AACpC,2DAAsC;AAAtC,wBAAA,oBAAsC,UAAA;AACtC,uEAA+C;AAA/C,wBAAA,uBAA+C,UAAA;AAC/C,+BAAwB;AAAxB,wBAAA,MAAwB,UAAA;AACxB,+BAAwB;AAAxB,wBAAA,MAAwB,UAAA;;;A;;A,uD,iB,C;AEJxB,4DAIuC;AACvC,2DAA4D;AArB5D;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,A,W;I,I,a,G,S,C,E,C,E;Q,a,G,M,C,c,I,C;Y,S,E,E;S,C,Y,K,I,S,C,E,C,E;Y,C,C,S,G,C,C;S,I,S,C,E,C,E;Y,I,I,C,I,C,C,I,M,C,S,C,c,C,I,C,C,E,C,C,E,C,C,C,C,G,C,C,C,C,C;S,C;Q,O,a,C,C,E,C,C,C;K,A;I,O,S,C,E,C,E;Q,I,O,C,K,U,I,C,K,I,E,M,I,S,C,sB,G,M,C,C,C,G,+B,C,C;Q,a,C,C,E,C,C,C;Q,S,E,G;Y,I,C,W,G,C,C;S;Q,C,C,S,G,C,K,I,G,M,C,M,C,C,C,G,C,E,C,S,G,C,C,S,E,I,E,E,C,A,C;K,C;C,E,A;AAcH;;GAEG,CACH,IAAA,iBAAA,GAAA,aAAA,CAAA,SAAA,MAAA,EAAA;IAAuC,SAAA,CAAA,iBAAA,EAAA,MAAA,CAAA,CAAmB;IACxD;;;OAGG,CACH,SAAA,iBAAA,CAAY,MAA4B,EAAxC;QAAY,IAAA,MAAA,KAAA,KAAA,CAAA,EAAA,MAAA,GAAA,EAA4B,CAA5B;QAAZ,IAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,MAAM,CAAC,IAAA,IAAA,AAWd;QATC,IAAK,MAAgC,CAAC,cAAc,EAClD,MACE,wEACc,CACd;QAEJ,IAAK,MAAgC,CAAC,UAAU,EAC9C,MAAM,oEAAo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CAChD,MAAA,CAAA,SAAA,CAAA,gBAAgB,GAAhB,WAAA;QACE,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B,CAAD;IAEA,6CAA6C,CAC7C,MAAA,CAAA,SAAA,CAAA,aAAa,GAAb,WAAA;QACE,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB,CAAD;IAEA,MAAA,CAAA,SAAA,CAAA,sBAAsB,GAAtB,WAAA;QACE,OAAO,IAAI,CAAC,eAAe,CAAC,sBAAsB,EAAE,CAAC;KACtD,CAAD;IACF,OAAA,MAAC,CAAD;CA7MA,EAAA,AAAA,AA6MC;;;A;;A,0C,I,C;AE/ND,wCAA0C;AAC1C,0CAQ6B;AAE7B,yEAAyE;AAOzE,+BAA6C;AAlC7C;;;;;;;;;;;;;;GAcG,C,I,Q,G,a,U,Q,I,S,C,E;I,I,C,G,O,M,K,U,I,M,C,Q,E,C,G,C,I,C,C,C,C,E,C,G,C,A;I,I,C,E,O,C,C,I,C,C,C,C;I,I,C,I,O,C,C,M,K,Q,E,O;Q,I,E,W;Y,I,C,I,C,I,C,C,M,E,C,G,K,C,C;Y,O;gB,K,E,C,I,C,C,C,E,C;gB,I,E,C,C;a,C;S;K,C;I,M,I,S,C,C,G,yB,G,iC,C,C;C,A;A,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I,O,E,C;C,A;AAsBH;;GAEG,CACH,IAAA,IAAA,GAAA,aAAA,CAAA,WAAA;IAuBE,sCAAsC,CACtC,SAAA,IAAA,CACE,YAAoB,EACpB,OAAgB,EAChB,QAAgB,EAChB,WAA4B,EAC5B,IAAkB,EAClB,YAAqB,EACrB,KAAsB,EACtB,SAAmC,EARrC;QAOE,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,KAAA,GAAA,EAAsB,CAAtB;Q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a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,Q,C,K,E;Y,I;gB,I,C,S,C,O,C,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,I,C,M,E;Y,M,C,I,G,O,C,M,C,K,C,G,K,C,M,C,K,C,C,I,C,S,E,Q,C,C;S;Q,I,C,A,C,S,G,S,C,K,C,O,E,U,I,E,C,C,C,I,E,C,C;K,C,C;C,A;A,I,W,G,a,U,W,I,S,O,E,I,E;I,I,C,G;Q,K,E,C;Q,I,E,W;Y,I,C,C,C,C,G,C,E,M,C,C,C,C,C;Y,O,C,C,C,C,C;S;Q,I,E,E;Q,G,E,E;K,E,C,E,C,E,C,E,C,A;I,O,C,G;Q,I,E,I,C,C,C;Q,O,E,I,C,C,C;Q,Q,E,I,C,C,C;K,E,O,M,K,U,I,C,C,C,M,C,Q,C,G,W;Q,O,I,C;K,C,A,E,C,C;I,S,I,C,C,E;Q,O,S,C,E;Y,O,I,C;gB,C;gB,C;a,C,C;S,C;K;I,S,I,C,E,E;Q,I,C,E,M,I,S,C,iC,C,C;Q,M,C,C,I;Y,I,C,G,C,E,C,I,C,C,G,E,C,C,C,G,C,G,C,C,Q,C,G,E,C,C,C,G,C,C,O,C,I,C,A,C,C,G,C,C,Q,C,C,I,C,C,I,C,C,C,E,C,C,A,G,C,C,I,C,I,C,A,C,C,G,C,C,I,C,C,E,E,C,C,C,C,C,C,I,E,O,C,C;Y,I,C,G,C,E,C,E,E,G;gB,E,C,C,C,G,C;gB,C,C,K;a,C;Y,O,E,C,C,C;gB,K,C,C;gB,K,C;oB,C,G,E,C;oB,M;gB,K,C;oB,C,C,K,E,C;oB,O;wB,K,E,E,C,C,C;wB,I,E,K;qB,C;gB,K,C;oB,C,C,K,E,C;oB,C,G,E,C,C,C,C;oB,E,G;A,yB;qB,C;oB,S;gB,K,C;oB,E,G,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;gB;oB,I,C,C,C,G,C,C,I,E,C,G,C,C,M,G,C,I,C,C,C,C,M,G,C,C,C,A,I,C,E,C,C,C,K,C,I,E,C,C,C,K,C,C,A,E;wB,C,G,C,C;wB,S;qB;oB,I,E,C,C,C,K,C,I,C,C,C,I,E,C,C,C,G,C,C,C,C,I,E,C,C,C,G,C,C,C,C,A,C,A,E;wB,C,C,K,G,E,C,C,C,C;wB,M;qB;oB,I,E,C,C,C,K,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,G,E,C;wB,M;qB;oB,I,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,C,G,C,I,C,E,C,C;wB,M;qB;oB,I,C,C,C,C,E,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;a;Y,E,G,I,C,I,C,O,E,C,C,C;S,C,O,C,E;Y,E,G;A,iB;gB,C;a,C;Y,C,G,C,C;S,Q;Y,C,G,C,G,C,C;S;Q,I,E,C,C,C,G,C,E,M,E,C,C,C,C;Q,O;Y,K,E,E,C,C,C,G,E,C,C,C,G,K,C;Y,I,E,I;S,C;K;C,A;AAYI,IAAM,eAAe,GAAG,SAC7B,MAAoC,EADtC;IACE,IAAA,MAAA,KAAA,KAAA,CAAA,EAAA,MAAA,GAAA,EAAoC,CAApC;I,O,S,C,K,C,E,K,C,E,K,C,E,W;Q,I,c,E,S,A;Q,O,W,C,I,E,S,E,E;Y,O,E,C,K;gB,K,C;oBAEM,cAAc,GAA4B,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBAExC,OAAA;AAAA,yBAAA,CAAA,SAAA;wBAAM,OAAO,CAAC,GAAG,CAC7C,AAAC,CAAA,cAAc,CAAC,SAAS,IAAI,EAAE,CAAA,CAAE,GAAG,CAAC,SAAM,CAAC,EADhB;4BAAA,OAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,WAAA;gC,I,Q,E,G,A;gC,O,W,C,I,E,S,E,E;oC,O,E,C,K;wC,K,C;4C,E,C,I,C,I,C;A,iD;A,iD;;A,iD;6C,C,C;4CAGP,OAAA;AAAA,iDAAA,CAAA,SAAA;gDAAM,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC;6CAAA,CAAA;wC,K,C;4CAAzC,QAAQ,GAAG,EAAA,CAAA,IAAA,EAA8B,CAAzC;4CACN,CAAA,GAAA,SAAI,CAAA,CAAC,KAAK,CAAI,CAAC,CAAC,WAAW,CAAC,IAAI,GAAA,kBAAkB,EAAE,QAAQ,CAAC,CAAC;4CAC9D,OAAA;AAAA,iDAAA,CAAA,UAAA;gDAAO,QAAQ;6CAAA,CAAC;wC,K,C;4C,G,G,E,C,I,E,C;4CAEhB,CAAA,GAAA,SAAI,CAAA,CAAC,KAAK,CAAI,CAAC,CAAC,WAAW,CAAC,IAAI,GAAA,WAAA,GAAY,GAAC,CAAC,OAAS,CAAC,CAAC;4CACzD,OAAA;AAAA,iDAAA,CAAA,UAAA;gDAAO,CAAA,GAAA,kBAAQ,CAAA,CAAC,KAAK,EAAE;6CAAA,CAAC;wC,K,C;4C,O;A,iD,C,U;6C,C;qC;iC,C,C;6BAE3B,CAAA,CAAA;yBAAA,CAAC,CACH;qBAAA,CAAA;gB,K,C;oBAXK,SAAS,GAAe,EAAA,CAAA,IAAA,EAW7B,CAXK;oBAaN,OAAA;AAAA,yBAAA,CAAA,UAAA;wBAAO,SAAS,CAAC,MAAM,CACrB,SAAC,GAAG,EAAE,QAAQ,EAAA;4BAAK,OAAA,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;yBAAA,EACtC,CAAA,GAAA,kBAAQ,CAAA,CAAC,KAAK,EAAE,CACjB;qBAAA,CAAC;a;S,C,C;K,C,C;CACH,AAAC;;;AEhCF;;kDAEa,YAAY;AAlBzB;;;;;;;;;;;;;;GAcG,CAEH,2DAA4D;AAErD,IAAM,YAAY,GAAG,CAAA,GAAA,0BAAY,CAAA,AAAC;;;A;;A,kD,Y,C;kDEO5B,YAAY;AATzB,sCAAuC;AAhBvC;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,S,O,E,U,E,C,E,S,E;I,S,K,C,K,E;Q,O,K,Y,C,G,K,G,I,C,C,S,O,E;Y,O,C,K,C,C;S,C,C;K;I,O,I,C,C,I,C,C,G,O,C,A,C,C,S,O,E,M,E;Q,S,S,C,K,E;Y,I;gB,I,C,S,C,I,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,Q,C,K,E;Y,I;gB,I,C,S,C,O,C,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,I,C,M,E;Y,M,C,I,G,O,C,M,C,K,C,G,K,C,M,C,K,C,C,I,C,S,E,Q,C,C;S;Q,I,C,A,C,S,G,S,C,K,C,O,E,U,I,E,C,C,C,I,E,C,C;K,C,C;C,A;A,I,W,G,a,U,W,I,S,O,E,I,E;I,I,C,G;Q,K,E,C;Q,I,E,W;Y,I,C,C,C,C,G,C,E,M,C,C,C,C,C;Y,O,C,C,C,C,C;S;Q,I,E,E;Q,G,E,E;K,E,C,E,C,E,C,E,C,A;I,O,C,G;Q,I,E,I,C,C,C;Q,O,E,I,C,C,C;Q,Q,E,I,C,C,C;K,E,O,M,K,U,I,C,C,C,M,C,Q,C,G,W;Q,O,I,C;K,C,A,E,C,C;I,S,I,C,C,E;Q,O,S,C,E;Y,O,I,C;gB,C;gB,C;a,C,C;S,C;K;I,S,I,C,E,E;Q,I,C,E,M,I,S,C,iC,C,C;Q,M,C,C,I;Y,I,C,G,C,E,C,I,C,C,G,E,C,C,C,G,C,G,C,C,Q,C,G,E,C,C,C,G,C,C,O,C,I,C,A,C,C,G,C,C,Q,C,C,I,C,C,I,C,C,C,E,C,C,A,G,C,C,I,C,I,C,A,C,C,G,C,C,I,C,C,E,E,C,C,C,C,C,C,I,E,O,C,C;Y,I,C,G,C,E,C,E,E,G;gB,E,C,C,C,G,C;gB,C,C,K;a,C;Y,O,E,C,C,C;gB,K,C,C;gB,K,C;oB,C,G,E,C;oB,M;gB,K,C;oB,C,C,K,E,C;oB,O;wB,K,E,E,C,C,C;wB,I,E,K;qB,C;gB,K,C;oB,C,C,K,E,C;oB,C,G,E,C,C,C,C;oB,E,G;A,yB;qB,C;oB,S;gB,K,C;oB,E,G,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;gB;oB,I,C,C,C,G,C,C,I,E,C,G,C,C,M,G,C,I,C,C,C,C,M,G,C,C,C,A,I,C,E,C,C,C,K,C,I,E,C,C,C,K,C,C,A,E;wB,C,G,C,C;wB,S;qB;oB,I,E,C,C,C,K,C,I,C,C,C,I,E,C,C,C,G,C,C,C,C,I,E,C,C,C,G,C,C,C,C,A,C,A,E;wB,C,C,K,G,E,C,C,C,C;wB,M;qB;oB,I,E,C,C,C,K,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,G,E,C;wB,M;qB;oB,I,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,C,G,C,I,C,E,C,C;wB,M;qB;oB,I,C,C,C,C,E,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;a;Y,E,G,I,C,I,C,O,E,C,C,C;S,C,O,C,E;Y,E,G;A,iB;gB,C;a,C;Y,C,G,C,C;S,Q;Y,C,G,C,G,C,C;S;Q,I,E,C,C,C,G,C,E,M,E,C,C,C,C;Q,O;Y,K,E,E,C,C,C,G,E,C,C,C,G,K,C;Y,I,E,I;S,C;K;C,A;AAKH,IAAA,YAAA,GAAA,aAAA,CAAA,WAAA;IAAA,SAAA,YAAA,GAAA,EAIC;IAHO,YAAA,CAAA,SAAA,CAAA,MAAM,GAAZ,WAAM;Q,O,S,C,I,E,K,C,E,K,C,E,W;Y,O,W,C,I,E,S,E,E;gBACJ,OAAA;AAAA,qBAAA,CAAA,UAAA;oBAAO,IAAI,CAAA,GAAA,kBAAQ,CAAA,CAAC,EAAE,CAAC;iBAAA,CAAC;a,C,C;S,C,C;KACzB,CAAA;IACH,OAAA,YAAC,CAAD;CAJA,EAAA,AAAA,AAIC;AAEM,IAAM,YAAY,GAAG,IAAI,YAAY,EAAE,AAAC;;;AET/C;;gDAEa,UAAU;AAlBvB;;;;;;;;;;;;;;GAcG,CAEH,2DAA4D;AAErD,IAAM,UAAU,GAAG,CAAA,GAAA,0BAAY,CAAA,AAAC;;;A;;;;A;;;;AMFvC;;AAhBA;;;;;;;;;;;;;;GAcG,CAEH,mDAAkC;AAAlC,wBAAA,gBAAkC,UAAA;AAClC,2CAA8B;AAA9B,wBAAA,YAA8B,UAAA;AAC9B,mDAAkC;AAAlC,wBAAA,gBAAkC,UAAA;;;A;;qDE8CrB,eAAe;AAhD5B,wCAA0C;AAC1C,yEAAiF;AACjF,qBAAiE;AAlBjE;;;;;;;;;;;;;;GAcG,C,I,Q,G,a,U,Q,I,W;I,Q,G,M,C,M,I,S,C,E;Q,I,I,C,E,C,G,C,E,C,G,S,C,M,E,C,G,C,E,C,E,C;Y,C,G,S,C,C,C,C;Y,I,I,C,I,C,C,I,M,C,S,C,c,C,I,C,C,E,C,C,E,C,C,C,C,G,C,C,C,C,C;S;Q,O,C,C;K,C;I,O,Q,C,K,C,I,E,S,C,C;C,A;A,I,S,G,a,U,S,I,S,O,E,U,E,C,E,S,E;I,S,K,C,K,E;Q,O,K,Y,C,G,K,G,I,C,C,S,O,E;Y,O,C,K,C,C;S,C,C;K;I,O,I,C,C,I,C,C,G,O,C,A,C,C,S,O,E,M,E;Q,S,S,C,K,E;Y,I;gB,I,C,S,C,I,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,Q,C,K,E;Y,I;gB,I,C,S,C,O,C,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,I,C,M,E;Y,M,C,I,G,O,C,M,C,K,C,G,K,C,M,C,K,C,C,I,C,S,E,Q,C,C;S;Q,I,C,A,C,S,G,S,C,K,C,O,E,U,I,E,C,C,C,I,E,C,C;K,C,C;C,A;A,I,W,G,a,U,W,I,S,O,E,I,E;I,I,C,G;Q,K,E,C;Q,I,E,W;Y,I,C,C,C,C,G,C,E,M,C,C,C,C,C;Y,O,C,C,C,C,C;S;Q,I,E,E;Q,G,E,E;K,E,C,E,C,E,C,E,C,A;I,O,C,G;Q,I,E,I,C,C,C;Q,O,E,I,C,C,C;Q,Q,E,I,C,C,C;K,E,O,M,K,U,I,C,C,C,M,C,Q,C,G,W;Q,O,I,C;K,C,A,E,C,C;I,S,I,C,C,E;Q,O,S,C,E;Y,O,I,C;gB,C;gB,C;a,C,C;S,C;K;I,S,I,C,E,E;Q,I,C,E,M,I,S,C,iC,C,C;Q,M,C,C,I;Y,I,C,G,C,E,C,I,C,C,G,E,C,C,C,G,C,G,C,C,Q,C,G,E,C,C,C,G,C,C,O,C,I,C,A,C,C,G,C,C,Q,C,C,I,C,C,I,C,C,C,E,C,C,A,G,C,C,I,C,I,C,A,C,C,G,C,C,I,C,C,E,E,C,C,C,C,C,C,I,E,O,C,C;Y,I,C,G,C,E,C,E,E,G;gB,E,C,C,C,G,C;gB,C,C,K;a,C;Y,O,E,C,C,C;gB,K,C,C;gB,K,C;oB,C,G,E,C;oB,M;gB,K,C;oB,C,C,K,E,C;oB,O;wB,K,E,E,C,C,C;wB,I,E,K;qB,C;gB,K,C;oB,C,C,K,E,C;oB,C,G,E,C,C,C,C;oB,E,G;A,yB;qB,C;oB,S;gB,K,C;oB,E,G,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;gB;oB,I,C,C,C,G,C,C,I,E,C,G,C,C,M,G,C,I,C,C,C,C,M,G,C,C,C,A,I,C,E,C,C,C,K,C,I,E,C,C,C,K,C,C,A,E;wB,C,G,C,C;wB,S;qB;oB,I,E,C,C,C,K,C,I,C,C,C,I,E,C,C,C,G,C,C,C,C,I,E,C,C,C,G,C,C,C,C,A,C,A,E;wB,C,C,K,G,E,C,C,C,C;wB,M;qB;oB,I,E,C,C,C,K,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,G,E,C;wB,M;qB;oB,I,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,C,G,C,I,C,E,C,C;wB,M;qB;oB,I,C,C,C,C,E,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;a;Y,E,G,I,C,I,C,O,E,C,C,C;S,C,O,C,E;Y,E,G;A,iB;gB,C;a,C;Y,C,G,C,C;S,Q;Y,C,G,C,G,C,C;S;Q,I,E,C,C,C,G,C,E,M,E,C,C,C,C;Q,O;Y,K,E,E,C,C,C,G,E,C,C,C,G,K,C;Y,I,E,I;S,C;K;C,A;AAOH;;GAEG,CACH,IAAA,eAAA,GAAA,aAAA,CAAA,WAAA;IAAA,SAAA,eAAA,GAAA,EAqCC;IApCO,eAAA,CAAA,SAAA,CAAA,MAAM,GAAZ,SAAa,MAAgC,EAAvC;Q,O,S,C,I,E,K,C,E,K,C,E,W;Y,I,S,E,e,A;Y,I,E,A;Y,O,W,C,I,E,S,E,E;gBACE,SAAS,GAAG,OAAO,SAAS,KAAK,WAAW,CAAC;gBACnD,IAAI,CAAC,SAAS,EACZ,OAAA;AAAA,qBAAA,CAAA,UAAA;oBAAO,CAAA,GAAA,UAAQ,CAAA,CAAC,KAAK,EAAE;iBAAA,CAAC;gBAEpB,eAAe,GAAf,CAAA,EAAA,GAAA,EAAA,EACJ,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,oBAAoB,CAAA,GAAG,SAAS,EAC5D,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,2BAA2B,CAAA,GAAG,aAAa,EACvE,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,uBAAuB,CAAA,GAAG,SAAS,CAAC,SAAS,EAC1E,EAAA,CAAA,AAAA,CAAC;gBACF,OAAA;AAAA,qBAAA,CAAA,UAAA;oBAAO,IAAI,CAAC,sBAAsB,CAAC,eAAe,EAAE,MAAM,CAAC;iBAAA,CAAC;a,C,C;S,C,C;KAC7D,CAAA;IACD;;;;;;OAMG,CACK,eAAA,CAAA,SAAA,CAAA,sBAAsB,GAA9B,SACE,eAAmC,EACnC,OAAiC,EAF3B;QAIN,IACE,eAAe,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,uBAAuB,CAAC,KAAK,EAAE,EAC1E;YACA,CAAA,GAAA,SAAI,CAAA,CAAC,KAAK,CACR,qEAAqE,CACtE,CAAC;YACF,OAAO,CAAA,GAAA,UAAQ,CAAA,CAAC,KAAK,EAAE,CAAC;SACzB,MACC,OAAO,IAAI,CAAA,GAAA,UAAQ,CAAA,CAAA,QAAA,CAAA,EAAA,EACd,eAAe,CAAA,CAClB,CAAC;KAEN,CAAD;IACF,OAAA,eAAC,CAAD;CArCA,EAAA,AAAA,AAqCC;AAGM,IAAM,eAAe,GAAG,IAAI,eAAe,EAAE,AAAC;;;A;;iDE6FxC,WAAW;AA7IxB,wCAA0C;AAC1C,0CAA6C;AAC7C,yEAAiF;AACjF,sCAAuC;AAnBvC;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,S,O,E,U,E,C,E,S,E;I,S,K,C,K,E;Q,O,K,Y,C,G,K,G,I,C,C,S,O,E;Y,O,C,K,C,C;S,C,C;K;I,O,I,C,C,I,C,C,G,O,C,A,C,C,S,O,E,M,E;Q,S,S,C,K,E;Y,I;gB,I,C,S,C,I,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,Q,C,K,E;Y,I;gB,I,C,S,C,O,C,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,I,C,M,E;Y,M,C,I,G,O,C,M,C,K,C,G,K,C,M,C,K,C,C,I,C,S,E,Q,C,C;S;Q,I,C,A,C,S,G,S,C,K,C,O,E,U,I,E,C,C,C,I,E,C,C;K,C,C;C,A;A,I,W,G,a,U,W,I,S,O,E,I,E;I,I,C,G;Q,K,E,C;Q,I,E,W;Y,I,C,C,C,C,G,C,E,M,C,C,C,C,C;Y,O,C,C,C,C,C;S;Q,I,E,E;Q,G,E,E;K,E,C,E,C,E,C,E,C,A;I,O,C,G;Q,I,E,I,C,C,C;Q,O,E,I,C,C,C;Q,Q,E,I,C,C,C;K,E,O,M,K,U,I,C,C,C,M,C,Q,C,G,W;Q,O,I,C;K,C,A,E,C,C;I,S,I,C,C,E;Q,O,S,C,E;Y,O,I,C;gB,C;gB,C;a,C,C;S,C;K;I,S,I,C,E,E;Q,I,C,E,M,I,S,C,iC,C,C;Q,M,C,C,I;Y,I,C,G,C,E,C,I,C,C,G,E,C,C,C,G,C,G,C,C,Q,C,G,E,C,C,C,G,C,C,O,C,I,C,A,C,C,G,C,C,Q,C,C,I,C,C,I,C,C,C,E,C,C,A,G,C,C,I,C,I,C,A,C,C,G,C,C,I,C,C,E,E,C,C,C,C,C,C,I,E,O,C,C;Y,I,C,G,C,E,C,E,E,G;gB,E,C,C,C,G,C;gB,C,C,K;a,C;Y,O,E,C,C,C;gB,K,C,C;gB,K,C;oB,C,G,E,C;oB,M;gB,K,C;oB,C,C,K,E,C;oB,O;wB,K,E,E,C,C,C;wB,I,E,K;qB,C;gB,K,C;oB,C,C,K,E,C;oB,C,G,E,C,C,C,C;oB,E,G;A,yB;qB,C;oB,S;gB,K,C;oB,E,G,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;gB;oB,I,C,C,C,G,C,C,I,E,C,G,C,C,M,G,C,I,C,C,C,C,M,G,C,C,C,A,I,C,E,C,C,C,K,C,I,E,C,C,C,K,C,C,A,E;wB,C,G,C,C;wB,S;qB;oB,I,E,C,C,C,K,C,I,C,C,C,I,E,C,C,C,G,C,C,C,C,I,E,C,C,C,G,C,C,C,C,A,C,A,E;wB,C,C,K,G,E,C,C,C,C;wB,M;qB;oB,I,E,C,C,C,K,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,G,E,C;wB,M;qB;oB,I,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,C,G,C,I,C,E,C,C;wB,M;qB;oB,I,C,C,C,C,E,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;a;Y,E,G,I,C,I,C,O,E,C,C,C;S,C,O,C,E;Y,E,G;A,iB;gB,C;a,C;Y,C,G,C,C;S,Q;Y,C,G,C,G,C,C;S;Q,I,E,C,C,C,G,C,E,M,E,C,C,C,C;Q,O;Y,K,E,E,C,C,C,G,E,C,C,C,G,K,C;Y,I,E,I;S,C;K;C,A;A,I,Q,G,a,U,Q,I,S,C,E;I,I,C,G,O,M,K,U,I,M,C,Q,E,C,G,C,I,C,C,C,C,E,C,G,C,A;I,I,C,E,O,C,C,I,C,C,C,C;I,I,C,I,O,C,C,M,K,Q,E,O;Q,I,E,W;Y,I,C,I,C,I,C,C,M,E,C,G,K,C,C;Y,O;gB,K,E,C,I,C,C,C,E,C;gB,I,E,C,C;a,C;S;K,C;I,M,I,S,C,C,G,yB,G,iC,C,C;C,A;A,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G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B,K,E,K;a,C;S,Q;Y,I;gB,I,iB,I,C,iB,C,I,I,C,E,G,e,C,M,C,A,E,E,C,I,C,e,C,C;a,Q;gB,I,G,E,M,G,C,K,C;a;S;QACD,OAAO,UAAU,CAAC;KACnB,CAAD;IAEA;;;;;;OAMG,CACK,WAAA,CAAA,SAAA,CAAA,QAAQ,GAAhB,SAAiB,IAAY,EAArB;QACN,OAAO,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;KACzE,CAAD;IAEQ,WAAA,CAAA,SAAA,CAAA,kBAAkB,GAA1B,SAA2B,GAAW,EAA9B;QACN,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;YACnC,IAAM,EAAE,GAAW,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,AAAC;YACjC,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,EACxB,OAAO,KAAK,CAAC;SAEhB;QACD,OAAO,IAAI,CAAC;KACb,CAAD;IAEA;;;;;;OAMG,CACK,WAAA,CAAA,SAAA,CAAA,mBAAmB,GAA3B,SAA4B,GAAW,EAA/B;QACN,OAAO,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;KAC7C,CAAD;IACF,OAAA,WAAC,CAAD;CAhIA,EAAA,AAAA,AAgIC;AAEM,IAAM,WAAW,GAAG,IAAI,WAAW,EAAE,AAAC;;;A;;qDEjFhC,eAAe;AA5D5B,wCAA0C;AAC1C,yEAAiF;AACjF,sCAAuC;;AAlBvC;;;;;;;;;;;;;;GAcG,C,I,Q,G,a,U,Q,I,W;I,Q,G,M,C,M,I,S,C,E;Q,I,I,C,E,C,G,C,E,C,G,S,C,M,E,C,G,C,E,C,E,C;Y,C,G,S,C,C,C,C;Y,I,I,C,I,C,C,I,M,C,S,C,c,C,I,C,C,E,C,C,E,C,C,C,C,G,C,C,C,C,C;S;Q,O,C,C;K,C;I,O,Q,C,K,C,I,E,S,C,C;C,A;A,I,S,G,a,U,S,I,S,O,E,U,E,C,E,S,E;I,S,K,C,K,E;Q,O,K,Y,C,G,K,G,I,C,C,S,O,E;Y,O,C,K,C,C;S,C,C;K;I,O,I,C,C,I,C,C,G,O,C,A,C,C,S,O,E,M,E;Q,S,S,C,K,E;Y,I;gB,I,C,S,C,I,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,Q,C,K,E;Y,I;gB,I,C,S,C,O,C,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,I,C,M,E;Y,M,C,I,G,O,C,M,C,K,C,G,K,C,M,C,K,C,C,I,C,S,E,Q,C,C;S;Q,I,C,A,C,S,G,S,C,K,C,O,E,U,I,E,C,C,C,I,E,C,C;K,C,C;C,A;A,I,W,G,a,U,W,I,S,O,E,I,E;I,I,C,G;Q,K,E,C;Q,I,E,W;Y,I,C,C,C,C,G,C,E,M,C,C,C,C,C;Y,O,C,C,C,C,C;S;Q,I,E,E;Q,G,E,E;K,E,C,E,C,E,C,E,C,A;I,O,C,G;Q,I,E,I,C,C,C;Q,O,E,I,C,C,C;Q,Q,E,I,C,C,C;K,E,O,M,K,U,I,C,C,C,M,C,Q,C,G,W;Q,O,I,C;K,C,A,E,C,C;I,S,I,C,C,E;Q,O,S,C,E;Y,O,I,C;gB,C;gB,C;a,C,C;S,C;K;I,S,I,C,E,E;Q,I,C,E,M,I,S,C,iC,C,C;Q,M,C,C,I;Y,I,C,G,C,E,C,I,C,C,G,E,C,C,C,G,C,G,C,C,Q,C,G,E,C,C,C,G,C,C,O,C,I,C,A,C,C,G,C,C,Q,C,C,I,C,C,I,C,C,C,E,C,C,A,G,C,C,I,C,I,C,A,C,C,G,C,C,I,C,C,E,E,C,C,C,C,C,C,I,E,O,C,C;Y,I,C,G,C,E,C,E,E,G;gB,E,C,C,C,G,C;gB,C,C,K;a,C;Y,O,E,C,C,C;gB,K,C,C;gB,K,C;oB,C,G,E,C;oB,M;gB,K,C;oB,C,C,K,E,C;oB,O;wB,K,E,E,C,C,C;wB,I,E,K;qB,C;gB,K,C;oB,C,C,K,E,C;oB,C,G,E,C,C,C,C;oB,E,G;A,yB;qB,C;oB,S;gB,K,C;oB,E,G,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;gB;oB,I,C,C,C,G,C,C,I,E,C,G,C,C,M,G,C,I,C,C,C,C,M,G,C,C,C,A,I,C,E,C,C,C,K,C,I,E,C,C,C,K,C,C,A,E;wB,C,G,C,C;wB,S;qB;oB,I,E,C,C,C,K,C,I,C,C,C,I,E,C,C,C,G,C,C,C,C,I,E,C,C,C,G,C,C,C,C,A,C,A,E;wB,C,C,K,G,E,C,C,C,C;wB,M;qB;oB,I,E,C,C,C,K,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,G,E,C;wB,M;qB;oB,I,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,C,G,C,I,C,E,C,C;wB,M;qB;oB,I,C,C,C,C,E,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;a;Y,E,G,I,C,I,C,O,E,C,C,C;S,C,O,C,E;Y,E,G;A,iB;gB,C;a,C;Y,C,G,C,C;S,Q;Y,C,G,C,G,C,C;S;Q,I,E,C,C,C,G,C,E,M,E,C,C,C,C;Q,O;Y,K,E,E,C,C,C,G,E,C,C,C,G,K,C;Y,I,E,I;S,C;K;C,A;AAQH;;;GAGG,CACH,IAAA,eAAA,GAAA,aAAA,CAAA,WAAA;IAAA,SAAA,eAAA,GAAA,EAgDC;IA/CO,eAAA,CAAA,SAAA,CAAA,MAAM,GAAZ,SAAa,MAAgC,EAAvC;Q,O,S,C,I,E,K,C,E,K,C,E,W;Y,I,e,A;Y,I,E,A;Y,O,W,C,I,E,S,E,E;gBACJ,sCAAsC;gBACtC,IAAI,OAAO,OAAO,KAAK,QAAQ,EAC7B,OAAA;AAAA,qBAAA,CAAA,UAAA;oBAAO,CAAA,GAAA,kBAAQ,CAAA,CAAC,KAAK,EAAE;iBAAA,CAAC;gBAEpB,eAAe,GAAf,CAAA,EAAA,GAAA,EAAA,EACJ,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,WAAW,CAAA,GAAG,OAAO,CAAC,GAAG,EACrD,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,uBAAuB,CAAA,GAAG,OAAO,CAAC,KAAK,IAAI,EAAE,EACzE,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,eAAe,CAAA,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,EACnE,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,oBAAoB,CAAA,GAC9C,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,EAC9B,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,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A,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,CAAE;gBAA7C,IAAM,aAAa,GAAA,EAAA,CAAA,KAAA,AAAnB;gBACH,aAAa,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;aACtC;S,C,O,K,E;Y,G,G;gB,K,E,K;a,C;S,Q;Y,I;gB,I,E,I,C,E,C,I,I,C,E,G,E,C,M,C,A,E,E,C,I,C,E,C,C;a,Q;gB,I,G,E,M,G,C,K,C;a;S;KACF,CAAD;IAEA,kBAAA,CAAA,SAAA,CAAA,KAAK,GAAL,SAAM,IAAkB,EAAxB;Q,I,G,E,E,A;Q,I;YACE,IAA4B,IAAA,EAAA,GAAA,QAAA,CAAA,IAAI,CAAC,eAAe,CAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,CAAE;gBAA7C,IAAM,aAAa,GAAA,EAAA,CAAA,KAAA,AAAnB;gBACH,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC3B;S,C,O,K,E;Y,G,G;gB,K,E,K;a,C;S,Q;Y,I;gB,I,E,I,C,E,C,I,I,C,E,G,E,C,M,C,A,E,E,C,I,C,E,C,C;a,Q;gB,I,G,E,M,G,C,K,C;a;S;KACF,CAAD;IAEA,kBAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,WAAA;Q,I,G,E,E,A;QACE,IAAM,QAAQ,GAAoB,EAAE,AAAC;Q,I;YAErC,IAA4B,IAAA,EAAA,GAAA,QAAA,CAAA,IAAI,CAAC,eAAe,CAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,CAAE;gBAA7C,IAAM,aAAa,GAAA,EAAA,CAAA,KAAA,AAAnB;gBACH,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;aACzC;S,C,O,K,E;Y,G,G;gB,K,E,K;a,C;S,Q;Y,I;gB,I,E,I,C,E,C,I,I,C,E,G,E,C,M,C,A,E,E,C,I,C,E,C,C;a,Q;gB,I,G,E,M,G,C,K,C;a;S;QACD,OAAO,IAAI,OAAO,CAAC,SAAC,OAAO,EAAE,MAAM,EAAnC;YACE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,WAA3B;gBACE,OAAO,EAAE,CAAC;aACX,EAAE,MAAM,CAAC,CAAC;SACZ,CAAC,CAAC;KACJ,CAAD;IACF,OAAA,kBAAC,CAAD;CA/CA,EAAA,AAAA,AA+CC;;;AEnDD;;A,uD,iB,C;AAtBA;;;;;;;;;;;;;;GAcG,CAOH,4CAA4C,CAC5C,IAAA,iBAAA,GAAA,aAAA,CAAA,WAAA;IAAA,SAAA,iBAAA,GAAA,EASC;IARC,iBAAA,CAAA,SAAA,CAAA,OAAO,GAAP,SAAQ,KAAW,EAAE,QAAiB,EAAA,EAAU,CAAhD;IACA,iBAAA,CAAA,SAAA,CAAA,KAAK,GAAL,SAAM,KAAmB,EAAA,EAAU,CAAnC;IACA,iBAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,WAAA;QACE,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;KAC1B,CAAD;IACA,iBAAA,CAAA,SAAA,CAAA,UAAU,GAAV,WAAA;QACE,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;KAC1B,CAAD;IACF,OAAA,iBAAC,CAAD;CATA,EAAA,AAAA,AASC;;;AEfD;;AAhBA;;;;;;;;;;;;;;GAcG,CAEH,gEAA4C;AAA5C,wBAAA,mBAA4C,UAAA;;;A;;A,wD,kB,C;AEA5C,+EAAgF;AAhBhF;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,A,W;I,I,a,G,S,C,E,C,E;Q,a,G,M,C,c,I,C;Y,S,E,E;S,C,Y,K,I,S,C,E,C,E;Y,C,C,S,G,C,C;S,I,S,C,E,C,E;Y,I,I,C,I,C,C,I,M,C,S,C,c,C,I,C,C,E,C,C,E,C,C,C,C,G,C,C,C,C,C;S,C;Q,O,a,C,C,E,C,C,C;K,A;I,O,S,C,E,C,E;Q,I,O,C,K,U,I,C,K,I,E,M,I,S,C,sB,G,M,C,C,C,G,+B,C,C;Q,a,C,C,E,C,C,C;Q,S,E,G;Y,I,C,W,G,C,C;S;Q,C,C,S,G,C,K,I,G,M,C,M,C,C,C,G,C,E,C,S,G,C,C,S,E,I,E,E,C,A,C;K,C;C,E,A;AAMH,IAAA,kBAAA,GAAA,aAAA,CAAA,SAAA,MAAA,EAAA;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BACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;oBAAE,KAAK,EAAE,CAAC;iBAAE,CAAC,CAAC;aACnD;S,C,O,K,E;Y,G,G;gB,K,E,K;a,C;S,Q;Y,I;gB,I,S,I,C,S,C,I,I,C,E,G,O,C,M,C,A,E,E,C,I,C,O,C,C;a,Q;gB,I,G,E,M,G,C,K,C;a;S;QACD,IAAI,IAAI,EACN,OAAO,IAAI,CAAC;YAAE,IAAI,EAAE,CAAA,GAAA,sBAAgB,CAAA,CAAC,OAAO;SAAE,CAAC,CAAC;KAEnD,CAAD;IACF,OAAA,mBAAC,CAAD;CAzDA,EAAA,AAAA,AAyDC;;;A;;A,0D,oB,C;AErED,0CAAqE;AAlBrE;;;;;;;;;;;;;;GAcG,C,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I,O,E,C;C,A;A,I,a,G,a,U,a,I,S,E,E,I,E,I,E;I,I,I,I,S,C,M,K,C,E;Q,I,I,C,G,C,E,C,G,I,C,M,E,E,E,C,G,C,E,C,E,C,I,E,I,C,C,C,I,I,C,A,E;Y,I,C,E,E,E,G,K,C,S,C,K,C,I,C,I,E,C,E,C,C,C;Y,E,C,C,C,G,I,C,C,C,C;S;K;I,O,E,C,M,C,E,I,K,C,S,C,K,C,I,C,I,C,C,C;C,A;AAMH;;;;GAIG,CACH,IAAA,oBAAA,GAAA,aAAA,CAAA,WAAA;IAAA,SAAA,oBAAA,GAAA;QACU,IAAA,CAAA,cAAc,GAAmB,EAAE,CAAC;QAC5C;;;WAGG,CACO,IAAA,CAAA,QAAQ,GAAG,KAAK,CAAC;KA6B5B;IA3BC,oBAAA,CAAA,SAAA,CAAA,MAAM,GAAN,SACE,KAAqB,EACrB,cAA8C,EAFhD;Q,I,E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C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I,O,E,C;C,A;A,I,a,G,a,U,a,I,S,E,E,I,E,I,E;I,I,I,I,S,C,M,K,C,E;Q,I,I,C,G,C,E,C,G,I,C,M,E,E,E,C,G,C,E,C,E,C,I,E,I,C,C,C,I,I,C,A,E;Y,I,C,E,E,E,G,K,C,S,C,K,C,I,C,I,E,C,E,C,C,C;Y,E,C,C,C,G,I,C,C,C,C;S;K;I,O,E,C,M,C,E,I,K,C,S,C,K,C,I,C,I,C,C,C;C,A;AAIH;;;GAGG,CACH,IAAA,mBAAA,GAAA,aAAA,CAAA,WAAA;IAAA,SAAA,mBAAA,GAAA;QACE;;WAEG,CACK,IAAA,CAAA,QAAQ,GAAG,KAAK,CAAC;QAEzB;;WAEG,CACI,IAAA,CAAA,eAAe,GAAG,CAAA,GAAA,iBAAY,CAAA,CAAC;KA6FvC;IA3FC;;;;OAIG,CACH,wDAAwD;IAChD,mBAAA,CAAA,SAAA,CAAA,aAAa,GAArB,SACE,OAAsB,EACtB,MAAS,EAFH;QACN,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA,OAAA,GAAA,CAAA,GAAA,iBAAsB,CAAA,CAAtB;QAGA,IAAM,OAAO,GAAG,IAAI,AAAC;QACrB,IAAM,cAAc,GAAG,WAAvB;YAAuB,IAAA,KAAA,GAAA,IAAA,AAEtB;YAF+C,IAAA,IAAA,GAAA,EAAA,AAAkB;YAAlB,IAAA,IAAA,EAAA,GAAA,CAAkB,EAAlB,EAAA,GAAA,SAAA,CAAA,MAAkB,EAAlB,EAAA,EAAkB,CAAlB,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA,CAAkB;YAChE,OAAO,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,WAAA;gBAAM,OAAA,MAAM,CAAC,KAAK,CAAC,KAAI,EAAE,IAAI,CAAC,CAAA;aAAA,CAA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O,EAAE,uBAAuB,CAAC,CAA5C;KAA4C,CAC7C,CAAC;CAEL;;;AE3ZD;;oDAAY,cAIX;AAJD,IAAY,cAIX,AAJD;AAAA,CAAA,SAAY,cAAc,EAA1B;IACE,cAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;IACvB,cAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;IACnC,cAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;CACtC,CAAA,CAJW,cAAc,IAAd,CAAA,cAAc,GAAA,EAAA,CAAA,AAAA,CAAA,CAIzB;;;AEND;;6CAAa,OAAO;AAAb,IAAM,OAAO,GAAG,QAAQ,AAAC;;;AEDhC;;AAhBA;;;;;;;;;;;;;;GAcG,CAEH,mDAAkC;AAAlC,wBAAA,gBAAkC,UAAA;;;A;;A,oE,8B,C;AEAlC,gEAAgF;AAEhF,wCAA0C;AAC1C,0CAA6C;AAC7C,0DAA+D;AAC/D,uDAAwD;AAWxD,mCAAoC;AAhCpC;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,A,W;I,I,a,G,S,C,E,C,E;Q,a,G,M,C,c,I,C;Y,S,E,E;S,C,Y,K,I,S,C,E,C,E;Y,C,C,S,G,C,C;S,I,S,C,E,C,E;Y,I,I,C,I,C,C,I,M,C,S,C,c,C,I,C,C,E,C,C,E,C,C,C,C,G,C,C,C,C,C;S,C;Q,O,a,C,C,E,C,C,C;K,A;I,O,S,C,E,C,E;Q,I,O,C,K,U,I,C,K,I,E,M,I,S,C,sB,G,M,C,C,C,G,+B,C,C;Q,a,C,C,E,C,C,C;Q,S,E,G;Y,I,C,W,G,C,C;S;Q,C,C,S,G,C,K,I,G,M,C,M,C,C,C,G,C,E,C,S,G,C,C,S,E,I,E,E,C,A,C;K,C;C,E,A;AAoBH,IAAM,gBAAgB,GAAG,iBAAiB,AAAC;AAC3C,IAAM,qBAAqB,GAAG,aAAa,AAAC;AAC5C,IAAM,mBAAmB,GAAgB;IAAC,OAAO;CAAC,AAAC;AAEnD,SAAS,gCAAgC,GAAzC;IACE,OAAO,KAAK,CAAC;CACd;AAED;;;;GAIG,CACH,IAAA,8BAAA,GAAA,aAAA,CAAA,SAAA,MAAA,EAAA;IAAoD,SAAA,CAAA,8BAAA,EAAA,MAAA,CAAA,CAA4B;IAmB9E,SAAA,8BAA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CA5nBmD,CAAA,GAAA,oCAAmB,CAAA,CAAA,AAAA,AA4nBtE;;;AE3pBD;;oDAAY,cAQX;AARD,IAAY,cAQX,AARD;AAAA,CAAA,SAAY,cAAc,EAA1B;IACE,cAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;IACvB,cAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;IACzB,cAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;IACjC,cAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;IAC7B,cAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;IACrB,uBAAuB;IACvB,cAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;CACpC,CAAA,CARW,cAAc,IAAd,CAAA,cAAc,GAAA,EAAA,CAAA,AAAA,CAAA,CAQzB;;;AEPD;;6CAAa,OAAO;AAAb,IAAM,OAAO,GAAG,QAAQ,AAAC;;;AEDhC;;AAhBA;;;;;;;;;;;;;;GAcG,CAEH,2BAAsB;AAAtB,wBAAA,IAAsB,UAAA;;;A;;A,mE,6B,C;AEAtB,wCAA0C;AAC1C,gEAKwC;AACxC,0CAA0E;AAC1E,yEAAyE;AACzE,0DAMsC;AACtC,+CAAgD;AAOhD,mCAAoC;AACpC,uDAAwD;AAxCxD;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,A,W;I,I,a,G,S,C,E,C,E;Q,a,G,M,C,c,I,C;Y,S,E,E;S,C,Y,K,I,S,C,E,C,E;Y,C,C,S,G,C,C;S,I,S,C,E,C,E;Y,I,I,C,I,C,C,I,M,C,S,C,c,C,I,C,C,E,C,C,E,C,C,C,C,G,C,C,C,C,C;S,C;Q,O,a,C,C,E,C,C,C;K,A;I,O,S,C,E,C,E;Q,I,O,C,K,U,I,C,K,I,E,M,I,S,C,sB,G,M,C,C,C,G,+B,C,C;Q,a,C,C,E,C,C,C;Q,S,E,G;Y,I,C,W,G,C,C;S;Q,C,C,S,G,C,K,I,G,M,C,M,C,C,C,G,C,E,C,S,G,C,C,S,E,I,E,E,C,A,C;K,C;C,E,A;AA4BH,uEAAuE;AACvE,2DAA2D;AAC3D,kEAAkE;AAClE,cAAc;AACd,IAAM,qBAAqB,GAAG,GAAG,AAAC;AAgClC;;GAEG,CACH,IAAA,6BAAA,GA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,UAAA;AAC/B,6CAA+B;AAA/B,wBAAA,aAA+B,UAAA;AAC/B,mCAA0B;AAA1B,wBAAA,QAA0B,UAAA;AAE1B,qCAA2B;AAA3B,wBAAA,SAA2B,UAAA;AAC3B,mDAAwC;AAAxC,wBAAA,UAAwC,UAAA;AACxC,6EAAkD;AAAlD,wBAAA,0BAAkD,UAAA;AAClD,iDAAoC;AAApC,wBAAA,YAAoC,UAAA;AACpC,kDAAqC;AAArC,wBAAA,YAAqC,UAAA;AACrC,mEAAiD;AAAjD,wBAAA,iBAAiD,UAAA;AACjD,iEAAgD;AAAhD,wBAAA,gBAAgD,UAAA;AAChD,uEAAmD;AAAnD,wBAAA,mBAAmD,UAAA;AACnD,mFAAyD;AAAzD,wBAAA,yBAAyD,UAAA;AACzD,0DAAyC;AAAzC,wBAAA,gBAAyC,UAAA;AACzC,+CAAmC;AAAnC,wBAAA,WAAmC,UAAA;AACnC,iDAAoC;AAApC,wBAAA,YAAoC,UAAA;AACpC,qCAA8B;AAA9B,wBAAA,MAA8B,UAAA;AAC9B,2CAAiC;AAAjC,wBAAA,SAAiC,UAAA;AACjC,iCAA4B;AAA5B,wBAAA,IAA4B,UAAA;AAC5B,mCAA6B;AAA7B,wBAAA,KAA6B,UAAA;AAC7B,2CAAiC;AAAjC,wBAAA,SAAiC,UAAA;AACjC,wBAAA,QAA0B,UAAA;;;A;;AEjB1B,uDAAgB,iBAAiB,CAMhC;AAED,iDAAgB,WAAW,CAY1B;AAED,uDAAgB,iBAAiB,CAgBhC;AAED;;;GAGG,CACH,6DAAgB,uBAAuB,CAatC;AAlFD;;;;;;;;;;;;;;GAcG,CACH,wCAAmG;AACnG,uCAKqB;A,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I,O,E,C;C,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AAC,oBAAoB,CAAC,KAAK,IAAI,CAAC;CACxD;;;A;;AEdD,wDAAgB,kBAAkB,CAwBjC;AAED,oDAAgB,cAAc,CAE7B;AAED,sDAAgB,gBAAgB,CAU/B;AA1CD,wCAA8E;AAhB9E;;;;;;;;;;;;;;GAcG,C,I,Q,G,a,U,Q,I,S,C,E;I,I,C,G,O,M,K,U,I,M,C,Q,E,C,G,C,I,C,C,C,C,E,C,G,C,A;I,I,C,E,O,C,C,I,C,C,C,C;I,I,C,I,O,C,C,M,K,Q,E,O;Q,I,E,W;Y,I,C,I,C,I,C,C,M,E,C,G,K,C,C;Y,O;gB,K,E,C,I,C,C,C,E,C;gB,I,E,C,C;a,C;S;K,C;I,M,I,S,C,C,G,yB,G,iC,C,C;C,A;A,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I,O,E,C;C,A;AAIG,SAAU,kBAAkB,CAAC,UAAmB,EAAtD;I,I,G,E,E,A;IACE,IAAM,GAAG,GAAmB,EAAE,AAAC;IAE/B,IAAI,OAAO,UAAU,KAAK,QAAQ,IAAI,UAAU,IAAI,IAAI,EACtD,OAAO,GAAG,CAAC;I,I;QAGb,IAAyB,IAAA,EAAA,GAAA,QAAA,CAAA,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,CAAE;YAA1C,IAAA,EAAA,GAAA,MAAA,CAAA,EAAA,CAAA,KAAA,EAAA,CAAA,CAAU,EAAT,GAAG,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,GAAG,GAAA,EAAA,CAAA,CAAA,CAAA,AAAT;YACT,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC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D;;;;;;GAMG,CACH,SAAS,cAAc,CAAC,KAAU,EAAlC;IACE,OAAO,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;CACzC;;;A;;AE7KD;;;;;;;;;;;;;;GAcG,CACH,gDAAgB,UAAU,CAMzB;AACD;;;;GAIG,CACH,kDAAgB,YAAY,CAc3B;A,I,Q,G,a,U,Q,I,S,C,E;I,I,C,G,O,M,K,U,I,M,C,Q,E,C,G,C,I,C,C,C,C,E,C,G,C,A;I,I,C,E,O,C,C,I,C,C,C,C;I,I,C,I,O,C,C,M,K,Q,E,O;Q,I,E,W;Y,I,C,I,C,I,C,C,M,E,C,G,K,C,C;Y,O;gB,K,E,C,I,C,C,C,E,C;gB,I,E,C,C;a,C;S;K,C;I,M,I,S,C,C,G,yB,G,iC,C,C;C,A;AA1BK,SAAU,UAAU,CAAC,GAAW,EAAE,UAA2B,EAAnE;IACE,IAAI,OAAO,UAAU,KAAK,QAAQ,EAChC,OAAO,GAAG,KAAK,UAAU,CAAC;SAE1B,OAAO,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;CAElC;AAMK,SAAU,YAAY,CAC1B,GAAW,EACX,WAAoC,EAFtC;I,I,G,E,E,A;IAIE,IAAI,CAAC,WAAW,EACd,OAAO,KAAK,CAAC;I,I;QAGf,IAAwB,IAAA,aAAA,GAAA,QAAA,CAAA,WAAW,CAAA,EAAA,eAAA,GAAA,aAAA,CAAA,IAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,eAAA,GAAA,aAAA,CAAA,IAAA,EAAA,CAAE;YAAhC,IAAM,SAAS,GAAA,eAAA,CAAA,KAAA,AAAf;YACH,IAAI,UAAU,CAAC,GAAG,EAAE,SAAS,CAAC,EAC5B,OAAO,IAAI,CAAC;SAEf;K,C,O,K,E;Q,G,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,e,I,C,e,C,I,I,C,E,G,a,C,M,C,A,E,E,C,I,C,a,C,C;S,Q;Y,I,G,E,M,G,C,K,C;S;K;IACD,OAAO,KAAK,CAAC;CACd;;;AEnBD;;AAtBA;;;;;;;;;;;;;;GAcG,CAIH;;;GAGG,CACH,+CAAgB,SAAS,CAOxB;AAPK,SAAU,SAAS,CAAC,IAAa,EAAvC;IACE,OACE,OAAO,IAAI,KAAK,UAAU,IAC1B,OAAQ,IAAoB,CAAC,UAAU,KAAK,UAAU,IACtD,OAAQ,IAAoB,CAAC,QAAQ,KAAK,UAAU,IACnD,IAAoB,CAAC,SAAS,KAAK,IAAI,CACxC;CACH;;;A;;A,oD,c,C;AEbD,mCAAqC;AAhBrC;;;;;;;;;;;;;;GAcG,C,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I,O,E,C;C,A;A,I,a,G,a,U,a,I,S,E,E,I,E,I,E;I,I,I,I,S,C,M,K,C,E;Q,I,I,C,G,C,E,C,G,I,C,M,E,E,E,C,G,C,E,C,E,C,I,E,I,C,C,C,I,I,C,A,E;Y,I,C,E,E,E,G,K,C,S,C,K,C,I,C,I,E,C,E,C,C,C;Y,E,C,C,C,G,I,C,C,C,C;S;K;I,O,E,C,M,C,E,I,K,C,S,C,K,C,I,C,I,C,C,C;C,A;AAIH;;GAEG,CACH,IAAA,cAAA,GAAA,aAAA,CAAA,WAAA;IAOE,SAAA,cAAA,CAAoB,SAAY,EAAU,KAAW,EAArD;QAAoB,IAAA,CAAA,SAAS,GAAT,SAAS,CAAG;QAAU,IAAA,CAAA,KAAK,GAAL,KAAK,CAAM;QAF7C,IAAA,CAAA,SAAS,GAAG,KAAK,CAAC;QAClB,IAAA,CAAA,SAAS,GAAG,IAAI,CAAA,GAAA,iBAAQ,CAAA,EAAK,CAAC;KACmB;IAEzD,MAAA,CAAA,cAAA,CAAI,cAAA,CAAA,SAAA,EAAA,UAAQ,EAAZ;QAAA,GAAA,EAAA,WAAA;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;SACvB;Q,U,E,K;Q,Y,E,I;KAAA,CAAA,CAAA;IAED,MAAA,CAAA,cAAA,CAAI,cAAA,CAAA,SAAA,EAAA,SAAO,EAAX;QAAA,GAAA,EAAA,WAAA;YACE,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;SAC/B;Q,U,E,K;Q,Y,E,I;KAAA,CAAA,CAAA;IAED,cAAA,CAAA,SAAA,CAAA,IAAI,GAAJ,WAAA;Q,I,E,A;QAAA,IAAA,KAAA,GAAA,IAAA,AAcC;QAdI,IAAA,IAAA,GAAA,EAAA,AAAsB;QAAtB,IAAA,IAAA,EAAA,GAAA,CAAsB,EAAtB,EAAA,GAAA,SAAA,CAAA,MAAsB,EAAtB,EAAA,EAAsB,CAAtB,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA,CAAsB;QACzB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI;gBACF,OAAO,CAAC,OAAO,CAAC,AAAA,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,CAAA,CAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAA,aAAA,CAAA;oBAAC,IAAI,CAAC,KAAK;iBAAA,EAAA,MAAA,CAAK,IAAI,CAAA,EAAA,KAAA,CAAA,CAAA,CAAE,CACtD,IAAI,CACH,SAAA,GAAG,EAAA;oBAAI,OAAA,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;iBAAA,EAClC,SAAA,GAAG,EAAA;oBAAI,OAAA,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;iBAAA,CAClC,CAAC;aACL,CAAC,OAAO,GAAG,EAAE;gBACZ,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aAC5B;SACF;QACD,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;KAC/B,CAAD;IACF,OAAA,cAAC,CAAD;CAhCA,EAAA,AAAA,AAgCC;;;AErCD;;A,8C,Q,C;AAhBA;;;;;;;;;;;;;;GAcG,CAEH,IAAA,QAAA,GAAA,aAAA,CAAA,WAAA;IAIE,SAAA,QAAA,GAAA;QAAA,IAAA,KAAA,GAAA,IAAA,AAKC;QAJC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,SAAC,OAAO,EAAE,MAAM,EAA5C;YACE,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;SACvB,CAAC,CAAC;KACJ;IAED,MAAA,CAAA,cAAA,CAAI,QAAA,CAAA,SAAA,EAAA,SAAO,EAAX;QAAA,GAAA,EAAA,WAAA;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;Q,U,E,K;Q,Y,E,I;KAAA,CAAA,CAAA;IAED,QAAA,CAAA,SAAA,CAAA,OAAO,GAAP,SAAQ,GAAM,EAAd;QACE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;KACpB,CAAD;IAEA,QAAA,CAAA,SAAA,CAAA,MAAM,GAAN,SAAO,GAAY,EAAnB;QACE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;KACnB,CAAD;IACF,OAAA,QAAC,CAAD;CAtBA,EAAA,AAAA,AAsBC;;;AEtBD;;AAhBA;;;;;;;;;;;;;;GAcG,CAEH,uDAAoC;AAApC,wBAAA,kBAAoC,UAAA;AACpC,2DAAsC;AAAtC,wBAAA,oBAAsC,UAAA;AACtC,uEAA+C;AAA/C,wBAAA,uBAA+C,UAAA;AAC/C,+BAAwB;AAAxB,wBAAA,MAAwB,UAAA;AACxB,+BAAwB;AAAxB,wBAAA,MAAwB,UAAA;;;A;;A,uD,iB,C;AEJxB,4DAIuC;AACvC,2DAA4D;AArB5D;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,A,W;I,I,a,G,S,C,E,C,E;Q,a,G,M,C,c,I,C;Y,S,E,E;S,C,Y,K,I,S,C,E,C,E;Y,C,C,S,G,C,C;S,I,S,C,E,C,E;Y,I,I,C,I,C,C,I,M,C,S,C,c,C,I,C,C,E,C,C,E,C,C,C,C,G,C,C,C,C,C;S,C;Q,O,a,C,C,E,C,C,C;K,A;I,O,S,C,E,C,E;Q,I,O,C,K,U,I,C,K,I,E,M,I,S,C,sB,G,M,C,C,C,G,+B,C,C;Q,a,C,C,E,C,C,C;Q,S,E,G;Y,I,C,W,G,C,C;S;Q,C,C,S,G,C,K,I,G,M,C,M,C,C,C,G,C,E,C,S,G,C,C,S,E,I,E,E,C,A,C;K,C;C,E,A;AAcH;;GAEG,CACH,IAAA,iBAAA,GAAA,aAAA,CAAA,SAAA,MAAA,EAAA;IAAuC,SAAA,CAAA,iBAAA,EAAA,MAAA,CAAA,CAAmB;IACxD;;;OA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AAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,aAAa,CAAC,AAAC;QACvD,IAAM,kBAAkB,GAAG,IAAG,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,AAAC;QAElE,OAAO,IAAG,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;KAClE,CAAD;IAEA,gDAAgD,CAChD,MAAA,CAAA,SAAA,CAAA,gBAAgB,GAAhB,WAAA;QACE,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B,CAAD;IAEA,6CAA6C,CAC7C,MAAA,CAAA,SAAA,CAAA,aAAa,GAAb,WAAA;QACE,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB,CAAD;IAEA,MAAA,CAAA,SAAA,CAAA,sBAAsB,GAAtB,WAAA;QACE,OAAO,IAAI,CAAC,eAAe,CAAC,sBAAsB,EAAE,CAAC;KACtD,CAAD;IACF,OAAA,MAAC,CAAD;CA7MA,EAAA,AAAA,AA6MC;;;A;;A,0C,I,C;AE/ND,wCAA0C;AAC1C,0CAQ6B;AAE7B,yEAAyE;AAOzE,+BAA6C;AAlC7C;;;;;;;;;;;;;;GAcG,C,I,Q,G,a,U,Q,I,S,C,E;I,I,C,G,O,M,K,U,I,M,C,Q,E,C,G,C,I,C,C,C,C,E,C,G,C,A;I,I,C,E,O,C,C,I,C,C,C,C;I,I,C,I,O,C,C,M,K,Q,E,O;Q,I,E,W;Y,I,C,I,C,I,C,C,M,E,C,G,K,C,C;Y,O;gB,K,E,C,I,C,C,C,E,C;gB,I,E,C,C;a,C;S;K,C;I,M,I,S,C,C,G,yB,G,iC,C,C;C,A;A,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C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O,iBAAiB,CAAC;CAC1B;;;A;;qDEQY,eAAe;AAV5B,yCAA0C;AAE1C,wCAA0C;AAlB1C;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,S,O,E,U,E,C,E,S,E;I,S,K,C,K,E;Q,O,K,Y,C,G,K,G,I,C,C,S,O,E;Y,O,C,K,C,C;S,C,C;K;I,O,I,C,C,I,C,C,G,O,C,A,C,C,S,O,E,M,E;Q,S,S,C,K,E;Y,I;gB,I,C,S,C,I,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,Q,C,K,E;Y,I;gB,I,C,S,C,O,C,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,I,C,M,E;Y,M,C,I,G,O,C,M,C,K,C,G,K,C,M,C,K,C,C,I,C,S,E,Q,C,C;S;Q,I,C,A,C,S,G,S,C,K,C,O,E,U,I,E,C,C,C,I,E,C,C;K,C,C;C,A;A,I,W,G,a,U,W,I,S,O,E,I,E;I,I,C,G;Q,K,E,C;Q,I,E,W;Y,I,C,C,C,C,G,C,E,M,C,C,C,C,C;Y,O,C,C,C,C,C;S;Q,I,E,E;Q,G,E,E;K,E,C,E,C,E,C,E,C,A;I,O,C,G;Q,I,E,I,C,C,C;Q,O,E,I,C,C,C;Q,Q,E,I,C,C,C;K,E,O,M,K,U,I,C,C,C,M,C,Q,C,G,W;Q,O,I,C;K,C,A,E,C,C;I,S,I,C,C,E;Q,O,S,C,E;Y,O,I,C;gB,C;gB,C;a,C,C;S,C;K;I,S,I,C,E,E;Q,I,C,E,M,I,S,C,iC,C,C;Q,M,C,C,I;Y,I,C,G,C,E,C,I,C,C,G,E,C,C,C,G,C,G,C,C,Q,C,G,E,C,C,C,G,C,C,O,C,I,C,A,C,C,G,C,C,Q,C,C,I,C,C,I,C,C,C,E,C,C,A,G,C,C,I,C,I,C,A,C,C,G,C,C,I,C,C,E,E,C,C,C,C,C,C,I,E,O,C,C;Y,I,C,G,C,E,C,E,E,G;gB,E,C,C,C,G,C;gB,C,C,K;a,C;Y,O,E,C,C,C;gB,K,C,C;gB,K,C;oB,C,G,E,C;oB,M;gB,K,C;oB,C,C,K,E,C;oB,O;wB,K,E,E,C,C,C;wB,I,E,K;qB,C;gB,K,C;oB,C,C,K,E,C;oB,C,G,E,C,C,C,C;oB,E,G;A,yB;qB,C;oB,S;gB,K,C;oB,E,G,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;gB;oB,I,C,C,C,G,C,C,I,E,C,G,C,C,M,G,C,I,C,C,C,C,M,G,C,C,C,A,I,C,E,C,C,C,K,C,I,E,C,C,C,K,C,C,A,E;wB,C,G,C,C;wB,S;qB;oB,I,E,C,C,C,K,C,I,C,C,C,I,E,C,C,C,G,C,C,C,C,I,E,C,C,C,G,C,C,C,C,A,C,A,E;wB,C,C,K,G,E,C,C,C,C;wB,M;qB;oB,I,E,C,C,C,K,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,G,E,C;wB,M;qB;oB,I,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,C,G,C,I,C,E,C,C;wB,M;qB;oB,I,C,C,C,C,E,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;a;Y,E,G,I,C,I,C,O,E,C,C,C;S,C,O,C,E;Y,E,G;A,iB;gB,C;a,C;Y,C,G,C,C;S,Q;Y,C,G,C,G,C,C;S;Q,I,E,C,C,C,G,C,E,M,E,C,C,C,C;Q,O;Y,K,E,E,C,C,C,G,E,C,C,C,G,K,C;Y,I,E,I;S,C;K;C,A;AAYI,IAAM,eAAe,GAAG,SAC7B,MAAoC,EADtC;IACE,IAAA,MAAA,KAAA,KAAA,CAAA,EAAA,MAAA,GAAA,EAAoC,CAApC;I,O,S,C,K,C,E,K,C,E,K,C,E,W;Q,I,c,E,S,A;Q,O,W,C,I,E,S,E,E;Y,O,E,C,K;gB,K,C;oBAEM,cAAc,GAA4B,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBAExC,OAAA;AAAA,yBAAA,CAAA,SAAA;wBAAM,OAAO,CAAC,GAAG,CAC7C,AAAC,CAAA,cAAc,CAAC,SAAS,IAAI,EAAE,CAAA,CAAE,GAAG,CAAC,SAAM,CAAC,EADhB;4BAAA,OAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,WAAA;gC,I,Q,E,G,A;gC,O,W,C,I,E,S,E,E;oC,O,E,C,K;wC,K,C;4C,E,C,I,C,I,C;A,iD;A,iD;;A,iD;6C,C,C;4CAGP,OAAA;AAAA,iDAAA,CAAA,SAAA;gDAAM,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC;6CAAA,CAAA;wC,K,C;4CAAzC,QAAQ,GAAG,EAAA,CAAA,IAAA,EAA8B,CAAzC;4CACN,CAAA,GAAA,SAAI,CAAA,CAAC,KAAK,CAAI,CAAC,CAAC,WAAW,CAAC,IAAI,GAAA,kBAAkB,EAAE,QAAQ,CAAC,CAAC;4CAC9D,OAAA;AAAA,iDAAA,CAAA,UAAA;gDAAO,QAAQ;6CAAA,CAAC;wC,K,C;4C,G,G,E,C,I,E,C;4CAEhB,CAAA,GAAA,SAAI,CAAA,CAAC,KAAK,CAAI,CAAC,CAAC,WAAW,CAAC,IAAI,GAAA,WAAA,GAAY,GAAC,CAAC,OAAS,CAAC,CAAC;4CACzD,OAAA;AAAA,iDAAA,CAAA,UAAA;gDAAO,CAAA,GAAA,kBAAQ,CAAA,CAAC,KAAK,EAAE;6CAAA,CAAC;wC,K,C;4C,O;A,iD,C,U;6C,C;qC;iC,C,C;6BAE3B,CAAA,CAAA;yBAAA,CAAC,CACH;qBAAA,CAAA;gB,K,C;oBAXK,SAAS,GAAe,EAAA,CAAA,IAAA,EAW7B,CAXK;oBAaN,OAAA;AAAA,yBAAA,CAAA,UAAA;wBAAO,SAAS,CAAC,MAAM,CACrB,SAAC,GAAG,EAAE,QAAQ,EAAA;4BAAK,OAAA,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;yBAAA,EACtC,CAAA,GAAA,kBAAQ,CAAA,CAAC,KAAK,EAAE,CACjB;qBAAA,CAAC;a;S,C,C;K,C,C;CACH,AAAC;;;AEhCF;;kDAEa,YAAY;AAlBzB;;;;;;;;;;;;;;GAcG,CAEH,2DAA4D;AAErD,IAAM,YAAY,GAAG,CAAA,GAAA,0BAAY,CAAA,AAAC;;;A;;A,kD,Y,C;kDEO5B,YAAY;AATzB,sCAAuC;AAhBvC;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,S,O,E,U,E,C,E,S,E;I,S,K,C,K,E;Q,O,K,Y,C,G,K,G,I,C,C,S,O,E;Y,O,C,K,C,C;S,C,C;K;I,O,I,C,C,I,C,C,G,O,C,A,C,C,S,O,E,M,E;Q,S,S,C,K,E;Y,I;gB,I,C,S,C,I,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,Q,C,K,E;Y,I;gB,I,C,S,C,O,C,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,I,C,M,E;Y,M,C,I,G,O,C,M,C,K,C,G,K,C,M,C,K,C,C,I,C,S,E,Q,C,C;S;Q,I,C,A,C,S,G,S,C,K,C,O,E,U,I,E,C,C,C,I,E,C,C;K,C,C;C,A;A,I,W,G,a,U,W,I,S,O,E,I,E;I,I,C,G;Q,K,E,C;Q,I,E,W;Y,I,C,C,C,C,G,C,E,M,C,C,C,C,C;Y,O,C,C,C,C,C;S;Q,I,E,E;Q,G,E,E;K,E,C,E,C,E,C,E,C,A;I,O,C,G;Q,I,E,I,C,C,C;Q,O,E,I,C,C,C;Q,Q,E,I,C,C,C;K,E,O,M,K,U,I,C,C,C,M,C,Q,C,G,W;Q,O,I,C;K,C,A,E,C,C;I,S,I,C,C,E;Q,O,S,C,E;Y,O,I,C;gB,C;gB,C;a,C,C;S,C;K;I,S,I,C,E,E;Q,I,C,E,M,I,S,C,iC,C,C;Q,M,C,C,I;Y,I,C,G,C,E,C,I,C,C,G,E,C,C,C,G,C,G,C,C,Q,C,G,E,C,C,C,G,C,C,O,C,I,C,A,C,C,G,C,C,Q,C,C,I,C,C,I,C,C,C,E,C,C,A,G,C,C,I,C,I,C,A,C,C,G,C,C,I,C,C,E,E,C,C,C,C,C,C,I,E,O,C,C;Y,I,C,G,C,E,C,E,E,G;gB,E,C,C,C,G,C;gB,C,C,K;a,C;Y,O,E,C,C,C;gB,K,C,C;gB,K,C;oB,C,G,E,C;oB,M;gB,K,C;oB,C,C,K,E,C;oB,O;wB,K,E,E,C,C,C;wB,I,E,K;qB,C;gB,K,C;oB,C,C,K,E,C;oB,C,G,E,C,C,C,C;oB,E,G;A,yB;qB,C;oB,S;gB,K,C;oB,E,G,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;gB;oB,I,C,C,C,G,C,C,I,E,C,G,C,C,M,G,C,I,C,C,C,C,M,G,C,C,C,A,I,C,E,C,C,C,K,C,I,E,C,C,C,K,C,C,A,E;wB,C,G,C,C;wB,S;qB;oB,I,E,C,C,C,K,C,I,C,C,C,I,E,C,C,C,G,C,C,C,C,I,E,C,C,C,G,C,C,C,C,A,C,A,E;wB,C,C,K,G,E,C,C,C,C;wB,M;qB;oB,I,E,C,C,C,K,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,G,E,C;wB,M;qB;oB,I,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,C,G,C,I,C,E,C,C;wB,M;qB;oB,I,C,C,C,C,E,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;a;Y,E,G,I,C,I,C,O,E,C,C,C;S,C,O,C,E;Y,E,G;A,iB;gB,C;a,C;Y,C,G,C,C;S,Q;Y,C,G,C,G,C,C;S;Q,I,E,C,C,C,G,C,E,M,E,C,C,C,C;Q,O;Y,K,E,E,C,C,C,G,E,C,C,C,G,K,C;Y,I,E,I;S,C;K;C,A;AAKH,IAAA,YAAA,GAAA,aAAA,CAAA,WAAA;IAAA,SAAA,YAAA,GAAA,EAIC;IAHO,YAAA,CAAA,SAAA,CAAA,MAAM,GAAZ,WAAM;Q,O,S,C,I,E,K,C,E,K,C,E,W;Y,O,W,C,I,E,S,E,E;gBACJ,OAAA;AAAA,qBAAA,CAAA,UAAA;oBAAO,IAAI,CAAA,GAAA,kBAAQ,CAAA,CAAC,EAAE,CAAC;iBAAA,CAAC;a,C,C;S,C,C;KACzB,CAAA;IACH,OAAA,YAAC,CAAD;CAJA,EAAA,AAAA,AAIC;AAEM,IAAM,YAAY,GAAG,IAAI,YAAY,EAAE,AAAC;;;AET/C;;gDAEa,UAAU;AAlBvB;;;;;;;;;;;;;;GAcG,CAEH,2DAA4D;AAErD,IAAM,UAAU,GAAG,CAAA,GAAA,0BAAY,CAAA,AAAC;;;A;;;;A;;;;AMFvC;;AAhBA;;;;;;;;;;;;;;GAcG,CAEH,mDAAkC;AAAlC,wBAAA,gBAAkC,UAAA;AAClC,2CAA8B;AAA9B,wBAAA,YAA8B,UAAA;AAC9B,mDAAkC;AAAlC,wBAAA,gBAAkC,UAAA;;;A;;qDE8CrB,eAAe;AAhD5B,wCAA0C;AAC1C,yEAAiF;AACjF,qBAAiE;AAlBjE;;;;;;;;;;;;;;GAcG,C,I,Q,G,a,U,Q,I,W;I,Q,G,M,C,M,I,S,C,E;Q,I,I,C,E,C,G,C,E,C,G,S,C,M,E,C,G,C,E,C,E,C;Y,C,G,S,C,C,C,C;Y,I,I,C,I,C,C,I,M,C,S,C,c,C,I,C,C,E,C,C,E,C,C,C,C,G,C,C,C,C,C;S;Q,O,C,C;K,C;I,O,Q,C,K,C,I,E,S,C,C;C,A;A,I,S,G,a,U,S,I,S,O,E,U,E,C,E,S,E;I,S,K,C,K,E;Q,O,K,Y,C,G,K,G,I,C,C,S,O,E;Y,O,C,K,C,C;S,C,C;K;I,O,I,C,C,I,C,C,G,O,C,A,C,C,S,O,E,M,E;Q,S,S,C,K,E;Y,I;gB,I,C,S,C,I,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,Q,C,K,E;Y,I;gB,I,C,S,C,O,C,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,I,C,M,E;Y,M,C,I,G,O,C,M,C,K,C,G,K,C,M,C,K,C,C,I,C,S,E,Q,C,C;S;Q,I,C,A,C,S,G,S,C,K,C,O,E,U,I,E,C,C,C,I,E,C,C;K,C,C;C,A;A,I,W,G,a,U,W,I,S,O,E,I,E;I,I,C,G;Q,K,E,C;Q,I,E,W;Y,I,C,C,C,C,G,C,E,M,C,C,C,C,C;Y,O,C,C,C,C,C;S;Q,I,E,E;Q,G,E,E;K,E,C,E,C,E,C,E,C,A;I,O,C,G;Q,I,E,I,C,C,C;Q,O,E,I,C,C,C;Q,Q,E,I,C,C,C;K,E,O,M,K,U,I,C,C,C,M,C,Q,C,G,W;Q,O,I,C;K,C,A,E,C,C;I,S,I,C,C,E;Q,O,S,C,E;Y,O,I,C;gB,C;gB,C;a,C,C;S,C;K;I,S,I,C,E,E;Q,I,C,E,M,I,S,C,iC,C,C;Q,M,C,C,I;Y,I,C,G,C,E,C,I,C,C,G,E,C,C,C,G,C,G,C,C,Q,C,G,E,C,C,C,G,C,C,O,C,I,C,A,C,C,G,C,C,Q,C,C,I,C,C,I,C,C,C,E,C,C,A,G,C,C,I,C,I,C,A,C,C,G,C,C,I,C,C,E,E,C,C,C,C,C,C,I,E,O,C,C;Y,I,C,G,C,E,C,E,E,G;gB,E,C,C,C,G,C;gB,C,C,K;a,C;Y,O,E,C,C,C;gB,K,C,C;gB,K,C;oB,C,G,E,C;oB,M;gB,K,C;oB,C,C,K,E,C;oB,O;wB,K,E,E,C,C,C;wB,I,E,K;qB,C;gB,K,C;oB,C,C,K,E,C;oB,C,G,E,C,C,C,C;oB,E,G;A,yB;qB,C;oB,S;gB,K,C;oB,E,G,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;gB;oB,I,C,C,C,G,C,C,I,E,C,G,C,C,M,G,C,I,C,C,C,C,M,G,C,C,C,A,I,C,E,C,C,C,K,C,I,E,C,C,C,K,C,C,A,E;wB,C,G,C,C;wB,S;qB;oB,I,E,C,C,C,K,C,I,C,C,C,I,E,C,C,C,G,C,C,C,C,I,E,C,C,C,G,C,C,C,C,A,C,A,E;wB,C,C,K,G,E,C,C,C,C;wB,M;qB;oB,I,E,C,C,C,K,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,G,E,C;wB,M;qB;oB,I,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,C,G,C,I,C,E,C,C;wB,M;qB;oB,I,C,C,C,C,E,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;a;Y,E,G,I,C,I,C,O,E,C,C,C;S,C,O,C,E;Y,E,G;A,iB;gB,C;a,C;Y,C,G,C,C;S,Q;Y,C,G,C,G,C,C;S;Q,I,E,C,C,C,G,C,E,M,E,C,C,C,C;Q,O;Y,K,E,E,C,C,C,G,E,C,C,C,G,K,C;Y,I,E,I;S,C;K;C,A;AAOH;;GAEG,CACH,IAAA,eAAA,GAAA,aAAA,CAAA,WAAA;IAAA,SAAA,eAAA,GAAA,EAqCC;IApCO,eAAA,CAAA,SAAA,CAAA,MAAM,GAAZ,SAAa,MAAgC,EAAvC;Q,O,S,C,I,E,K,C,E,K,C,E,W;Y,I,S,E,e,A;Y,I,E,A;Y,O,W,C,I,E,S,E,E;gBACE,SAAS,GAAG,OAAO,SAAS,KAAK,WAAW,CAAC;gBACnD,IAAI,CAAC,SAAS,EACZ,OAAA;AAAA,qBAAA,CAAA,UAAA;oBAAO,CAAA,GAAA,UAAQ,CAAA,CAAC,KAAK,EAAE;iBAAA,CAAC;gBAEpB,eAAe,GAAf,CAAA,EAAA,GAAA,EAAA,EACJ,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,oBAAoB,CAAA,GAAG,SAAS,EAC5D,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,2BAA2B,CAAA,GAAG,aAAa,EACvE,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,uBAAuB,CAAA,GAAG,SAAS,CAAC,SAAS,EAC1E,EAAA,CAAA,AAAA,CAAC;gBACF,OAAA;AAAA,qBAAA,CAAA,UAAA;oBAAO,IAAI,CAAC,sBAAsB,CAAC,eAAe,EAAE,MAAM,CAAC;iBAAA,CAAC;a,C,C;S,C,C;KAC7D,CAAA;IACD;;;;;;OAMG,CACK,eAAA,CAAA,SAAA,CAAA,sBAAsB,GAA9B,SACE,eAAmC,EACnC,OAAiC,EAF3B;QAIN,IACE,eAAe,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,uBAAuB,CAAC,KAAK,EAAE,EAC1E;YACA,CAAA,GAAA,SAAI,CAAA,CAAC,KAAK,CACR,qEAAqE,CACtE,CAAC;YACF,OAAO,CAAA,GAAA,UAAQ,CAAA,CAAC,KAAK,EAAE,CAAC;SACzB,MACC,OAAO,IAAI,CAAA,GAAA,UAAQ,CAAA,CAAA,QAAA,CAAA,EAAA,EACd,eAAe,CAAA,CAClB,CAAC;KAEN,CAAD;IACF,OAAA,eAAC,CAAD;CArCA,EAAA,AAAA,AAqCC;AAGM,IAAM,eAAe,GAAG,IAAI,eAAe,EAAE,AAAC;;;A;;iDE6FxC,WAAW;AA7IxB,wCAA0C;AAC1C,0CAA6C;AAC7C,yEAAiF;AACjF,sCAAuC;AAnBvC;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,S,O,E,U,E,C,E,S,E;I,S,K,C,K,E;Q,O,K,Y,C,G,K,G,I,C,C,S,O,E;Y,O,C,K,C,C;S,C,C;K;I,O,I,C,C,I,C,C,G,O,C,A,C,C,S,O,E,M,E;Q,S,S,C,K,E;Y,I;gB,I,C,S,C,I,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,Q,C,K,E;Y,I;gB,I,C,S,C,O,C,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,I,C,M,E;Y,M,C,I,G,O,C,M,C,K,C,G,K,C,M,C,K,C,C,I,C,S,E,Q,C,C;S;Q,I,C,A,C,S,G,S,C,K,C,O,E,U,I,E,C,C,C,I,E,C,C;K,C,C;C,A;A,I,W,G,a,U,W,I,S,O,E,I,E;I,I,C,G;Q,K,E,C;Q,I,E,W;Y,I,C,C,C,C,G,C,E,M,C,C,C,C,C;Y,O,C,C,C,C,C;S;Q,I,E,E;Q,G,E,E;K,E,C,E,C,E,C,E,C,A;I,O,C,G;Q,I,E,I,C,C,C;Q,O,E,I,C,C,C;Q,Q,E,I,C,C,C;K,E,O,M,K,U,I,C,C,C,M,C,Q,C,G,W;Q,O,I,C;K,C,A,E,C,C;I,S,I,C,C,E;Q,O,S,C,E;Y,O,I,C;gB,C;gB,C;a,C,C;S,C;K;I,S,I,C,E,E;Q,I,C,E,M,I,S,C,iC,C,C;Q,M,C,C,I;Y,I,C,G,C,E,C,I,C,C,G,E,C,C,C,G,C,G,C,C,Q,C,G,E,C,C,C,G,C,C,O,C,I,C,A,C,C,G,C,C,Q,C,C,I,C,C,I,C,C,C,E,C,C,A,G,C,C,I,C,I,C,A,C,C,G,C,C,I,C,C,E,E,C,C,C,C,C,C,I,E,O,C,C;Y,I,C,G,C,E,C,E,E,G;gB,E,C,C,C,G,C;gB,C,C,K;a,C;Y,O,E,C,C,C;gB,K,C,C;gB,K,C;oB,C,G,E,C;oB,M;gB,K,C;oB,C,C,K,E,C;oB,O;wB,K,E,E,C,C,C;wB,I,E,K;qB,C;gB,K,C;oB,C,C,K,E,C;oB,C,G,E,C,C,C,C;oB,E,G;A,yB;qB,C;oB,S;gB,K,C;oB,E,G,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;gB;oB,I,C,C,C,G,C,C,I,E,C,G,C,C,M,G,C,I,C,C,C,C,M,G,C,C,C,A,I,C,E,C,C,C,K,C,I,E,C,C,C,K,C,C,A,E;wB,C,G,C,C;wB,S;qB;oB,I,E,C,C,C,K,C,I,C,C,C,I,E,C,C,C,G,C,C,C,C,I,E,C,C,C,G,C,C,C,C,A,C,A,E;wB,C,C,K,G,E,C,C,C,C;wB,M;qB;oB,I,E,C,C,C,K,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,G,E,C;wB,M;qB;oB,I,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,C,G,C,I,C,E,C,C;wB,M;qB;oB,I,C,C,C,C,E,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;a;Y,E,G,I,C,I,C,O,E,C,C,C;S,C,O,C,E;Y,E,G;A,iB;gB,C;a,C;Y,C,G,C,C;S,Q;Y,C,G,C,G,C,C;S;Q,I,E,C,C,C,G,C,E,M,E,C,C,C,C;Q,O;Y,K,E,E,C,C,C,G,E,C,C,C,G,K,C;Y,I,E,I;S,C;K;C,A;A,I,Q,G,a,U,Q,I,S,C,E;I,I,C,G,O,M,K,U,I,M,C,Q,E,C,G,C,I,C,C,C,C,E,C,G,C,A;I,I,C,E,O,C,C,I,C,C,C,C;I,I,C,I,O,C,C,M,K,Q,E,O;Q,I,E,W;Y,I,C,I,C,I,C,C,M,E,C,G,K,C,C;Y,O;gB,K,E,C,I,C,C,C,E,C;gB,I,E,C,C;a,C;S;K,C;I,M,I,S,C,C,G,yB,G,iC,C,C;C,A;A,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I,O,E,C;C,A;AASH;;;GAGG,CACH,IAAA,WAAA,GAAA,aAAA,CAAA,WAAA;IAAA,SAAA,WAAA,GAAA;QACE,+EAA+E;QAC9D,IAAA,CAAA,WAAW,GAAG,GAAG,CAAC;QAEnC,oEAAoE;QACnD,IAAA,CAAA,gBAAgB,GAAG,GAAG,CAAC;QAExC,qEAAqE;QACpD,IAAA,CAAA,yBAAyB,GAAG,GAAG,CAAC;QAEhC,IAAA,CAAA,4BAA4B,GAC3C,uEAAuE,GACvE,IAAI,CAAC,WAAW,GAChB,cAAc,CAAC;QAEA,IAAA,CAAA,4BAA4B,GAC3C,oDAAoD,GACpD,IAAI,CAAC,WAAW,GAChB,cAAc,CAAC;KA8GlB;IA5GC;;;;;;OAMG,CACG,WAAA,CAAA,SAAA,CAAA,MAAM,GAAZ,SAAa,OAAiC,EAAxC;Q,O,S,C,I,E,K,C,E,K,C,E,W;Y,I,U,E,G,E,a,E,W,E,gB,A;Y,O,W,C,I,E,S,E,E;gBACE,UAAU,GAAuB,EAAE,CAAC;gBACpC,GAAG,GAAG,CAAA,GAAA,YAAM,CAAA,EAAE,CAAC;gBAEf,aAAa,GAAG,GAAG,CAAC,wBAAwB,CAAC;gBAC7C,WAAW,GAAG,GAAG,CAAC,iBAAiB,CAAC;gBAE1C,IAAI,aAAa,EACf,IAAI;oBACI,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,CAAC;oBACtE,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,gBAAg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,I,S,C,E;Q,I,I,C,E,C,G,C,E,C,G,S,C,M,E,C,G,C,E,C,E,C;Y,C,G,S,C,C,C,C;Y,I,I,C,I,C,C,I,M,C,S,C,c,C,I,C,C,E,C,C,E,C,C,C,C,G,C,C,C,C,C;S;Q,O,C,C;K,C;I,O,Q,C,K,C,I,E,S,C,C;C,A;A,I,S,G,a,U,S,I,S,O,E,U,E,C,E,S,E;I,S,K,C,K,E;Q,O,K,Y,C,G,K,G,I,C,C,S,O,E;Y,O,C,K,C,C;S,C,C;K;I,O,I,C,C,I,C,C,G,O,C,A,C,C,S,O,E,M,E;Q,S,S,C,K,E;Y,I;gB,I,C,S,C,I,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,Q,C,K,E;Y,I;gB,I,C,S,C,O,C,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,I,C,M,E;Y,M,C,I,G,O,C,M,C,K,C,G,K,C,M,C,K,C,C,I,C,S,E,Q,C,C;S;Q,I,C,A,C,S,G,S,C,K,C,O,E,U,I,E,C,C,C,I,E,C,C;K,C,C;C,A;A,I,W,G,a,U,W,I,S,O,E,I,E;I,I,C,G;Q,K,E,C;Q,I,E,W;Y,I,C,C,C,C,G,C,E,M,C,C,C,C,C;Y,O,C,C,C,C,C;S;Q,I,E,E;Q,G,E,E;K,E,C,E,C,E,C,E,C,A;I,O,C,G;Q,I,E,I,C,C,C;Q,O,E,I,C,C,C;Q,Q,E,I,C,C,C;K,E,O,M,K,U,I,C,C,C,M,C,Q,C,G,W;Q,O,I,C;K,C,A,E,C,C;I,S,I,C,C,E;Q,O,S,C,E;Y,O,I,C;gB,C;gB,C;a,C,C;S,C;K;I,S,I,C,E,E;Q,I,C,E,M,I,S,C,iC,C,C;Q,M,C,C,I;Y,I,C,G,C,E,C,I,C,C,G,E,C,C,C,G,C,G,C,C,Q,C,G,E,C,C,C,G,C,C,O,C,I,C,A,C,C,G,C,C,Q,C,C,I,C,C,I,C,C,C,E,C,C,A,G,C,C,I,C,I,C,A,C,C,G,C,C,I,C,C,E,E,C,C,C,C,C,C,I,E,O,C,C;Y,I,C,G,C,E,C,E,E,G;gB,E,C,C,C,G,C;gB,C,C,K;a,C;Y,O,E,C,C,C;gB,K,C,C;gB,K,C;oB,C,G,E,C;oB,M;gB,K,C;oB,C,C,K,E,C;oB,O;wB,K,E,E,C,C,C;wB,I,E,K;qB,C;gB,K,C;oB,C,C,K,E,C;oB,C,G,E,C,C,C,C;oB,E,G;A,yB;qB,C;oB,S;gB,K,C;oB,E,G,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;gB;oB,I,C,C,C,G,C,C,I,E,C,G,C,C,M,G,C,I,C,C,C,C,M,G,C,C,C,A,I,C,E,C,C,C,K,C,I,E,C,C,C,K,C,C,A,E;wB,C,G,C,C;wB,S;qB;oB,I,E,C,C,C,K,C,I,C,C,C,I,E,C,C,C,G,C,C,C,C,I,E,C,C,C,G,C,C,C,C,A,C,A,E;wB,C,C,K,G,E,C,C,C,C;wB,M;qB;oB,I,E,C,C,C,K,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,G,E,C;wB,M;qB;oB,I,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,C,G,C,I,C,E,C,C;wB,M;qB;oB,I,C,C,C,C,E,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;a;Y,E,G,I,C,I,C,O,E,C,C,C;S,C,O,C,E;Y,E,G;A,iB;gB,C;a,C;Y,C,G,C,C;S,Q;Y,C,G,C,G,C,C;S;Q,I,E,C,C,C,G,C,E,M,E,C,C,C,C;Q,O;Y,K,E,E,C,C,C,G,E,C,C,C,G,K,C;Y,I,E,I;S,C;K;C,A;AAQH;;;GAGG,CACH,IAAA,eAAA,GAAA,aAAA,CAAA,WAAA;IAAA,SAAA,eAAA,GAAA,EAgDC;IA/CO,eAAA,CAAA,SAAA,CAAA,MAAM,GAAZ,SAAa,MAAgC,EAAvC;Q,O,S,C,I,E,K,C,E,K,C,E,W;Y,I,e,A;Y,I,E,A;Y,O,W,C,I,E,S,E,E;gBACJ,sCAAsC;gBACtC,IAAI,OAAO,OAAO,KAAK,QAAQ,EAC7B,OAAA;AAAA,qBAAA,CAAA,UAAA;oBAAO,CAAA,GAAA,kBAAQ,CAAA,CAAC,KAAK,EAAE;iBAAA,CAAC;gBAEpB,eAAe,GAAf,CAAA,EAAA,GAAA,EAAA,EACJ,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,WAAW,CAAA,GAAG,OAAO,CAAC,GAAG,EACrD,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,uBAAuB,CAAA,GAAG,OAAO,CAAC,KAAK,IAAI,EAAE,EACzE,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,eAAe,CAAA,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,EACnE,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,oBAAoB,CAAA,GAC9C,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,EAC9B,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,uBAAuB,CAAA,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,EAC3E,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,oBAAoB,CAAA,GAAG,QAAQ,EAC3D,EAAA,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,2BAA2B,CAAA,GAAG,SAAS,EACpE,EAAA,CAAA,AAAA,CAAC;gBACF,OAAA;AAAA,qBAAA,CAAA,UAAA;oBAAO,IAAI,CAAC,sBAAsB,CAAC,eAAe,EAAE,MAAM,CAAC;iBAAA,CAAC;a,C,C;S,C,C;KAC7D,CAAA;IACD;;;;;;OAMG,CACK,eAAA,CAAA,SAAA,CAAA,sBAAsB,GAA9B,SACE,eAAmC,EACnC,OAAiC,EAF3B;QAIN,IACE,eAAe,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,uBAAuB,CAAC,KACjE,EAAE,IACJ,eAAe,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,uBAAuB,CAAC,KACjE,EAAE,IACJ,eAAe,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,eAAe,CAAC,KAAK,EAAE,IAClE,eAAe,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,oBAAoB,CAAC,KAAK,EAAE,IACvE,eAAe,CAAC,CAAA,GAAA,+CAA0B,CAAA,CAAC,uBAAuB,CAAC,KAAK,EAAE,EAC1E;YACA,CAAA,GAAA,SAAI,CAAA,CAAC,KAAK,CACR,qEAAqE,CACtE,CAAC;YACF,OAAO,CAAA,GAAA,kBAAQ,CAAA,CAAC,KAAK,EAAE,CAAC;SACzB,MACC,OAAO,IAAI,CAAA,GAAA,kBAAQ,CAAA,CAAA,QAAA,CAAA,EAAA,EACd,eAAe,CAAA,CAClB,CAAC;KAEN,CAAD;IACF,OAAA,eAAC,CAAD;CAhDA,EAAA,AAAA,AAgDC;AAEM,IAAM,eAAe,GAAG,IAAI,eAAe,EAAE,AAAC;;;A;;A,wD,kB,C;AE3DrD,0CAAyD;AAjBzD;;;;;;;;;;;;;;GAcG,C,I,Q,G,a,U,Q,I,S,C,E;I,I,C,G,O,M,K,U,I,M,C,Q,E,C,G,C,I,C,C,C,C,E,C,G,C,A;I,I,C,E,O,C,C,I,C,C,C,C;I,I,C,I,O,C,C,M,K,Q,E,O;Q,I,E,W;Y,I,C,I,C,I,C,C,M,E,C,G,K,C,C;Y,O;gB,K,E,C,I,C,C,C,E,C;gB,I,E,C,C;a,C;S;K,C;I,M,I,S,C,C,G,yB,G,iC,C,C;C,A;AAQH;;;GAGG,CACH,IAAA,kBAAA,GAAA,aAAA,CAAA,WAAA;IACE,SAAA,kBAAA,CAA6B,eAAgC,EAA7D;QAA6B,IAAA,CAAA,eAAe,GAAf,eAAe,CAAiB;KAAI;IAEjE,kBAAA,CAAA,SAAA,CAAA,UAAU,GAAV,WAAA;Q,I,G,E,E,A;QACE,IAAM,QAAQ,GAAoB,EAAE,AAAC;Q,I;YAErC,IAA4B,IAAA,EAAA,GAAA,QAAA,CAAA,IAAI,CAAC,eAAe,CAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,CAAE;gBAA7C,IAAM,aAAa,GAAA,EAAA,CAAA,KAAA,AAAnB;gBACH,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,CAAC;aAC3C;S,C,O,K,E;Y,G,G;gB,K,E,K;a,C;S,Q;Y,I;gB,I,E,I,C,E,C,I,I,C,E,G,E,C,M,C,A,E,E,C,I,C,E,C,C;a,Q;gB,I,G,E,M,G,C,K,C;a;S;QACD,OAAO,IAAI,OAAO,CAAC,SAAA,OAAO,EAA1B;YACE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAClB,IAAI,CAAC,WAAL;gBACC,OAAO,EAAE,CAAC;aACX,CAAC,CACD,KAAK,CAAC,SAAA,KAAK,EAAX;gBACC,CAAA,GAAA,wBAAkB,CAAA,CAChB,KAAK,IAAI,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAC5D,CAAC;g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AA,SAAA,CAAA,UAAU,GAAlB,SACE,KAAqB,EACrB,IAAqC,EAF/B;Q,I,G,E,E,A;Q,I;YAIN,IAAmB,IAAA,OAAA,GAAA,QAAA,CAAA,KAAK,CAAA,EAAA,SAAA,GAAA,OAAA,CAAA,IAAA,EAAA,EAAA,CAAA,SAAA,CAAA,IAAA,EAAA,SAAA,GAAA,OAAA,CAAA,IAAA,EAAA,CAAE;gBAArB,IAAM,IAAI,GAAA,SAAA,CAAA,KAAA,AAAV;gBACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;oBAAE,KAAK,EAAE,CAAC;iBAAE,CAAC,CAAC;aACnD;S,C,O,K,E;Y,G,G;gB,K,E,K;a,C;S,Q;Y,I;gB,I,S,I,C,S,C,I,I,C,E,G,O,C,M,C,A,E,E,C,I,C,O,C,C;a,Q;gB,I,G,E,M,G,C,K,C;a;S;QACD,IAAI,IAAI,EACN,OAAO,IAAI,CAAC;YAAE,IAAI,EAAE,CAAA,GAAA,sBAAgB,CAAA,CAAC,OAAO;SAAE,CAAC,CAAC;KAEnD,CAAD;IACF,OAAA,mBAAC,CAAD;CAzDA,EAAA,AAAA,AAyDC;;;A;;A,0D,oB,C;AErED,0CAAqE;AAlBrE;;;;;;;;;;;;;;GAcG,C,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I,O,E,C;C,A;A,I,a,G,a,U,a,I,S,E,E,I,E,I,E;I,I,I,I,S,C,M,K,C,E;Q,I,I,C,G,C,E,C,G,I,C,M,E,E,E,C,G,C,E,C,E,C,I,E,I,C,C,C,I,I,C,A,E;Y,I,C,E,E,E,G,K,C,S,C,K,C,I,C,I,E,C,E,C,C,C;Y,E,C,C,C,G,I,C,C,C,C;S;K;I,O,E,C,M,C,E,I,K,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,CAAA,SAAS,GAAjB,WAAQ;QACN,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;KAClC,CAAD;IACF,OAAA,mBAAC,CAAD;CA9CA,EAAA,AAAA,AA8CC;;;A;;;;A;;;;A;;;;A;;;;A;;A,yD,mB,C;AUhED,wCAA2E;AAhB3E;;;;;;;;;;;;;;GAcG,C,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I,O,E,C;C,A;A,I,a,G,a,U,a,I,S,E,E,I,E,I,E;I,I,I,I,S,C,M,K,C,E;Q,I,I,C,G,C,E,C,G,I,C,M,E,E,E,C,G,C,E,C,E,C,I,E,I,C,C,C,I,I,C,A,E;Y,I,C,E,E,E,G,K,C,S,C,K,C,I,C,I,E,C,E,C,C,C;Y,E,C,C,C,G,I,C,C,C,C;S;K;I,O,E,C,M,C,E,I,K,C,S,C,K,C,I,C,I,C,C,C;C,A;AAIH;;;GAGG,CACH,IAAA,mBAAA,GAAA,aAAA,CAAA,WAAA;IAAA,SAAA,mBAAA,GAAA;QACE;;WAEG,CACK,IAAA,CAAA,QAAQ,GAAG,KAAK,CAAC;QAEzB;;WAEG,CACI,IAAA,CAAA,eAAe,GAAG,CAAA,GAAA,iBAAY,CAAA,CAAC;KA6FvC;IA3FC;;;;OAIG,CACH,wDAAwD;IAChD,mBAAA,CAAA,SAAA,CAAA,aAAa,GAArB,SACE,OAAsB,EACtB,MAAS,EAFH;QACN,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA,OAAA,GAAA,CAAA,GAAA,iBAAsB,CAAA,CAAtB;QAGA,IAAM,OAAO,GAAG,IAAI,AAAC;QACrB,IAAM,cAAc,GAAG,WAAvB;YAAuB,IAAA,KAAA,GAAA,IAAA,AAEtB;YAF+C,IAAA,IAAA,GAAA,E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AAA,CAAA,QAAQ,GAAR,WAAA;QACE,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;KAClC,CAAD;IAEA;;OAEG,CACK,gBAAA,CAAA,SAAA,CAAA,SAAS,GAAjB,WAAQ;QACN,CAAA,GAAA,SAAI,CAAA,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;QAC/B,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,OAAO,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CACtC,IAAI,CAAC,WAAL;QACC,6BAA6B,EAC9B,CAAC,CAAC;KACN,CAAD;IAWF,OAAA,gBAAC,CAAD;CAzGA,EAAA,AAAA,AAyGC;;;A;;AEhHD;;;GAGG,CACH,kDAAgB,YAAY,CAY3B;AAED;;;;;GAKG,CACH,6DAAgB,uBAAuB,CAKtC;AAED;;;;;GAKG,CACH,iEAAgB,2BAA2B,CAK1C;AAED;;;;GAIG,CACH,8DAAgB,wBAAwB,CAUvC;AAeD,oEAAoE;AACpE,oDAAgB,cAAc,CAI7B;AApFD,wCAA0C;AAC1C,0CAA6C;AAjB7C;;;;;;;;;;;;;;GAcG,C,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I,O,E,C;C,A;AAKH,IAAM,qBAAqB,GAAG,KAAK,AAAC;AAM9B,SAAU,YAAY,CAC1B,cAAqD,EADvD;IACE,IAAA,cAAA,KAAA,KAAA,CAAA,EAAA,cAAA,GAAA,EAAqD,CAArD;IAEA,IAAM,OAAO,GAA2B,EAAE,AAAC;IAC3C,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,SAAC,EAAY,EAApD;QAAwC,IAAA,EAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,CAAY,EAAX,GAAG,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,KAAK,GAAA,EAAA,CAAA,CAAA,CAAA,AAAX;QACtC,IAAI,OAAO,KAAK,KAAK,WAAW,EAC9B,OAAO,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;aAE7B,CAAA,GAAA,SAAI,CAAA,CAAC,IAAI,CAAC,UAAA,GAAW,GAAG,GAAA,uCAAuC,CAAC,CAAC;KAEpE,CAAC,CAAC;IACH,OAAO,OAAO,CAAC;CAChB;AAQK,SAAU,uBAAuB,CAAC,GAAW,EAAE,IAAY,EAAjE;IACE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,EACpB,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAElB,OAAO,GAAG,GAAG,IAAI,CAAC;CACnB;AAQK,SAAU,2BAA2B,CAAC,GAAW,EAAE,IAAY,EAArE;IACE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,EAC3C,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAElB,OAAO,GAAG,CAAC;CACZ;AAOK,SAAU,wBAAwB,CAAC,aAAiC,EAA1E;IACE,IAAI,OAAO,aAAa,KAAK,QAAQ,EAAE;QACrC,IAAI,aAAa,IAAI,CAAC,EACpB,oEAAoE;QACpE,OAAO,cAAc,CAAC,aAAa,EAAE,qBAAqB,CAAC,CAAC;QAE9D,OAAO,aAAa,CAAC;KACtB,MACC,OAAO,yBAAyB,EAAE,CAAC;CAEtC;AAED,SAAS,yBAAyB,GAAlC;I,I,E,A;IACE,IAAM,cAAc,GAClB,MAAM,CAAC,AAAA,CAAA,EAAA,GAAA,CAAA,GAAA,YAAM,CAAA,EAAE,CAAC,iCAAiC,CAAA,KAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GACjD,CAAA,GAAA,YAAM,CAAA,EAAE,CAAC,0BAA0B,CAAC,AAAC;IAEvC,IAAI,cAAc,IAAI,CAAC,EACrB,oEAAoE;IACpE,OAAO,cAAc,CAAC,cAAc,EAAE,qBAAqB,CAAC,CAAC;SAE7D,OAAO,cAAc,CAAC;CAEzB;AAGK,SAAU,cAAc,CAAC,OAAe,EAAE,cAAsB,EAAtE;IACE,CAAA,GAAA,SAAI,CAAA,CAAC,IAAI,CAAC,gCAAgC,EAAE,OAAO,CAAC,CAAC;IAErD,OAAO,cAAc,CAAC;CACvB;;;AEpFD;;AAhBA;;;;;;;;;;;;;;GAcG,CAEH,mEAA0C;AAA1C,wBAAA,wBAA0C,UAAA;;;A;;A,6D,uB,C;AEA1C,yDAA0D;AAG1D,iCAA0C;AAC1C,8BAAqD;AACrD,wCAA0C;AAC1C,0CAA2D;AAtB3D;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,A,W;I,I,a,G,S,C,E,C,E;Q,a,G,M,C,c,I,C;Y,S,E,E;S,C,Y,K,I,S,C,E,C,E;Y,C,C,S,G,C,C;S,I,S,C,E,C,E;Y,I,I,C,I,C,C,I,M,C,S,C,c,C,I,C,C,E,C,C,E,C,C,C,C,G,C,C,C,C,C;S,C;Q,O,a,C,C,E,C,C,C;K,A;I,O,S,C,E,C,E;Q,I,O,C,K,U,I,C,K,I,E,M,I,S,C,sB,G,M,C,C,C,G,+B,C,C;Q,a,C,C,E,C,C,C;Q,S,E,G;Y,I,C,W,G,C,C;S;Q,C,C,S,G,C,K,I,G,M,C,M,C,C,C,G,C,E,C,S,G,C,C,S,E,I,E,E,C,A,C;K,C;C,E,A;AAUH;;GAEG,CACH,IAAA,uBAAA,GAAA,aAAA,CAAA,SAAA,MAAA,EAAA;IAGY,SAAA,CAAA,uBAAA,EAAA,MAAA,CAAA,CAIT;IAID;;OAEG,CACH,SAAA,uBAAA,CAAY,MAAmC,EAA/C;QAAY,IAAA,MAAA,KAAA,KAAA,CAAA,EAAA,MAAA,GAAA,EAAmC,CAAnC;QAAZ,IAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,MAAM,CAAC,IAAA,IAAA,AAcd;QApBO,KAAA,CAAA,OAAO,GAAY,KAAK,CAAC;QAO/B,KAAI,CAAC,OAAO,GACV,CAAC,CAAC,MAAM,CAAC,OAAO,IAAI,OAAO,SAAS,CAAC,UAAU,KAAK,UAAU,CAAC;QACjE,IAAI,KAAI,CAAC,OAAO,EACd,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAC3B,EAAE,EACF,CAAA,GAAA,kBAAY,CAAA,CAAC,MAAM,CAAC,OAAO,CAAC,EAC5B,CAAA,GAAA,kBAAY,CAAA,CAAC,uBAAuB,CAClC,CAAA,GAAA,YAAM,CAAA,EAAE,CAAC,0BAA0B,CACpC,CACF,CAAC;aAEF,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;Q,O,K,C;KAEtB;IAED,uBAAA,CAAA,SAAA,CAAA,MAAM,GAAN,WAAA;QACE,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;KAClD,CAAD;IAEA,uBAAA,CAAA,SAAA,CAAA,UAAU,GAAV,WAAA;QACE,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;KACrD,CAAD;IAEA,uBAAA,CAAA,SAAA,CAAA,IAAI,GAAJ,SACE,KAAmB,EACnB,SAAqB,EACrB,OAAqD,EAHvD;QAAA,IAAA,KAAA,GAAA,IAAA,AA2BC;QAtBC,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;YAC/B,CAAA,GAAA,SAAI,CAAA,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;YAC5D,OAAO;SACR;QACD,IAAM,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,AAAC;QAC3C,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,AAAC;QAE5C,IAAM,OAAO,GAAG,IAAI,OAAO,CAAO,SAAC,OAAO,EAAE,MAAM,EAAlD;YACE,IAAI,KAAI,CAAC,OAAO,EACd,CAAA,GAAA,kBAAW,CAAA,CAAC,IAAI,EAAE,KAAI,CAAC,GAAG,EAAE,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,aAAa,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;iBAEhF,CAAA,GAAA,qBAAc,CAAA,CAAC,IAAI,EAAE,KAAI,CAAC,GAAG,EAAE;gBAAE,IAAI,EAAE,kBAAkB;aAAE,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;SAEjF,CAAC,CACC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,AAAC;QAE5B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACpC,IAAM,UAAU,GAAG,WAAnB;YACE,IAAM,KAAK,GAAG,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,AAAC;YACrD,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SACxC,AAAC;QACF,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;KACtC,CAAD;IACF,OAAA,uBAAC,CAAD;CAAC,CAhEW,CAAA,GAAA,kCAAgB,CAAA,CAAA,AAAA,AAgE3B;;;A;;AE5ED;;;;;;;GAOG,CACH,oDAAgB,cAAc,CAgB7B;AAED;;;;;;;;GAQG,CACH,iDAAgB,WAAW,CAqD1B;AA1GD;;;;;;;;;;;;;;GAcG,CACH,wCAA0C;AAC1C,mCAAgD;A,I,Q,G,a,U,Q,I,W;I,Q,G,M,C,M,I,S,C,E;Q,I,I,C,E,C,G,C,E,C,G,S,C,M,E,C,G,C,E,C,E,C;Y,C,G,S,C,C,C,C;Y,I,I,C,I,C,C,I,M,C,S,C,c,C,I,C,C,E,C,C,E,C,C,C,C,G,C,C,C,C,C;S;Q,O,C,C;K,C;I,O,Q,C,K,C,I,E,S,C,C;C,A;A,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I,O,E,C;C,A;AAU1C,SAAU,cAAc,CAC5B,IAAY,EACZ,GAAW,EACX,eAAgC,EAChC,SAAqB,EACrB,OAA2C,EAL7C;IAOE,IAAI,SAAS,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC;QAAC,IAAI;KAAC,EAAE,eAAe,CAAC,CAAC,EAAE;QAChE,CAAA,GAAA,SAAI,CAAA,CAAC,KAAK,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;QAC1C,SAAS,EAAE,CAAC;KACb,MAAM;QACL,IAAM,KAAK,GAAG,IAAI,CAAA,GAAA,wBAAiB,CAAA,CACjC,2BAAA,GAA4B,IAAM,CACnC,AAAC;QACF,OAAO,CAAC,KAAK,CAAC,CAAC;KAChB;CACF;AAWK,SAAU,WAAW,CACzB,IAAY,EACZ,GAAW,EACX,OAA+B,EAC/B,eAAuB,EACvB,SAAqB,EACrB,OAA2C,EAN7C;IAQE,IAAI,cAAuB,AAAC;IAE5B,IAAM,aAAa,GAAG,UAAU,CAAC,WAAjC;QACE,cAAc,GAAG,IAAI,CAAC;QACtB,GAAG,CAAC,KAAK,EAAE,CAAC;KACb,EAAE,eAAe,CAAC,AAAC;IAEpB,IAAM,GAAG,GAAG,IAAI,cAAc,EAAE,AAAC;IACjC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IAEtB,IAAM,cAAc,GAAG;QACrB,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE,kBAAkB;KACnC,AAAC;IAEF,MAAM,CAAC,OAAO,CAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACT,cAAc,CAAA,EACd,OAAO,CAAA,CACV,CAAC,OAAO,CAAC,SAAC,EAAM,EAHlB;QAGY,IAAA,EAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,CAAM,EAAL,CAAC,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,CAAC,GAAA,EAAA,CAAA,CAAA,CAAA,AAAL;QACV,GAAG,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KAC5B,CAAC,CAAC;IAEH,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAEf,GAAG,CAAC,kBAAkB,GAAG,WAAzB;QACE,IAAI,GAAG,CAAC,UAAU,KAAK,cAAc,CAAC,IAAI,EAAE;YAC1C,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,EAAE;gBAC1C,YAAY,CAAC,aAAa,CAAC,CAAC;gBAC5B,CAAA,GAAA,SAAI,CAAA,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;gBAChC,SAAS,EAAE,CAAC;aACb,MAAM,IAAI,cAAc,EAAE;gBACzB,IAAM,KAAK,GAAG,IAAI,CAAA,GAAA,wBAAiB,CAAA,CACjC,iBAAiB,EAAE,GAAG,CAAC,MAAM,CAC9B,AAAC;gBACF,OAAO,CAAC,KAAK,CAAC,CAAC;aAChB,MAAM;gBACL,IAAM,KAAK,GAAG,IAAI,CAAA,GAAA,wBAAiB,CAAA,CACjC,qCAAA,GAAsC,GAAG,CAAC,MAAM,GAAA,GAAG,EACnD,GAAG,CAAC,MAAM,CACX,AAAC;gBACF,YAAY,CAAC,aAAa,CAAC,CAAC;gBAC5B,OAAO,CAAC,KAAK,CAAC,CAAC;aAChB;SACF;KACF,CAAC;CACH;;;A;;A,uD,iB,C;AE1GD;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,A,W;I,I,a,G,S,C,E,C,E;Q,a,G,M,C,c,I,C;Y,S,E,E;S,C,Y,K,I,S,C,E,C,E;Y,C,C,S,G,C,C;S,I,S,C,E,C,E;Y,I,I,C,I,C,C,I,M,C,S,C,c,C,I,C,C,E,C,C,E,C,C,C,C,G,C,C,C,C,C;S,C;Q,O,a,C,C,E,C,C,C;K,A;I,O,S,C,E,C,E;Q,I,O,C,K,U,I,C,K,I,E,M,I,S,C,sB,G,M,C,C,C,G,+B,C,C;Q,a,C,C,E,C,C,C;Q,S,E,G;Y,I,C,W,G,C,C;S;Q,C,C,S,G,C,K,I,G,M,C,M,C,C,C,G,C,E,C,S,G,C,C,S,E,I,E,E,C,A,C;K,C;C,E,A;AAEH;;GAEG,CACH,IAAA,iBAAA,GAAA,aAAA,CAAA,SAAA,MAAA,EAAA;IAAuC,SAAA,CAAA,iBAAA,EAAA,MAAA,CAAA,CAAK;IAK1C,SAAA,iBAAA,CAAY,OAAgB,EAAE,IAAa,EAAE,IAAa,EAA1D;QAAA,IAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,IAAA,IAAA,AAGf;QAPiB,KAAA,CAAA,IAAI,GAAW,mBAAmB,CAAC;QAKnD,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;Q,O,K,C;KAClB;IACH,OAAA,iBAAC,CAAD;CAAC,CAVsC,KAAK,CAAA,AAAA,AAU3C;;;AEbD;;AAKA,iHAA0D;AAC1D,uHAA8D;AAtB9D;;;;;;;;;;;;;;GAcG,CAEH,sCAA+B;AAA/B,wBAAA,MAA+B,UAAA;AAC/B,wCAAgC;AAAhC,wBAAA,OAAgC,UAAA;AAChC,yCAAiC;AAAjC,wBAAA,OAAiC,UAAA;AACjC,sCAA8B;AAA9B,wBAAA,OAA8B,UAAA;AAE9B,+BAA0D;AAC1D,mCAA8D;;;A;;;;A;;;;A;;;;AQkF9D;;+CAAY,SA8BX;AA9BD,IAAY,SA8BX,AA9BD;AAAA,CAAA,SAAY,SAAS,EAArB;IACE,yHAAyH,CACzH,SAAA,CAAA,SAAA,CAAA,uBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,uBAAyB,CAAA;IAEzB;;QAEI,CACJ,SAAA,CAAA,SAAA,CAAA,oBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,oBAAsB,CAAA;IAEtB;;QAEI,CACJ,SAAA,CAAA,SAAA,CAAA,kBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,kBAAoB,CAAA;IAEpB;QACI,CACJ,SAAA,CAAA,SAAA,CAAA,kBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,kBAAoB,CAAA;IAEpB;;;;QAII,CACJ,SAAA,CAAA,SAAA,CAAA,oBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,oBAAsB,CAAA;IAEtB;;;QAGI,CACJ,SAAA,CAAA,SAAA,CAAA,oBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,oBAAsB,CAAA;CACvB,CAAA,CA9BW,SAAS,IAAT,CAAA,SAAS,GAAA,EAAA,CAAA,AAAA,CAAA,CA8BpB;;;A;;AEjHD,qEAAgB,+BAA+B,CAI9C;AARD,6CAAkD;AAClD,sCAA+C;A,I,Q,G,a,U,Q,I,S,C,E;I,I,C,G,O,M,K,U,I,M,C,Q,E,C,G,C,I,C,C,C,C,E,C,G,C,A;I,I,C,E,O,C,C,I,C,C,C,C;I,I,C,I,O,C,C,M,K,Q,E,O;Q,I,E,W;Y,I,C,I,C,I,C,C,M,E,C,G,K,C,C;Y,O;gB,K,E,C,I,C,C,C,E,C;gB,I,E,C,C;a,C;S;K,C;I,M,I,S,C,C,G,yB,G,iC,C,C;C,A;A,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K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;IACF,OAAA,UAAC,CAAD;CAtDA,EAAA,AAAA,AAsDC;;;AEjED;;A,uD,iB,C;yDAYa,mBAAmB;AA9BhC;;;;;;;;;;;;;;GAcG,CAIH,uCAAyC;AAEzC;;;GAGG,CACH,IAAA,iBAAA,GAAA,aAAA,CAAA,WAAA;IAAA,SAAA,iBAAA,GAAA,EAIC;IAHC,iBAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,SAAS,KAAa,EAAE,QAAiB,EAAE,QAAuB,EAAlE;QACE,OAAO,GAAA,qBAAU,CAAC;KACnB,CAAD;IACF,OAAA,iBAAC,CAAD;CAJA,EAAA,AAAA,AAIC;AAEM,IAAM,mBAAmB,GAAG,IAAI,iBAAiB,EAAE,AAAC;;;A;;A,+C,S,C;A,gD,U,C;A,uD,iB,C;A,6D,uB,C;A,yD,mB,C;A,0D,oB,C;A,iE,2B,C;A,+D,yB,C;A,uE,iC,C;gDE6F9C,UAAU;yDAGV,mBAAmB;2DACnB,qBAAqB;iEACrB,2BAA2B;oEAG3B,8BAA8B;kEAC9B,4BAA4B;4EAC5B,sCAAsC;AArInD;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,A,W;I,I,a,G,S,C,E,C,E;Q,a,G,M,C,c,I,C;Y,S,E,E;S,C,Y,K,I,S,C,E,C,E;Y,C,C,S,G,C,C;S,I,S,C,E,C,E;Y,I,I,C,I,C,C,I,M,C,S,C,c,C,I,C,C,E,C,C,E,C,C,C,C,G,C,C,C,C,C;S,C;Q,O,a,C,C,E,C,C,C;K,A;I,O,S,C,E,C,E;Q,I,O,C,K,U,I,C,K,I,E,M,I,S,C,sB,G,M,C,C,C,G,+B,C,C;Q,a,C,C,E,C,C,C;Q,S,E,G;Y,I,C,W,G,C,C;S;Q,C,C,S,G,C,K,I,G,M,C,M,C,C,C,G,C,E,C,S,G,C,C,S,E,I,E,E,C,A,C;K,C;C,E,A;AAiBH;;;GAGG,CACH,IAAA,SAAA,GAAA,aAAA,CAAA,WAAA;IACE,SAAA,SAAA,GAAA,EAAgB;IAEhB;;OAEG,CACH,SAAA,CAAA,SAAA,CAAA,eAAe,GAAf,SAAgB,KAAa,EAAE,QAAwB,EAAvD;QACE,OAAO,qBAAqB,CAAC;KAC9B,CAAD;IAEA;;OAEG,CACH,SAAA,CAAA,SAAA,CAAA,aAAa,GAAb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A,uBAAqB,CAAA;IACrB;;OAEG,CACH,aAAA,CAAA,aAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAK,CAAA;IACL;;;OAGG,CACH,aAAA,CAAA,aAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,GAAA,KAAG,CAAA;CACJ,CAAA,CAvBW,aAAa,IAAb,CAAA,aAAa,GAAA,EAAA,CAAA,AAAA,CAAA,CAuBxB;;;A;;;;A;;;;A;;A,kD,Y,C;AMrGD,wCAA0C;AAI1C,gCAA2C;AApB3C;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,S,O,E,U,E,C,E,S,E;I,S,K,C,K,E;Q,O,K,Y,C,G,K,G,I,C,C,S,O,E;Y,O,C,K,C,C;S,C,C;K;I,O,I,C,C,I,C,C,G,O,C,A,C,C,S,O,E,M,E;Q,S,S,C,K,E;Y,I;gB,I,C,S,C,I,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,Q,C,K,E;Y,I;gB,I,C,S,C,O,C,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,I,C,M,E;Y,M,C,I,G,O,C,M,C,K,C,G,K,C,M,C,K,C,C,I,C,S,E,Q,C,C;S;Q,I,C,A,C,S,G,S,C,K,C,O,E,U,I,E,C,C,C,I,E,C,C;K,C,C;C,A;A,I,W,G,a,U,W,I,S,O,E,I,E;I,I,C,G;Q,K,E,C;Q,I,E,W;Y,I,C,C,C,C,G,C,E,M,C,C,C,C,C;Y,O,C,C,C,C,C;S;Q,I,E,E;Q,G,E,E;K,E,C,E,C,E,C,E,C,A;I,O,C,G;Q,I,E,I,C,C,C;Q,O,E,I,C,C,C;Q,Q,E,I,C,C,C;K,E,O,M,K,U,I,C,C,C,M,C,Q,C,G,W;Q,O,I,C;K,C,A,E,C,C;I,S,I,C,C,E;Q,O,S,C,E;Y,O,I,C;gB,C;gB,C;a,C,C;S,C;K;I,S,I,C,E,E;Q,I,C,E,M,I,S,C,iC,C,C;Q,M,C,C,I;Y,I,C,G,C,E,C,I,C,C,G,E,C,C,C,G,C,G,C,C,Q,C,G,E,C,C,C,G,C,C,O,C,I,C,A,C,C,G,C,C,Q,C,C,I,C,C,I,C,C,C,E,C,C,A,G,C,C,I,C,I,C,A,C,C,G,C,C,I,C,C,E,E,C,C,C,C,C,C,I,E,O,C,C;Y,I,C,G,C,E,C,E,E,G;gB,E,C,C,C,G,C;gB,C,C,K;a,C;Y,O,E,C,C,C;gB,K,C,C;gB,K,C;oB,C,G,E,C;oB,M;gB,K,C;oB,C,C,K,E,C;oB,O;wB,K,E,E,C,C,C;wB,I,E,K;qB,C;gB,K,C;oB,C,C,K,E,C;oB,C,G,E,C,C,C,C;oB,E,G;A,yB;qB,C;oB,S;gB,K,C;oB,E,G,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;gB;oB,I,C,C,C,G,C,C,I,E,C,G,C,C,M,G,C,I,C,C,C,C,M,G,C,C,C,A,I,C,E,C,C,C,K,C,I,E,C,C,C,K,C,C,A,E;wB,C,G,C,C;wB,S;qB;oB,I,E,C,C,C,K,C,I,C,C,C,I,E,C,C,C,G,C,C,C,C,I,E,C,C,C,G,C,C,C,C,A,C,A,E;wB,C,C,K,G,E,C,C,C,C;wB,M;qB;oB,I,E,C,C,C,K,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,G,E,C;wB,M;qB;oB,I,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,C,G,C,I,C,E,C,C;wB,M;qB;oB,I,C,C,C,C,E,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;a;Y,E,G,I,C,I,C,O,E,C,C,C;S,C,O,C,E;Y,E,G;A,iB;gB,C;a,C;Y,C,G,C,C;S,Q;Y,C,G,C,G,C,C;S;Q,I,E,C,C,C,G,C,E,M,E,C,C,C,C;Q,O;Y,K,E,E,C,C,C,G,E,C,C,C,G,K,C;Y,I,E,I;S,C;K;C,A;AAUH;;;GAGG,CACH,IAAA,YAAA,GAAA,aAAA,CAAA,WAAA;IAAA,SAAA,YAAA,GAAA;QACE,6BAA6B;QAC7B,yFAAyF;QACjF,IAAA,CAAA,SAAS,GAAG,KAAK,CAAC;KA6G3B;IAzGC;;;;OAIG,CACH,YAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjB,SAAkB,cAA8B,EAAhD;QACE,IAAI,IAAI,CAAC,eAAe,EACtB,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;QAE7E,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;QACtC,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB,CAAD;IAQA;;;O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;AAeD;;;;;;;;GAQG,CACH,qDAAgB,eAAe,CAoB9B;AAcD;;GAEG,CACH,uDAAsB,iBAAiB,CAetC;AAED,wEAAgB,kCAAkC,CAEjD;AAED;;GAEG,CACH,6CAAgB,OAAO,CAMtB;AAED,+CAAgB,SAAS,CAUxB;AAnJD;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,A,W;I,I,a,G,S,C,E,C,E;Q,a,G,M,C,c,I,C;Y,S,E,E;S,C,Y,K,I,S,C,E,C,E;Y,C,C,S,G,C,C;S,I,S,C,E,C,E;Y,I,I,C,I,C,C,I,M,C,S,C,c,C,I,C,C,E,C,C,E,C,C,C,C,G,C,C,C,C,C;S,C;Q,O,a,C,C,E,C,C,C;K,A;I,O,S,C,E,C,E;Q,I,O,C,K,U,I,C,K,I,E,M,I,S,C,sB,G,M,C,C,C,G,+B,C,C;Q,a,C,C,E,C,C,C;Q,S,E,G;Y,I,C,W,G,C,C;S;Q,C,C,S,G,C,K,I,G,M,C,M,C,C,C,G,C,E,C,S,G,C,C,S,E,I,E,E,C,A,C;K,C;C,E,A;A,I,S,G,a,U,S,I,S,O,E,U,E,C,E,S,E;I,S,K,C,K,E;Q,O,K,Y,C,G,K,G,I,C,C,S,O,E;Y,O,C,K,C,C;S,C,C;K;I,O,I,C,C,I,C,C,G,O,C,A,C,C,S,O,E,M,E;Q,S,S,C,K,E;Y,I;gB,I,C,S,C,I,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,Q,C,K,E;Y,I;gB,I,C,S,C,O,C,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,I,C,M,E;Y,M,C,I,G,O,C,M,C,K,C,G,K,C,M,C,K,C,C,I,C,S,E,Q,C,C;S;Q,I,C,A,C,S,G,S,C,K,C,O,E,U,I,E,C,C,C,I,E,C,C;K,C,C;C,A;A,I,W,G,a,U,W,I,S,O,E,I,E;I,I,C,G;Q,K,E,C;Q,I,E,W;Y,I,C,C,C,C,G,C,E,M,C,C,C,C,C;Y,O,C,C,C,C,C;S;Q,I,E,E;Q,G,E,E;K,E,C,E,C,E,C,E,C,A;I,O,C,G;Q,I,E,I,C,C,C;Q,O,E,I,C,C,C;Q,Q,E,I,C,C,C;K,E,O,M,K,U,I,C,C,C,M,C,Q,C,G,W;Q,O,I,C;K,C,A,E,C,C;I,S,I,C,C,E;Q,O,S,C,E;Y,O,I,C;gB,C;gB,C;a,C,C;S,C;K;I,S,I,C,E,E;Q,I,C,E,M,I,S,C,iC,C,C;Q,M,C,C,I;Y,I,C,G,C,E,C,I,C,C,G,E,C,C,C,G,C,G,C,C,Q,C,G,E,C,C,C,G,C,C,O,C,I,C,A,C,C,G,C,C,Q,C,C,I,C,C,I,C,C,C,E,C,C,A,G,C,C,I,C,I,C,A,C,C,G,C,C,I,C,C,E,E,C,C,C,C,C,C,I,E,O,C,C;Y,I,C,G,C,E,C,E,E,G;gB,E,C,C,C,G,C;gB,C,C,K;a,C;Y,O,E,C,C,C;gB,K,C,C;gB,K,C;oB,C,G,E,C;oB,M;gB,K,C;oB,C,C,K,E,C;oB,O;wB,K,E,E,C,C,C;wB,I,E,K;qB,C;gB,K,C;oB,C,C,K,E,C;oB,C,G,E,C,C,C,C;oB,E,G;A,yB;qB,C;oB,S;gB,K,C;oB,E,G,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;gB;oB,I,C,C,C,G,C,C,I,E,C,G,C,C,M,G,C,I,C,C,C,C,M,G,C,C,C,A,I,C,E,C,C,C,K,C,I,E,C,C,C,K,C,C,A,E;wB,C,G,C,C;wB,S;qB;oB,I,E,C,C,C,K,C,I,C,C,C,I,E,C,C,C,G,C,C,C,C,I,E,C,C,C,G,C,C,C,C,A,C,A,E;wB,C,C,K,G,E,C,C,C,C;wB,M;qB;oB,I,E,C,C,C,K,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,G,E,C;wB,M;qB;oB,I,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,C,G,C,I,C,E,C,C;wB,M;qB;oB,I,C,C,C,C,E,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;a;Y,E,G,I,C,I,C,O,E,C,C,C;S,C,O,C,E;Y,E,G;A,iB;gB,C;a,C;Y,C,G,C,C;S,Q;Y,C,G,C,G,C,C;S;Q,I,E,C,C,C,G,C,E,M,E,C,C,C,C;Q,O;Y,K,E,E,C,C,C,G,E,C,C,C,G,K,C;Y,I,E,I;S,C;K;C,A;A,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I,O,E,C;C,A;A,I,a,G,a,U,a,I,S,E,E,I,E,I,E;I,I,I,I,S,C,M,K,C,E;Q,I,I,C,G,C,E,C,G,I,C,M,E,E,E,C,G,C,E,C,E,C,I,E,I,C,C,C,I,I,C,A,E;Y,I,C,E,E,E,G,K,C,S,C,K,C,I,C,I,E,C,E,C,C,C;Y,E,C,C,C,G,I,C,C,C,C;S;K;I,O,E,C,M,C,E,I,K,C,S,C,K,C,I,C,I,C,C,C;C,A;A,I,Q,G,a,U,Q,I,S,C,E;I,I,C,G,O,M,K,U,I,M,C,Q,E,C,G,C,I,C,C,C,C,E,C,G,C,A;I,I,C,E,O,C,C,I,C,C,C,C;I,I,C,I,O,C,C,M,K,Q,E,O;Q,I,E,W;Y,I,C,I,C,I,C,C,M,E,C,G,K,C,C;Y,O;gB,K,E,C,I,C,C,C,E,C;gB,I,E,C,C;a,C;S;K,C;I,M,I,S,C,C,G,yB,G,iC,C,C;C,A;AAOG,SAAU,YAAY,CAAI,IAAc,EAA9C;IACE,OAAO,IAAI,KAAK,SAAS,IAAI,IAAI,KAAK,IAAI,CAAC;CAC5C;AAMK,SAAU,cAAc,CAAC,UAA4B,EAA3D;IACE,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,AAAC;IACnC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC;IAEjC,gDAAgD;IAChD,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;IACnB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,SAAA,GAAG,EAAA;QAAI,OAAA;YAAC,GAAG;YAAE,UAAU,CAAC,GAAG,CAAC;SAAC,CAAA;KAAA,CAAC,CAAC,CAAC;CAChE;AAMK,SAAU,sBAAsB,CAAC,oBAA0C,EAAjF;I,I,E,E,E,A;IACE,OAAU,oBAAoB,CAAC,IAAI,GAAA,GAAA,GAAI,CAAA,AAA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GAAA,KAAA,CAAA,IAAA,EAAA,EAAA,CAAA,OAAA,CAAA,IAAA,EAAA,OAAA,GAAA,KAAA,CAAA,IAAA,EAAA,CAAE;YAAnB,IAAM,IAAI,GAAA,OAAA,CAAA,KAAA,AAAV;YACH,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAChB,OAAO,KAAK,CAAC;SAEhB;K,C,O,K,E;Q,G,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,O,I,C,O,C,I,I,C,E,G,K,C,M,C,A,E,E,C,I,C,K,C,C;S,Q;Y,I,G,E,M,G,C,K,C;S;K;IACD,OAAO,IAAI,CAAC;CACb;;;A;;A,mE,6B,C;AEnID,wCAA0C;AAC1C,0CAI6B;AAC7B,6CAA8C;AAI9C,gCAAyD;AA1BzD;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,A,W;I,I,a,G,S,C,E,C,E;Q,a,G,M,C,c,I,C;Y,S,E,E;S,C,Y,K,I,S,C,E,C,E;Y,C,C,S,G,C,C;S,I,S,C,E,C,E;Y,I,I,C,I,C,C,I,M,C,S,C,c,C,I,C,C,E,C,C,E,C,C,C,C,G,C,C,C,C,C;S,C;Q,O,a,C,C,E,C,C,C;K,A;I,O,S,C,E,C,E;Q,I,O,C,K,U,I,C,K,I,E,M,I,S,C,sB,G,M,C,C,C,G,+B,C,C;Q,a,C,C,E,C,C,C;Q,S,E,G;Y,I,C,W,G,C,C;S;Q,C,C,S,G,C,K,I,G,M,C,M,C,C,C,G,C,E,C,S,G,C,C,S,E,I,E,E,C,A,C;K,C;C,E,A;A,I,S,G,a,U,S,I,S,O,E,U,E,C,E,S,E;I,S,K,C,K,E;Q,O,K,Y,C,G,K,G,I,C,C,S,O,E;Y,O,C,K,C,C;S,C,C;K;I,O,I,C,C,I,C,C,G,O,C,A,C,C,S,O,E,M,E;Q,S,S,C,K,E;Y,I;gB,I,C,S,C,I,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,Q,C,K,E;Y,I;gB,I,C,S,C,O,C,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,I,C,M,E;Y,M,C,I,G,O,C,M,C,K,C,G,K,C,M,C,K,C,C,I,C,S,E,Q,C,C;S;Q,I,C,A,C,S,G,S,C,K,C,O,E,U,I,E,C,C,C,I,E,C,C;K,C,C;C,A;A,I,W,G,a,U,W,I,S,O,E,I,E;I,I,C,G;Q,K,E,C;Q,I,E,W;Y,I,C,C,C,C,G,C,E,M,C,C,C,C,C;Y,O,C,C,C,C,C;S;Q,I,E,E;Q,G,E,E;K,E,C,E,C,E,C,E,C,A;I,O,C,G;Q,I,E,I,C,C,C;Q,O,E,I,C,C,C;Q,Q,E,I,C,C,C;K,E,O,M,K,U,I,C,C,C,M,C,Q,C,G,W;Q,O,I,C;K,C,A,E,C,C;I,S,I,C,C,E;Q,O,S,C,E;Y,O,I,C;gB,C;gB,C;a,C,C;S,C;K;I,S,I,C,E,E;Q,I,C,E,M,I,S,C,iC,C,C;Q,M,C,C,I;Y,I,C,G,C,E,C,I,C,C,G,E,C,C,C,G,C,G,C,C,Q,C,G,E,C,C,C,G,C,C,O,C,I,C,A,C,C,G,C,C,Q,C,C,I,C,C,I,C,C,C,E,C,C,A,G,C,C,I,C,I,C,A,C,C,G,C,C,I,C,C,E,E,C,C,C,C,C,C,I,E,O,C,C;Y,I,C,G,C,E,C,E,E,G;gB,E,C,C,C,G,C;gB,C,C,K;a,C;Y,O,E,C,C,C;gB,K,C,C;gB,K,C;oB,C,G,E,C;oB,M;gB,K,C;oB,C,C,K,E,C;oB,O;wB,K,E,E,C,C,C;wB,I,E,K;qB,C;gB,K,C;oB,C,C,K,E,C;oB,C,G,E,C,C,C,C;oB,E,G;A,yB;qB,C;oB,S;gB,K,C;oB,E,G,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;gB;oB,I,C,C,C,G,C,C,I,E,C,G,C,C,M,G,C,I,C,C,C,C,M,G,C,C,C,A,I,C,E,C,C,C,K,C,I,E,C,C,C,K,C,C,A,E;wB,C,G,C,C;wB,S;qB;oB,I,E,C,C,C,K,C,I,C,C,C,I,E,C,C,C,G,C,C,C,C,I,E,C,C,C,G,C,C,C,C,A,C,A,E;wB,C,C,K,G,E,C,C,C,C;wB,M;qB;oB,I,E,C,C,C,K,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,G,E,C;wB,M;qB;oB,I,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,C,G,C,I,C,E,C,C;wB,M;qB;oB,I,C,C,C,C,E,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;a;Y,E,G,I,C,I,C,O,E,C,C,C;S,C,O,C,E;Y,E,G;A,iB;gB,C;a,C;Y,C,G,C,C;S,Q;Y,C,G,C,G,C,C;S;Q,I,E,C,C,C,G,C,E,M,E,C,C,C,C;Q,O;Y,K,E,E,C,C,C,G,E,C,C,C,G,K,C;Y,I,E,I;S,C;K;C,A;A,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I,O,E,C;C,A;A,I,a,G,a,U,a,I,S,E,E,I,E,I,E;I,I,I,I,S,C,M,K,C,E;Q,I,I,C,G,C,E,C,G,I,C,M,E,E,E,C,G,C,E,C,E,C,I,E,I,C,C,C,I,I,C,A,E;Y,I,C,E,E,E,G,K,C,S,C,K,C,I,C,I,E,C,E,C,C,C;Y,E,C,C,C,G,I,C,C,C,C;S;K;I,O,E,C,M,C,E,I,K,C,S,C,K,C,I,C,I,C,C,C;C,A;AAoBH;;;GAGG,CACH,IAAA,6BAAA,GAAA,aAAA,CAAA,SAAA,MAAA,EAAA;IAAmD,SAAA,CAAA,6BAAA,EAAA,MAAA,CAAA,CAAY;IAS7D,SAAA,6BAAA,CAAY,OAA6C,EAAzD;Q,I,E,E,E,A;QAAA,IAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,CAAO,IAAA,IAAA,AAmBR;QAjBC,IAAI,OAAO,CAAC,oBAAoB,KAAK,SAAS,IAAI,OAAO,CAAC,oBAAoB,IAAI,CAAC,EACjF,MAAM,KAAK,CAAC,6CAA6C,CAAC,CAAC;QAG7D,IAAI,OAAO,CAAC,mBAAmB,KAAK,SAAS,IAAI,OAAO,CAAC,mBAAmB,IAAI,CAAC,EAC/E,MAAM,KAAK,CAAC,4CAA4C,CAAC,CAAC;QAG5D,IAAI,OAAO,CAAC,mBAAmB,KAAK,SAAS,IAC3C,OAAO,CAAC,oBAAoB,KAAK,SAAS,IAC1C,OAAO,CAAC,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B,CAAC,mBAAmB,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;KACtF,CAAD;IACF,OAAA,KAAC,CAAD;CA/EA,EAAA,AAAA,AA+EC;;;A;;A,oD,c,C;A,6D,uB,C;A,uD,iB,C;A,yD,mB,C;A,0D,oB,C;A,iE,2B,C;A,+D,yB,C;A,uE,iC,C;AEGD,4DAAgB,sBAAsB,CAErC;AAnGD,wCAA0C;AAC1C,uDAAsD;AAEtD,0CAA6C;AAnB7C;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,A,W;I,I,a,G,S,C,E,C,E;Q,a,G,M,C,c,I,C;Y,S,E,E;S,C,Y,K,I,S,C,E,C,E;Y,C,C,S,G,C,C;S,I,S,C,E,C,E;Y,I,I,C,I,C,C,I,M,C,S,C,c,C,I,C,C,E,C,C,E,C,C,C,C,G,C,C,C,C,C;S,C;Q,O,a,C,C,E,C,C,C;K,A;I,O,S,C,E,C,E;Q,I,O,C,K,U,I,C,K,I,E,M,I,S,C,sB,G,M,C,C,C,G,+B,C,C;Q,a,C,C,E,C,C,C;Q,S,E,G;Y,I,C,W,G,C,C;S;Q,C,C,S,G,C,K,I,G,M,C,M,C,C,C,G,C,E,C,S,G,C,C,S,E,I,E,E,C,A,C;K,C;C,E,A;AAUH,IAAA,cAAA,GAAA,aAAA,CAAA,WAAA;IACE,SAAA,cAAA,CAAoB,sBAA6C,EAAY,WAAiC,EAA9G;QAAoB,IAAA,CAAA,sBAAsB,GAAtB,sBAAsB,CAAuB;QAAY,IAAA,CAAA,WAAW,GAAX,WAAW,CAAsB;KAAI;IAExG,cAAA,CAAA,SAAA,CAAA,OAAO,GAAjB,SAAkB,KAAa,EAAE,UAAyC,EAAE,OAA2C,EAA7G;QAAuB,IAAA,UAAA,KAAA,KAAA,CAAA,EAAA,UAAA,GAAA,EAAyC,CAAzC;QAA2C,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA,OAAA,GAAuB,IAAG,CAAC,OAAO,CAAC,MAAM,EAAE,CAA3C;QAC1E,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,KAAK,WAAO,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACpF,IAAG,CAAC,IAAI,CAAC,IAAI,CACX,0DAAA,GAA2D,IAAI,CAAC,WAAW,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A,aAAA,CAAA,SAAA,MAAA,EAAA;IAA+C,SAAA,CAAA,yBAAA,EAAA,MAAA,CAAA,CAAoB;IAAnE,SAAA,yBAAA,GAAA;Q,O,M,K,I,I,M,C,K,C,I,E,S,C,I,I,C;KAAyG;IAAD,OAAA,yBAAC,CAAD;CAAC,CAA1D,oBAAoB,CAAA,AAAA,AAAsC;AACzG,IAAA,iCAAA,GAAA,aAAA,CAAA,SAAA,MAAA,EAAA;IAAuD,SAAA,CAAA,iCAAA,EAAA,MAAA,CAAA,CAAoB;IAA3E,SAAA,iCAAA,GAAA;Q,O,M,K,I,I,M,C,K,C,I,E,S,C,I,I,C;KAAyH;IAAD,OAAA,iCAAC,CAAD;CAAC,CAAlE,oBAAoB,CAAA,AAAA,AAA8C;AAEnH,SAAU,sBAAsB,CAAC,EAAW,EAAlD;IACE,OAAO,EAAE,YAAY,oBAAoB,CAAC;CAC3C;;;A;;A,mD,a,C;AEnGD,wCAA0C;AAC1C,uDAAsD;AACtD,oDAAoD;AAEpD,2EAA4E;AAC5E,yDAA0D;AArB1D;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,S,O,E,U,E,C,E,S,E;I,S,K,C,K,E;Q,O,K,Y,C,G,K,G,I,C,C,S,O,E;Y,O,C,K,C,C;S,C,C;K;I,O,I,C,C,I,C,C,G,O,C,A,C,C,S,O,E,M,E;Q,S,S,C,K,E;Y,I;gB,I,C,S,C,I,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,Q,C,K,E;Y,I;gB,I,C,S,C,O,C,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,I,C,M,E;Y,M,C,I,G,O,C,M,C,K,C,G,K,C,M,C,K,C,C,I,C,S,E,Q,C,C;S;Q,I,C,A,C,S,G,S,C,K,C,O,E,U,I,E,C,C,C,I,E,C,C;K,C,C;C,A;A,I,W,G,a,U,W,I,S,O,E,I,E;I,I,C,G;Q,K,E,C;Q,I,E,W;Y,I,C,C,C,C,G,C,E,M,C,C,C,C,C;Y,O,C,C,C,C,C;S;Q,I,E,E;Q,G,E,E;K,E,C,E,C,E,C,E,C,A;I,O,C,G;Q,I,E,I,C,C,C;Q,O,E,I,C,C,C;Q,Q,E,I,C,C,C;K,E,O,M,K,U,I,C,C,C,M,C,Q,C,G,W;Q,O,I,C;K,C,A,E,C,C;I,S,I,C,C,E;Q,O,S,C,E;Y,O,I,C;gB,C;gB,C;a,C,C;S,C;K;I,S,I,C,E,E;Q,I,C,E,M,I,S,C,iC,C,C;Q,M,C,C,I;Y,I,C,G,C,E,C,I,C,C,G,E,C,C,C,G,C,G,C,C,Q,C,G,E,C,C,C,G,C,C,O,C,I,C,A,C,C,G,C,C,Q,C,C,I,C,C,I,C,C,C,E,C,C,A,G,C,C,I,C,I,C,A,C,C,G,C,C,I,C,C,E,E,C,C,C,C,C,C,I,E,O,C,C;Y,I,C,G,C,E,C,E,E,G;gB,E,C,C,C,G,C;gB,C,C,K;a,C;Y,O,E,C,C,C;gB,K,C,C;gB,K,C;oB,C,G,E,C;oB,M;gB,K,C;oB,C,C,K,E,C;oB,O;wB,K,E,E,C,C,C;wB,I,E,K;qB,C;gB,K,C;oB,C,C,K,E,C;oB,C,G,E,C,C,C,C;oB,E,G;A,yB;qB,C;oB,S;gB,K,C;oB,E,G,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;gB;oB,I,C,C,C,G,C,C,I,E,C,G,C,C,M,G,C,I,C,C,C,C,M,G,C,C,C,A,I,C,E,C,C,C,K,C,I,E,C,C,C,K,C,C,A,E;wB,C,G,C,C;wB,S;qB;oB,I,E,C,C,C,K,C,I,C,C,C,I,E,C,C,C,G,C,C,C,C,I,E,C,C,C,G,C,C,C,C,A,C,A,E;wB,C,C,K,G,E,C,C,C,C;wB,M;qB;oB,I,E,C,C,C,K,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,G,E,C;wB,M;qB;oB,I,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,C,G,C,I,C,E,C,C;wB,M;qB;oB,I,C,C,C,C,E,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;a;Y,E,G,I,C,I,C,O,E,C,C,C;S,C,O,C,E;Y,E,G;A,iB;gB,C;a,C;Y,C,G,C,C;S,Q;Y,C,G,C,G,C,C;S;Q,I,E,C,C,C,G,C,E,M,E,C,C,C,C;Q,O;Y,K,E,E,C,C,C,G,E,C,C,C,G,K,C;Y,I,E,I;S,C;K;C,A;A,I,Q,G,a,U,Q,I,S,C,E;I,I,C,G,O,M,K,U,I,M,C,Q,E,C,G,C,I,C,C,C,C,E,C,G,C,A;I,I,C,E,O,C,C,I,C,C,C,C;I,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CAAC,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAR,QAAQ,CAAE,OAAO,CAAC,CAAC;QAC5D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAA,GAAA,yBAAc,CAAA,CAAC,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAR,QAAQ,CAAE,SAAS,CAAC,CAAC;KACjE;IAED,aAAA,CAAA,SAAA,CAAA,aAAa,GAAb,WAAA;QACE,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB,CAAD;IAEA;;OAEG,CACH,aAAA,CAAA,SAAA,CAAA,gBAAgB,GAAhB,WAAA;QACE,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B,CAAD;IAEA,aAAA,CAAA,SAAA,CAAA,kBAAkB,GAAlB,WAAA;QACE,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B,CAAD;IACF,OAAA,aAAC,CAAD;CAzBA,EAAA,AAAA,AAyBC;;;A;;A,iD,W,C;AEKY,qDAAA,eAAe,CAAf;AAUA,oDAAA,cAAc,CAAd;AAoBA,0DAAA,oBAAoB,CAApB;AAUA,0DAAA,oBAAoB,CAApB;A,wE,kC,C;A,wD,kB,C;AA9Eb,wCAA0C;AAC1C,0CAAoH;AAEpH,8DAA+E;AAnB/E;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,A,W;I,I,a,G,S,C,E,C,E;Q,a,G,M,C,c,I,C;Y,S,E,E;S,C,Y,K,I,S,C,E,C,E;Y,C,C,S,G,C,C;S,I,S,C,E,C,E;Y,I,I,C,I,C,C,I,M,C,S,C,c,C,I,C,C,E,C,C,E,C,C,C,C,G,C,C,C,C,C;S,C;Q,O,a,C,C,E,C,C,C;K,A;I,O,S,C,E,C,E;Q,I,O,C,K,U,I,C,K,I,E,M,I,S,C,sB,G,M,C,C,C,G,+B,C,C;Q,a,C,C,E,C,C,C;Q,S,E,G;Y,I,C,W,G,C,C;S;Q,C,C,S,G,C,K,I,G,M,C,M,C,C,C,G,C,E,C,S,G,C,C,S,E,I,E,E,C,A,C;K,C;C,E,A;AAQH;;;;GAIG,CACH,IAAA,WAAA,GAAA,aAAA,CAAA,WAAA;IAAA,SAAA,WAAA,GAAA,EAsBC;IAnBQ,WAAA,CAAA,I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AAA,EAAA,CAAA,CAA0B,EAAzB,UAAU,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,YAAY,GAAA,EAAA,CAAA,CAAA,CAAA,AAAzB;gBACxC,IAAM,UAAU,GAAG,YAAY,CAAC,YAAY,EAAE,AAAC;gBAE/C,kDAAkD;gBAClD,IAAM,oBAAoB,GACxB,AAAC,UAAU,CAAC,IAAI,KAAK,CAAA,GAAA,oCAAc,CAAA,CAAC,eAAe,IAClD,UAAU,CAAC,IAAI,KAAK,CAAA,GAAA,oCAAc,CAAA,CAAC,gBAAgB,IACnD,UAAU,CAAC,IAAI,KAAK,CAAA,GAAA,oCAAc,CAAA,CAAC,0BAA0B,AAAC,AAAC;gBAElE,OAAO;oBACL,UAAU,EAAA,UAAA;oBACV,SAAS,EAAE,YAAY,CAAC,SAAS;oBACjC,OAAO,EAAA,OAAA;oBACP,KAAK,EAAE;wBACL,GAAG,EAAE,UAAU,CAAC,SAAS,GAAG,UAAU,CAAC,GAAG,GAAG,SAAS;wBACtD,GAAG,EAAE,UAAU,CAAC,SAAS,GAAG,UAAU,CAAC,GAAG,GAAG,SAAS;wBACtD,GAAG,EAAE,CAAC,oBAAoB,GAAG,UAAU,CAAC,GAAG,GAAG,SAAS;wBACvD,OAAO,EAAE,UAAU,CAAC,OAAO;wBAC3B,KAAK,EAAE,UAAU,CAAC,KAAK;qBACxB;iBACF,CAAC;aACH,CAAC;SACH,CAAC;KACH,CAAD;IACF,OAAA,mBAAC,CAAD;CAxHA,EAAA,AAAA,AAwHC;;;A;;A,2D,qB,C;A,yD,mB,C;AEpND,+BAAkG;AAElG,0CAAmE;AACnE,iDAAsE;AAnBtE;;;;;;;;;;;;;;GAcG,C,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I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AA,CAA0B,EAAzB,UAAU,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,YAAY,GAAA,EAAA,CAAA,CAAA,CAAA,AAAzB;gBACxC,OAAO;oBACL,UAAU,EAAA,UAAA;oBACV,SAAS,EAAE,YAAY,CAAC,SAAS;oBACjC,OAAO,EAAA,OAAA;oBACP,KAAK,EAAE,YAAY,CAAC,YAAY,EAAE;iBACnC,CAAC;aACH,CAAC;YACF,WAAW,EAAE,IAAI,CAAC,SAAS;SAC5B,CAAC;KACH,CAAD;IACF,OAAA,aAAC,CAAD;CA1DA,EAAA,AAAA,AA0DC;;;A;;A,sD,gB,C;AEjFD,8DAAmG;AACnG,gCAAiC;AACjC,gCAAwC;AACxC,yDAA0D;AAG1D,+DAAgE;AAChE,yEAAkE;AAClE,yDAA0D;AAC1D,uDAAwD;AA7BxD;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,S,O,E,U,E,C,E,S,E;I,S,K,C,K,E;Q,O,K,Y,C,G,K,G,I,C,C,S,O,E;Y,O,C,K,C,C;S,C,C;K;I,O,I,C,C,I,C,C,G,O,C,A,C,C,S,O,E,M,E;Q,S,S,C,K,E;Y,I;gB,I,C,S,C,I,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,Q,C,K,E;Y,I;gB,I,C,S,C,O,C,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,I,C,M,E;Y,M,C,I,G,O,C,M,C,K,C,G,K,C,M,C,K,C,C,I,C,S,E,Q,C,C;S;Q,I,C,A,C,S,G,S,C,K,C,O,E,U,I,E,C,C,C,I,E,C,C;K,C,C;C,A;A,I,W,G,a,U,W,I,S,O,E,I,E;I,I,C,G;Q,K,E,C;Q,I,E,W;Y,I,C,C,C,C,G,C,E,M,C,C,C,C,C;Y,O,C,C,C,C,C;S;Q,I,E,E;Q,G,E,E;K,E,C,E,C,E,C,E,C,A;I,O,C,G;Q,I,E,I,C,C,C;Q,O,E,I,C,C,C;Q,Q,E,I,C,C,C;K,E,O,M,K,U,I,C,C,C,M,C,Q,C,G,W;Q,O,I,C;K,C,A,E,C,C;I,S,I,C,C,E;Q,O,S,C,E;Y,O,I,C;gB,C;gB,C;a,C,C;S,C;K;I,S,I,C,E,E;Q,I,C,E,M,I,S,C,iC,C,C;Q,M,C,C,I;Y,I,C,G,C,E,C,I,C,C,G,E,C,C,C,G,C,G,C,C,Q,C,G,E,C,C,C,G,C,C,O,C,I,C,A,C,C,G,C,C,Q,C,C,I,C,C,I,C,C,C,E,C,C,A,G,C,C,I,C,I,C,A,C,C,G,C,C,I,C,C,E,E,C,C,C,C,C,C,I,E,O,C,C;Y,I,C,G,C,E,C,E,E,G;gB,E,C,C,C,G,C;gB,C,C,K;a,C;Y,O,E,C,C,C;gB,K,C,C;gB,K,C;oB,C,G,E,C;oB,M;gB,K,C;oB,C,C,K,E,C;oB,O;wB,K,E,E,C,C,C;wB,I,E,K;qB,C;gB,K,C;oB,C,C,K,E,C;oB,C,G,E,C,C,C,C;oB,E,G;A,yB;qB,C;oB,S;gB,K,C;oB,E,G,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;gB;oB,I,C,C,C,G,C,C,I,E,C,G,C,C,M,G,C,I,C,C,C,C,M,G,C,C,C,A,I,C,E,C,C,C,K,C,I,E,C,C,C,K,C,C,A,E;wB,C,G,C,C;wB,S;qB;oB,I,E,C,C,C,K,C,I,C,C,C,I,E,C,C,C,G,C,C,C,C,I,E,C,C,C,G,C,C,C,C,A,C,A,E;wB,C,C,K,G,E,C,C,C,C;wB,M;qB;oB,I,E,C,C,C,K,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,G,E,C;wB,M;qB;oB,I,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,C,G,C,I,C,E,C,C;wB,M;qB;oB,I,C,C,C,C,E,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;a;Y,E,G,I,C,I,C,O,E,C,C,C;S,C,O,C,E;Y,E,G;A,iB;gB,C;a,C;Y,C,G,C,C;S,Q;Y,C,G,C,G,C,C;S;Q,I,E,C,C,C,G,C,E,M,E,C,C,C,C;Q,O;Y,K,E,E,C,C,C,G,E,C,C,C,G,K,C;Y,I,E,I;S,C;K;C,A;AAiBH;;GAEG,CACH,IAAA,gBAAA,GAAA,aAAA,CAAA,WAAA;IAKE,SAAA,gBAAA,CAAoB,yBAAmD,EAAU,qBAA2C,EAA5H;QAAoB,IAAA,CAAA,yBAAyB,GAAzB,yBAAyB,CAA0B;QAAU,IAAA,CAAA,qBAAqB,GAArB,qBAAqB,CAAsB;QAJpH,IAAA,CAAA,sBAAsB,GA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A,CAAC;iB;a,C,C;S,C,C;KACH,CAAA;IACH,OAAA,gBAAC,CAAD;CAlEA,EAAA,AAAA,AAkEC;;;A;;A,wD,kB,C;AEhFD,+CAAgD;AAEhD,6DAA8D;AAC9D,mEAAoE;AAGpE,mCAA6C;AA1B7C;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,A,W;I,I,a,G,S,C,E,C,E;Q,a,G,M,C,c,I,C;Y,S,E,E;S,C,Y,K,I,S,C,E,C,E;Y,C,C,S,G,C,C;S,I,S,C,E,C,E;Y,I,I,C,I,C,C,I,M,C,S,C,c,C,I,C,C,E,C,C,E,C,C,C,C,G,C,C,C,C,C;S,C;Q,O,a,C,C,E,C,C,C;K,A;I,O,S,C,E,C,E;Q,I,O,C,K,U,I,C,K,I,E,M,I,S,C,sB,G,M,C,C,C,G,+B,C,C;Q,a,C,C,E,C,C,C;Q,S,E,G;Y,I,C,W,G,C,C;S;Q,C,C,S,G,C,K,I,G,M,C,M,C,C,C,G,C,E,C,S,G,C,C,S,E,I,E,E,C,A,C;K,C;C,E,A;A,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I,O,E,C;C,A;AAeH;;;;GAIG,CACH,IAAA,kBAAA,GAAA,aAAA,CAAA,SAAA,MAAA,EAAA;IAAuE,SAAA,CAAA,kBAAA,EAAA,MAAA,CAAA,CAAa;IAIlF,SAAA,kBAAA,CACE,qBAA2C,EAC3C,UAAyB,EACjB,oBAAyC,EAHnD;QAAA,IAAA,KAAA,GAKE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,qBAAqB,CAAC,IAAA,IAAA,AAG7B;QALS,KAAA,CAAA,oBAAoB,GAApB,oBAAoB,CAAqB;QAGjD,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAA,GAAA,0CAAoB,CAAA,CAAC,UAAU,CAAC,CAAC;QAChE,KAAI,CAAC,sBAAsB,GAAG,IAAI,CAAA,GAAA,gDAAuB,CAAA,CAAC,UAAU,CAAC,CAAC;Q,O,K,C;KACvE;IAED,kBAAA,CAAA,SAAA,CAAA,MAAM,GAAN,SAAO,YAAsC,EAAE,eAAuB,EAAtE;QAAA,IAAA,KAAA,GAAA,IAAA,AAMC;QALC,IAAM,SAAS,GAAG,IAAI,CAAA,GAAA,yBAAgB,CAAA,EAAU,AAAC;QACjD,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,SAAC,EAAmB,EAA/D;YAA4C,IAAA,EAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,CAAmB,EAAlB,UAAU,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,KAAK,GAAA,EAAA,CAAA,CAAA,CAAA,AAAlB;YAC1C,SAAS,CAAC,GAAG,CAAC,KAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,CAAC;SACrE,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;KACpE,CAAD;IAEA;;;;;;OAMG,CACH,kBAAA,CAAA,SAAA,CAAA,OAAO,GAAP,SACE,SAAgC,EAChC,UAAmC,EACnC,cAAsB,EAHxB;QAKE,IAAM,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,AAAC;QAEzD,OAAO,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAC7C,SAAS,EACT,UAAU,EACV,IAAI,CAAC,qBAAqB,EAC1B,aAAa,EACb,cAAc,CACf,CAAC;KACH,CAAD;IACF,OAAA,kBAAC,CAAD;CAAC,CA5CsE,CAAA,GAAA,4BAAa,CAAA,CAAA,AAAA,AA4CnF;;;AE1DD;;A,mD,a,C;AApBA;;;;;;;;;;;;;;GAcG,CAMH,8DAA2F;AAE3F;;;;GAIG,CACH,IAAA,aAAA,GAAA,aAAA,CAAA,WAAA;IACE,SAAA,aAAA,CAAsB,qBAA2C,EAAjE;QAAsB,IAAA,CAAA,qBAAqB,GAArB,qBAAqB,CAAsB;KAChE;IAcD,aAAA,CAAA,SAAA,CAAA,uBAAuB,GAAvB,WAAA;QACE,OAAO,IAAI,CAAC,qBAAqB,CAAC;KACnC,CAAD;IAEA,aAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjB,SAAkB,WAAmB,EAArC;QACE,IAAI,CAAC,qBAAqB,GAAG,CAAA,GAAA,gDAA0B,CAAA,CACrD,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAC/B,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAC/B;YACE,WAAW,EAAE,WAAW;YACxB,SAAS,EAAE,IAAI,CAAC,qBAAqB,CAAC,SAAS;YAC/C,IAAI,EAAE,IAAI,CAAC,qBAAqB,CAAC,IAAI;SACtC,CAAC,CAAC;KACN,CAAD;IACF,OAAA,aAAC,CAAD;CA9BA,EAAA,AAAA,AA8BC;;;A;;A,0D,oB,C;AErCD,mCAA6C;AApB7C;;;;;;;;;;;;;;GAcG,C,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I,O,E,C;C,A;AAQH;;;;;;GAMG,CACH,IAAA,oBAAA,GAAA,aAAA,CAAA,WAAA;IAME,SAAA,oBAAA,CAAoB,WAA0B,EAA9C;QAAoB,IAAA,CAAA,WAAW,GAAX,WAAW,CAAe;QALtC,IAAA,CAAA,wBAAwB,GAAG,IAAI,CAAA,GAAA,yBAAgB,CAAA,EAAK,CAAC;QAC7D,kDAAkD;QAClD,0EAA0E;QAClE,IAAA,CAAA,sBAAsB,GAAG,IAAI,CAAA,GAAA,yBAAgB,CAAA,EAAK,CAAC;KAET;IAElD,oBAAA,CAAA,SAAA,CAAA,MAAM,GAAN,SAAO,KAAa,EAAE,UAA4B,EAAE,QAAiB,EAAE,cAAsB,EAA7F;QAAA,IAAA,KAAA,GAAA,IAAA,AAMC;QALC,IAAM,YAAY,GAAG,IAAI,CAAC,wBAAwB,CAAC,YAAY,CAC7D,UAAU,EACV,WAAA;YAAM,OAAA,KAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAA;SAAA,CAC1D,AAAC;QACF,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAA,KAAA,CAAA,IAAZ,YAAY,CAAE,MAAM,CAAC,KAAK,CAAC,CAAC;KAC7B,CAAD;IAEA,oBAAA,CAAA,SAAA,CAAA,aAAa,GAAb,SAAc,YAAsC,EAAE,cAAsB,EAA5E;QAAA,IAAA,KAAA,GAAA,IAAA,AAgBC;QAfC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,SAAC,EAA6B,EAAzE;YAA4C,IAAA,EAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,CAA6B,EAA5B,UAAU,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,KAAK,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAA,AAA5B;YAC1C,IAAM,YAAY,GAAG,KAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,cAAc,CAAC,AAAC;YACzE,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAA,KAAA,CAAA,IAAZ,YAAY,CAAE,MAAM,CAAC,KAAK,CAAC,CAAC;YAC5B,IAAI,KAAK,GAAG,YAAY,AAAC;YACzB,IAAI,KAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,EAAE;gBACzD,4CAA4C;gBAC5C,oEAAoE;gBACpE,IAAM,QAAQ,GAAG,KAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAE,AAAC;gBACxE,KAAK,GAAG,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;aACvD;YAED,gDAAgD;YAChD,KAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,UAAU,EAAE,YAAY,EAAE,QAAQ,CAAC,CAAC;YACpE,KAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;SAChE,CAAC,CAAC;KACJ,CAAD;IAEA;;;OAGG,CACH,oBAAA,CAAA,SAAA,CAAA,OAAO,GAAP,WAAA;QACE,IAAM,eAAe,GAAG,IAAI,CAAC,wBAAwB,AAAC;QACtD,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAA,GAAA,yBAAgB,CAAA,EAAE,CAAC;QACvD,OAAO,eAAe,CAAC;KACxB,CAAD;IACF,OAAA,oBAAC,CAAD;CA3CA,EAAA,AAAA,AA2CC;;;A;;A,6C,O,C;A,sD,gB,C;AEvDD,gCAA0C;AAjB1C;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,A,W;I,I,a,G,S,C,E,C,E;Q,a,G,M,C,c,I,C;Y,S,E,E;S,C,Y,K,I,S,C,E,C,E;Y,C,C,S,G,C,C;S,I,S,C,E,C,E;Y,I,I,C,I,C,C,I,M,C,S,C,c,C,I,C,C,E,C,C,E,C,C,C,C,G,C,C,C,C,C;S,C;Q,O,a,C,C,E,C,C,C;K,A;I,O,S,C,E,C,E;Q,I,O,C,K,U,I,C,K,I,E,M,I,S,C,sB,G,M,C,C,C,G,+B,C,C;Q,a,C,C,E,C,C,C;Q,S,E,G;Y,I,C,W,G,C,C;S;Q,C,C,S,G,C,K,I,G,M,C,M,C,C,C,G,C,E,C,S,G,C,C,S,E,I,E,E,C,A,C;K,C;C,E,A;A,I,W,G,a,U,W,I,S,O,E,I,E;I,I,C,G;Q,K,E,C;Q,I,E,W;Y,I,C,C,C,C,G,C,E,M,C,C,C,C,C;Y,O,C,C,C,C,C;S;Q,I,E,E;Q,G,E,E;K,E,C,E,C,E,C,E,C,A;I,O,C,G;Q,I,E,I,C,C,C;Q,O,E,I,C,C,C;Q,Q,E,I,C,C,C;K,E,O,M,K,U,I,C,C,C,M,C,Q,C,G,W;Q,O,I,C;K,C,A,E,C,C;I,S,I,C,C,E;Q,O,S,C,E;Y,O,I,C;gB,C;gB,C;a,C,C;S,C;K;I,S,I,C,E,E;Q,I,C,E,M,I,S,C,iC,C,C;Q,M,C,C,I;Y,I,C,G,C,E,C,I,C,C,G,E,C,C,C,G,C,G,C,C,Q,C,G,E,C,C,C,G,C,C,O,C,I,C,A,C,C,G,C,C,Q,C,C,I,C,C,I,C,C,C,E,C,C,A,G,C,C,I,C,I,C,A,C,C,G,C,C,I,C,C,E,E,C,C,C,C,C,C,I,E,O,C,C;Y,I,C,G,C,E,C,E,E,G;gB,E,C,C,C,G,C;gB,C,C,K;a,C;Y,O,E,C,C,C;gB,K,C,C;gB,K,C;oB,C,G,E,C;oB,M;gB,K,C;oB,C,C,K,E,C;oB,O;wB,K,E,E,C,C,C;wB,I,E,K;qB,C;gB,K,C;oB,C,C,K,E,C;oB,C,G,E,C,C,C,C;oB,E,G;A,yB;qB,C;oB,S;gB,K,C;oB,E,G,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;gB;oB,I,C,C,C,G,C,C,I,E,C,G,C,C,M,G,C,I,C,C,C,C,M,G,C,C,C,A,I,C,E,C,C,C,K,C,I,E,C,C,C,K,C,C,A,E;wB,C,G,C,C;wB,S;qB;oB,I,E,C,C,C,K,C,I,C,C,C,I,E,C,C,C,G,C,C,C,C,I,E,C,C,C,G,C,C,C,C,A,C,A,E;wB,C,C,K,G,E,C,C,C,C;wB,M;qB;oB,I,E,C,C,C,K,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,G,E,C;wB,M;qB;oB,I,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,C,G,C,I,C,E,C,C;wB,M;qB;oB,I,C,C,C,C,E,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;a;Y,E,G,I,C,I,C,O,E,C,C,C;S,C,O,C,E;Y,E,G;A,iB;gB,C;a,C;Y,C,G,C,C;S,Q;Y,C,G,C,G,C,C;S;Q,I,E,C,C,C,G,C,E,M,E,C,C,C,C;Q,O;Y,K,E,E,C,C,C,G,E,C,C,C,G,K,C;Y,I,E,I;S,C;K;C,A;AASH,IAAA,OAAA,GAAA,aAAA,CAAA,WAAA;IAIE,SAAA,OAAA,CAAoB,KAAkC,EAAtD;QAAoB,IAAA,CAAA,KAAK,GAAL,KAAK,CAA6B;QAH9C,IAAA,CAAA,SAAS,GAAG,IAAI,GAAG,EAA2B,CAAC;QAC/C,IAAA,CAAA,OAAO,GAAG,IAAI,GAAG,EAAyB,CAAC;KAEO;IAE1D,OAAA,CAAA,SAAA,CAAA,GAAG,GAAH,SAAI,GAAY,EAAE,QAAuB,EAAzC;QACE,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAA,KAAA,CAAA,GAAR,QAAQ,GAAR,QAAQ,GAAK,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,AAAA,CAAC;QAC7B,OAAO,IAAI,CAAC,SAAS,CAAC,GAA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,C;a;S,C,C;KAE/B,CAAA;IAED,MAAA,CAAA,cAAA,CAAI,OAAA,CAAA,SAAA,EAAA,MAAI,EAAR;QAAA,GAAA,EAAA,WAAA;YACE,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;SAC5B;Q,U,E,K;Q,Y,E,I;KAAA,CAAA,CAAA;IACH,OAAA,OAAC,CAAD;CA5DA,EAAA,AAAA,AA4DC;AAED,IAAA,gBAAA,GAAA,aAAA,CAAA,SAAA,MAAA,EAAA;IAAiD,SAAA,CAAA,gBAAA,EAAA,MAAA,CAAA,CAA4C;IAC3F,SAAA,gBAAA,GAAA;QACE,OAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,CAAA,GAAA,qBAAc,CAAA,CAAC,IAArB,IAAA,CAAA;KACD;IACH,OAAA,gBAAC,CAAD;CAAC,CAJgD,OAAO,CAAA,AAAA,AAIvD;;;A;;A,6D,uB,C;AErED,yEAA0E;AAG1E,mCAA6C;AAvB7C;;;;;;;;;;;;;;GAcG,C,I,Q,G,a,U,Q,I,S,C,E;I,I,C,G,O,M,K,U,I,M,C,Q,E,C,G,C,I,C,C,C,C,E,C,G,C,A;I,I,C,E,O,C,C,I,C,C,C,C;I,I,C,I,O,C,C,M,K,Q,E,O;Q,I,E,W;Y,I,C,I,C,I,C,C,M,E,C,G,K,C,C;Y,O;gB,K,E,C,I,C,C,C,E,C;gB,I,E,C,C;a,C;S;K,C;I,M,I,S,C,C,G,yB,G,iC,C,C;C,A;A,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I,O,E,C;C,A;AA6BH;;;;;GAKG,CACH,IAAA,uBAAA,GAAA,aAAA,CAAA,WAAA;IAIE,SAAA,uBAAA,CAAoB,WAA0B,EAA9C;QAAoB,IAAA,CAAA,WAAW,GAAX,WAAW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A,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,CAAE;gBAA5B,IAAA,EAAA,GAAA,MAAA,CAAA,EAAA,CAAA,KAAA,EAAA,CAAA,CAAW,EAAV,GAAG,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,IAAI,GAAA,EAAA,CAAA,CAAA,CAAA,AAAV;gBACT,IAAM,mBAAmB,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,AAAC;gBACnD,mBAAmB,KAAA,IAAA,IAAnB,mBAAmB,KAAA,KAAA,CAAA,IAAnB,mBAAmB,CAAE,YAAY,CAAC,kBAAkB,CAAC,CAAC;aACvD;S,C,O,K,E;Y,G,G;gB,K,E,K;a,C;S,Q;Y,I;gB,I,E,I,C,E,C,I,I,C,E,G,E,C,M,C,A,E,E,C,I,C,E,C,C;a,Q;gB,I,G,E,M,G,C,K,C;a;S;QACD,OAAO,OAAO,CAAC;KAChB,CAAD;IACF,OAAA,uBAAC,CAAD;CAlIA,EAAA,AAAA,AAkIC;AAED,mFAAmF;AACnF,SAAS,kCAAkC,CAAI,GAAwB,EAAvE;IACE,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAuC,CAAC;CACxE;;;A;;A,2D,qB,C;AEvKD,8DAAqE;AACrE,wCAA0C;AAE1C,qEAAuG;AApBvG;;;;;;;;;;;;;;GAcG,C,I,Q,G,a,U,Q,I,S,C,E;I,I,C,G,O,M,K,U,I,M,C,Q,E,C,G,C,I,C,C,C,C,E,C,G,C,A;I,I,C,E,O,C,C,I,C,C,C,C;I,I,C,I,O,C,C,M,K,Q,E,O;Q,I,E,W;Y,I,C,I,C,I,C,C,M,E,C,G,K,C,C;Y,O;gB,K,E,C,I,C,C,C,E,C;gB,I,E,C,C;a,C;S;K,C;I,M,I,S,C,C,G,yB,G,iC,C,C;C,A;AAQH;;GAEG,CACH,IAAA,qBAAA,GAAA,aAAA,CAAA,WAAA;IAAA,SAAA,qBAAA,GAAA;QACmB,IAAA,CAAA,sBAAsB,GAAG,IAAI,GAAG,EAA2B,CAAC;KAoE9E;IAlEQ,qBAAA,CAAA,MAAM,GAAb,WAAO;QACL,OAAO,IAAI,qBAAqB,EAAE,CAAC;KACpC,CAAD;IAEA,qBAAA,CAAA,SAAA,CAAA,WAAW,GA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C,OAAO,CAAC,SAAA,EAAE,EAAhC;YACE,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;SACnD,CAAC,CAAC;KACJ,CAAD;IACF,OAAA,kBAAC,CAAD;CARA,EAAA,AAAA,AAQC;;;A;;A,wD,kB,C;AEfD,wCAA0C;AAG1C,4CAA8E;AAC9E,sDAAsF;AACtF,gCAA6G;AArB7G;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,S,O,E,U,E,C,E,S,E;I,S,K,C,K,E;Q,O,K,Y,C,G,K,G,I,C,C,S,O,E;Y,O,C,K,C,C;S,C,C;K;I,O,I,C,C,I,C,C,G,O,C,A,C,C,S,O,E,M,E;Q,S,S,C,K,E;Y,I;gB,I,C,S,C,I,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,Q,C,K,E;Y,I;gB,I,C,S,C,O,C,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,I,C,M,E;Y,M,C,I,G,O,C,M,C,K,C,G,K,C,M,C,K,C,C,I,C,S,E,Q,C,C;S;Q,I,C,A,C,S,G,S,C,K,C,O,E,U,I,E,C,C,C,I,E,C,C;K,C,C;C,A;A,I,W,G,a,U,W,I,S,O,E,I,E;I,I,C,G;Q,K,E,C;Q,I,E,W;Y,I,C,C,C,C,G,C,E,M,C,C,C,C,C;Y,O,C,C,C,C,C;S;Q,I,E,E;Q,G,E,E;K,E,C,E,C,E,C,E,C,A;I,O,C,G;Q,I,E,I,C,C,C;Q,O,E,I,C,C,C;Q,Q,E,I,C,C,C;K,E,O,M,K,U,I,C,C,C,M,C,Q,C,G,W;Q,O,I,C;K,C,A,E,C,C;I,S,I,C,C,E;Q,O,S,C,E;Y,O,I,C;gB,C;gB,C;a,C,C;S,C;K;I,S,I,C,E,E;Q,I,C,E,M,I,S,C,iC,C,C;Q,M,C,C,I;Y,I,C,G,C,E,C,I,C,C,G,E,C,C,C,G,C,G,C,C,Q,C,G,E,C,C,C,G,C,C,O,C,I,C,A,C,C,G,C,C,Q,C,C,I,C,C,I,C,C,C,E,C,C,A,G,C,C,I,C,I,C,A,C,C,G,C,C,I,C,C,E,E,C,C,C,C,C,C,I,E,O,C,C;Y,I,C,G,C,E,C,E,E,G;gB,E,C,C,C,G,C;gB,C,C,K;a,C;Y,O,E,C,C,C;gB,K,C,C;gB,K,C;oB,C,G,E,C;oB,M;gB,K,C;oB,C,C,K,E,C;oB,O;wB,K,E,E,C,C,C;wB,I,E,K;qB,C;gB,K,C;oB,C,C,K,E,C;oB,C,G,E,C,C,C,C;oB,E,G;A,yB;qB,C;oB,S;gB,K,C;oB,E,G,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;gB;oB,I,C,C,C,G,C,C,I,E,C,G,C,C,M,G,C,I,C,C,C,C,M,G,C,C,C,A,I,C,E,C,C,C,K,C,I,E,C,C,C,K,C,C,A,E;wB,C,G,C,C;wB,S;qB;oB,I,E,C,C,C,K,C,I,C,C,C,I,E,C,C,C,G,C,C,C,C,I,E,C,C,C,G,C,C,C,C,A,C,A,E;wB,C,C,K,G,E,C,C,C,C;wB,M;qB;oB,I,E,C,C,C,K,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,G,E,C;wB,M;qB;oB,I,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,C,G,C,I,C,E,C,C;wB,M;qB;oB,I,C,C,C,C,E,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;a;Y,E,G,I,C,I,C,O,E,C,C,C;S,C,O,C,E;Y,E,G;A,iB;gB,C;a,C;Y,C,G,C,C;S,Q;Y,C,G,C,G,C,C;S;Q,I,E,C,C,C,G,C,E,M,E,C,C,C,C;Q,O;Y,K,E,E,C,C,C,G,E,C,C,C,G,K,C;Y,I,E,I;S,C;K;C,A;A,I,M,G,a,U,M,I,S,C,E,C,E;I,I,C,G,O,M,K,U,I,C,C,M,C,Q,C,A;I,I,C,C,E,O,C,C;I,I,C,G,C,C,I,C,C,C,E,C,E,E,G,E,E,C,A;I,I;Q,M,A,C,C,K,K,C,I,C,E,G,C,C,I,C,A,C,C,G,C,C,I,E,C,C,I,C,E,C,I,C,C,C,K,C,C;K,C,O,K,E;Q,C,G;Y,K,E,K;S,C;K,Q;Q,I;Y,I,C,I,C,C,C,I,I,C,C,G,C,C,Q,C,C,A,E,C,C,I,C,C,C,C;S,Q;Y,I,C,E,M,C,C,K,C;S;K;I,O,E,C;C,A;A,I,a,G,a,U,a,I,S,E,E,I,E,I,E;I,I,I,I,S,C,M,K,C,E;Q,I,I,C,G,C,E,C,G,I,C,M,E,E,E,C,G,C,E,C,E,C,I,E,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C;YAC7B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;SAC/B;QACD,IAAI,MAAM,CAAC,WAAW,CAAC,SAAS,KAAK,WAAO,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACtF,IAAG,CAAC,IAAI,CAAC,IAAI,CACX,0DAAA,GAA2D,MAAM,CAAC,WAAW,CAAC,IAAI,GAAA,mCAAmC,CACtH,CAAC;YACF,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SAC3B;QACD,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;KAC5B,CAAD;IACF,OAAA,yBAAC,CAAD;CA1BA,EAAA,AAAA,AA0BC;;;A;;A,uD,iB,C;AEtDD,+CAAgD;AAEhD,6DAA8D;AAC9D,mEAAoE;AAzBpE;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,A,W;I,I,a,G,S,C,E,C,E;Q,a,G,M,C,c,I,C;Y,S,E,E;S,C,Y,K,I,S,C,E,C,E;Y,C,C,S,G,C,C;S,I,S,C,E,C,E;Y,I,I,C,I,C,C,I,M,C,S,C,c,C,I,C,C,E,C,C,E,C,C,C,C,G,C,C,C,C,C;S,C;Q,O,a,C,C,E,C,C,C;K,A;I,O,S,C,E,C,E;Q,I,O,C,K,U,I,C,K,I,E,M,I,S,C,sB,G,M,C,C,C,G,+B,C,C;Q,a,C,C,E,C,C,C;Q,S,E,G;Y,I,C,W,G,C,C;S;Q,C,C,S,G,C,K,I,G,M,C,M,C,C,C,G,C,E,C,S,G,C,C,S,E,I,E,E,C,A,C;K,C;C,E,A;AAeH;;;;GAIG,CACH,IAAA,iBAAA,GAAA,aAAA,CAAA,SAAA,MAAA,EAAA;IAAsE,SAAA,CAAA,iBAAA,EAAA,MAAA,CAAA,CAAa;IAIjF,SAAA,iBAAA,CACE,oBAA0C,EAC1C,UAAyB,EACjB,oBAAyC,EAHnD;QAAA,IAAA,KAAA,GAKE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,oBAAoB,CAAC,IAAA,IAAA,AAG5B;QALS,KAAA,CAAA,oBAAoB,GAApB,oBAAoB,CAAqB;QAGjD,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAA,GAAA,0CAAoB,CAAA,CAAC,UAAU,CAAC,CAAC;QAChE,KAAI,CAAC,sBAAsB,GAAG,IAAI,CAAA,GAAA,gDAAuB,CAAA,CAAC,UAAU,CAAC,CAAC;Q,O,K,C;KACvE;IAED,iBAAA,CAAA,SAAA,CAAA,MAAM,GAAN,SAAO,KAAa,EAAE,UAA4B,EAAE,OAAgB,EAAE,UAAkB,EAAxF;QACE,UAAU,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QACpE,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;KACzE,CAAD;IAEA;;;;;OAKG,CACH,iBAAA,CAAA,SAAA,CAAA,OAAO,GAAP,SACE,SAAgC,EAChC,UAAmC,EACnC,cAAsB,EAHxB;QAKE,IAAM,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,AAAC;QAEzD,OAAO,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAC7C,SAAS,EACT,UAAU,EACV,IAAI,CAAC,qBAAqB,EAC1B,aAAa,EACb,cAAc,CACf,CAAC;KACH,CAAD;IACF,OAAA,iBAAC,CAAD;CAAC,CAxCqE,CAAA,GAAA,4BAAa,CAAA,CAAA,AAAA,AAwClF;;;A;;A,qD,e,C;AE1DD,0CAA6C;AAO7C,gCAAmC;AAvBnC;;;;;;;;;;;;;;GAcG,C,I,S,G,a,U,S,I,S,O,E,U,E,C,E,S,E;I,S,K,C,K,E;Q,O,K,Y,C,G,K,G,I,C,C,S,O,E;Y,O,C,K,C,C;S,C,C;K;I,O,I,C,C,I,C,C,G,O,C,A,C,C,S,O,E,M,E;Q,S,S,C,K,E;Y,I;gB,I,C,S,C,I,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,Q,C,K,E;Y,I;gB,I,C,S,C,O,C,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,I,C,M,E;Y,M,C,I,G,O,C,M,C,K,C,G,K,C,M,C,K,C,C,I,C,S,E,Q,C,C;S;Q,I,C,A,C,S,G,S,C,K,C,O,E,U,I,E,C,C,C,I,E,C,C;K,C,C;C,A;A,I,W,G,a,U,W,I,S,O,E,I,E;I,I,C,G;Q,K,E,C;Q,I,E,W;Y,I,C,C,C,C,G,C,E,M,C,C,C,C,C;Y,O,C,C,C,C,C;S;Q,I,E,E;Q,G,E,E;K,E,C,E,C,E,C,E,C,A;I,O,C,G;Q,I,E,I,C,C,C;Q,O,E,I,C,C,C;Q,Q,E,I,C,C,C;K,E,O,M,K,U,I,C,C,C,M,C,Q,C,G,W;Q,O,I,C;K,C,A,E,C,C;I,S,I,C,C,E;Q,O,S,C,E;Y,O,I,C;gB,C;gB,C;a,C,C;S,C;K;I,S,I,C,E,E;Q,I,C,E,M,I,S,C,iC,C,C;Q,M,C,C,I;Y,I,C,G,C,E,C,I,C,C,G,E,C,C,C,G,C,G,C,C,Q,C,G,E,C,C,C,G,C,C,O,C,I,C,A,C,C,G,C,C,Q,C,C,I,C,C,I,C,C,C,E,C,C,A,G,C,C,I,C,I,C,A,C,C,G,C,C,I,C,C,E,E,C,C,C,C,C,C,I,E,O,C,C;Y,I,C,G,C,E,C,E,E,G;gB,E,C,C,C,G,C;gB,C,C,K;a,C;Y,O,E,C,C,C;gB,K,C,C;gB,K,C;oB,C,G,E,C;oB,M;gB,K,C;oB,C,C,K,E,C;oB,O;wB,K,E,E,C,C,C;wB,I,E,K;qB,C;gB,K,C;oB,C,C,K,E,C;oB,C,G,E,C,C,C,C;oB,E,G;A,yB;qB,C;oB,S;gB,K,C;oB,E,G,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;gB;oB,I,C,C,C,G,C,C,I,E,C,G,C,C,M,G,C,I,C,C,C,C,M,G,C,C,C,A,I,C,E,C,C,C,K,C,I,E,C,C,C,K,C,C,A,E;wB,C,G,C,C;wB,S;qB;oB,I,E,C,C,C,K,C,I,C,C,C,I,E,C,C,C,G,C,C,C,C,I,E,C,C,C,G,C,C,C,C,A,C,A,E;wB,C,C,K,G,E,C,C,C,C;wB,M;qB;oB,I,E,C,C,C,K,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,G,E,C;wB,M;qB;oB,I,C,I,C,C,K,G,C,C,C,C,E;wB,C,C,K,G,C,C,C,C,C;wB,C,C,G,C,I,C,E,C,C;wB,M;qB;oB,I,C,C,C,C,E,C,C,G,C,G,E,C;oB,C,C,I,C,G,E,C;oB,S;a;Y,E,G,I,C,I,C,O,E,C,C,C;S,C,O,C,E;Y,E,G;A,iB;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","sources":["../../../.npm/_npx/b4a9aa12c0cf34a6/node_modules/@parcel/runtime-browser-hmr/lib/runtime-cab85b124284de32.js","tracing.js","node_modules/@opentelemetry/sdk-trace-web/build/esm/index.js","node_modules/@opentelemetry/sdk-trace-web/src/index.ts","node_modules/@opentelemetry/sdk-trace-web/build/esm/WebTracerProvider.js","node_modules/@opentelemetry/sdk-trace-web/src/WebTracerProvider.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/index.js","node_modules/@opentelemetry/sdk-trace-base/src/index.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/Tracer.js","node_modules/@opentelemetry/sdk-trace-base/src/Tracer.ts","node_modules/@opentelemetry/api/build/esm/index.js","node_modules/@opentelemetry/api/src/index.ts","node_modules/@opentelemetry/api/build/esm/api/context.js","node_modules/@opentelemetry/api/src/api/context.ts","node_modules/@opentelemetry/api/build/esm/context/NoopContextManager.js","node_modules/@opentelemetry/api/src/context/NoopContextManager.ts","node_modules/@opentelemetry/api/build/esm/context/context.js","node_modules/@opentelemetry/api/src/context/context.ts","../../../.npm/_npx/b4a9aa12c0cf34a6/node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/@opentelemetry/api/build/esm/internal/global-utils.js","node_modules/@opentelemetry/api/src/internal/global-utils.ts","node_modules/@opentelemetry/api/build/esm/platform/browser/index.js","node_modules/@opentelemetry/api/src/platform/browser/index.ts","node_modules/@opentelemetry/api/build/esm/platform/browser/globalThis.js","node_modules/@opentelemetry/api/src/platform/browser/globalThis.ts","node_modules/@opentelemetry/api/build/esm/version.js","node_modules/@opentelemetry/api/src/version.ts","node_modules/@opentelemetry/api/build/esm/internal/semver.js","node_modules/@opentelemetry/api/src/internal/semver.ts","node_modules/@opentelemetry/api/build/esm/api/diag.js","node_modules/@opentelemetry/api/src/api/diag.ts","node_modules/@opentelemetry/api/build/esm/diag/ComponentLogger.js","node_modules/@opentelemetry/api/src/diag/ComponentLogger.ts","node_modules/@opentelemetry/api/build/esm/diag/internal/logLevelLogger.js","node_modules/@opentelemetry/api/src/diag/internal/logLevelLogger.ts","node_modules/@opentelemetry/api/build/esm/diag/types.js","node_modules/@opentelemetry/api/src/diag/types.ts","node_modules/@opentelemetry/api/build/esm/api/trace.js","node_modules/@opentelemetry/api/src/api/trace.ts","node_modules/@opentelemetry/api/build/esm/trace/ProxyTracerProvider.js","node_modules/@opentelemetry/api/src/trace/ProxyTracerProvider.ts","node_modules/@opentelemetry/api/build/esm/trace/ProxyTracer.js","node_modules/@opentelemetry/api/src/trace/ProxyTracer.ts","node_modules/@opentelemetry/api/build/esm/trace/NoopTracer.js","node_modules/@opentelemetry/api/src/trace/NoopTracer.ts","node_modules/@opentelemetry/api/build/esm/trace/context-utils.js","node_modules/@opentelemetry/api/src/trace/context-utils.ts","node_modules/@opentelemetry/api/build/esm/trace/NonRecordingSpan.js","node_modules/@opentelemetry/api/src/trace/NonRecordingSpan.ts","node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js","node_modules/@opentelemetry/api/src/trace/invalid-span-constants.ts","node_modules/@opentelemetry/api/build/esm/trace/trace_flags.js","node_modules/@opentelemetry/api/src/trace/trace_flags.ts","node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js","node_modules/@opentelemetry/api/src/trace/spancontext-utils.ts","node_modules/@opentelemetry/api/build/esm/trace/NoopTracerProvider.js","node_modules/@opentelemetry/api/src/trace/NoopTracerProvider.ts","node_modules/@opentelemetry/api/build/esm/api/propagation.js","node_modules/@opentelemetry/api/src/api/propagation.ts","node_modules/@opentelemetry/api/build/esm/propagation/NoopTextMapPropagator.js","node_modules/@opentelemetry/api/src/propagation/NoopTextMapPropagator.ts","node_modules/@opentelemetry/api/build/esm/propagation/TextMapPropagator.js","node_modules/@opentelemetry/api/src/propagation/TextMapPropagator.ts","node_modules/@opentelemetry/api/build/esm/baggage/context-helpers.js","node_modules/@opentelemetry/api/src/baggage/context-helpers.ts","node_modules/@opentelemetry/api/build/esm/baggage/utils.js","node_modules/@opentelemetry/api/src/baggage/utils.ts","node_modules/@opentelemetry/api/build/esm/baggage/internal/baggage-impl.js","node_modules/@opentelemetry/api/src/baggage/internal/baggage-impl.ts","node_modules/@opentelemetry/api/build/esm/baggage/internal/symbol.js","node_modules/@opentelemetry/api/src/baggage/internal/symbol.ts","node_modules/@opentelemetry/api/build/esm/baggage/types.js","node_modules/@opentelemetry/api/src/baggage/types.ts","node_modules/@opentelemetry/api/build/esm/common/Exception.js","node_modules/@opentelemetry/api/src/common/Exception.ts","node_modules/@opentelemetry/api/build/esm/common/Time.js","node_modules/@opentelemetry/api/src/common/Time.ts","node_modules/@opentelemetry/api/build/esm/common/Attributes.js","node_modules/@opentelemetry/api/src/common/Attributes.ts","node_modules/@opentelemetry/api/build/esm/diag/index.js","node_modules/@opentelemetry/api/src/diag/index.ts","node_modules/@opentelemetry/api/build/esm/diag/consoleLogger.js","node_modules/@opentelemetry/api/src/diag/consoleLogger.ts","node_modules/@opentelemetry/api/build/esm/trace/attributes.js","node_modules/@opentelemetry/api/src/trace/attributes.ts","node_modules/@opentelemetry/api/build/esm/trace/link.js","node_modules/@opentelemetry/api/src/trace/link.ts","node_modules/@opentelemetry/api/build/esm/trace/Sampler.js","node_modules/@opentelemetry/api/src/trace/Sampler.ts","node_modules/@opentelemetry/api/build/esm/trace/SamplingResult.js","node_modules/@opentelemetry/api/src/trace/SamplingResult.ts","node_modules/@opentelemetry/api/build/esm/trace/span_context.js","node_modules/@opentelemetry/api/src/trace/span_context.ts","node_modules/@opentelemetry/api/build/esm/trace/span_kind.js","node_modules/@opentelemetry/api/src/trace/span_kind.ts","node_modules/@opentelemetry/api/build/esm/trace/span.js","node_modules/@opentelemetry/api/src/trace/span.ts","node_modules/@opentelemetry/api/build/esm/trace/SpanOptions.js","node_modules/@opentelemetry/api/src/trace/SpanOptions.ts","node_modules/@opentelemetry/api/build/esm/trace/status.js","node_modules/@opentelemetry/api/src/trace/status.ts","node_modules/@opentelemetry/api/build/esm/trace/trace_state.js","node_modules/@opentelemetry/api/src/trace/trace_state.ts","node_modules/@opentelemetry/api/build/esm/trace/internal/utils.js","node_modules/@opentelemetry/api/src/trace/internal/utils.ts","node_modules/@opentelemetry/api/build/esm/trace/internal/tracestate-impl.js","node_modules/@opentelemetry/api/src/trace/internal/tracestate-impl.ts","node_modules/@opentelemetry/api/build/esm/trace/internal/tracestate-validators.js","node_modules/@opentelemetry/api/src/trace/internal/tracestate-validators.ts","node_modules/@opentelemetry/api/build/esm/trace/tracer_provider.js","node_modules/@opentelemetry/api/src/trace/tracer_provider.ts","node_modules/@opentelemetry/api/build/esm/trace/tracer.js","node_modules/@opentelemetry/api/src/trace/tracer.ts","node_modules/@opentelemetry/api/build/esm/trace/tracer_options.js","node_modules/@opentelemetry/api/src/trace/tracer_options.ts","node_modules/@opentelemetry/api/build/esm/context/types.js","node_modules/@opentelemetry/api/src/context/types.ts","node_modules/@opentelemetry/core/build/esm/index.js","node_modules/@opentelemetry/core/src/index.ts","node_modules/@opentelemetry/core/build/esm/baggage/utils.js","node_modules/@opentelemetry/core/src/baggage/utils.ts","node_modules/@opentelemetry/core/build/esm/baggage/constants.js","node_modules/@opentelemetry/core/src/baggage/constants.ts","node_modules/@opentelemetry/core/build/esm/baggage/propagation/W3CBaggagePropagator.js","node_modules/@opentelemetry/core/src/baggage/propagation/W3CBaggagePropagator.ts","node_modules/@opentelemetry/core/build/esm/trace/suppress-tracing.js","node_modules/@opentelemetry/core/src/trace/suppress-tracing.ts","node_modules/@opentelemetry/core/build/esm/common/attributes.js","node_modules/@opentelemetry/core/src/common/attributes.ts","node_modules/@opentelemetry/core/build/esm/common/global-error-handler.js","node_modules/@opentelemetry/core/src/common/global-error-handler.ts","node_modules/@opentelemetry/core/build/esm/common/logging-error-handler.js","node_modules/@opentelemetry/core/src/common/logging-error-handler.ts","node_modules/@opentelemetry/core/build/esm/common/time.js","node_modules/@opentelemetry/core/src/common/time.ts","node_modules/@opentelemetry/core/build/esm/platform/browser/index.js","node_modules/@opentelemetry/core/src/platform/browser/index.ts","node_modules/@opentelemetry/core/build/esm/platform/browser/environment.js","node_modules/@opentelemetry/core/src/platform/browser/environment.ts","node_modules/@opentelemetry/core/build/esm/utils/environment.js","node_modules/@opentelemetry/core/src/utils/environment.ts","node_modules/@opentelemetry/core/build/esm/utils/sampling.js","node_modules/@opentelemetry/core/src/utils/sampling.ts","node_modules/@opentelemetry/core/build/esm/platform/browser/globalThis.js","node_modules/@opentelemetry/core/src/platform/browser/globalThis.ts","node_modules/process/browser.js","node_modules/@opentelemetry/core/build/esm/platform/browser/hex-to-base64.js","node_modules/@opentelemetry/core/src/platform/browser/hex-to-base64.ts","node_modules/@opentelemetry/core/build/esm/platform/browser/RandomIdGenerator.js","node_modules/@opentelemetry/core/src/platform/browser/RandomIdGenerator.ts","node_modules/@opentelemetry/core/build/esm/platform/browser/performance.js","node_modules/@opentelemetry/core/src/platform/browser/performance.ts","node_modules/@opentelemetry/core/build/esm/platform/browser/sdk-info.js","node_modules/@opentelemetry/core/src/platform/browser/sdk-info.ts","node_modules/@opentelemetry/core/build/esm/version.js","node_modules/@opentelemetry/core/src/version.ts","node_modules/@opentelemetry/semantic-conventions/build/esm/index.js","node_modules/@opentelemetry/semantic-conventions/src/index.ts","node_modules/@opentelemetry/semantic-conventions/build/esm/trace/index.js","node_modules/@opentelemetry/semantic-conventions/src/trace/index.ts","node_modules/@opentelemetry/semantic-conventions/build/esm/trace/SemanticAttributes.js","node_modules/@opentelemetry/semantic-conventions/src/trace/SemanticAttributes.ts","node_modules/@opentelemetry/semantic-conventions/build/esm/resource/index.js","node_modules/@opentelemetry/semantic-conventions/src/resource/index.ts","node_modules/@opentelemetry/semantic-conventions/build/esm/resource/SemanticResourceAttributes.js","node_modules/@opentelemetry/semantic-conventions/src/resource/SemanticResourceAttributes.ts","node_modules/@opentelemetry/core/build/esm/platform/browser/timer-util.js","node_modules/@opentelemetry/core/src/platform/browser/timer-util.ts","node_modules/@opentelemetry/core/build/esm/common/types.js","node_modules/@opentelemetry/core/src/common/types.ts","node_modules/@opentelemetry/core/build/esm/ExportResult.js","node_modules/@opentelemetry/core/src/ExportResult.ts","node_modules/@opentelemetry/core/build/esm/propagation/composite.js","node_modules/@opentelemetry/core/src/propagation/composite.ts","node_modules/@opentelemetry/core/build/esm/trace/W3CTraceContextPropagator.js","node_modules/@opentelemetry/core/src/trace/W3CTraceContextPropagator.ts","node_modules/@opentelemetry/core/build/esm/trace/TraceState.js","node_modules/@opentelemetry/core/src/trace/TraceState.ts","node_modules/@opentelemetry/core/build/esm/internal/validators.js","node_modules/@opentelemetry/core/src/internal/validators.ts","node_modules/@opentelemetry/core/build/esm/trace/IdGenerator.js","node_modules/@opentelemetry/core/src/trace/IdGenerator.ts","node_modules/@opentelemetry/core/build/esm/trace/rpc-metadata.js","node_modules/@opentelemetry/core/src/trace/rpc-metadata.ts","node_modules/@opentelemetry/core/build/esm/trace/sampler/AlwaysOffSampler.js","node_modules/@opentelemetry/core/src/trace/sampler/AlwaysOffSampler.ts","node_modules/@opentelemetry/core/build/esm/trace/sampler/AlwaysOnSampler.js","node_modules/@opentelemetry/core/src/trace/sampler/AlwaysOnSampler.ts","node_modules/@opentelemetry/core/build/esm/trace/sampler/ParentBasedSampler.js","node_modules/@opentelemetry/core/src/trace/sampler/ParentBasedSampler.ts","node_modules/@opentelemetry/core/build/esm/trace/sampler/TraceIdRatioBasedSampler.js","node_modules/@opentelemetry/core/src/trace/sampler/TraceIdRatioBasedSampler.ts","node_modules/@opentelemetry/core/build/esm/utils/merge.js","node_modules/@opentelemetry/core/src/utils/merge.ts","node_modules/@opentelemetry/core/build/esm/utils/lodash.merge.js","node_modules/@opentelemetry/core/src/utils/lodash.merge.ts","node_modules/@opentelemetry/core/build/esm/utils/url.js","node_modules/@opentelemetry/core/src/utils/url.ts","node_modules/@opentelemetry/core/build/esm/utils/wrap.js","node_modules/@opentelemetry/core/src/utils/wrap.ts","node_modules/@opentelemetry/core/build/esm/utils/callback.js","node_modules/@opentelemetry/core/src/utils/callback.ts","node_modules/@opentelemetry/core/build/esm/utils/promise.js","node_modules/@opentelemetry/core/src/utils/promise.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/Span.js","node_modules/@opentelemetry/sdk-trace-base/src/Span.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/enums.js","node_modules/@opentelemetry/sdk-trace-base/src/enums.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/utility.js","node_modules/@opentelemetry/sdk-trace-base/src/utility.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/config.js","node_modules/@opentelemetry/sdk-trace-base/src/config.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/sampler/AlwaysOffSampler.js","node_modules/@opentelemetry/sdk-trace-base/src/sampler/AlwaysOffSampler.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/Sampler.js","node_modules/@opentelemetry/sdk-trace-base/src/Sampler.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/sampler/AlwaysOnSampler.js","node_modules/@opentelemetry/sdk-trace-base/src/sampler/AlwaysOnSampler.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/sampler/ParentBasedSampler.js","node_modules/@opentelemetry/sdk-trace-base/src/sampler/ParentBasedSampler.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/sampler/TraceIdRatioBasedSampler.js","node_modules/@opentelemetry/sdk-trace-base/src/sampler/TraceIdRatioBasedSampler.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/platform/browser/index.js","node_modules/@opentelemetry/sdk-trace-base/src/platform/browser/index.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/platform/browser/export/BatchSpanProcessor.js","node_modules/@opentelemetry/sdk-trace-base/src/platform/browser/export/BatchSpanProcessor.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/export/BatchSpanProcessorBase.js","node_modules/@opentelemetry/sdk-trace-base/src/export/BatchSpanProcessorBase.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/platform/browser/RandomIdGenerator.js","node_modules/@opentelemetry/sdk-trace-base/src/platform/browser/RandomIdGenerator.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/BasicTracerProvider.js","node_modules/@opentelemetry/sdk-trace-base/src/BasicTracerProvider.ts","node_modules/@opentelemetry/resources/build/esm/index.js","node_modules/@opentelemetry/resources/src/index.ts","node_modules/@opentelemetry/resources/build/esm/Resource.js","node_modules/@opentelemetry/resources/src/Resource.ts","node_modules/@opentelemetry/resources/build/esm/platform/browser/index.js","node_modules/@opentelemetry/resources/src/platform/browser/index.ts","node_modules/@opentelemetry/resources/build/esm/platform/browser/default-service-name.js","node_modules/@opentelemetry/resources/src/platform/browser/default-service-name.ts","node_modules/@opentelemetry/resources/build/esm/platform/browser/detect-resources.js","node_modules/@opentelemetry/resources/src/platform/browser/detect-resources.ts","node_modules/@opentelemetry/resources/build/esm/platform/browser/HostDetector.js","node_modules/@opentelemetry/resources/src/platform/browser/HostDetector.ts","node_modules/@opentelemetry/resources/build/esm/detectors/NoopDetector.js","node_modules/@opentelemetry/resources/src/detectors/NoopDetector.ts","node_modules/@opentelemetry/resources/build/esm/platform/browser/OSDetector.js","node_modules/@opentelemetry/resources/src/platform/browser/OSDetector.ts","node_modules/@opentelemetry/resources/build/esm/types.js","node_modules/@opentelemetry/resources/src/types.ts","node_modules/@opentelemetry/resources/build/esm/config.js","node_modules/@opentelemetry/resources/src/config.ts","node_modules/@opentelemetry/resources/build/esm/detectors/index.js","node_modules/@opentelemetry/resources/src/detectors/index.ts","node_modules/@opentelemetry/resources/build/esm/detectors/BrowserDetector.js","node_modules/@opentelemetry/resources/src/detectors/BrowserDetector.ts","node_modules/@opentelemetry/resources/build/esm/detectors/EnvDetector.js","node_modules/@opentelemetry/resources/src/detectors/EnvDetector.ts","node_modules/@opentelemetry/resources/build/esm/detectors/ProcessDetector.js","node_modules/@opentelemetry/resources/src/detectors/ProcessDetector.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/MultiSpanProcessor.js","node_modules/@opentelemetry/sdk-trace-base/src/MultiSpanProcessor.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/export/NoopSpanProcessor.js","node_modules/@opentelemetry/sdk-trace-base/src/export/NoopSpanProcessor.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/export/ConsoleSpanExporter.js","node_modules/@opentelemetry/sdk-trace-base/src/export/ConsoleSpanExporter.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/export/InMemorySpanExporter.js","node_modules/@opentelemetry/sdk-trace-base/src/export/InMemorySpanExporter.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/export/ReadableSpan.js","node_modules/@opentelemetry/sdk-trace-base/src/export/ReadableSpan.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/export/SimpleSpanProcessor.js","node_modules/@opentelemetry/sdk-trace-base/src/export/SimpleSpanProcessor.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/export/SpanExporter.js","node_modules/@opentelemetry/sdk-trace-base/src/export/SpanExporter.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/SpanProcessor.js","node_modules/@opentelemetry/sdk-trace-base/src/SpanProcessor.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/TimedEvent.js","node_modules/@opentelemetry/sdk-trace-base/src/TimedEvent.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/types.js","node_modules/@opentelemetry/sdk-trace-base/src/types.ts","node_modules/@opentelemetry/sdk-trace-base/build/esm/IdGenerator.js","node_modules/@opentelemetry/sdk-trace-base/src/IdGenerator.ts","node_modules/@opentelemetry/sdk-trace-web/build/esm/StackContextManager.js","node_modules/@opentelemetry/sdk-trace-web/src/StackContextManager.ts","node_modules/@opentelemetry/sdk-trace-web/build/esm/enums/PerformanceTimingNames.js","node_modules/@opentelemetry/sdk-trace-web/src/enums/PerformanceTimingNames.ts","node_modules/@opentelemetry/sdk-trace-web/build/esm/types.js","node_modules/@opentelemetry/sdk-trace-web/src/types.ts","node_modules/@opentelemetry/sdk-trace-web/build/esm/utils.js","node_modules/@opentelemetry/sdk-trace-web/src/utils.ts","node_modules/@opentelemetry/auto-instrumentations-web/build/esm/index.js","node_modules/@opentelemetry/auto-instrumentations-web/src/index.ts","node_modules/@opentelemetry/auto-instrumentations-web/build/esm/utils.js","node_modules/@opentelemetry/auto-instrumentations-web/src/utils.ts","node_modules/@opentelemetry/instrumentation-document-load/build/esm/index.js","node_modules/@opentelemetry/instrumentation-document-load/src/index.ts","node_modules/@opentelemetry/instrumentation-document-load/build/esm/instrumentation.js","node_modules/@opentelemetry/instrumentation-document-load/src/instrumentation.ts","node_modules/@opentelemetry/instrumentation/build/esm/index.js","node_modules/@opentelemetry/instrumentation/src/index.ts","node_modules/@opentelemetry/instrumentation/build/esm/autoLoader.js","node_modules/@opentelemetry/instrumentation/src/autoLoader.ts","node_modules/@opentelemetry/instrumentation/node_modules/@opentelemetry/api-metrics/build/esm/index.js","node_modules/@opentelemetry/instrumentation/node_modules/@opentelemetry/api-metrics/src/index.ts","node_modules/@opentelemetry/instrumentation/node_modules/@opentelemetry/api-metrics/build/esm/api/metrics.js","node_modules/@opentelemetry/instrumentation/node_modules/@opentelemetry/api-metrics/src/api/metrics.ts","node_modules/@opentelemetry/instrumentation/node_modules/@opentelemetry/api-metrics/build/esm/NoopMeterProvider.js","node_modules/@opentelemetry/instrumentation/node_modules/@opentelemetry/api-metrics/src/NoopMeterProvider.ts","node_modules/@opentelemetry/instrumentation/node_modules/@opentelemetry/api-metrics/build/esm/NoopMeter.js","node_modules/@opentelemetry/instrumentation/node_modules/@opentelemetry/api-metrics/src/NoopMeter.ts","node_modules/@opentelemetry/instrumentation/node_modules/@opentelemetry/api-metrics/build/esm/api/global-utils.js","node_modules/@opentelemetry/instrumentation/node_modules/@opentelemetry/api-metrics/src/api/global-utils.ts","node_modules/@opentelemetry/instrumentation/node_modules/@opentelemetry/api-metrics/build/esm/platform/browser/index.js","node_modules/@opentelemetry/instrumentation/node_modules/@opentelemetry/api-metrics/src/platform/browser/index.ts","node_modules/@opentelemetry/instrumentation/node_modules/@opentelemetry/api-metrics/build/esm/platform/browser/globalThis.js","node_modules/@opentelemetry/instrumentation/node_modules/@opentelemetry/api-metrics/src/platform/browser/globalThis.ts","node_modules/@opentelemetry/instrumentation/node_modules/@opentelemetry/api-metrics/build/esm/types/Meter.js","node_modules/@opentelemetry/instrumentation/node_modules/@opentelemetry/api-metrics/src/types/Meter.ts","node_modules/@opentelemetry/instrumentation/node_modules/@opentelemetry/api-metrics/build/esm/types/MeterProvider.js","node_modules/@opentelemetry/instrumentation/node_modules/@opentelemetry/api-metrics/src/types/MeterProvider.ts","node_modules/@opentelemetry/instrumentation/node_modules/@opentelemetry/api-metrics/build/esm/types/Metric.js","node_modules/@opentelemetry/instrumentation/node_modules/@opentelemetry/api-metrics/src/types/Metric.ts","node_modules/@opentelemetry/instrumentation/node_modules/@opentelemetry/api-metrics/build/esm/types/ObservableResult.js","node_modules/@opentelemetry/instrumentation/node_modules/@opentelemetry/api-metrics/src/types/ObservableResult.ts","node_modules/@opentelemetry/instrumentation/build/esm/autoLoaderUtils.js","node_modules/@opentelemetry/instrumentation/src/autoLoaderUtils.ts","node_modules/@opentelemetry/instrumentation/build/esm/platform/browser/index.js","node_modules/@opentelemetry/instrumentation/src/platform/browser/index.ts","node_modules/@opentelemetry/instrumentation/build/esm/platform/browser/instrumentation.js","node_modules/@opentelemetry/instrumentation/src/platform/browser/instrumentation.ts","node_modules/@opentelemetry/instrumentation/build/esm/instrumentation.js","node_modules/@opentelemetry/instrumentation/src/instrumentation.ts","node_modules/shimmer/index.js","node_modules/@opentelemetry/instrumentation/build/esm/types.js","node_modules/@opentelemetry/instrumentation/src/types.ts","node_modules/@opentelemetry/instrumentation/build/esm/types_internal.js","node_modules/@opentelemetry/instrumentation/src/types_internal.ts","node_modules/@opentelemetry/instrumentation/build/esm/utils.js","node_modules/@opentelemetry/instrumentation/src/utils.ts","node_modules/@opentelemetry/instrumentation-document-load/build/esm/enums/AttributeNames.js","node_modules/@opentelemetry/instrumentation-document-load/src/enums/AttributeNames.ts","node_modules/@opentelemetry/instrumentation-document-load/build/esm/version.js","node_modules/@opentelemetry/instrumentation-document-load/src/version.ts","node_modules/@opentelemetry/instrumentation-document-load/build/esm/utils.js","node_modules/@opentelemetry/instrumentation-document-load/src/utils.ts","node_modules/@opentelemetry/instrumentation-document-load/build/esm/enums/EventNames.js","node_modules/@opentelemetry/instrumentation-document-load/src/enums/EventNames.ts","node_modules/@opentelemetry/instrumentation-fetch/build/esm/index.js","node_modules/@opentelemetry/instrumentation-fetch/src/index.ts","node_modules/@opentelemetry/instrumentation-fetch/build/esm/fetch.js","node_modules/@opentelemetry/instrumentation-fetch/src/fetch.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/index.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/index.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/baggage/utils.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/baggage/utils.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/baggage/constants.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/baggage/constants.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/baggage/propagation/W3CBaggagePropagator.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/baggage/propagation/W3CBaggagePropagator.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/trace/suppress-tracing.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/trace/suppress-tracing.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/common/attributes.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/common/attributes.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/common/global-error-handler.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/common/global-error-handler.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/common/logging-error-handler.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/common/logging-error-handler.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/common/time.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/common/time.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/platform/browser/index.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/platform/browser/index.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/platform/browser/environment.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/platform/browser/environment.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/utils/environment.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/utils/environment.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/utils/sampling.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/utils/sampling.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/platform/browser/globalThis.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/platform/browser/globalThis.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/platform/browser/hex-to-base64.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/platform/browser/hex-to-base64.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/platform/browser/RandomIdGenerator.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/platform/browser/RandomIdGenerator.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/platform/browser/performance.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/platform/browser/performance.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/platform/browser/sdk-info.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/platform/browser/sdk-info.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/version.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/version.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/semantic-conventions/build/esm/index.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/semantic-conventions/src/index.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/semantic-conventions/build/esm/trace/index.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/semantic-conventions/src/trace/index.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/semantic-conventions/build/esm/trace/SemanticAttributes.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/semantic-conventions/src/trace/SemanticAttributes.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/semantic-conventions/build/esm/resource/index.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/semantic-conventions/src/resource/index.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/semantic-conventions/build/esm/resource/SemanticResourceAttributes.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/semantic-conventions/src/resource/SemanticResourceAttributes.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/platform/browser/timer-util.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/platform/browser/timer-util.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/common/types.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/common/types.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/ExportResult.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/ExportResult.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/propagation/composite.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/propagation/composite.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/trace/W3CTraceContextPropagator.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/trace/W3CTraceContextPropagator.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/trace/TraceState.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/trace/TraceState.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/internal/validators.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/internal/validators.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/trace/IdGenerator.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/trace/IdGenerator.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/trace/rpc-metadata.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/trace/rpc-metadata.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/trace/sampler/AlwaysOffSampler.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/trace/sampler/AlwaysOffSampler.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/trace/sampler/AlwaysOnSampler.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/trace/sampler/AlwaysOnSampler.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/trace/sampler/ParentBasedSampler.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/trace/sampler/ParentBasedSampler.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/trace/sampler/TraceIdRatioBasedSampler.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/trace/sampler/TraceIdRatioBasedSampler.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/utils/merge.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/utils/merge.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/utils/lodash.merge.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/utils/lodash.merge.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/utils/url.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/utils/url.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/utils/wrap.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/utils/wrap.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/utils/callback.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/utils/callback.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/build/esm/utils/promise.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/utils/promise.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-web/build/esm/index.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-web/src/index.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-web/build/esm/WebTracerProvider.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-web/src/WebTracerProvider.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/index.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/src/index.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/Tracer.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/src/Tracer.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/Span.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/src/Span.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/enums.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/src/enums.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/utility.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/src/utility.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/config.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/src/config.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/BasicTracerProvider.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/src/BasicTracerProvider.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/build/esm/index.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/src/index.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/build/esm/Resource.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/src/Resource.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/build/esm/platform/browser/index.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/src/platform/browser/index.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/build/esm/platform/browser/default-service-name.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/src/platform/browser/default-service-name.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/build/esm/platform/browser/detect-resources.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/src/platform/browser/detect-resources.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/build/esm/platform/browser/HostDetector.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/src/platform/browser/HostDetector.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/build/esm/detectors/NoopDetector.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/src/detectors/NoopDetector.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/build/esm/platform/browser/OSDetector.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/src/platform/browser/OSDetector.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/build/esm/types.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/src/types.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/build/esm/config.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/src/config.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/build/esm/detectors/index.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/src/detectors/index.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/build/esm/detectors/BrowserDetector.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/src/detectors/BrowserDetector.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/build/esm/detectors/EnvDetector.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/src/detectors/EnvDetector.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/build/esm/detectors/ProcessDetector.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/resources/src/detectors/ProcessDetector.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/MultiSpanProcessor.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/src/MultiSpanProcessor.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/NoopSpanProcessor.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/src/export/NoopSpanProcessor.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/platform/browser/index.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/src/platform/browser/index.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/platform/browser/export/BatchSpanProcessor.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/src/platform/browser/export/BatchSpanProcessor.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/BatchSpanProcessorBase.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/src/export/BatchSpanProcessorBase.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/ConsoleSpanExporter.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/src/export/ConsoleSpanExporter.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/InMemorySpanExporter.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/src/export/InMemorySpanExporter.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/ReadableSpan.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/src/export/ReadableSpan.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/SimpleSpanProcessor.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/src/export/SimpleSpanProcessor.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/SpanExporter.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/src/export/SpanExporter.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/SpanProcessor.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/src/SpanProcessor.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/TimedEvent.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/src/TimedEvent.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/build/esm/types.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-base/src/types.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-web/build/esm/StackContextManager.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-web/src/StackContextManager.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-web/build/esm/enums/PerformanceTimingNames.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-web/src/enums/PerformanceTimingNames.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-web/build/esm/types.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-web/src/types.ts","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-web/build/esm/utils.js","node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-web/src/utils.ts","node_modules/@opentelemetry/instrumentation-fetch/build/esm/enums/AttributeNames.js","node_modules/@opentelemetry/instrumentation-fetch/src/enums/AttributeNames.ts","node_modules/@opentelemetry/instrumentation-fetch/build/esm/version.js","node_modules/@opentelemetry/instrumentation-fetch/src/version.ts","node_modules/@opentelemetry/instrumentation-user-interaction/build/esm/index.js","node_modules/@opentelemetry/instrumentation-user-interaction/src/index.ts","node_modules/@opentelemetry/instrumentation-user-interaction/build/esm/instrumentation.js","node_modules/@opentelemetry/instrumentation-user-interaction/src/instrumentation.ts","node_modules/@opentelemetry/instrumentation-user-interaction/build/esm/enums/AttributeNames.js","node_modules/@opentelemetry/instrumentation-user-interaction/src/enums/AttributeNames.ts","node_modules/@opentelemetry/instrumentation-user-interaction/build/esm/version.js","node_modules/@opentelemetry/instrumentation-user-interaction/src/version.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/build/esm/index.js","node_modules/@opentelemetry/instrumentation-xml-http-request/src/index.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/build/esm/xhr.js","node_modules/@opentelemetry/instrumentation-xml-http-request/src/xhr.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/index.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/index.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/baggage/utils.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/baggage/utils.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/baggage/constants.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/baggage/constants.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/baggage/propagation/W3CBaggagePropagator.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/baggage/propagation/W3CBaggagePropagator.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/trace/suppress-tracing.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/trace/suppress-tracing.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/common/attributes.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/common/attributes.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/common/global-error-handler.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/common/global-error-handler.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/common/logging-error-handler.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/common/logging-error-handler.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/common/time.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/common/time.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/platform/browser/index.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/platform/browser/index.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/platform/browser/environment.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/platform/browser/environment.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/utils/environment.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/utils/environment.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/utils/sampling.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/utils/sampling.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/platform/browser/globalThis.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/platform/browser/globalThis.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/platform/browser/hex-to-base64.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/platform/browser/hex-to-base64.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/platform/browser/RandomIdGenerator.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/platform/browser/RandomIdGenerator.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/platform/browser/performance.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/platform/browser/performance.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/platform/browser/sdk-info.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/platform/browser/sdk-info.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/version.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/version.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/semantic-conventions/build/esm/index.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/semantic-conventions/src/index.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/semantic-conventions/build/esm/trace/index.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/semantic-conventions/src/trace/index.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/semantic-conventions/build/esm/trace/SemanticAttributes.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/semantic-conventions/src/trace/SemanticAttributes.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/semantic-conventions/build/esm/resource/index.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/semantic-conventions/src/resource/index.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/semantic-conventions/build/esm/resource/SemanticResourceAttributes.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/semantic-conventions/src/resource/SemanticResourceAttributes.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/platform/browser/timer-util.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/platform/browser/timer-util.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/common/types.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/common/types.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/ExportResult.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/ExportResult.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/propagation/composite.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/propagation/composite.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/trace/W3CTraceContextPropagator.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/trace/W3CTraceContextPropagator.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/trace/TraceState.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/trace/TraceState.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/internal/validators.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/internal/validators.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/trace/IdGenerator.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/trace/IdGenerator.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/trace/rpc-metadata.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/trace/rpc-metadata.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/trace/sampler/AlwaysOffSampler.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/trace/sampler/AlwaysOffSampler.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/trace/sampler/AlwaysOnSampler.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/trace/sampler/AlwaysOnSampler.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/trace/sampler/ParentBasedSampler.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/trace/sampler/ParentBasedSampler.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/trace/sampler/TraceIdRatioBasedSampler.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/trace/sampler/TraceIdRatioBasedSampler.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/utils/merge.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/utils/merge.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/utils/lodash.merge.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/utils/lodash.merge.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/utils/url.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/utils/url.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/utils/wrap.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/utils/wrap.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/utils/callback.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/utils/callback.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/build/esm/utils/promise.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/utils/promise.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-web/build/esm/index.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-web/src/index.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-web/build/esm/WebTracerProvider.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-web/src/WebTracerProvider.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/index.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/src/index.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/Tracer.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/src/Tracer.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/Span.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/src/Span.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/enums.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/src/enums.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/utility.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/src/utility.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/config.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/src/config.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/BasicTracerProvider.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/src/BasicTracerProvider.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/build/esm/index.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/src/index.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/build/esm/Resource.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/src/Resource.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/build/esm/platform/browser/index.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/src/platform/browser/index.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/build/esm/platform/browser/default-service-name.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/src/platform/browser/default-service-name.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/build/esm/platform/browser/detect-resources.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/src/platform/browser/detect-resources.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/build/esm/platform/browser/HostDetector.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/src/platform/browser/HostDetector.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/build/esm/detectors/NoopDetector.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/src/detectors/NoopDetector.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/build/esm/platform/browser/OSDetector.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/src/platform/browser/OSDetector.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/build/esm/types.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/src/types.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/build/esm/config.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/src/config.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/build/esm/detectors/index.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/src/detectors/index.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/build/esm/detectors/BrowserDetector.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/src/detectors/BrowserDetector.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/build/esm/detectors/EnvDetector.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/src/detectors/EnvDetector.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/build/esm/detectors/ProcessDetector.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/resources/src/detectors/ProcessDetector.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/MultiSpanProcessor.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/src/MultiSpanProcessor.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/NoopSpanProcessor.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/src/export/NoopSpanProcessor.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/platform/browser/index.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/src/platform/browser/index.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/platform/browser/export/BatchSpanProcessor.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/src/platform/browser/export/BatchSpanProcessor.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/BatchSpanProcessorBase.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/src/export/BatchSpanProcessorBase.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/ConsoleSpanExporter.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/src/export/ConsoleSpanExporter.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/InMemorySpanExporter.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/src/export/InMemorySpanExporter.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/ReadableSpan.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/src/export/ReadableSpan.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/SimpleSpanProcessor.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/src/export/SimpleSpanProcessor.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/SpanExporter.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/src/export/SpanExporter.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/SpanProcessor.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/src/SpanProcessor.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/TimedEvent.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/src/TimedEvent.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/build/esm/types.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-base/src/types.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-web/build/esm/StackContextManager.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-web/src/StackContextManager.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-web/build/esm/enums/PerformanceTimingNames.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-web/src/enums/PerformanceTimingNames.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-web/build/esm/types.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-web/src/types.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-web/build/esm/utils.js","node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-web/src/utils.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/build/esm/enums/EventNames.js","node_modules/@opentelemetry/instrumentation-xml-http-request/src/enums/EventNames.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/build/esm/version.js","node_modules/@opentelemetry/instrumentation-xml-http-request/src/version.ts","node_modules/@opentelemetry/instrumentation-xml-http-request/build/esm/enums/AttributeNames.js","node_modules/@opentelemetry/instrumentation-xml-http-request/src/enums/AttributeNames.ts","node_modules/@opentelemetry/exporter-trace-otlp-http/build/esm/index.js","node_modules/@opentelemetry/exporter-trace-otlp-http/src/index.ts","node_modules/@opentelemetry/exporter-trace-otlp-http/build/esm/platform/browser/index.js","node_modules/@opentelemetry/exporter-trace-otlp-http/src/platform/browser/index.ts","node_modules/@opentelemetry/exporter-trace-otlp-http/build/esm/platform/browser/OTLPTraceExporter.js","node_modules/@opentelemetry/exporter-trace-otlp-http/src/platform/browser/OTLPTraceExporter.ts","node_modules/@opentelemetry/otlp-exporter-base/build/esm/index.js","node_modules/@opentelemetry/otlp-exporter-base/src/index.ts","node_modules/@opentelemetry/otlp-exporter-base/build/esm/OTLPExporterBase.js","node_modules/@opentelemetry/otlp-exporter-base/src/OTLPExporterBase.ts","node_modules/@opentelemetry/otlp-exporter-base/build/esm/util.js","node_modules/@opentelemetry/otlp-exporter-base/src/util.ts","node_modules/@opentelemetry/otlp-exporter-base/build/esm/platform/browser/index.js","node_modules/@opentelemetry/otlp-exporter-base/src/platform/browser/index.ts","node_modules/@opentelemetry/otlp-exporter-base/build/esm/platform/browser/OTLPExporterBrowserBase.js","node_modules/@opentelemetry/otlp-exporter-base/src/platform/browser/OTLPExporterBrowserBase.ts","node_modules/@opentelemetry/otlp-exporter-base/build/esm/platform/browser/util.js","node_modules/@opentelemetry/otlp-exporter-base/src/platform/browser/util.ts","node_modules/@opentelemetry/otlp-exporter-base/build/esm/types.js","node_modules/@opentelemetry/otlp-exporter-base/src/types.ts","node_modules/@opentelemetry/otlp-transformer/build/esm/index.js","node_modules/@opentelemetry/otlp-transformer/src/index.ts","node_modules/@opentelemetry/otlp-transformer/build/esm/common/types.js","node_modules/@opentelemetry/otlp-transformer/src/common/types.ts","node_modules/@opentelemetry/otlp-transformer/build/esm/metrics/types.js","node_modules/@opentelemetry/otlp-transformer/src/metrics/types.ts","node_modules/@opentelemetry/otlp-transformer/build/esm/resource/types.js","node_modules/@opentelemetry/otlp-transformer/src/resource/types.ts","node_modules/@opentelemetry/otlp-transformer/build/esm/trace/types.js","node_modules/@opentelemetry/otlp-transformer/src/trace/types.ts","node_modules/@opentelemetry/otlp-transformer/build/esm/trace/index.js","node_modules/@opentelemetry/otlp-transformer/src/trace/index.ts","node_modules/@opentelemetry/otlp-transformer/build/esm/common/internal.js","node_modules/@opentelemetry/otlp-transformer/src/common/internal.ts","node_modules/@opentelemetry/otlp-transformer/build/esm/trace/internal.js","node_modules/@opentelemetry/otlp-transformer/src/trace/internal.ts","node_modules/@opentelemetry/otlp-transformer/build/esm/metrics/index.js","node_modules/@opentelemetry/otlp-transformer/src/metrics/index.ts","node_modules/@opentelemetry/otlp-transformer/build/esm/metrics/internal.js","node_modules/@opentelemetry/otlp-transformer/src/metrics/internal.ts","node_modules/@opentelemetry/api-metrics/build/esm/index.js","node_modules/@opentelemetry/api-metrics/src/index.ts","node_modules/@opentelemetry/api-metrics/build/esm/api/metrics.js","node_modules/@opentelemetry/api-metrics/src/api/metrics.ts","node_modules/@opentelemetry/api-metrics/build/esm/NoopMeterProvider.js","node_modules/@opentelemetry/api-metrics/src/NoopMeterProvider.ts","node_modules/@opentelemetry/api-metrics/build/esm/NoopMeter.js","node_modules/@opentelemetry/api-metrics/src/NoopMeter.ts","node_modules/@opentelemetry/api-metrics/build/esm/api/global-utils.js","node_modules/@opentelemetry/api-metrics/src/api/global-utils.ts","node_modules/@opentelemetry/api-metrics/build/esm/platform/browser/index.js","node_modules/@opentelemetry/api-metrics/src/platform/browser/index.ts","node_modules/@opentelemetry/api-metrics/build/esm/platform/browser/globalThis.js","node_modules/@opentelemetry/api-metrics/src/platform/browser/globalThis.ts","node_modules/@opentelemetry/api-metrics/build/esm/types/Meter.js","node_modules/@opentelemetry/api-metrics/src/types/Meter.ts","node_modules/@opentelemetry/api-metrics/build/esm/types/MeterProvider.js","node_modules/@opentelemetry/api-metrics/src/types/MeterProvider.ts","node_modules/@opentelemetry/api-metrics/build/esm/types/Metric.js","node_modules/@opentelemetry/api-metrics/src/types/Metric.ts","node_modules/@opentelemetry/api-metrics/build/esm/types/ObservableResult.js","node_modules/@opentelemetry/api-metrics/src/types/ObservableResult.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/index.js","node_modules/@opentelemetry/sdk-metrics/src/index.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/export/AggregationTemporality.js","node_modules/@opentelemetry/sdk-metrics/src/export/AggregationTemporality.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/export/MetricData.js","node_modules/@opentelemetry/sdk-metrics/src/export/MetricData.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/export/MetricExporter.js","node_modules/@opentelemetry/sdk-metrics/src/export/MetricExporter.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/export/MetricProducer.js","node_modules/@opentelemetry/sdk-metrics/src/export/MetricProducer.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/export/MetricReader.js","node_modules/@opentelemetry/sdk-metrics/src/export/MetricReader.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/utils.js","node_modules/@opentelemetry/sdk-metrics/src/utils.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/export/PeriodicExportingMetricReader.js","node_modules/@opentelemetry/sdk-metrics/src/export/PeriodicExportingMetricReader.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/export/InMemoryMetricExporter.js","node_modules/@opentelemetry/sdk-metrics/src/export/InMemoryMetricExporter.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/export/ConsoleMetricExporter.js","node_modules/@opentelemetry/sdk-metrics/src/export/ConsoleMetricExporter.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/InstrumentDescriptor.js","node_modules/@opentelemetry/sdk-metrics/src/InstrumentDescriptor.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/Meter.js","node_modules/@opentelemetry/sdk-metrics/src/Meter.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/Instruments.js","node_modules/@opentelemetry/sdk-metrics/src/Instruments.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/MeterProvider.js","node_modules/@opentelemetry/sdk-metrics/src/MeterProvider.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/state/MeterProviderSharedState.js","node_modules/@opentelemetry/sdk-metrics/src/state/MeterProviderSharedState.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/view/ViewRegistry.js","node_modules/@opentelemetry/sdk-metrics/src/view/ViewRegistry.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/view/View.js","node_modules/@opentelemetry/sdk-metrics/src/view/View.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/view/Predicate.js","node_modules/@opentelemetry/sdk-metrics/src/view/Predicate.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/view/AttributesProcessor.js","node_modules/@opentelemetry/sdk-metrics/src/view/AttributesProcessor.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/view/InstrumentSelector.js","node_modules/@opentelemetry/sdk-metrics/src/view/InstrumentSelector.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/view/MeterSelector.js","node_modules/@opentelemetry/sdk-metrics/src/view/MeterSelector.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/view/Aggregation.js","node_modules/@opentelemetry/sdk-metrics/src/view/Aggregation.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/aggregator/index.js","node_modules/@opentelemetry/sdk-metrics/src/aggregator/index.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/aggregator/Drop.js","node_modules/@opentelemetry/sdk-metrics/src/aggregator/Drop.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/aggregator/types.js","node_modules/@opentelemetry/sdk-metrics/src/aggregator/types.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/aggregator/Histogram.js","node_modules/@opentelemetry/sdk-metrics/src/aggregator/Histogram.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/aggregator/LastValue.js","node_modules/@opentelemetry/sdk-metrics/src/aggregator/LastValue.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/aggregator/Sum.js","node_modules/@opentelemetry/sdk-metrics/src/aggregator/Sum.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/state/MeterSharedState.js","node_modules/@opentelemetry/sdk-metrics/src/state/MeterSharedState.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/state/AsyncMetricStorage.js","node_modules/@opentelemetry/sdk-metrics/src/state/AsyncMetricStorage.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/state/MetricStorage.js","node_modules/@opentelemetry/sdk-metrics/src/state/MetricStorage.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/state/DeltaMetricProcessor.js","node_modules/@opentelemetry/sdk-metrics/src/state/DeltaMetricProcessor.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/state/HashMap.js","node_modules/@opentelemetry/sdk-metrics/src/state/HashMap.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/state/TemporalMetricProcessor.js","node_modules/@opentelemetry/sdk-metrics/src/state/TemporalMetricProcessor.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/state/MetricStorageRegistry.js","node_modules/@opentelemetry/sdk-metrics/src/state/MetricStorageRegistry.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/view/RegistrationConflicts.js","node_modules/@opentelemetry/sdk-metrics/src/view/RegistrationConflicts.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/state/MultiWritableMetricStorage.js","node_modules/@opentelemetry/sdk-metrics/src/state/MultiWritableMetricStorage.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/state/ObservableRegistry.js","node_modules/@opentelemetry/sdk-metrics/src/state/ObservableRegistry.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/ObservableResult.js","node_modules/@opentelemetry/sdk-metrics/src/ObservableResult.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/state/SyncMetricStorage.js","node_modules/@opentelemetry/sdk-metrics/src/state/SyncMetricStorage.ts","node_modules/@opentelemetry/sdk-metrics/build/esm/state/MetricCollector.js","node_modules/@opentelemetry/sdk-metrics/src/state/MetricCollector.ts","node_modules/@opentelemetry/context-zone/build/esm/index.js","node_modules/@opentelemetry/context-zone/src/index.ts","node_modules/zone.js/fesm2015/zone.js","node_modules/@opentelemetry/context-zone-peer-dep/build/esm/index.js","node_modules/@opentelemetry/context-zone-peer-dep/src/index.ts","node_modules/@opentelemetry/context-zone-peer-dep/build/esm/ZoneContextManager.js","node_modules/@opentelemetry/context-zone-peer-dep/src/ZoneContextManager.ts","node_modules/@opentelemetry/context-zone-peer-dep/build/esm/util.js","node_modules/@opentelemetry/context-zone-peer-dep/src/util.ts","node_modules/@opentelemetry/context-zone-peer-dep/build/esm/types.js","node_modules/@opentelemetry/context-zone-peer-dep/src/types.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"77ec373f00378507\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets);\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","import { WebTracerProvider } from '@opentelemetry/sdk-trace-web';\nimport { getWebAutoInstrumentations } from '@opentelemetry/auto-instrumentations-web';\nimport { OTLPTraceExporter } from '@opentelemetry/exporter-trace-otlp-http';\nimport { BatchSpanProcessor } from '@opentelemetry/sdk-trace-base';\nimport { registerInstrumentations } from '@opentelemetry/instrumentation';\nimport { ZoneContextManager } from '@opentelemetry/context-zone';\nconst { Resource } = require('@opentelemetry/resources');\nconst { SemanticResourceAttributes } = require('@opentelemetry/semantic-conventions');\n\nconst exporter = new OTLPTraceExporter({\n url: 'http://localhost:4318/v1/traces'\n});\nconst provider = new WebTracerProvider({\n resource: new Resource({\n   [SemanticResourceAttributes.SERVICE_NAME]: 'browser',\n }),\n});\nprovider.addSpanProcessor(new BatchSpanProcessor(exporter));\nprovider.register({\n contextManager: new ZoneContextManager()\n});\n\nregisterInstrumentations({\n instrumentations: [\n   getWebAutoInstrumentations({\n     // load custom configuration for xml-http-request instrumentation\n     '@opentelemetry/instrumentation-xml-http-request': {\n       propagateTraceHeaderCorsUrls: [\n           /.+/g,\n         ],\n     },\n     // load custom configuration for fetch instrumentation\n     '@opentelemetry/instrumentation-fetch': {\n       propagateTraceHeaderCorsUrls: [\n           /.+/g,\n         ],\n     },\n   }),\n ],\n});\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './WebTracerProvider';\nexport * from './StackContextManager';\nexport * from './enums/PerformanceTimingNames';\nexport * from './types';\nexport * from './utils';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BasicTracerProvider,\n  SDKRegistrationConfig,\n  TracerConfig,\n} from '@opentelemetry/sdk-trace-base';\nimport { StackContextManager } from './StackContextManager';\n\n/**\n * WebTracerConfig provides an interface for configuring a Web Tracer.\n */\nexport type WebTracerConfig = TracerConfig;\n\n/**\n * This class represents a web tracer with {@link StackContextManager}\n */\nexport class WebTracerProvider extends BasicTracerProvider {\n  /**\n   * Constructs a new Tracer instance.\n   * @param config Web Tracer config\n   */\n  constructor(config: WebTracerConfig = {}) {\n    super(config);\n\n    if ((config as SDKRegistrationConfig).contextManager) {\n      throw (\n        'contextManager should be defined in register method not in' +\n        ' constructor'\n      );\n    }\n    if ((config as SDKRegistrationConfig).propagator) {\n      throw 'propagator should be defined in register method not in constructor';\n    }\n  }\n\n  /**\n   * Register this TracerProvider for use with the OpenTelemetry API.\n   * Undefined values may be replaced with defaults, and\n   * null values will be skipped.\n   *\n   * @param config Configuration object for SDK registration\n   */\n  override register(config: SDKRegistrationConfig = {}): void {\n    if (config.contextManager === undefined) {\n      config.contextManager = new StackContextManager();\n    }\n    if (config.contextManager) {\n      config.contextManager.enable();\n    }\n\n    super.register(config);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './Tracer';\nexport * from './BasicTracerProvider';\nexport * from './platform';\nexport * from './export/ConsoleSpanExporter';\nexport * from './export/InMemorySpanExporter';\nexport * from './export/ReadableSpan';\nexport * from './export/SimpleSpanProcessor';\nexport * from './export/SpanExporter';\nexport * from './export/NoopSpanProcessor';\nexport * from './sampler/AlwaysOffSampler';\nexport * from './sampler/AlwaysOnSampler';\nexport * from './sampler/ParentBasedSampler';\nexport * from './sampler/TraceIdRatioBasedSampler';\nexport * from './Sampler';\nexport * from './Span';\nexport * from './SpanProcessor';\nexport * from './TimedEvent';\nexport * from './types';\nexport * from './IdGenerator';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  InstrumentationLibrary,\n  sanitizeAttributes,\n  isTracingSuppressed,\n} from '@opentelemetry/core';\nimport { Resource } from '@opentelemetry/resources';\nimport { BasicTracerProvider } from './BasicTracerProvider';\nimport { Span } from './Span';\nimport { GeneralLimits, SpanLimits, TracerConfig } from './types';\nimport { mergeConfig } from './utility';\nimport { SpanProcessor } from './SpanProcessor';\nimport { Sampler } from './Sampler';\nimport { IdGenerator } from './IdGenerator';\nimport { RandomIdGenerator } from './platform';\n\n/**\n * This class represents a basic tracer.\n */\nexport class Tracer implements api.Tracer {\n  private readonly _sampler: Sampler;\n  private readonly _generalLimits: GeneralLimits;\n  private readonly _spanLimits: SpanLimits;\n  private readonly _idGenerator: IdGenerator;\n  readonly resource: Resource;\n  readonly instrumentationLibrary: InstrumentationLibrary;\n\n  /**\n   * Constructs a new Tracer instance.\n   */\n  constructor(\n    instrumentationLibrary: InstrumentationLibrary,\n    config: TracerConfig,\n    private _tracerProvider: BasicTracerProvider\n  ) {\n    const localConfig = mergeConfig(config);\n    this._sampler = localConfig.sampler;\n    this._generalLimits = localConfig.generalLimits;\n    this._spanLimits = localConfig.spanLimits;\n    this._idGenerator = config.idGenerator || new RandomIdGenerator();\n    this.resource = _tracerProvider.resource;\n    this.instrumentationLibrary = instrumentationLibrary;\n  }\n\n  /**\n   * Starts a new Span or returns the default NoopSpan based on the sampling\n   * decision.\n   */\n  startSpan(\n    name: string,\n    options: api.SpanOptions = {},\n    context = api.context.active()\n  ): api.Span {\n    if (isTracingSuppressed(context)) {\n      api.diag.debug('Instrumentation suppressed, returning Noop Span');\n      return api.trace.wrapSpanContext(api.INVALID_SPAN_CONTEXT);\n    }\n\n    // remove span from context in case a root span is requested via options\n    if (options.root) {\n      context = api.trace.deleteSpan(context);\n    }\n\n    const parentSpanContext = api.trace.getSpanContext(context);\n    const spanId = this._idGenerator.generateSpanId();\n    let traceId;\n    let traceState;\n    let parentSpanId;\n    if (!parentSpanContext || !api.trace.isSpanContextValid(parentSpanContext)) {\n      // New root span.\n      traceId = this._idGenerator.generateTraceId();\n    } else {\n      // New child span.\n      traceId = parentSpanContext.traceId;\n      traceState = parentSpanContext.traceState;\n      parentSpanId = parentSpanContext.spanId;\n    }\n\n    const spanKind = options.kind ?? api.SpanKind.INTERNAL;\n    const links = (options.links ?? []).map(link => {\n      return {\n        context: link.context,\n        attributes: sanitizeAttributes(link.attributes),\n      };\n    });\n    const attributes = sanitizeAttributes(options.attributes);\n    // make sampling decision\n    const samplingResult = this._sampler.shouldSample(\n      context,\n      traceId,\n      name,\n      spanKind,\n      attributes,\n      links\n    );\n\n    const traceFlags =\n      samplingResult.decision === api.SamplingDecision.RECORD_AND_SAMPLED\n        ? api.TraceFlags.SAMPLED\n        : api.TraceFlags.NONE;\n    const spanContext = { traceId, spanId, traceFlags, traceState };\n    if (samplingResult.decision === api.SamplingDecision.NOT_RECORD) {\n      api.diag.debug('Recording is off, propagating context in a non-recording span');\n      return api.trace.wrapSpanContext(spanContext);\n    }\n\n    const span = new Span(\n      this,\n      context,\n      name,\n      spanContext,\n      spanKind,\n      parentSpanId,\n      links,\n      options.startTime\n    );\n    // Set initial span attributes. The attributes object may have been mutated\n    // by the sampler, so we sanitize the merged attributes before setting them.\n    const initAttributes = sanitizeAttributes(Object.assign(attributes, samplingResult.attributes));\n    span.setAttributes(initAttributes);\n    return span;\n  }\n\n  /**\n   * Starts a new {@link Span} and calls the given function passing it the\n   * created span as first argument.\n   * Additionally the new span gets set in context and this context is activated\n   * for the duration of the function call.\n   *\n   * @param name The name of the span\n   * @param [options] SpanOptions used for span creation\n   * @param [context] Context to use to extract parent\n   * @param fn function called in the context of the span and receives the newly created span as an argument\n   * @returns return value of fn\n   * @example\n   *   const something = tracer.startActiveSpan('op', span => {\n   *     try {\n   *       do some work\n   *       span.setStatus({code: SpanStatusCode.OK});\n   *       return something;\n   *     } catch (err) {\n   *       span.setStatus({\n   *         code: SpanStatusCode.ERROR,\n   *         message: err.message,\n   *       });\n   *       throw err;\n   *     } finally {\n   *       span.end();\n   *     }\n   *   });\n   * @example\n   *   const span = tracer.startActiveSpan('op', span => {\n   *     try {\n   *       do some work\n   *       return span;\n   *     } catch (err) {\n   *       span.setStatus({\n   *         code: SpanStatusCode.ERROR,\n   *         message: err.message,\n   *       });\n   *       throw err;\n   *     }\n   *   });\n   *   do some more work\n   *   span.end();\n   */\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    opts: api.SpanOptions,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    opts: api.SpanOptions,\n    ctx: api.Context,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    arg2?: F | api.SpanOptions,\n    arg3?: F | api.Context,\n    arg4?: F\n  ): ReturnType<F> | undefined {\n    let opts: api.SpanOptions | undefined;\n    let ctx: api.Context | undefined;\n    let fn: F;\n\n    if (arguments.length < 2) {\n      return;\n    } else if (arguments.length === 2) {\n      fn = arg2 as F;\n    } else if (arguments.length === 3) {\n      opts = arg2 as api.SpanOptions | undefined;\n      fn = arg3 as F;\n    } else {\n      opts = arg2 as api.SpanOptions | undefined;\n      ctx = arg3 as api.Context | undefined;\n      fn = arg4 as F;\n    }\n\n    const parentContext = ctx ?? api.context.active();\n    const span = this.startSpan(name, opts, parentContext);\n    const contextWithSpanSet = api.trace.setSpan(parentContext, span);\n\n    return api.context.with(contextWithSpanSet, fn, undefined, span);\n  }\n\n  /** Returns the active {@link GeneralLimits}. */\n  getGeneralLimits(): GeneralLimits {\n    return this._generalLimits;\n  }\n\n  /** Returns the active {@link SpanLimits}. */\n  getSpanLimits(): SpanLimits {\n    return this._spanLimits;\n  }\n\n  getActiveSpanProcessor(): SpanProcessor {\n    return this._tracerProvider.getActiveSpanProcessor();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './baggage/types';\nexport { baggageEntryMetadataFromString } from './baggage/utils';\nexport * from './common/Exception';\nexport * from './common/Time';\nexport * from './common/Attributes';\nexport * from './diag';\nexport * from './propagation/TextMapPropagator';\nexport * from './trace/attributes';\nexport * from './trace/link';\nexport * from './trace/ProxyTracer';\nexport * from './trace/ProxyTracerProvider';\nexport * from './trace/Sampler';\nexport * from './trace/SamplingResult';\nexport * from './trace/span_context';\nexport * from './trace/span_kind';\nexport * from './trace/span';\nexport * from './trace/SpanOptions';\nexport * from './trace/status';\nexport * from './trace/trace_flags';\nexport * from './trace/trace_state';\nexport { createTraceState } from './trace/internal/utils';\nexport * from './trace/tracer_provider';\nexport * from './trace/tracer';\nexport * from './trace/tracer_options';\n\nexport {\n  isSpanContextValid,\n  isValidTraceId,\n  isValidSpanId,\n} from './trace/spancontext-utils';\n\nexport {\n  INVALID_SPANID,\n  INVALID_TRACEID,\n  INVALID_SPAN_CONTEXT,\n} from './trace/invalid-span-constants';\n\nexport * from './context/context';\nexport * from './context/types';\n\nimport { ContextAPI } from './api/context';\nexport type { ContextAPI } from './api/context';\n/** Entrypoint for context API */\nexport const context = ContextAPI.getInstance();\n\nimport { TraceAPI } from './api/trace';\nexport type { TraceAPI } from './api/trace';\n/** Entrypoint for trace API */\nexport const trace = TraceAPI.getInstance();\n\nimport { PropagationAPI } from './api/propagation';\nexport type { PropagationAPI } from './api/propagation';\n/** Entrypoint for propagation API */\nexport const propagation = PropagationAPI.getInstance();\n\nimport { DiagAPI } from './api/diag';\nexport type { DiagAPI } from './api/diag';\n\n/**\n * Entrypoint for Diag API.\n * Defines Diagnostic handler used for internal diagnostic logging operations.\n * The default provides a Noop DiagLogger implementation which may be changed via the\n * diag.setLogger(logger: DiagLogger) function.\n */\nexport const diag = DiagAPI.instance();\n\nexport default {\n  trace,\n  context,\n  propagation,\n  diag,\n};\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NoopContextManager } from '../context/NoopContextManager';\nimport { Context, ContextManager } from '../context/types';\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\nimport { DiagAPI } from './diag';\n\nconst API_NAME = 'context';\nconst NOOP_CONTEXT_MANAGER = new NoopContextManager();\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Context API\n */\nexport class ContextAPI {\n  private static _instance?: ContextAPI;\n\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  private constructor() {}\n\n  /** Get the singleton instance of the Context API */\n  public static getInstance(): ContextAPI {\n    if (!this._instance) {\n      this._instance = new ContextAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Set the current context manager.\n   *\n   * @returns true if the context manager was successfully registered, else false\n   */\n  public setGlobalContextManager(contextManager: ContextManager): boolean {\n    return registerGlobal(API_NAME, contextManager, DiagAPI.instance());\n  }\n\n  /**\n   * Get the currently active context\n   */\n  public active(): Context {\n    return this._getContextManager().active();\n  }\n\n  /**\n   * Execute a function with an active context\n   *\n   * @param context context to be active during function execution\n   * @param fn function to execute in a context\n   * @param thisArg optional receiver to be used for calling fn\n   * @param args optional arguments forwarded to fn\n   */\n  public with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    context: Context,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    return this._getContextManager().with(context, fn, thisArg, ...args);\n  }\n\n  /**\n   * Bind a context to a target function or event emitter\n   *\n   * @param context context to bind to the event emitter or function. Defaults to the currently active context\n   * @param target function or event emitter to bind\n   */\n  public bind<T>(context: Context, target: T): T {\n    return this._getContextManager().bind(context, target);\n  }\n\n  private _getContextManager(): ContextManager {\n    return getGlobal(API_NAME) || NOOP_CONTEXT_MANAGER;\n  }\n\n  /** Disable and remove the global context manager */\n  public disable() {\n    this._getContextManager().disable();\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ROOT_CONTEXT } from './context';\nimport * as types from './types';\n\nexport class NoopContextManager implements types.ContextManager {\n  active(): types.Context {\n    return ROOT_CONTEXT;\n  }\n\n  with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    _context: types.Context,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    return fn.call(thisArg, ...args);\n  }\n\n  bind<T>(_context: types.Context, target: T): T {\n    return target;\n  }\n\n  enable(): this {\n    return this;\n  }\n\n  disable(): this {\n    return this;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from './types';\n\n/** Get a key to uniquely identify a context value */\nexport function createContextKey(description: string) {\n  // The specification states that for the same input, multiple calls should\n  // return different keys. Due to the nature of the JS dependency management\n  // system, this creates problems where multiple versions of some package\n  // could hold different keys for the same property.\n  //\n  // Therefore, we use Symbol.for which returns the same key for the same input.\n  return Symbol.for(description);\n}\n\nclass BaseContext implements Context {\n  private _currentContext!: Map<symbol, unknown>;\n\n  /**\n   * Construct a new context which inherits values from an optional parent context.\n   *\n   * @param parentContext a context from which to inherit values\n   */\n  constructor(parentContext?: Map<symbol, unknown>) {\n    // for minification\n    const self = this;\n\n    self._currentContext = parentContext ? new Map(parentContext) : new Map();\n\n    self.getValue = (key: symbol) => self._currentContext.get(key);\n\n    self.setValue = (key: symbol, value: unknown): Context => {\n      const context = new BaseContext(self._currentContext);\n      context._currentContext.set(key, value);\n      return context;\n    };\n\n    self.deleteValue = (key: symbol): Context => {\n      const context = new BaseContext(self._currentContext);\n      context._currentContext.delete(key);\n      return context;\n    };\n  }\n\n  /**\n   * Get a value from the context.\n   *\n   * @param key key which identifies a context value\n   */\n  public getValue!: (key: symbol) => unknown;\n\n  /**\n   * Create a new context which inherits from this context and has\n   * the given key set to the given value.\n   *\n   * @param key context key for which to set the value\n   * @param value value to set for the given key\n   */\n  public setValue!: (key: symbol, value: unknown) => Context;\n\n  /**\n   * Return a new context which inherits from this context but does\n   * not contain a value for the given key.\n   *\n   * @param key context key for which to clear a value\n   */\n  public deleteValue!: (key: symbol) => Context;\n}\n\n/** The root context is used as the default parent context when there is no active context */\nexport const ROOT_CONTEXT: Context = new BaseContext();\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContextManager } from '../context/types';\nimport { DiagLogger } from '../diag';\nimport { _globalThis } from '../platform';\nimport { TextMapPropagator } from '../propagation/TextMapPropagator';\nimport type { TracerProvider } from '../trace/tracer_provider';\nimport { VERSION } from '../version';\nimport { isCompatible } from './semver';\n\nconst major = VERSION.split('.')[0];\nconst GLOBAL_OPENTELEMETRY_API_KEY = Symbol.for(\n  `opentelemetry.js.api.${major}`\n);\n\nconst _global = _globalThis as OTelGlobal;\n\nexport function registerGlobal<Type extends keyof OTelGlobalAPI>(\n  type: Type,\n  instance: OTelGlobalAPI[Type],\n  diag: DiagLogger,\n  allowOverride = false\n): boolean {\n  const api = (_global[GLOBAL_OPENTELEMETRY_API_KEY] = _global[\n    GLOBAL_OPENTELEMETRY_API_KEY\n  ] ?? {\n    version: VERSION,\n  });\n\n  if (!allowOverride && api[type]) {\n    // already registered an API of this type\n    const err = new Error(\n      `@opentelemetry/api: Attempted duplicate registration of API: ${type}`\n    );\n    diag.error(err.stack || err.message);\n    return false;\n  }\n\n  if (api.version !== VERSION) {\n    // All registered APIs must be of the same version exactly\n    const err = new Error(\n      '@opentelemetry/api: All API registration versions must match'\n    );\n    diag.error(err.stack || err.message);\n    return false;\n  }\n\n  api[type] = instance;\n  diag.debug(\n    `@opentelemetry/api: Registered a global for ${type} v${VERSION}.`\n  );\n\n  return true;\n}\n\nexport function getGlobal<Type extends keyof OTelGlobalAPI>(\n  type: Type\n): OTelGlobalAPI[Type] | undefined {\n  const globalVersion = _global[GLOBAL_OPENTELEMETRY_API_KEY]?.version;\n  if (!globalVersion || !isCompatible(globalVersion)) {\n    return;\n  }\n  return _global[GLOBAL_OPENTELEMETRY_API_KEY]?.[type];\n}\n\nexport function unregisterGlobal(type: keyof OTelGlobalAPI, diag: DiagLogger) {\n  diag.debug(\n    `@opentelemetry/api: Unregistering a global for ${type} v${VERSION}.`\n  );\n  const api = _global[GLOBAL_OPENTELEMETRY_API_KEY];\n\n  if (api) {\n    delete api[type];\n  }\n}\n\ntype OTelGlobal = {\n  [GLOBAL_OPENTELEMETRY_API_KEY]?: OTelGlobalAPI;\n};\n\ntype OTelGlobalAPI = {\n  version: string;\n\n  diag?: DiagLogger;\n  trace?: TracerProvider;\n  context?: ContextManager;\n  propagation?: TextMapPropagator;\n};\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './globalThis';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Updates to this file should also be replicated to @opentelemetry/api-metrics and\n// @opentelemetry/core too.\n\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport const _globalThis: typeof globalThis =\n  typeof globalThis === 'object' ? globalThis :\n  typeof self === 'object' ? self :\n  typeof window === 'object' ? window :\n  typeof global === 'object' ? global :\n  {} as typeof globalThis;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '1.1.0';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VERSION } from '../version';\n\nconst re = /^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;\n\n/**\n * Create a function to test an API version to see if it is compatible with the provided ownVersion.\n *\n * The returned function has the following semantics:\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param ownVersion version which should be checked against\n */\nexport function _makeCompatibilityCheck(\n  ownVersion: string\n): (globalVersion: string) => boolean {\n  const acceptedVersions = new Set<string>([ownVersion]);\n  const rejectedVersions = new Set<string>();\n\n  const myVersionMatch = ownVersion.match(re);\n  if (!myVersionMatch) {\n    // we cannot guarantee compatibility so we always return noop\n    return () => false;\n  }\n\n  const ownVersionParsed = {\n    major: +myVersionMatch[1],\n    minor: +myVersionMatch[2],\n    patch: +myVersionMatch[3],\n    prerelease: myVersionMatch[4],\n  };\n\n  // if ownVersion has a prerelease tag, versions must match exactly\n  if (ownVersionParsed.prerelease != null) {\n    return function isExactmatch(globalVersion: string): boolean {\n      return globalVersion === ownVersion;\n    };\n  }\n\n  function _reject(v: string) {\n    rejectedVersions.add(v);\n    return false;\n  }\n\n  function _accept(v: string) {\n    acceptedVersions.add(v);\n    return true;\n  }\n\n  return function isCompatible(globalVersion: string): boolean {\n    if (acceptedVersions.has(globalVersion)) {\n      return true;\n    }\n\n    if (rejectedVersions.has(globalVersion)) {\n      return false;\n    }\n\n    const globalVersionMatch = globalVersion.match(re);\n    if (!globalVersionMatch) {\n      // cannot parse other version\n      // we cannot guarantee compatibility so we always noop\n      return _reject(globalVersion);\n    }\n\n    const globalVersionParsed = {\n      major: +globalVersionMatch[1],\n      minor: +globalVersionMatch[2],\n      patch: +globalVersionMatch[3],\n      prerelease: globalVersionMatch[4],\n    };\n\n    // if globalVersion has a prerelease tag, versions must match exactly\n    if (globalVersionParsed.prerelease != null) {\n      return _reject(globalVersion);\n    }\n\n    // major versions must match\n    if (ownVersionParsed.major !== globalVersionParsed.major) {\n      return _reject(globalVersion);\n    }\n\n    if (ownVersionParsed.major === 0) {\n      if (\n        ownVersionParsed.minor === globalVersionParsed.minor &&\n        ownVersionParsed.patch <= globalVersionParsed.patch\n      ) {\n        return _accept(globalVersion);\n      }\n\n      return _reject(globalVersion);\n    }\n\n    if (ownVersionParsed.minor <= globalVersionParsed.minor) {\n      return _accept(globalVersion);\n    }\n\n    return _reject(globalVersion);\n  };\n}\n\n/**\n * Test an API version to see if it is compatible with this API.\n *\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param version version of the API requesting an instance of the global API\n */\nexport const isCompatible = _makeCompatibilityCheck(VERSION);\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagComponentLogger } from '../diag/ComponentLogger';\nimport { createLogLevelDiagLogger } from '../diag/internal/logLevelLogger';\nimport {\n  ComponentLoggerOptions,\n  DiagLogFunction,\n  DiagLogger,\n  DiagLogLevel,\n} from '../diag/types';\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\n\nconst API_NAME = 'diag';\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry internal\n * diagnostic API\n */\nexport class DiagAPI implements DiagLogger {\n  private static _instance?: DiagAPI;\n\n  /** Get the singleton instance of the DiagAPI API */\n  public static instance(): DiagAPI {\n    if (!this._instance) {\n      this._instance = new DiagAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Private internal constructor\n   * @private\n   */\n  private constructor() {\n    function _logProxy(funcName: keyof DiagLogger): DiagLogFunction {\n      return function (...args) {\n        const logger = getGlobal('diag');\n        // shortcut if logger not set\n        if (!logger) return;\n        return logger[funcName](...args);\n      };\n    }\n\n    // Using self local variable for minification purposes as 'this' cannot be minified\n    const self = this;\n\n    // DiagAPI specific functions\n\n    self.setLogger = (\n      logger: DiagLogger,\n      logLevel: DiagLogLevel = DiagLogLevel.INFO\n    ) => {\n      if (logger === self) {\n        // There isn't much we can do here.\n        // Logging to the console might break the user application.\n        // Try to log to self. If a logger was previously registered it will receive the log.\n        const err = new Error(\n          'Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation'\n        );\n        self.error(err.stack ?? err.message);\n        return false;\n      }\n\n      const oldLogger = getGlobal('diag');\n      const newLogger = createLogLevelDiagLogger(logLevel, logger);\n      // There already is an logger registered. We'll let it know before overwriting it.\n      if (oldLogger) {\n        const stack = new Error().stack ?? '<failed to generate stacktrace>';\n        oldLogger.warn(`Current logger will be overwritten from ${stack}`);\n        newLogger.warn(\n          `Current logger will overwrite one already registered from ${stack}`\n        );\n      }\n\n      return registerGlobal('diag', newLogger, self, true);\n    };\n\n    self.disable = () => {\n      unregisterGlobal(API_NAME, self);\n    };\n\n    self.createComponentLogger = (options: ComponentLoggerOptions) => {\n      return new DiagComponentLogger(options);\n    };\n\n    self.verbose = _logProxy('verbose');\n    self.debug = _logProxy('debug');\n    self.info = _logProxy('info');\n    self.warn = _logProxy('warn');\n    self.error = _logProxy('error');\n  }\n\n  /**\n   * Set the global DiagLogger and DiagLogLevel.\n   * If a global diag logger is already set, this will override it.\n   *\n   * @param logger - [Optional] The DiagLogger instance to set as the default logger.\n   * @param logLevel - [Optional] The DiagLogLevel used to filter logs sent to the logger. If not provided it will default to INFO.\n   * @returns true if the logger was successfully registered, else false\n   */\n  public setLogger!: (logger: DiagLogger, logLevel?: DiagLogLevel) => boolean;\n  /**\n   *\n   */\n  public createComponentLogger!: (\n    options: ComponentLoggerOptions\n  ) => DiagLogger;\n\n  // DiagLogger implementation\n  public verbose!: DiagLogFunction;\n  public debug!: DiagLogFunction;\n  public info!: DiagLogFunction;\n  public warn!: DiagLogFunction;\n  public error!: DiagLogFunction;\n\n  /**\n   * Unregister the global logger and return to Noop\n   */\n  public disable!: () => void;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getGlobal } from '../internal/global-utils';\nimport { ComponentLoggerOptions, DiagLogger, DiagLogFunction } from './types';\n\n/**\n * Component Logger which is meant to be used as part of any component which\n * will add automatically additional namespace in front of the log message.\n * It will then forward all message to global diag logger\n * @example\n * const cLogger = diag.createComponentLogger({ namespace: '@opentelemetry/instrumentation-http' });\n * cLogger.debug('test');\n * // @opentelemetry/instrumentation-http test\n */\nexport class DiagComponentLogger implements DiagLogger {\n  private _namespace: string;\n\n  constructor(props: ComponentLoggerOptions) {\n    this._namespace = props.namespace || 'DiagComponentLogger';\n  }\n\n  public debug(...args: any[]): void {\n    return logProxy('debug', this._namespace, args);\n  }\n\n  public error(...args: any[]): void {\n    return logProxy('error', this._namespace, args);\n  }\n\n  public info(...args: any[]): void {\n    return logProxy('info', this._namespace, args);\n  }\n\n  public warn(...args: any[]): void {\n    return logProxy('warn', this._namespace, args);\n  }\n\n  public verbose(...args: any[]): void {\n    return logProxy('verbose', this._namespace, args);\n  }\n}\n\nfunction logProxy(\n  funcName: keyof DiagLogger,\n  namespace: string,\n  args: any\n): void {\n  const logger = getGlobal('diag');\n  // shortcut if logger not set\n  if (!logger) {\n    return;\n  }\n\n  args.unshift(namespace);\n  return logger[funcName](...(args as Parameters<DiagLogFunction>));\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagLogFunction, DiagLogger, DiagLogLevel } from '../types';\n\nexport function createLogLevelDiagLogger(\n  maxLevel: DiagLogLevel,\n  logger: DiagLogger\n): DiagLogger {\n  if (maxLevel < DiagLogLevel.NONE) {\n    maxLevel = DiagLogLevel.NONE;\n  } else if (maxLevel > DiagLogLevel.ALL) {\n    maxLevel = DiagLogLevel.ALL;\n  }\n\n  // In case the logger is null or undefined\n  logger = logger || {};\n\n  function _filterFunc(\n    funcName: keyof DiagLogger,\n    theLevel: DiagLogLevel\n  ): DiagLogFunction {\n    const theFunc = logger[funcName];\n\n    if (typeof theFunc === 'function' && maxLevel >= theLevel) {\n      return theFunc.bind(logger);\n    }\n    return function () {};\n  }\n\n  return {\n    error: _filterFunc('error', DiagLogLevel.ERROR),\n    warn: _filterFunc('warn', DiagLogLevel.WARN),\n    info: _filterFunc('info', DiagLogLevel.INFO),\n    debug: _filterFunc('debug', DiagLogLevel.DEBUG),\n    verbose: _filterFunc('verbose', DiagLogLevel.VERBOSE),\n  };\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type DiagLogFunction = (message: string, ...args: unknown[]) => void;\n\n/**\n * Defines an internal diagnostic logger interface which is used to log internal diagnostic\n * messages, you can set the default diagnostic logger via the {@link DiagAPI} setLogger function.\n * API provided implementations include :-\n * - a No-Op {@link createNoopDiagLogger}\n * - a {@link DiagLogLevel} filtering wrapper {@link createLogLevelDiagLogger}\n * - a general Console {@link DiagConsoleLogger} version.\n */\nexport interface DiagLogger {\n  /** Log an error scenario that was not expected and caused the requested operation to fail. */\n  error: DiagLogFunction;\n\n  /**\n   * Log a warning scenario to inform the developer of an issues that should be investigated.\n   * The requested operation may or may not have succeeded or completed.\n   */\n  warn: DiagLogFunction;\n\n  /**\n   * Log a general informational message, this should not affect functionality.\n   * This is also the default logging level so this should NOT be used for logging\n   * debugging level information.\n   */\n  info: DiagLogFunction;\n\n  /**\n   * Log a general debug message that can be useful for identifying a failure.\n   * Information logged at this level may include diagnostic details that would\n   * help identify a failure scenario.\n   * For example: Logging the order of execution of async operations.\n   */\n  debug: DiagLogFunction;\n\n  /**\n   * Log a detailed (verbose) trace level logging that can be used to identify failures\n   * where debug level logging would be insufficient, this level of tracing can include\n   * input and output parameters and as such may include PII information passing through\n   * the API. As such it is recommended that this level of tracing should not be enabled\n   * in a production environment.\n   */\n  verbose: DiagLogFunction;\n}\n\n/**\n * Defines the available internal logging levels for the diagnostic logger, the numeric values\n * of the levels are defined to match the original values from the initial LogLevel to avoid\n * compatibility/migration issues for any implementation that assume the numeric ordering.\n */\nexport enum DiagLogLevel {\n  /** Diagnostic Logging level setting to disable all logging (except and forced logs) */\n  NONE = 0,\n\n  /** Identifies an error scenario */\n  ERROR = 30,\n\n  /** Identifies a warning scenario */\n  WARN = 50,\n\n  /** General informational log message */\n  INFO = 60,\n\n  /** General debug log message */\n  DEBUG = 70,\n\n  /**\n   * Detailed trace level logging should only be used for development, should only be set\n   * in a development environment.\n   */\n  VERBOSE = 80,\n\n  /** Used to set the logging level to include all logging */\n  ALL = 9999,\n}\n\n/**\n * Defines options for ComponentLogger\n */\nexport interface ComponentLoggerOptions {\n  namespace: string;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\nimport { ProxyTracerProvider } from '../trace/ProxyTracerProvider';\nimport {\n  isSpanContextValid,\n  wrapSpanContext,\n} from '../trace/spancontext-utils';\nimport { Tracer } from '../trace/tracer';\nimport { TracerProvider } from '../trace/tracer_provider';\nimport {\n  deleteSpan,\n  getSpan,\n  getSpanContext,\n  setSpan,\n  setSpanContext,\n} from '../trace/context-utils';\nimport { DiagAPI } from './diag';\n\nconst API_NAME = 'trace';\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Tracing API\n */\nexport class TraceAPI {\n  private static _instance?: TraceAPI;\n\n  private _proxyTracerProvider = new ProxyTracerProvider();\n\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  private constructor() {}\n\n  /** Get the singleton instance of the Trace API */\n  public static getInstance(): TraceAPI {\n    if (!this._instance) {\n      this._instance = new TraceAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Set the current global tracer.\n   *\n   * @returns true if the tracer provider was successfully registered, else false\n   */\n  public setGlobalTracerProvider(provider: TracerProvider): boolean {\n    const success = registerGlobal(\n      API_NAME,\n      this._proxyTracerProvider,\n      DiagAPI.instance()\n    );\n    if (success) {\n      this._proxyTracerProvider.setDelegate(provider);\n    }\n    return success;\n  }\n\n  /**\n   * Returns the global tracer provider.\n   */\n  public getTracerProvider(): TracerProvider {\n    return getGlobal(API_NAME) || this._proxyTracerProvider;\n  }\n\n  /**\n   * Returns a tracer from the global tracer provider.\n   */\n  public getTracer(name: string, version?: string): Tracer {\n    return this.getTracerProvider().getTracer(name, version);\n  }\n\n  /** Remove the global tracer provider */\n  public disable() {\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n    this._proxyTracerProvider = new ProxyTracerProvider();\n  }\n\n  public wrapSpanContext = wrapSpanContext;\n\n  public isSpanContextValid = isSpanContextValid;\n\n  public deleteSpan = deleteSpan;\n\n  public getSpan = getSpan;\n\n  public getSpanContext = getSpanContext;\n\n  public setSpan = setSpan;\n\n  public setSpanContext = setSpanContext;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Tracer } from './tracer';\nimport { TracerProvider } from './tracer_provider';\nimport { ProxyTracer } from './ProxyTracer';\nimport { NoopTracerProvider } from './NoopTracerProvider';\nimport { TracerOptions } from './tracer_options';\n\nconst NOOP_TRACER_PROVIDER = new NoopTracerProvider();\n\n/**\n * Tracer provider which provides {@link ProxyTracer}s.\n *\n * Before a delegate is set, tracers provided are NoOp.\n *   When a delegate is set, traces are provided from the delegate.\n *   When a delegate is set after tracers have already been provided,\n *   all tracers already provided will use the provided delegate implementation.\n */\nexport class ProxyTracerProvider implements TracerProvider {\n  private _delegate?: TracerProvider;\n\n  /**\n   * Get a {@link ProxyTracer}\n   */\n  getTracer(name: string, version?: string, options?: TracerOptions): Tracer {\n    return (\n      this.getDelegateTracer(name, version, options) ??\n      new ProxyTracer(this, name, version, options)\n    );\n  }\n\n  getDelegate(): TracerProvider {\n    return this._delegate ?? NOOP_TRACER_PROVIDER;\n  }\n\n  /**\n   * Set the delegate tracer provider\n   */\n  setDelegate(delegate: TracerProvider) {\n    this._delegate = delegate;\n  }\n\n  getDelegateTracer(\n    name: string,\n    version?: string,\n    options?: TracerOptions\n  ): Tracer | undefined {\n    return this._delegate?.getTracer(name, version, options);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '../context/types';\nimport { NoopTracer } from './NoopTracer';\nimport { Span } from './span';\nimport { SpanOptions } from './SpanOptions';\nimport { Tracer } from './tracer';\nimport { TracerOptions } from './tracer_options';\n\nconst NOOP_TRACER = new NoopTracer();\n\n/**\n * Proxy tracer provided by the proxy tracer provider\n */\nexport class ProxyTracer implements Tracer {\n  // When a real implementation is provided, this will be it\n  private _delegate?: Tracer;\n\n  constructor(\n    private _provider: TracerDelegator,\n    public readonly name: string,\n    public readonly version?: string,\n    public readonly options?: TracerOptions\n  ) {}\n\n  startSpan(name: string, options?: SpanOptions, context?: Context): Span {\n    return this._getTracer().startSpan(name, options, context);\n  }\n\n  startActiveSpan<F extends (span: Span) => unknown>(\n    _name: string,\n    _options: F | SpanOptions,\n    _context?: F | Context,\n    _fn?: F\n  ): ReturnType<F> {\n    const tracer = this._getTracer();\n    return Reflect.apply(tracer.startActiveSpan, tracer, arguments);\n  }\n\n  /**\n   * Try to get a tracer from the proxy tracer provider.\n   * If the proxy tracer provider has no delegate, return a noop tracer.\n   */\n  private _getTracer() {\n    if (this._delegate) {\n      return this._delegate;\n    }\n\n    const tracer = this._provider.getDelegateTracer(this.name, this.version, this.options);\n\n    if (!tracer) {\n      return NOOP_TRACER;\n    }\n\n    this._delegate = tracer;\n    return this._delegate;\n  }\n}\n\nexport interface TracerDelegator {\n  getDelegateTracer(name: string, version?: string, options?: TracerOptions): Tracer | undefined;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContextAPI } from '../api/context';\nimport { Context } from '../context/types';\nimport { getSpanContext, setSpan } from '../trace/context-utils';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { Span } from './span';\nimport { isSpanContextValid } from './spancontext-utils';\nimport { SpanOptions } from './SpanOptions';\nimport { SpanContext } from './span_context';\nimport { Tracer } from './tracer';\n\nconst context = ContextAPI.getInstance();\n\n/**\n * No-op implementations of {@link Tracer}.\n */\nexport class NoopTracer implements Tracer {\n  // startSpan starts a noop span.\n  startSpan(name: string, options?: SpanOptions, context?: Context): Span {\n    const root = Boolean(options?.root);\n    if (root) {\n      return new NonRecordingSpan();\n    }\n\n    const parentFromContext = context && getSpanContext(context);\n\n    if (\n      isSpanContext(parentFromContext) &&\n      isSpanContextValid(parentFromContext)\n    ) {\n      return new NonRecordingSpan(parentFromContext);\n    } else {\n      return new NonRecordingSpan();\n    }\n  }\n\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    opts: SpanOptions | undefined,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    opts: SpanOptions | undefined,\n    ctx: Context | undefined,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    arg2?: F | SpanOptions,\n    arg3?: F | Context,\n    arg4?: F\n  ): ReturnType<F> | undefined {\n    let opts: SpanOptions | undefined;\n    let ctx: Context | undefined;\n    let fn: F;\n\n    if (arguments.length < 2) {\n      return;\n    } else if (arguments.length === 2) {\n      fn = arg2 as F;\n    } else if (arguments.length === 3) {\n      opts = arg2 as SpanOptions | undefined;\n      fn = arg3 as F;\n    } else {\n      opts = arg2 as SpanOptions | undefined;\n      ctx = arg3 as Context | undefined;\n      fn = arg4 as F;\n    }\n\n    const parentContext = ctx ?? context.active();\n    const span = this.startSpan(name, opts, parentContext);\n    const contextWithSpanSet = setSpan(parentContext, span);\n\n    return context.with(contextWithSpanSet, fn, undefined, span);\n  }\n}\n\nfunction isSpanContext(spanContext: any): spanContext is SpanContext {\n  return (\n    typeof spanContext === 'object' &&\n    typeof spanContext['spanId'] === 'string' &&\n    typeof spanContext['traceId'] === 'string' &&\n    typeof spanContext['traceFlags'] === 'number'\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createContextKey } from '../context/context';\nimport { Context } from '../context/types';\nimport { Span } from './span';\nimport { SpanContext } from './span_context';\nimport { NonRecordingSpan } from './NonRecordingSpan';\n\n/**\n * span key\n */\nconst SPAN_KEY = createContextKey('OpenTelemetry Context Key SPAN');\n\n/**\n * Return the span if one exists\n *\n * @param context context to get span from\n */\nexport function getSpan(context: Context): Span | undefined {\n  return (context.getValue(SPAN_KEY) as Span) || undefined;\n}\n\n/**\n * Set the span on a context\n *\n * @param context context to use as parent\n * @param span span to set active\n */\nexport function setSpan(context: Context, span: Span): Context {\n  return context.setValue(SPAN_KEY, span);\n}\n\n/**\n * Remove current span stored in the context\n *\n * @param context context to delete span from\n */\nexport function deleteSpan(context: Context): Context {\n  return context.deleteValue(SPAN_KEY);\n}\n\n/**\n * Wrap span context in a NoopSpan and set as span in a new\n * context\n *\n * @param context context to set active span on\n * @param spanContext span context to be wrapped\n */\nexport function setSpanContext(\n  context: Context,\n  spanContext: SpanContext\n): Context {\n  return setSpan(context, new NonRecordingSpan(spanContext));\n}\n\n/**\n * Get the span context of the span if it exists.\n *\n * @param context context to get values from\n */\nexport function getSpanContext(context: Context): SpanContext | undefined {\n  return getSpan(context)?.spanContext();\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Exception } from '../common/Exception';\nimport { TimeInput } from '../common/Time';\nimport { SpanAttributes } from './attributes';\nimport { INVALID_SPAN_CONTEXT } from './invalid-span-constants';\nimport { Span } from './span';\nimport { SpanContext } from './span_context';\nimport { SpanStatus } from './status';\n\n/**\n * The NonRecordingSpan is the default {@link Span} that is used when no Span\n * implementation is available. All operations are no-op including context\n * propagation.\n */\nexport class NonRecordingSpan implements Span {\n  constructor(\n    private readonly _spanContext: SpanContext = INVALID_SPAN_CONTEXT\n  ) {}\n\n  // Returns a SpanContext.\n  spanContext(): SpanContext {\n    return this._spanContext;\n  }\n\n  // By default does nothing\n  setAttribute(_key: string, _value: unknown): this {\n    return this;\n  }\n\n  // By default does nothing\n  setAttributes(_attributes: SpanAttributes): this {\n    return this;\n  }\n\n  // By default does nothing\n  addEvent(_name: string, _attributes?: SpanAttributes): this {\n    return this;\n  }\n\n  // By default does nothing\n  setStatus(_status: SpanStatus): this {\n    return this;\n  }\n\n  // By default does nothing\n  updateName(_name: string): this {\n    return this;\n  }\n\n  // By default does nothing\n  end(_endTime?: TimeInput): void {}\n\n  // isRecording always returns false for NonRecordingSpan.\n  isRecording(): boolean {\n    return false;\n  }\n\n  // By default does nothing\n  recordException(_exception: Exception, _time?: TimeInput): void {}\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpanContext } from './span_context';\nimport { TraceFlags } from './trace_flags';\n\nexport const INVALID_SPANID = '0000000000000000';\nexport const INVALID_TRACEID = '00000000000000000000000000000000';\nexport const INVALID_SPAN_CONTEXT: SpanContext = {\n  traceId: INVALID_TRACEID,\n  spanId: INVALID_SPANID,\n  traceFlags: TraceFlags.NONE,\n};\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum TraceFlags {\n  /** Represents no flag set. */\n  NONE = 0x0,\n  /** Bit to represent whether trace is sampled in trace flags. */\n  SAMPLED = 0x1 << 0,\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { INVALID_SPANID, INVALID_TRACEID } from './invalid-span-constants';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { Span } from './span';\nimport { SpanContext } from './span_context';\n\nconst VALID_TRACEID_REGEX = /^([0-9a-f]{32})$/i;\nconst VALID_SPANID_REGEX = /^[0-9a-f]{16}$/i;\n\nexport function isValidTraceId(traceId: string): boolean {\n  return VALID_TRACEID_REGEX.test(traceId) && traceId !== INVALID_TRACEID;\n}\n\nexport function isValidSpanId(spanId: string): boolean {\n  return VALID_SPANID_REGEX.test(spanId) && spanId !== INVALID_SPANID;\n}\n\n/**\n * Returns true if this {@link SpanContext} is valid.\n * @return true if this {@link SpanContext} is valid.\n */\nexport function isSpanContextValid(spanContext: SpanContext): boolean {\n  return (\n    isValidTraceId(spanContext.traceId) && isValidSpanId(spanContext.spanId)\n  );\n}\n\n/**\n * Wrap the given {@link SpanContext} in a new non-recording {@link Span}\n *\n * @param spanContext span context to be wrapped\n * @returns a new non-recording {@link Span} with the provided context\n */\nexport function wrapSpanContext(spanContext: SpanContext): Span {\n  return new NonRecordingSpan(spanContext);\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NoopTracer } from './NoopTracer';\nimport { Tracer } from './tracer';\nimport { TracerOptions } from './tracer_options';\nimport { TracerProvider } from './tracer_provider';\n\n/**\n * An implementation of the {@link TracerProvider} which returns an impotent\n * Tracer for all calls to `getTracer`.\n *\n * All operations are no-op.\n */\nexport class NoopTracerProvider implements TracerProvider {\n  getTracer(\n    _name?: string,\n    _version?: string,\n    _options?: TracerOptions\n  ): Tracer {\n    return new NoopTracer();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '../context/types';\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\nimport { NoopTextMapPropagator } from '../propagation/NoopTextMapPropagator';\nimport {\n  defaultTextMapGetter,\n  defaultTextMapSetter,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n} from '../propagation/TextMapPropagator';\nimport {\n  getBaggage,\n  setBaggage,\n  deleteBaggage,\n} from '../baggage/context-helpers';\nimport { createBaggage } from '../baggage/utils';\nimport { DiagAPI } from './diag';\n\nconst API_NAME = 'propagation';\nconst NOOP_TEXT_MAP_PROPAGATOR = new NoopTextMapPropagator();\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Propagation API\n */\nexport class PropagationAPI {\n  private static _instance?: PropagationAPI;\n\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  private constructor() {}\n\n  /** Get the singleton instance of the Propagator API */\n  public static getInstance(): PropagationAPI {\n    if (!this._instance) {\n      this._instance = new PropagationAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Set the current propagator.\n   *\n   * @returns true if the propagator was successfully registered, else false\n   */\n  public setGlobalPropagator(propagator: TextMapPropagator): boolean {\n    return registerGlobal(API_NAME, propagator, DiagAPI.instance());\n  }\n\n  /**\n   * Inject context into a carrier to be propagated inter-process\n   *\n   * @param context Context carrying tracing data to inject\n   * @param carrier carrier to inject context into\n   * @param setter Function used to set values on the carrier\n   */\n  public inject<Carrier>(\n    context: Context,\n    carrier: Carrier,\n    setter: TextMapSetter<Carrier> = defaultTextMapSetter\n  ): void {\n    return this._getGlobalPropagator().inject(context, carrier, setter);\n  }\n\n  /**\n   * Extract context from a carrier\n   *\n   * @param context Context which the newly created context will inherit from\n   * @param carrier Carrier to extract context from\n   * @param getter Function used to extract keys from a carrier\n   */\n  public extract<Carrier>(\n    context: Context,\n    carrier: Carrier,\n    getter: TextMapGetter<Carrier> = defaultTextMapGetter\n  ): Context {\n    return this._getGlobalPropagator().extract(context, carrier, getter);\n  }\n\n  /**\n   * Return a list of all fields which may be used by the propagator.\n   */\n  public fields(): string[] {\n    return this._getGlobalPropagator().fields();\n  }\n\n  /** Remove the global propagator */\n  public disable() {\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n  }\n\n  public createBaggage = createBaggage;\n\n  public getBaggage = getBaggage;\n\n  public setBaggage = setBaggage;\n\n  public deleteBaggage = deleteBaggage;\n\n  private _getGlobalPropagator(): TextMapPropagator {\n    return getGlobal(API_NAME) || NOOP_TEXT_MAP_PROPAGATOR;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '../context/types';\nimport { TextMapPropagator } from './TextMapPropagator';\n\n/**\n * No-op implementations of {@link TextMapPropagator}.\n */\nexport class NoopTextMapPropagator implements TextMapPropagator {\n  /** Noop inject function does nothing */\n  inject(_context: Context, _carrier: unknown): void {}\n  /** Noop extract function does nothing and returns the input context */\n  extract(context: Context, _carrier: unknown): Context {\n    return context;\n  }\n  fields(): string[] {\n    return [];\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '../context/types';\n\n/**\n * Injects `Context` into and extracts it from carriers that travel\n * in-band across process boundaries. Encoding is expected to conform to the\n * HTTP Header Field semantics. Values are often encoded as RPC/HTTP request\n * headers.\n *\n * The carrier of propagated data on both the client (injector) and server\n * (extractor) side is usually an object such as http headers. Propagation is\n * usually implemented via library-specific request interceptors, where the\n * client-side injects values and the server-side extracts them.\n */\nexport interface TextMapPropagator<Carrier = any> {\n  /**\n   * Injects values from a given `Context` into a carrier.\n   *\n   * OpenTelemetry defines a common set of format values (TextMapPropagator),\n   * and each has an expected `carrier` type.\n   *\n   * @param context the Context from which to extract values to transmit over\n   *     the wire.\n   * @param carrier the carrier of propagation fields, such as http request\n   *     headers.\n   * @param setter an optional {@link TextMapSetter}. If undefined, values will be\n   *     set by direct object assignment.\n   */\n  inject(\n    context: Context,\n    carrier: Carrier,\n    setter: TextMapSetter<Carrier>\n  ): void;\n\n  /**\n   * Given a `Context` and a carrier, extract context values from a\n   * carrier and return a new context, created from the old context, with the\n   * extracted values.\n   *\n   * @param context the Context from which to extract values to transmit over\n   *     the wire.\n   * @param carrier the carrier of propagation fields, such as http request\n   *     headers.\n   * @param getter an optional {@link TextMapGetter}. If undefined, keys will be all\n   *     own properties, and keys will be accessed by direct object access.\n   */\n  extract(\n    context: Context,\n    carrier: Carrier,\n    getter: TextMapGetter<Carrier>\n  ): Context;\n\n  /**\n   * Return a list of all fields which may be used by the propagator.\n   */\n  fields(): string[];\n}\n\n/**\n * A setter is specified by the caller to define a specific method\n * to set key/value pairs on the carrier within a propagator.\n */\nexport interface TextMapSetter<Carrier = any> {\n  /**\n   * Callback used to set a key/value pair on an object.\n   *\n   * Should be called by the propagator each time a key/value pair\n   * should be set, and should set that key/value pair on the propagator.\n   *\n   * @param carrier object or class which carries key/value pairs\n   * @param key string key to modify\n   * @param value value to be set to the key on the carrier\n   */\n  set(carrier: Carrier, key: string, value: string): void;\n}\n\n/**\n * A getter is specified by the caller to define a specific method\n * to get the value of a key from a carrier.\n */\nexport interface TextMapGetter<Carrier = any> {\n  /**\n   * Get a list of all keys available on the carrier.\n   *\n   * @param carrier\n   */\n  keys(carrier: Carrier): string[];\n\n  /**\n   * Get the value of a specific key from the carrier.\n   *\n   * @param carrier\n   * @param key\n   */\n  get(carrier: Carrier, key: string): undefined | string | string[];\n}\n\nexport const defaultTextMapGetter: TextMapGetter = {\n  get(carrier, key) {\n    if (carrier == null) {\n      return undefined;\n    }\n    return carrier[key];\n  },\n\n  keys(carrier) {\n    if (carrier == null) {\n      return [];\n    }\n    return Object.keys(carrier);\n  },\n};\n\nexport const defaultTextMapSetter: TextMapSetter = {\n  set(carrier, key, value) {\n    if (carrier == null) {\n      return;\n    }\n\n    carrier[key] = value;\n  },\n};\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createContextKey } from '../context/context';\nimport { Context } from '../context/types';\nimport { Baggage } from './types';\n\n/**\n * Baggage key\n */\nconst BAGGAGE_KEY = createContextKey('OpenTelemetry Baggage Key');\n\n/**\n * Retrieve the current baggage from the given context\n *\n * @param {Context} Context that manage all context values\n * @returns {Baggage} Extracted baggage from the context\n */\nexport function getBaggage(context: Context): Baggage | undefined {\n  return (context.getValue(BAGGAGE_KEY) as Baggage) || undefined;\n}\n\n/**\n * Store a baggage in the given context\n *\n * @param {Context} Context that manage all context values\n * @param {Baggage} baggage that will be set in the actual context\n */\nexport function setBaggage(context: Context, baggage: Baggage): Context {\n  return context.setValue(BAGGAGE_KEY, baggage);\n}\n\n/**\n * Delete the baggage stored in the given context\n *\n * @param {Context} Context that manage all context values\n */\nexport function deleteBaggage(context: Context): Context {\n  return context.deleteValue(BAGGAGE_KEY);\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagAPI } from '../api/diag';\nimport { BaggageImpl } from './internal/baggage-impl';\nimport { baggageEntryMetadataSymbol } from './internal/symbol';\nimport { Baggage, BaggageEntry, BaggageEntryMetadata } from './types';\n\nconst diag = DiagAPI.instance();\n\n/**\n * Create a new Baggage with optional entries\n *\n * @param entries An array of baggage entries the new baggage should contain\n */\nexport function createBaggage(\n  entries: Record<string, BaggageEntry> = {}\n): Baggage {\n  return new BaggageImpl(new Map(Object.entries(entries)));\n}\n\n/**\n * Create a serializable BaggageEntryMetadata object from a string.\n *\n * @param str string metadata. Format is currently not defined by the spec and has no special meaning.\n *\n */\nexport function baggageEntryMetadataFromString(\n  str: string\n): BaggageEntryMetadata {\n  if (typeof str !== 'string') {\n    diag.error(\n      `Cannot create baggage metadata from unknown type: ${typeof str}`\n    );\n    str = '';\n  }\n\n  return {\n    __TYPE__: baggageEntryMetadataSymbol,\n    toString() {\n      return str;\n    },\n  };\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Baggage, BaggageEntry } from '../types';\n\nexport class BaggageImpl implements Baggage {\n  private _entries: Map<string, BaggageEntry>;\n\n  constructor(entries?: Map<string, BaggageEntry>) {\n    this._entries = entries ? new Map(entries) : new Map();\n  }\n\n  getEntry(key: string): BaggageEntry | undefined {\n    const entry = this._entries.get(key);\n    if (!entry) {\n      return undefined;\n    }\n\n    return Object.assign({}, entry);\n  }\n\n  getAllEntries(): [string, BaggageEntry][] {\n    return Array.from(this._entries.entries()).map(([k, v]) => [k, v]);\n  }\n\n  setEntry(key: string, entry: BaggageEntry): BaggageImpl {\n    const newBaggage = new BaggageImpl(this._entries);\n    newBaggage._entries.set(key, entry);\n    return newBaggage;\n  }\n\n  removeEntry(key: string): BaggageImpl {\n    const newBaggage = new BaggageImpl(this._entries);\n    newBaggage._entries.delete(key);\n    return newBaggage;\n  }\n\n  removeEntries(...keys: string[]): BaggageImpl {\n    const newBaggage = new BaggageImpl(this._entries);\n    for (const key of keys) {\n      newBaggage._entries.delete(key);\n    }\n    return newBaggage;\n  }\n\n  clear(): BaggageImpl {\n    return new BaggageImpl();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Symbol used to make BaggageEntryMetadata an opaque type\n */\nexport const baggageEntryMetadataSymbol = Symbol('BaggageEntryMetadata');\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { baggageEntryMetadataSymbol } from './internal/symbol';\n\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface BaggageEntry {\n  /** `String` value of the `BaggageEntry`. */\n  value: string;\n  /**\n   * Metadata is an optional string property defined by the W3C baggage specification.\n   * It currently has no special meaning defined by the specification.\n   */\n  metadata?: BaggageEntryMetadata;\n}\n\n/**\n * Serializable Metadata defined by the W3C baggage specification.\n * It currently has no special meaning defined by the OpenTelemetry or W3C.\n */\nexport type BaggageEntryMetadata = { toString(): string } & {\n  __TYPE__: typeof baggageEntryMetadataSymbol;\n};\n\n/**\n * Baggage represents collection of key-value pairs with optional metadata.\n * Each key of Baggage is associated with exactly one value.\n * Baggage may be used to annotate and enrich telemetry data.\n */\nexport interface Baggage {\n  /**\n   * Get an entry from Baggage if it exists\n   *\n   * @param key The key which identifies the BaggageEntry\n   */\n  getEntry(key: string): BaggageEntry | undefined;\n\n  /**\n   * Get a list of all entries in the Baggage\n   */\n  getAllEntries(): [string, BaggageEntry][];\n\n  /**\n   * Returns a new baggage with the entries from the current bag and the specified entry\n   *\n   * @param key string which identifies the baggage entry\n   * @param entry BaggageEntry for the given key\n   */\n  setEntry(key: string, entry: BaggageEntry): Baggage;\n\n  /**\n   * Returns a new baggage with the entries from the current bag except the removed entry\n   *\n   * @param key key identifying the entry to be removed\n   */\n  removeEntry(key: string): Baggage;\n\n  /**\n   * Returns a new baggage with the entries from the current bag except the removed entries\n   *\n   * @param key keys identifying the entries to be removed\n   */\n  removeEntries(...key: string[]): Baggage;\n\n  /**\n   * Returns a new baggage with no entries\n   */\n  clear(): Baggage;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ninterface ExceptionWithCode {\n  code: string | number;\n  name?: string;\n  message?: string;\n  stack?: string;\n}\n\ninterface ExceptionWithMessage {\n  code?: string | number;\n  message: string;\n  name?: string;\n  stack?: string;\n}\n\ninterface ExceptionWithName {\n  code?: string | number;\n  message?: string;\n  name: string;\n  stack?: string;\n}\n\n/**\n * Defines Exception.\n *\n * string or an object with one of (message or name or code) and optional stack\n */\nexport type Exception =\n  | ExceptionWithCode\n  | ExceptionWithMessage\n  | ExceptionWithName\n  | string;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Defines High-Resolution Time.\n *\n * The first number, HrTime[0], is UNIX Epoch time in seconds since 00:00:00 UTC on 1 January 1970.\n * The second number, HrTime[1], represents the partial second elapsed since Unix Epoch time represented by first number in nanoseconds.\n * For example, 2021-01-01T12:30:10.150Z in UNIX Epoch time in milliseconds is represented as 1609504210150.\n * The first number is calculated by converting and truncating the Epoch time in milliseconds to seconds:\n * HrTime[0] = Math.trunc(1609504210150 / 1000) = 1609504210.\n * The second number is calculated by converting the digits after the decimal point of the subtraction, (1609504210150 / 1000) - HrTime[0], to nanoseconds:\n * HrTime[1] = Number((1609504210.150 - HrTime[0]).toFixed(9)) * 1e9 = 150000000.\n * This is represented in HrTime format as [1609504210, 150000000].\n */\nexport type HrTime = [number, number];\n\n/**\n * Defines TimeInput.\n *\n * hrtime, epoch milliseconds, performance.now() or Date\n */\nexport type TimeInput = HrTime | number | Date;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Attributes is a map from string to attribute values.\n *\n * Note: only the own enumerable keys are counted as valid attribute keys.\n */\nexport interface Attributes {\n    [attributeKey: string]: AttributeValue | undefined;\n}\n\n/**\n * Attribute values may be any non-nullish primitive value except an object.\n *\n * null or undefined attribute values are invalid and will result in undefined behavior.\n */\nexport type AttributeValue =\n    | string\n    | number\n    | boolean\n    | Array<null | undefined | string>\n    | Array<null | undefined | number>\n    | Array<null | undefined | boolean>;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './consoleLogger';\nexport * from './types';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagLogger, DiagLogFunction } from './types';\n\ntype ConsoleMapKeys = 'error' | 'warn' | 'info' | 'debug' | 'trace';\nconst consoleMap: { n: keyof DiagLogger; c: ConsoleMapKeys }[] = [\n  { n: 'error', c: 'error' },\n  { n: 'warn', c: 'warn' },\n  { n: 'info', c: 'info' },\n  { n: 'debug', c: 'debug' },\n  { n: 'verbose', c: 'trace' },\n];\n\n/**\n * A simple Immutable Console based diagnostic logger which will output any messages to the Console.\n * If you want to limit the amount of logging to a specific level or lower use the\n * {@link createLogLevelDiagLogger}\n */\nexport class DiagConsoleLogger implements DiagLogger {\n  constructor() {\n    function _consoleFunc(funcName: ConsoleMapKeys): DiagLogFunction {\n      return function (...args) {\n        if (console) {\n          // Some environments only expose the console when the F12 developer console is open\n          // eslint-disable-next-line no-console\n          let theFunc = console[funcName];\n          if (typeof theFunc !== 'function') {\n            // Not all environments support all functions\n            // eslint-disable-next-line no-console\n            theFunc = console.log;\n          }\n\n          // One last final check\n          if (typeof theFunc === 'function') {\n            return theFunc.apply(console, args);\n          }\n        }\n      };\n    }\n\n    for (let i = 0; i < consoleMap.length; i++) {\n      this[consoleMap[i].n] = _consoleFunc(consoleMap[i].c);\n    }\n  }\n\n  /** Log an error scenario that was not expected and caused the requested operation to fail. */\n  public error!: DiagLogFunction;\n\n  /**\n   * Log a warning scenario to inform the developer of an issues that should be investigated.\n   * The requested operation may or may not have succeeded or completed.\n   */\n  public warn!: DiagLogFunction;\n\n  /**\n   * Log a general informational message, this should not affect functionality.\n   * This is also the default logging level so this should NOT be used for logging\n   * debugging level information.\n   */\n  public info!: DiagLogFunction;\n\n  /**\n   * Log a general debug message that can be useful for identifying a failure.\n   * Information logged at this level may include diagnostic details that would\n   * help identify a failure scenario. Useful scenarios would be to log the execution\n   * order of async operations\n   */\n  public debug!: DiagLogFunction;\n\n  /**\n   * Log a detailed (verbose) trace level logging that can be used to identify failures\n   * where debug level logging would be insufficient, this level of tracing can include\n   * input and output parameters and as such may include PII information passing through\n   * the API. As such it is recommended that this level of tracing should not be enabled\n   * in a production environment.\n   */\n  public verbose!: DiagLogFunction;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Attributes, AttributeValue } from '../common/Attributes';\n\n/**\n * @deprecated please use {@link Attributes}\n */\nexport type SpanAttributes = Attributes;\n\n/**\n * @deprecated please use {@link AttributeValue}\n */\nexport type SpanAttributeValue = AttributeValue;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpanAttributes } from './attributes';\nimport { SpanContext } from './span_context';\n\n/**\n * A pointer from the current {@link Span} to another span in the same trace or\n * in a different trace.\n * Few examples of Link usage.\n * 1. Batch Processing: A batch of elements may contain elements associated\n *    with one or more traces/spans. Since there can only be one parent\n *    SpanContext, Link is used to keep reference to SpanContext of all\n *    elements in the batch.\n * 2. Public Endpoint: A SpanContext in incoming client request on a public\n *    endpoint is untrusted from service provider perspective. In such case it\n *    is advisable to start a new trace with appropriate sampling decision.\n *    However, it is desirable to associate incoming SpanContext to new trace\n *    initiated on service provider side so two traces (from Client and from\n *    Service Provider) can be correlated.\n */\nexport interface Link {\n  /** The {@link SpanContext} of a linked span. */\n  context: SpanContext;\n  /** A set of {@link SpanAttributes} on the link. */\n  attributes?: SpanAttributes;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '../context/types';\nimport { SpanAttributes } from './attributes';\nimport { Link } from './link';\nimport { SamplingResult } from './SamplingResult';\nimport { SpanKind } from './span_kind';\n\n/**\n * This interface represent a sampler. Sampling is a mechanism to control the\n * noise and overhead introduced by OpenTelemetry by reducing the number of\n * samples of traces collected and sent to the backend.\n */\nexport interface Sampler {\n  /**\n   * Checks whether span needs to be created and tracked.\n   *\n   * @param context Parent Context which may contain a span.\n   * @param traceId of the span to be created. It can be different from the\n   *     traceId in the {@link SpanContext}. Typically in situations when the\n   *     span to be created starts a new trace.\n   * @param spanName of the span to be created.\n   * @param spanKind of the span to be created.\n   * @param attributes Initial set of SpanAttributes for the Span being constructed.\n   * @param links Collection of links that will be associated with the Span to\n   *     be created. Typically useful for batch operations.\n   * @returns a {@link SamplingResult}.\n   */\n  shouldSample(\n    context: Context,\n    traceId: string,\n    spanName: string,\n    spanKind: SpanKind,\n    attributes: SpanAttributes,\n    links: Link[]\n  ): SamplingResult;\n\n  /** Returns the sampler name or short description with the configuration. */\n  toString(): string;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpanAttributes } from './attributes';\n\n/**\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nexport enum SamplingDecision {\n  /**\n   * `Span.isRecording() === false`, span will not be recorded and all events\n   * and attributes will be dropped.\n   */\n  NOT_RECORD,\n  /**\n   * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n   * MUST NOT be set.\n   */\n  RECORD,\n  /**\n   * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n   * MUST be set.\n   */\n  RECORD_AND_SAMPLED,\n}\n\n/**\n * A sampling result contains a decision for a {@link Span} and additional\n * attributes the sampler would like to added to the Span.\n */\nexport interface SamplingResult {\n  /**\n   * A sampling decision, refer to {@link SamplingDecision} for details.\n   */\n  decision: SamplingDecision;\n  /**\n   * The list of attributes returned by SamplingResult MUST be immutable.\n   * Caller may call {@link Sampler}.shouldSample any number of times and\n   * can safely cache the returned value.\n   */\n  attributes?: Readonly<SpanAttributes>;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TraceState } from './trace_state';\n\n/**\n * A SpanContext represents the portion of a {@link Span} which must be\n * serialized and propagated along side of a {@link Baggage}.\n */\nexport interface SpanContext {\n  /**\n   * The ID of the trace that this span belongs to. It is worldwide unique\n   * with practically sufficient probability by being made as 16 randomly\n   * generated bytes, encoded as a 32 lowercase hex characters corresponding to\n   * 128 bits.\n   */\n  traceId: string;\n  /**\n   * The ID of the Span. It is globally unique with practically sufficient\n   * probability by being made as 8 randomly generated bytes, encoded as a 16\n   * lowercase hex characters corresponding to 64 bits.\n   */\n  spanId: string;\n  /**\n   * Only true if the SpanContext was propagated from a remote parent.\n   */\n  isRemote?: boolean;\n  /**\n   * Trace flags to propagate.\n   *\n   * It is represented as 1 byte (bitmap). Bit to represent whether trace is\n   * sampled or not. When set, the least significant bit documents that the\n   * caller may have recorded trace data. A caller who does not record trace\n   * data out-of-band leaves this flag unset.\n   *\n   * see {@link TraceFlags} for valid flag values.\n   */\n  traceFlags: number;\n  /**\n   * Tracing-system-specific info to propagate.\n   *\n   * The tracestate field value is a `list` as defined below. The `list` is a\n   * series of `list-members` separated by commas `,`, and a list-member is a\n   * key/value pair separated by an equals sign `=`. Spaces and horizontal tabs\n   * surrounding `list-members` are ignored. There can be a maximum of 32\n   * `list-members` in a `list`.\n   * More Info: https://www.w3.org/TR/trace-context/#tracestate-field\n   *\n   * Examples:\n   *     Single tracing system (generic format):\n   *         tracestate: rojo=00f067aa0ba902b7\n   *     Multiple tracing systems (with different formatting):\n   *         tracestate: rojo=00f067aa0ba902b7,congo=t61rcWkgMzE\n   */\n  traceState?: TraceState;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum SpanKind {\n  /** Default value. Indicates that the span is used internally. */\n  INTERNAL = 0,\n\n  /**\n   * Indicates that the span covers server-side handling of an RPC or other\n   * remote request.\n   */\n  SERVER = 1,\n\n  /**\n   * Indicates that the span covers the client-side wrapper around an RPC or\n   * other remote request.\n   */\n  CLIENT = 2,\n\n  /**\n   * Indicates that the span describes producer sending a message to a\n   * broker. Unlike client and server, there is no direct critical path latency\n   * relationship between producer and consumer spans.\n   */\n  PRODUCER = 3,\n\n  /**\n   * Indicates that the span describes consumer receiving a message from a\n   * broker. Unlike client and server, there is no direct critical path latency\n   * relationship between producer and consumer spans.\n   */\n  CONSUMER = 4,\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Exception } from '../common/Exception';\nimport { TimeInput } from '../common/Time';\nimport { SpanAttributes, SpanAttributeValue } from './attributes';\nimport { SpanContext } from './span_context';\nimport { SpanStatus } from './status';\n\n/**\n * An interface that represents a span. A span represents a single operation\n * within a trace. Examples of span might include remote procedure calls or a\n * in-process function calls to sub-components. A Trace has a single, top-level\n * \"root\" Span that in turn may have zero or more child Spans, which in turn\n * may have children.\n *\n * Spans are created by the {@link Tracer.startSpan} method.\n */\nexport interface Span {\n  /**\n   * Returns the {@link SpanContext} object associated with this Span.\n   *\n   * Get an immutable, serializable identifier for this span that can be used\n   * to create new child spans. Returned SpanContext is usable even after the\n   * span ends.\n   *\n   * @returns the SpanContext object associated with this Span.\n   */\n  spanContext(): SpanContext;\n\n  /**\n   * Sets an attribute to the span.\n   *\n   * Sets a single Attribute with the key and value passed as arguments.\n   *\n   * @param key the key for this attribute.\n   * @param value the value for this attribute. Setting a value null or\n   *              undefined is invalid and will result in undefined behavior.\n   */\n  setAttribute(key: string, value: SpanAttributeValue): this;\n\n  /**\n   * Sets attributes to the span.\n   *\n   * @param attributes the attributes that will be added.\n   *                   null or undefined attribute values\n   *                   are invalid and will result in undefined behavior.\n   */\n  setAttributes(attributes: SpanAttributes): this;\n\n  /**\n   * Adds an event to the Span.\n   *\n   * @param name the name of the event.\n   * @param [attributesOrStartTime] the attributes that will be added; these are\n   *     associated with this event. Can be also a start time\n   *     if type is {@type TimeInput} and 3rd param is undefined\n   * @param [startTime] start time of the event.\n   */\n  addEvent(\n    name: string,\n    attributesOrStartTime?: SpanAttributes | TimeInput,\n    startTime?: TimeInput\n  ): this;\n\n  /**\n   * Sets a status to the span. If used, this will override the default Span\n   * status. Default is {@link SpanStatusCode.UNSET}. SetStatus overrides the value\n   * of previous calls to SetStatus on the Span.\n   *\n   * @param status the SpanStatus to set.\n   */\n  setStatus(status: SpanStatus): this;\n\n  /**\n   * Updates the Span name.\n   *\n   * This will override the name provided via {@link Tracer.startSpan}.\n   *\n   * Upon this update, any sampling behavior based on Span name will depend on\n   * the implementation.\n   *\n   * @param name the Span name.\n   */\n  updateName(name: string): this;\n\n  /**\n   * Marks the end of Span execution.\n   *\n   * Call to End of a Span MUST not have any effects on child spans. Those may\n   * still be running and can be ended later.\n   *\n   * Do not return `this`. The Span generally should not be used after it\n   * is ended so chaining is not desired in this context.\n   *\n   * @param [endTime] the time to set as Span's end time. If not provided,\n   *     use the current time as the span's end time.\n   */\n  end(endTime?: TimeInput): void;\n\n  /**\n   * Returns the flag whether this span will be recorded.\n   *\n   * @returns true if this Span is active and recording information like events\n   *     with the `AddEvent` operation and attributes using `setAttributes`.\n   */\n  isRecording(): boolean;\n\n  /**\n   * Sets exception as a span event\n   * @param exception the exception the only accepted values are string or Error\n   * @param [time] the time to set as Span's event time. If not provided,\n   *     use the current time.\n   */\n  recordException(exception: Exception, time?: TimeInput): void;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TimeInput } from '../common/Time';\nimport { SpanAttributes } from './attributes';\nimport { Link } from './link';\nimport { SpanKind } from './span_kind';\n\n/**\n * Options needed for span creation\n */\nexport interface SpanOptions {\n  /**\n   * The SpanKind of a span\n   * @default {@link SpanKind.INTERNAL}\n   */\n  kind?: SpanKind;\n\n  /** A span's attributes */\n  attributes?: SpanAttributes;\n\n  /** {@link Link}s span to other spans */\n  links?: Link[];\n\n  /** A manually specified start time for the created `Span` object. */\n  startTime?: TimeInput;\n\n  /** The new span should be a root span. (Ignore parent from context). */\n  root?: boolean;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport interface SpanStatus {\n  /** The status code of this message. */\n  code: SpanStatusCode;\n  /** A developer-facing error message. */\n  message?: string;\n}\n\n/**\n * An enumeration of status codes.\n */\nexport enum SpanStatusCode {\n  /**\n   * The default status.\n   */\n  UNSET = 0,\n  /**\n   * The operation has been validated by an Application developer or\n   * Operator to have completed successfully.\n   */\n  OK = 1,\n  /**\n   * The operation contains an error.\n   */\n  ERROR = 2,\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface TraceState {\n  /**\n   * Create a new TraceState which inherits from this TraceState and has the\n   * given key set.\n   * The new entry will always be added in the front of the list of states.\n   *\n   * @param key key of the TraceState entry.\n   * @param value value of the TraceState entry.\n   */\n  set(key: string, value: string): TraceState;\n\n  /**\n   * Return a new TraceState which inherits from this TraceState but does not\n   * contain the given key.\n   *\n   * @param key the key for the TraceState entry to be removed.\n   */\n  unset(key: string): TraceState;\n\n  /**\n   * Returns the value to which the specified key is mapped, or `undefined` if\n   * this map contains no mapping for the key.\n   *\n   * @param key with which the specified value is to be associated.\n   * @returns the value to which the specified key is mapped, or `undefined` if\n   *     this map contains no mapping for the key.\n   */\n  get(key: string): string | undefined;\n\n  // TODO: Consider to add support for merging an object as well by also\n  // accepting a single internalTraceState argument similar to the constructor.\n\n  /**\n   * Serializes the TraceState to a `list` as defined below. The `list` is a\n   * series of `list-members` separated by commas `,`, and a list-member is a\n   * key/value pair separated by an equals sign `=`. Spaces and horizontal tabs\n   * surrounding `list-members` are ignored. There can be a maximum of 32\n   * `list-members` in a `list`.\n   *\n   * @returns the serialized string.\n   */\n  serialize(): string;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TraceState } from '../trace_state';\nimport { TraceStateImpl } from './tracestate-impl';\n\n\nexport function createTraceState(rawTraceState?: string): TraceState {\n  return new TraceStateImpl(rawTraceState);\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TraceState } from '../trace_state';\nimport { validateKey, validateValue } from './tracestate-validators';\n\nconst MAX_TRACE_STATE_ITEMS = 32;\nconst MAX_TRACE_STATE_LEN = 512;\nconst LIST_MEMBERS_SEPARATOR = ',';\nconst LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nexport class TraceStateImpl implements TraceState {\n  private _internalState: Map<string, string> = new Map();\n\n  constructor(rawTraceState?: string) {\n    if (rawTraceState) this._parse(rawTraceState);\n  }\n\n  set(key: string, value: string): TraceStateImpl {\n    // TODO: Benchmark the different approaches(map vs list) and\n    // use the faster one.\n    const traceState = this._clone();\n    if (traceState._internalState.has(key)) {\n      traceState._internalState.delete(key);\n    }\n    traceState._internalState.set(key, value);\n    return traceState;\n  }\n\n  unset(key: string): TraceStateImpl {\n    const traceState = this._clone();\n    traceState._internalState.delete(key);\n    return traceState;\n  }\n\n  get(key: string): string | undefined {\n    return this._internalState.get(key);\n  }\n\n  serialize(): string {\n    return this._keys()\n      .reduce((agg: string[], key) => {\n        agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + this.get(key));\n        return agg;\n      }, [])\n      .join(LIST_MEMBERS_SEPARATOR);\n  }\n\n  private _parse(rawTraceState: string) {\n    if (rawTraceState.length > MAX_TRACE_STATE_LEN) return;\n    this._internalState = rawTraceState\n      .split(LIST_MEMBERS_SEPARATOR)\n      .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n      .reduce((agg: Map<string, string>, part: string) => {\n        const listMember = part.trim(); // Optional Whitespace (OWS) handling\n        const i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n        if (i !== -1) {\n          const key = listMember.slice(0, i);\n          const value = listMember.slice(i + 1, part.length);\n          if (validateKey(key) && validateValue(value)) {\n            agg.set(key, value);\n          } else {\n            // TODO: Consider to add warning log\n          }\n        }\n        return agg;\n      }, new Map());\n\n    // Because of the reverse() requirement, trunc must be done after map is created\n    if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n      this._internalState = new Map(\n        Array.from(this._internalState.entries())\n          .reverse() // Use reverse same as original tracestate parse chain\n          .slice(0, MAX_TRACE_STATE_ITEMS)\n      );\n    }\n  }\n\n  private _keys(): string[] {\n    return Array.from(this._internalState.keys()).reverse();\n  }\n\n  private _clone(): TraceStateImpl {\n    const traceState = new TraceStateImpl();\n    traceState._internalState = new Map(this._internalState);\n    return traceState;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nconst VALID_KEY = `[a-z]${VALID_KEY_CHAR_RANGE}{0,255}`;\nconst VALID_VENDOR_KEY = `[a-z0-9]${VALID_KEY_CHAR_RANGE}{0,240}@[a-z]${VALID_KEY_CHAR_RANGE}{0,13}`;\nconst VALID_KEY_REGEX = new RegExp(`^(?:${VALID_KEY}|${VALID_VENDOR_KEY})$`);\nconst VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nconst INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key: string): boolean {\n  return VALID_KEY_REGEX.test(key);\n}\n\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value: string): boolean {\n  return (\n    VALID_VALUE_BASE_REGEX.test(value) &&\n    !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value)\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Tracer } from './tracer';\nimport { TracerOptions } from './tracer_options';\n\n/**\n * A registry for creating named {@link Tracer}s.\n */\nexport interface TracerProvider {\n  /**\n   * Returns a Tracer, creating one if one with the given name and version is\n   * not already created.\n   *\n   * This function may return different Tracer types (e.g.\n   * {@link NoopTracerProvider} vs. a functional tracer).\n   *\n   * @param name The name of the tracer or instrumentation library.\n   * @param version The version of the tracer or instrumentation library.\n   * @param options The options of the tracer or instrumentation library.\n   * @returns Tracer A Tracer with the given name and version\n   */\n  getTracer(name: string, version?: string, options?: TracerOptions): Tracer;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '../context/types';\nimport { Span } from './span';\nimport { SpanOptions } from './SpanOptions';\n\n/**\n * Tracer provides an interface for creating {@link Span}s.\n */\nexport interface Tracer {\n  /**\n   * Starts a new {@link Span}. Start the span without setting it on context.\n   *\n   * This method do NOT modify the current Context.\n   *\n   * @param name The name of the span\n   * @param [options] SpanOptions used for span creation\n   * @param [context] Context to use to extract parent\n   * @returns Span The newly created span\n   * @example\n   *     const span = tracer.startSpan('op');\n   *     span.setAttribute('key', 'value');\n   *     span.end();\n   */\n  startSpan(name: string, options?: SpanOptions, context?: Context): Span;\n\n  /**\n   * Starts a new {@link Span} and calls the given function passing it the\n   * created span as first argument.\n   * Additionally the new span gets set in context and this context is activated\n   * for the duration of the function call.\n   *\n   * @param name The name of the span\n   * @param [options] SpanOptions used for span creation\n   * @param [context] Context to use to extract parent\n   * @param fn function called in the context of the span and receives the newly created span as an argument\n   * @returns return value of fn\n   * @example\n   *     const something = tracer.startActiveSpan('op', span => {\n   *       try {\n   *         do some work\n   *         span.setStatus({code: SpanStatusCode.OK});\n   *         return something;\n   *       } catch (err) {\n   *         span.setStatus({\n   *           code: SpanStatusCode.ERROR,\n   *           message: err.message,\n   *         });\n   *         throw err;\n   *       } finally {\n   *         span.end();\n   *       }\n   *     });\n   *\n   * @example\n   *     const span = tracer.startActiveSpan('op', span => {\n   *       try {\n   *         do some work\n   *         return span;\n   *       } catch (err) {\n   *         span.setStatus({\n   *           code: SpanStatusCode.ERROR,\n   *           message: err.message,\n   *         });\n   *         throw err;\n   *       }\n   *     });\n   *     do some more work\n   *     span.end();\n   */\n  startActiveSpan<F extends (span: Span) => unknown>(\n    name: string,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: Span) => unknown>(\n    name: string,\n    options: SpanOptions,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: Span) => unknown>(\n    name: string,\n    options: SpanOptions,\n    context: Context,\n    fn: F\n  ): ReturnType<F>;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An interface describes additional metadata of a tracer.\n */\nexport interface TracerOptions {\n  /**\n   * The schemaUrl of the tracer or instrumentation library\n   */\n  schemaUrl?: string;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Context {\n  /**\n   * Get a value from the context.\n   *\n   * @param key key which identifies a context value\n   */\n  getValue(key: symbol): unknown;\n\n  /**\n   * Create a new context which inherits from this context and has\n   * the given key set to the given value.\n   *\n   * @param key context key for which to set the value\n   * @param value value to set for the given key\n   */\n  setValue(key: symbol, value: unknown): Context;\n\n  /**\n   * Return a new context which inherits from this context but does\n   * not contain a value for the given key.\n   *\n   * @param key context key for which to clear a value\n   */\n  deleteValue(key: symbol): Context;\n}\n\nexport interface ContextManager {\n  /**\n   * Get the current active context\n   */\n  active(): Context;\n\n  /**\n   * Run the fn callback with object set as the current active context\n   * @param context Any object to set as the current active context\n   * @param fn A callback to be immediately run within a specific context\n   * @param thisArg optional receiver to be used for calling fn\n   * @param args optional arguments forwarded to fn\n   */\n  with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    context: Context,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F>;\n\n  /**\n   * Bind an object as the current context (or a specific one)\n   * @param [context] Optionally specify the context which you want to assign\n   * @param target Any object to which a context need to be set\n   */\n  bind<T>(context: Context, target: T): T;\n\n  /**\n   * Enable context management\n   */\n  enable(): this;\n\n  /**\n   * Disable context management\n   */\n  disable(): this;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './baggage/propagation/W3CBaggagePropagator';\nexport * from './common/attributes';\nexport * from './common/global-error-handler';\nexport * from './common/logging-error-handler';\nexport * from './common/time';\nexport * from './common/types';\nexport * from './ExportResult';\nexport * from './version';\nexport * as baggageUtils from './baggage/utils';\nexport * from './platform';\nexport * from './propagation/composite';\nexport * from './trace/W3CTraceContextPropagator';\nexport * from './trace/IdGenerator';\nexport * from './trace/rpc-metadata';\nexport * from './trace/sampler/AlwaysOffSampler';\nexport * from './trace/sampler/AlwaysOnSampler';\nexport * from './trace/sampler/ParentBasedSampler';\nexport * from './trace/sampler/TraceIdRatioBasedSampler';\nexport * from './trace/suppress-tracing';\nexport * from './trace/TraceState';\nexport * from './utils/environment';\nexport * from './utils/merge';\nexport * from './utils/sampling';\nexport * from './utils/url';\nexport * from './utils/wrap';\nexport * from './utils/callback';\nexport * from './version';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Baggage, BaggageEntryMetadata, baggageEntryMetadataFromString } from '@opentelemetry/api';\nimport {\n  BAGGAGE_ITEMS_SEPARATOR,\n  BAGGAGE_PROPERTIES_SEPARATOR,\n  BAGGAGE_KEY_PAIR_SEPARATOR,\n  BAGGAGE_MAX_TOTAL_LENGTH,\n} from './constants';\n\ntype ParsedBaggageKeyValue = { key: string, value: string, metadata: BaggageEntryMetadata | undefined };\n\nexport function serializeKeyPairs(keyPairs: string[]): string {\n  return keyPairs.reduce((hValue: string, current: string) => {\n    const value = `${hValue}${hValue !== '' ? BAGGAGE_ITEMS_SEPARATOR : ''\n    }${current}`;\n    return value.length > BAGGAGE_MAX_TOTAL_LENGTH ? hValue : value;\n  }, '');\n}\n\nexport function getKeyPairs(baggage: Baggage): string[] {\n  return baggage.getAllEntries().map(([key, value]) => {\n    let entry = `${encodeURIComponent(key)}=${encodeURIComponent(value.value)}`;\n\n    // include opaque metadata if provided\n    // NOTE: we intentionally don't URI-encode the metadata - that responsibility falls on the metadata implementation\n    if (value.metadata !== undefined) {\n      entry += BAGGAGE_PROPERTIES_SEPARATOR + value.metadata.toString();\n    }\n\n    return entry;\n  });\n}\n\nexport function parsePairKeyValue(entry: string): ParsedBaggageKeyValue | undefined {\n  const valueProps = entry.split(BAGGAGE_PROPERTIES_SEPARATOR);\n  if (valueProps.length <= 0) return;\n  const keyPairPart = valueProps.shift();\n  if (!keyPairPart) return;\n  const keyPair = keyPairPart.split(BAGGAGE_KEY_PAIR_SEPARATOR);\n  if (keyPair.length !== 2) return;\n  const key = decodeURIComponent(keyPair[0].trim());\n  const value = decodeURIComponent(keyPair[1].trim());\n  let metadata;\n  if (valueProps.length > 0) {\n    metadata = baggageEntryMetadataFromString(\n      valueProps.join(BAGGAGE_PROPERTIES_SEPARATOR)\n    );\n  }\n  return { key, value, metadata };\n}\n\n/**\n * Parse a string serialized in the baggage HTTP Format (without metadata):\n * https://github.com/w3c/baggage/blob/master/baggage/HTTP_HEADER_FORMAT.md\n */\nexport function parseKeyPairsIntoRecord(value?: string): Record<string, string> {\n  if (typeof value !== 'string' || value.length === 0) return {};\n  return value\n    .split(BAGGAGE_ITEMS_SEPARATOR)\n    .map(entry => {\n      return parsePairKeyValue(entry);\n    })\n    .filter(keyPair => keyPair !== undefined && keyPair.value.length > 0)\n    .reduce<Record<string, string>>((headers, keyPair) => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      headers[keyPair!.key] = keyPair!.value;\n      return headers;\n    }, {});\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const BAGGAGE_KEY_PAIR_SEPARATOR = '=';\nexport const BAGGAGE_PROPERTIES_SEPARATOR = ';';\nexport const BAGGAGE_ITEMS_SEPARATOR = ',';\n\n// Name of the http header used to propagate the baggage\nexport const BAGGAGE_HEADER = 'baggage';\n// Maximum number of name-value pairs allowed by w3c spec\nexport const BAGGAGE_MAX_NAME_VALUE_PAIRS = 180;\n// Maximum number of bytes per a single name-value pair allowed by w3c spec\nexport const BAGGAGE_MAX_PER_NAME_VALUE_PAIRS = 4096;\n// Maximum total length of all name-value pairs allowed by w3c spec\nexport const BAGGAGE_MAX_TOTAL_LENGTH = 8192;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BaggageEntry,\n  Context,\n  propagation,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n} from '@opentelemetry/api';\n\nimport { isTracingSuppressed } from '../../trace/suppress-tracing';\nimport {\n  BAGGAGE_HEADER,\n  BAGGAGE_ITEMS_SEPARATOR,\n  BAGGAGE_MAX_NAME_VALUE_PAIRS,\n  BAGGAGE_MAX_PER_NAME_VALUE_PAIRS\n} from '../constants';\nimport {\n  getKeyPairs,\n  parsePairKeyValue,\n  serializeKeyPairs\n} from '../utils';\n\n/**\n * Propagates {@link Baggage} through Context format propagation.\n *\n * Based on the Baggage specification:\n * https://w3c.github.io/baggage/\n */\nexport class W3CBaggagePropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const baggage = propagation.getBaggage(context);\n    if (!baggage || isTracingSuppressed(context)) return;\n    const keyPairs = getKeyPairs(baggage)\n      .filter((pair: string) => {\n        return pair.length <= BAGGAGE_MAX_PER_NAME_VALUE_PAIRS;\n      })\n      .slice(0, BAGGAGE_MAX_NAME_VALUE_PAIRS);\n    const headerValue = serializeKeyPairs(keyPairs);\n    if (headerValue.length > 0) {\n      setter.set(carrier, BAGGAGE_HEADER, headerValue);\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const headerValue = getter.get(carrier, BAGGAGE_HEADER);\n    const baggageString = Array.isArray(headerValue) ? headerValue.join(BAGGAGE_ITEMS_SEPARATOR) : headerValue;\n    if (!baggageString) return context;\n    const baggage: Record<string, BaggageEntry> = {};\n    if (baggageString.length === 0) {\n      return context;\n    }\n    const pairs = baggageString.split(BAGGAGE_ITEMS_SEPARATOR);\n    pairs.forEach(entry => {\n      const keyPair = parsePairKeyValue(entry);\n      if (keyPair) {\n        const baggageEntry: BaggageEntry = { value: keyPair.value };\n        if (keyPair.metadata) {\n          baggageEntry.metadata = keyPair.metadata;\n        }\n        baggage[keyPair.key] = baggageEntry;\n      }\n    });\n    if (Object.entries(baggage).length === 0) {\n      return context;\n    }\n    return propagation.setBaggage(context, propagation.createBaggage(baggage));\n  }\n\n  fields(): string[] {\n    return [BAGGAGE_HEADER];\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, createContextKey } from '@opentelemetry/api';\n\nconst SUPPRESS_TRACING_KEY = createContextKey(\n  'OpenTelemetry SDK Context Key SUPPRESS_TRACING'\n);\n\nexport function suppressTracing(context: Context): Context {\n  return context.setValue(SUPPRESS_TRACING_KEY, true);\n}\n\nexport function unsuppressTracing(context: Context): Context {\n  return context.deleteValue(SUPPRESS_TRACING_KEY);\n}\n\nexport function isTracingSuppressed(context: Context): boolean {\n  return context.getValue(SUPPRESS_TRACING_KEY) === true;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, SpanAttributeValue, SpanAttributes } from '@opentelemetry/api';\n\nexport function sanitizeAttributes(attributes: unknown): SpanAttributes {\n  const out: SpanAttributes = {};\n\n  if (typeof attributes !== 'object' || attributes == null) {\n    return out;\n  }\n\n  for (const [key, val] of Object.entries(attributes)) {\n    if (!isAttributeKey(key)) {\n      diag.warn(`Invalid attribute key: ${key}`);\n      continue;\n    }\n    if (!isAttributeValue(val)) {\n      diag.warn(`Invalid attribute value set for key: ${key}`);\n      continue;\n    }\n    if (Array.isArray(val)) {\n      out[key] = val.slice();\n    } else {\n      out[key] = val;\n    }\n  }\n\n  return out;\n}\n\nexport function isAttributeKey(key: unknown): key is string {\n  return typeof key === 'string' && key.length > 0;\n}\n\nexport function isAttributeValue(val: unknown): val is SpanAttributeValue {\n  if (val == null) {\n    return true;\n  }\n\n  if (Array.isArray(val)) {\n    return isHomogeneousAttributeValueArray(val);\n  }\n\n  return isValidPrimitiveAttributeValue(val);\n}\n\nfunction isHomogeneousAttributeValueArray(arr: unknown[]): boolean {\n  let type: string | undefined;\n\n  for (const element of arr) {\n    // null/undefined elements are allowed\n    if (element == null) continue;\n\n    if (!type) {\n      if (isValidPrimitiveAttributeValue(element)) {\n        type = typeof element;\n        continue;\n      }\n      // encountered an invalid primitive\n      return false;\n    }\n\n    if (typeof element === type) {\n      continue;\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction isValidPrimitiveAttributeValue(val: unknown): boolean {\n  switch (typeof val) {\n    case 'number':\n    case 'boolean':\n    case 'string':\n      return true;\n  }\n\n  return false;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Exception } from '@opentelemetry/api';\nimport { loggingErrorHandler } from './logging-error-handler';\nimport { ErrorHandler } from './types';\n\n/** The global error handler delegate */\nlet delegateHandler = loggingErrorHandler();\n\n/**\n * Set the global error handler\n * @param {ErrorHandler} handler\n */\nexport function setGlobalErrorHandler(handler: ErrorHandler): void {\n  delegateHandler = handler;\n}\n\n/**\n * Return the global error handler\n * @param {Exception} ex\n */\nexport function globalErrorHandler(ex: Exception): void {\n  try {\n    delegateHandler(ex);\n  } catch {} // eslint-disable-line no-empty\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, Exception } from '@opentelemetry/api';\nimport { ErrorHandler } from './types';\n\n/**\n * Returns a function that logs an error using the provided logger, or a\n * console logger if one was not provided.\n */\nexport function loggingErrorHandler(): ErrorHandler {\n  return (ex: Exception) => {\n    diag.error(stringifyException(ex));\n  };\n}\n\n/**\n * Converts an exception into a string representation\n * @param {Exception} ex\n */\nfunction stringifyException(ex: Exception | string): string {\n  if (typeof ex === 'string') {\n    return ex;\n  } else {\n    return JSON.stringify(flattenException(ex));\n  }\n}\n\n/**\n * Flattens an exception into key-value pairs by traversing the prototype chain\n * and coercing values to strings. Duplicate properties will not be overwritten;\n * the first insert wins.\n */\nfunction flattenException(ex: Exception): Record<string, string> {\n  const result = {} as Record<string, string>;\n  let current = ex;\n\n  while (current !== null) {\n    Object.getOwnPropertyNames(current).forEach(propertyName => {\n      if (result[propertyName]) return;\n      const value = current[propertyName as keyof typeof current];\n      if (value) {\n        result[propertyName] = String(value);\n      }\n    });\n    current = Object.getPrototypeOf(current);\n  }\n\n  return result;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { otperformance as performance } from '../platform';\nimport { TimeOriginLegacy } from './types';\n\nconst NANOSECOND_DIGITS = 9;\nconst SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n\n/**\n * Converts a number to HrTime, HrTime = [number, number].\n * The first number is UNIX Epoch time in seconds since 00:00:00 UTC on 1 January 1970.\n * The second number represents the partial second elapsed since Unix Epoch time represented by first number in nanoseconds.\n * For example, 2021-01-01T12:30:10.150Z in UNIX Epoch time in milliseconds is represented as 1609504210150.\n * numberToHrtime calculates the first number by converting and truncating the Epoch time in milliseconds to seconds:\n * HrTime[0] = Math.trunc(1609504210150 / 1000) = 1609504210.\n * numberToHrtime calculates the second number by converting the digits after the decimal point of the subtraction, (1609504210150 / 1000) - HrTime[0], to nanoseconds:\n * HrTime[1] = Number((1609504210.150 - HrTime[0]).toFixed(9)) * SECOND_TO_NANOSECONDS = 150000000.\n * This is represented in HrTime format as [1609504210, 150000000].\n * @param epochMillis\n */\nfunction numberToHrtime(epochMillis: number): api.HrTime {\n  const epochSeconds = epochMillis / 1000;\n  // Decimals only.\n  const seconds = Math.trunc(epochSeconds);\n  // Round sub-nanosecond accuracy to nanosecond.\n  const nanos =\n    Number((epochSeconds - seconds).toFixed(NANOSECOND_DIGITS)) *\n    SECOND_TO_NANOSECONDS;\n  return [seconds, nanos];\n}\n\nfunction getTimeOrigin(): number {\n  let timeOrigin = performance.timeOrigin;\n  if (typeof timeOrigin !== 'number') {\n    const perf: TimeOriginLegacy = (performance as unknown) as TimeOriginLegacy;\n    timeOrigin = perf.timing && perf.timing.fetchStart;\n  }\n  return timeOrigin;\n}\n\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow?: number): api.HrTime {\n  const timeOrigin = numberToHrtime(getTimeOrigin());\n  const now = numberToHrtime(\n    typeof performanceNow === 'number' ? performanceNow : performance.now()\n  );\n\n  let seconds = timeOrigin[0] + now[0];\n  let nanos = timeOrigin[1] + now[1];\n\n  // Nanoseconds\n  if (nanos > SECOND_TO_NANOSECONDS) {\n    nanos -= SECOND_TO_NANOSECONDS;\n    seconds += 1;\n  }\n\n  return [seconds, nanos];\n}\n\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time: api.TimeInput): api.HrTime {\n  // process.hrtime\n  if (isTimeInputHrTime(time)) {\n    return time as api.HrTime;\n  } else if (typeof time === 'number') {\n    // Must be a performance.now() if it's smaller than process start time.\n    if (time < getTimeOrigin()) {\n      return hrTime(time);\n    } else {\n      // epoch milliseconds or performance.timeOrigin\n      return numberToHrtime(time);\n    }\n  } else if (time instanceof Date) {\n    return numberToHrtime(time.getTime());\n  } else {\n    throw TypeError('Invalid input type');\n  }\n}\n\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(\n  startTime: api.HrTime,\n  endTime: api.HrTime\n): api.HrTime {\n  let seconds = endTime[0] - startTime[0];\n  let nanos = endTime[1] - startTime[1];\n\n  // overflow\n  if (nanos < 0) {\n    seconds -= 1;\n    // negate\n    nanos += SECOND_TO_NANOSECONDS;\n  }\n\n  return [seconds, nanos];\n}\n\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time: api.HrTime): string {\n  const precision = NANOSECOND_DIGITS;\n  const tmp = `${'0'.repeat(precision)}${time[1]}Z`;\n  const nanoString = tmp.substr(tmp.length - precision - 1);\n  const date = new Date(time[0] * 1000).toISOString();\n  return date.replace('000Z', nanoString);\n}\n\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time: api.HrTime): number {\n  return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time: api.HrTime): number {\n  return Math.round(time[0] * 1e3 + time[1] / 1e6);\n}\n\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time: api.HrTime): number {\n  return Math.round(time[0] * 1e6 + time[1] / 1e3);\n}\n\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value: unknown): value is api.HrTime {\n  return (\n    Array.isArray(value) &&\n    value.length === 2 &&\n    typeof value[0] === 'number' &&\n    typeof value[1] === 'number'\n  );\n}\n\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(value: unknown): value is api.HrTime | number | Date {\n  return (\n    isTimeInputHrTime(value) ||\n    typeof value === 'number' ||\n    value instanceof Date\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './environment';\nexport * from './globalThis';\nexport * from './hex-to-base64';\nexport * from './RandomIdGenerator';\nexport * from './performance';\nexport * from './sdk-info';\nexport * from './timer-util';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_ENVIRONMENT,\n  ENVIRONMENT,\n  RAW_ENVIRONMENT,\n  parseEnvironment,\n} from '../../utils/environment';\nimport { _globalThis } from './globalThis';\n\n/**\n * Gets the environment variables\n */\nexport function getEnv(): Required<ENVIRONMENT> {\n  const globalEnv = parseEnvironment(_globalThis as typeof globalThis & RAW_ENVIRONMENT);\n  return Object.assign({}, DEFAULT_ENVIRONMENT, globalEnv);\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagLogLevel } from '@opentelemetry/api';\nimport { TracesSamplerValues } from './sampling';\nimport { _globalThis } from '../platform/browser/globalThis';\n\nconst DEFAULT_LIST_SEPARATOR = ',';\n\n/**\n * Environment interface to define all names\n */\n\nconst ENVIRONMENT_NUMBERS_KEYS = [\n  'OTEL_BSP_EXPORT_TIMEOUT',\n  'OTEL_BSP_MAX_EXPORT_BATCH_SIZE',\n  'OTEL_BSP_MAX_QUEUE_SIZE',\n  'OTEL_BSP_SCHEDULE_DELAY',\n  'OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_SPAN_EVENT_COUNT_LIMIT',\n  'OTEL_SPAN_LINK_COUNT_LIMIT',\n  'OTEL_EXPORTER_OTLP_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_TRACES_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_METRICS_TIMEOUT',\n  'OTEL_EXPORTER_JAEGER_AGENT_PORT',\n] as const;\n\ntype ENVIRONMENT_NUMBERS = {\n  [K in typeof ENVIRONMENT_NUMBERS_KEYS[number]]?: number;\n};\n\nfunction isEnvVarANumber(key: unknown): key is keyof ENVIRONMENT_NUMBERS {\n  return (\n    ENVIRONMENT_NUMBERS_KEYS.indexOf(key as keyof ENVIRONMENT_NUMBERS) > -1\n  );\n}\n\nconst ENVIRONMENT_LISTS_KEYS = [\n  'OTEL_NO_PATCH_MODULES',\n  'OTEL_PROPAGATORS',\n] as const;\n\ntype ENVIRONMENT_LISTS = {\n  [K in typeof ENVIRONMENT_LISTS_KEYS[number]]?: string[];\n};\n\nfunction isEnvVarAList(key: unknown): key is keyof ENVIRONMENT_LISTS {\n  return ENVIRONMENT_LISTS_KEYS.indexOf(key as keyof ENVIRONMENT_LISTS) > -1;\n}\n\nexport type ENVIRONMENT = {\n  CONTAINER_NAME?: string;\n  ECS_CONTAINER_METADATA_URI_V4?: string;\n  ECS_CONTAINER_METADATA_URI?: string;\n  HOSTNAME?: string;\n  KUBERNETES_SERVICE_HOST?: string;\n  NAMESPACE?: string;\n  OTEL_EXPORTER_JAEGER_AGENT_HOST?: string;\n  OTEL_EXPORTER_JAEGER_ENDPOINT?: string;\n  OTEL_EXPORTER_JAEGER_PASSWORD?: string;\n  OTEL_EXPORTER_JAEGER_USER?: string;\n  OTEL_EXPORTER_OTLP_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_TRACES_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_METRICS_HEADERS?: string;\n  OTEL_EXPORTER_ZIPKIN_ENDPOINT?: string;\n  OTEL_LOG_LEVEL?: DiagLogLevel;\n  OTEL_RESOURCE_ATTRIBUTES?: string;\n  OTEL_SERVICE_NAME?: string;\n  OTEL_TRACES_EXPORTER?: string;\n  OTEL_TRACES_SAMPLER_ARG?: string;\n  OTEL_TRACES_SAMPLER?: string;\n  OTEL_EXPORTER_OTLP_INSECURE?: string,\n  OTEL_EXPORTER_OTLP_TRACES_INSECURE?: string,\n  OTEL_EXPORTER_OTLP_METRICS_INSECURE?: string,\n  OTEL_EXPORTER_OTLP_CERTIFICATE?: string,\n  OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE?: string,\n  OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE?: string,\n  OTEL_EXPORTER_OTLP_COMPRESSION?: string,\n  OTEL_EXPORTER_OTLP_TRACES_COMPRESSION?: string,\n  OTEL_EXPORTER_OTLP_METRICS_COMPRESSION?: string\n  OTEL_EXPORTER_OTLP_CLIENT_KEY?: string,\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY?: string,\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY?: string,\n  OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE?: string,\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE?: string,\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE?: string\n} & ENVIRONMENT_NUMBERS &\n  ENVIRONMENT_LISTS;\n\nexport type RAW_ENVIRONMENT = {\n  [key: string]: string | number | undefined | string[];\n};\n\nexport const DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT = Infinity;\n\nexport const DEFAULT_ATTRIBUTE_COUNT_LIMIT = 128;\n\n/**\n * Default environment variables\n */\nexport const DEFAULT_ENVIRONMENT: Required<ENVIRONMENT> = {\n  CONTAINER_NAME: '',\n  ECS_CONTAINER_METADATA_URI_V4: '',\n  ECS_CONTAINER_METADATA_URI: '',\n  HOSTNAME: '',\n  KUBERNETES_SERVICE_HOST: '',\n  NAMESPACE: '',\n  OTEL_BSP_EXPORT_TIMEOUT: 30000,\n  OTEL_BSP_MAX_EXPORT_BATCH_SIZE: 512,\n  OTEL_BSP_MAX_QUEUE_SIZE: 2048,\n  OTEL_BSP_SCHEDULE_DELAY: 5000,\n  OTEL_EXPORTER_JAEGER_AGENT_HOST: '',\n  OTEL_EXPORTER_JAEGER_AGENT_PORT: 6832,\n  OTEL_EXPORTER_JAEGER_ENDPOINT: '',\n  OTEL_EXPORTER_JAEGER_PASSWORD: '',\n  OTEL_EXPORTER_JAEGER_USER: '',\n  OTEL_EXPORTER_OTLP_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_HEADERS: '',\n  OTEL_EXPORTER_OTLP_TRACES_HEADERS: '',\n  OTEL_EXPORTER_OTLP_METRICS_HEADERS: '',\n  OTEL_EXPORTER_OTLP_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_METRICS_TIMEOUT: 10000,\n  OTEL_EXPORTER_ZIPKIN_ENDPOINT: 'http://localhost:9411/api/v2/spans',\n  OTEL_LOG_LEVEL: DiagLogLevel.INFO,\n  OTEL_NO_PATCH_MODULES: [],\n  OTEL_PROPAGATORS: ['tracecontext', 'baggage'],\n  OTEL_RESOURCE_ATTRIBUTES: '',\n  OTEL_SERVICE_NAME: '',\n  OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  OTEL_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT ,\n  OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_SPAN_EVENT_COUNT_LIMIT: 128,\n  OTEL_SPAN_LINK_COUNT_LIMIT: 128,\n  OTEL_TRACES_EXPORTER: 'none',\n  OTEL_TRACES_SAMPLER: TracesSamplerValues.ParentBasedAlwaysOn,\n  OTEL_TRACES_SAMPLER_ARG: '',\n  OTEL_EXPORTER_OTLP_INSECURE: '',\n  OTEL_EXPORTER_OTLP_TRACES_INSECURE: '',\n  OTEL_EXPORTER_OTLP_METRICS_INSECURE: '',\n  OTEL_EXPORTER_OTLP_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_TRACES_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_METRICS_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE: ''\n};\n\n/**\n * Parses a variable as number with number validation\n * @param name\n * @param environment\n * @param values\n * @param min\n * @param max\n */\nfunction parseNumber(\n  name: keyof ENVIRONMENT_NUMBERS,\n  environment: ENVIRONMENT,\n  values: RAW_ENVIRONMENT,\n  min = -Infinity,\n  max = Infinity\n) {\n  if (typeof values[name] !== 'undefined') {\n    const value = Number(values[name] as string);\n    if (!isNaN(value)) {\n      if (value < min) {\n        environment[name] = min;\n      } else if (value > max) {\n        environment[name] = max;\n      } else {\n        environment[name] = value;\n      }\n    }\n  }\n}\n\n/**\n * Parses list-like strings from input into output.\n * @param name\n * @param environment\n * @param values\n * @param separator\n */\nfunction parseStringList(\n  name: keyof ENVIRONMENT_LISTS,\n  output: ENVIRONMENT,\n  input: RAW_ENVIRONMENT,\n  separator = DEFAULT_LIST_SEPARATOR\n) {\n  const givenValue = input[name];\n  if (typeof givenValue === 'string') {\n    output[name] = givenValue.split(separator).map(v => v.trim());\n  }\n}\n\n// The support string -> DiagLogLevel mappings\nconst logLevelMap: { [key: string]: DiagLogLevel } = {\n  ALL: DiagLogLevel.ALL,\n  VERBOSE: DiagLogLevel.VERBOSE,\n  DEBUG: DiagLogLevel.DEBUG,\n  INFO: DiagLogLevel.INFO,\n  WARN: DiagLogLevel.WARN,\n  ERROR: DiagLogLevel.ERROR,\n  NONE: DiagLogLevel.NONE,\n};\n\n/**\n * Environmentally sets log level if valid log level string is provided\n * @param key\n * @param environment\n * @param values\n */\nfunction setLogLevelFromEnv(\n  key: keyof ENVIRONMENT,\n  environment: RAW_ENVIRONMENT | ENVIRONMENT,\n  values: RAW_ENVIRONMENT\n) {\n  const value = values[key];\n  if (typeof value === 'string') {\n    const theLevel = logLevelMap[value.toUpperCase()];\n    if (theLevel != null) {\n      environment[key] = theLevel;\n    }\n  }\n}\n\n/**\n * Parses environment values\n * @param values\n */\nexport function parseEnvironment(values: RAW_ENVIRONMENT): ENVIRONMENT {\n  const environment: ENVIRONMENT = {};\n\n  for (const env in DEFAULT_ENVIRONMENT) {\n    const key = env as keyof ENVIRONMENT;\n\n    switch (key) {\n      case 'OTEL_LOG_LEVEL':\n        setLogLevelFromEnv(key, environment, values);\n        break;\n\n      default:\n        if (isEnvVarANumber(key)) {\n          parseNumber(key, environment, values);\n        } else if (isEnvVarAList(key)) {\n          parseStringList(key, environment, values);\n        } else {\n          const value = values[key];\n          if (typeof value !== 'undefined' && value !== null) {\n            environment[key] = String(value);\n          }\n        }\n    }\n  }\n\n  return environment;\n}\n\n/**\n * Get environment in node or browser without\n * populating default values.\n */\nexport function getEnvWithoutDefaults(): ENVIRONMENT {\n  return typeof process !== 'undefined' ?\n    parseEnvironment(process.env as RAW_ENVIRONMENT) :\n    parseEnvironment(_globalThis as typeof globalThis & RAW_ENVIRONMENT);\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum TracesSamplerValues {\n  AlwaysOff = 'always_off',\n  AlwaysOn = 'always_on',\n  ParentBasedAlwaysOff = 'parentbased_always_off',\n  ParentBasedAlwaysOn = 'parentbased_always_on',\n  ParentBasedTraceIdRatio = 'parentbased_traceidratio',\n  TraceIdRatio = 'traceidratio',\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Updates to this file should also be replicated to @opentelemetry/api and\n// @opentelemetry/api-metrics too.\n\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport const _globalThis: typeof globalThis =\n  typeof globalThis === 'object' ? globalThis :\n    typeof self === 'object' ? self :\n      typeof window === 'object' ? window :\n        typeof global === 'object' ? global :\n  {} as typeof globalThis;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function hexToBase64(hexStr: string): string {\n  const hexStrLen = hexStr.length;\n  let hexAsciiCharsStr = '';\n  for (let i = 0; i < hexStrLen; i += 2) {\n    const hexPair = hexStr.substring(i, i + 2);\n    const hexVal = parseInt(hexPair, 16);\n    hexAsciiCharsStr += String.fromCharCode(hexVal);\n  }\n  return btoa(hexAsciiCharsStr);\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { IdGenerator } from '../../trace/IdGenerator';\n\nconst SPAN_ID_BYTES = 8;\nconst TRACE_ID_BYTES = 16;\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n */\nexport class RandomIdGenerator implements IdGenerator {\n  /**\n   * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n   * characters corresponding to 128 bits.\n   */\n  generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n\n  /**\n   * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n   * characters corresponding to 64 bits.\n   */\n  generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n}\n\nconst SHARED_CHAR_CODES_ARRAY = Array(32);\nfunction getIdGenerator(bytes: number): () => string {\n  return function generateId() {\n    for (let i = 0; i < bytes * 2; i++) {\n      SHARED_CHAR_CODES_ARRAY[i] = Math.floor(Math.random() * 16) + 48;\n      // valid hex characters in the range 48-57 and 97-102\n      if (SHARED_CHAR_CODES_ARRAY[i] >= 58) {\n        SHARED_CHAR_CODES_ARRAY[i] += 39;\n      }\n    }\n    return String.fromCharCode.apply(\n      null,\n      SHARED_CHAR_CODES_ARRAY.slice(0, bytes * 2)\n    );\n  };\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const otperformance = performance;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VERSION } from '../../version';\nimport {\n  TelemetrySdkLanguageValues,\n  SemanticResourceAttributes,\n} from '@opentelemetry/semantic-conventions';\n\n/** Constants describing the SDK in use */\nexport const SDK_INFO = {\n  [SemanticResourceAttributes.TELEMETRY_SDK_NAME]: 'opentelemetry',\n  [SemanticResourceAttributes.PROCESS_RUNTIME_NAME]: 'browser',\n  [SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE]: TelemetrySdkLanguageValues.WEBJS,\n  [SemanticResourceAttributes.TELEMETRY_SDK_VERSION]: VERSION,\n};\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '1.6.0';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './trace';\nexport * from './resource';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './SemanticAttributes';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexport const SemanticAttributes = {\n\n  /**\n  * The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).\n  *\n  * Note: This may be different from `faas.id` if an alias is involved.\n  */\n  AWS_LAMBDA_INVOKED_ARN: 'aws.lambda.invoked_arn',\n\n  /**\n  * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n  */\n  DB_SYSTEM: 'db.system',\n\n  /**\n  * The connection string used to connect to the database. It is recommended to remove embedded credentials.\n  */\n  DB_CONNECTION_STRING: 'db.connection_string',\n\n  /**\n  * Username for accessing the database.\n  */\n  DB_USER: 'db.user',\n\n  /**\n  * The fully-qualified class name of the [Java Database Connectivity (JDBC)](https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/) driver used to connect.\n  */\n  DB_JDBC_DRIVER_CLASSNAME: 'db.jdbc.driver_classname',\n\n  /**\n  * If no [tech-specific attribute](#call-level-attributes-for-specific-technologies) is defined, this attribute is used to report the name of the database being accessed. For commands that switch the database, this should be set to the target database (even if the command fails).\n  *\n  * Note: In some SQL databases, the database name to be used is called &#34;schema name&#34;.\n  */\n  DB_NAME: 'db.name',\n\n  /**\n  * The database statement being executed.\n  *\n  * Note: The value may be sanitized to exclude sensitive information.\n  */\n  DB_STATEMENT: 'db.statement',\n\n  /**\n  * The name of the operation being executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as `findAndModify`, or the SQL keyword.\n  *\n  * Note: When setting this to an SQL keyword, it is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if the operation name is provided by the library being instrumented. If the SQL statement has an ambiguous operation, or performs more than one operation, this value may be omitted.\n  */\n  DB_OPERATION: 'db.operation',\n\n  /**\n  * The Microsoft SQL Server [instance name](https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15) connecting to. This name is used to determine the port of a named instance.\n  *\n  * Note: If setting a `db.mssql.instance_name`, `net.peer.port` is no longer required (but still recommended if non-standard).\n  */\n  DB_MSSQL_INSTANCE_NAME: 'db.mssql.instance_name',\n\n  /**\n  * The name of the keyspace being accessed. To be used instead of the generic `db.name` attribute.\n  */\n  DB_CASSANDRA_KEYSPACE: 'db.cassandra.keyspace',\n\n  /**\n  * The fetch size used for paging, i.e. how many rows will be returned at once.\n  */\n  DB_CASSANDRA_PAGE_SIZE: 'db.cassandra.page_size',\n\n  /**\n  * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n  */\n  DB_CASSANDRA_CONSISTENCY_LEVEL: 'db.cassandra.consistency_level',\n\n  /**\n  * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n  *\n  * Note: This mirrors the db.sql.table attribute but references cassandra rather than sql. It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n  */\n  DB_CASSANDRA_TABLE: 'db.cassandra.table',\n\n  /**\n  * Whether or not the query is idempotent.\n  */\n  DB_CASSANDRA_IDEMPOTENCE: 'db.cassandra.idempotence',\n\n  /**\n  * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n  */\n  DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT: 'db.cassandra.speculative_execution_count',\n\n  /**\n  * The ID of the coordinating node for a query.\n  */\n  DB_CASSANDRA_COORDINATOR_ID: 'db.cassandra.coordinator.id',\n\n  /**\n  * The data center of the coordinating node for a query.\n  */\n  DB_CASSANDRA_COORDINATOR_DC: 'db.cassandra.coordinator.dc',\n\n  /**\n  * The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed. To be used instead of the generic `db.name` attribute.\n  */\n  DB_HBASE_NAMESPACE: 'db.hbase.namespace',\n\n  /**\n  * The index of the database being accessed as used in the [`SELECT` command](https://redis.io/commands/select), provided as an integer. To be used instead of the generic `db.name` attribute.\n  */\n  DB_REDIS_DATABASE_INDEX: 'db.redis.database_index',\n\n  /**\n  * The collection being accessed within the database stated in `db.name`.\n  */\n  DB_MONGODB_COLLECTION: 'db.mongodb.collection',\n\n  /**\n  * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n  *\n  * Note: It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n  */\n  DB_SQL_TABLE: 'db.sql.table',\n\n  /**\n  * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n  */\n  EXCEPTION_TYPE: 'exception.type',\n\n  /**\n  * The exception message.\n  */\n  EXCEPTION_MESSAGE: 'exception.message',\n\n  /**\n  * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n  */\n  EXCEPTION_STACKTRACE: 'exception.stacktrace',\n\n  /**\n  * SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n  *\n  * Note: An exception is considered to have escaped (or left) the scope of a span,\nif that span is ended while the exception is still logically &#34;in flight&#34;.\nThis may be actually &#34;in flight&#34; in some languages (e.g. if the exception\nis passed to a Context manager&#39;s `__exit__` method in Python) but will\nusually be caught at the point of recording the exception in most languages.\n\nIt is usually not possible to determine at the point where an exception is thrown\nwhether it will escape the scope of a span.\nHowever, it is trivial to know that an exception\nwill escape, if one checks for an active exception just before ending the span,\nas done in the [example above](#exception-end-example).\n\nIt follows that an exception may still escape the scope of the span\neven if the `exception.escaped` attribute was not set or set to false,\nsince the event might have been recorded at a time where it was not\nclear whether the exception will escape.\n  */\n  EXCEPTION_ESCAPED: 'exception.escaped',\n\n  /**\n  * Type of the trigger on which the function is executed.\n  */\n  FAAS_TRIGGER: 'faas.trigger',\n\n  /**\n  * The execution ID of the current function execution.\n  */\n  FAAS_EXECUTION: 'faas.execution',\n\n  /**\n  * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n  */\n  FAAS_DOCUMENT_COLLECTION: 'faas.document.collection',\n\n  /**\n  * Describes the type of the operation that was performed on the data.\n  */\n  FAAS_DOCUMENT_OPERATION: 'faas.document.operation',\n\n  /**\n  * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n  */\n  FAAS_DOCUMENT_TIME: 'faas.document.time',\n\n  /**\n  * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n  */\n  FAAS_DOCUMENT_NAME: 'faas.document.name',\n\n  /**\n  * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n  */\n  FAAS_TIME: 'faas.time',\n\n  /**\n  * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n  */\n  FAAS_CRON: 'faas.cron',\n\n  /**\n  * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n  */\n  FAAS_COLDSTART: 'faas.coldstart',\n\n  /**\n  * The name of the invoked function.\n  *\n  * Note: SHOULD be equal to the `faas.name` resource attribute of the invoked function.\n  */\n  FAAS_INVOKED_NAME: 'faas.invoked_name',\n\n  /**\n  * The cloud provider of the invoked function.\n  *\n  * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n  */\n  FAAS_INVOKED_PROVIDER: 'faas.invoked_provider',\n\n  /**\n  * The cloud region of the invoked function.\n  *\n  * Note: SHOULD be equal to the `cloud.region` resource attribute of the invoked function.\n  */\n  FAAS_INVOKED_REGION: 'faas.invoked_region',\n\n  /**\n  * Transport protocol used. See note below.\n  */\n  NET_TRANSPORT: 'net.transport',\n\n  /**\n  * Remote address of the peer (dotted decimal for IPv4 or [RFC5952](https://tools.ietf.org/html/rfc5952) for IPv6).\n  */\n  NET_PEER_IP: 'net.peer.ip',\n\n  /**\n  * Remote port number.\n  */\n  NET_PEER_PORT: 'net.peer.port',\n\n  /**\n  * Remote hostname or similar, see note below.\n  */\n  NET_PEER_NAME: 'net.peer.name',\n\n  /**\n  * Like `net.peer.ip` but for the host IP. Useful in case of a multi-IP host.\n  */\n  NET_HOST_IP: 'net.host.ip',\n\n  /**\n  * Like `net.peer.port` but for the host port.\n  */\n  NET_HOST_PORT: 'net.host.port',\n\n  /**\n  * Local hostname or similar, see note below.\n  */\n  NET_HOST_NAME: 'net.host.name',\n\n  /**\n  * The internet connection type currently being used by the host.\n  */\n  NET_HOST_CONNECTION_TYPE: 'net.host.connection.type',\n\n  /**\n  * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n  */\n  NET_HOST_CONNECTION_SUBTYPE: 'net.host.connection.subtype',\n\n  /**\n  * The name of the mobile carrier.\n  */\n  NET_HOST_CARRIER_NAME: 'net.host.carrier.name',\n\n  /**\n  * The mobile carrier country code.\n  */\n  NET_HOST_CARRIER_MCC: 'net.host.carrier.mcc',\n\n  /**\n  * The mobile carrier network code.\n  */\n  NET_HOST_CARRIER_MNC: 'net.host.carrier.mnc',\n\n  /**\n  * The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.\n  */\n  NET_HOST_CARRIER_ICC: 'net.host.carrier.icc',\n\n  /**\n  * The [`service.name`](../../resource/semantic_conventions/README.md#service) of the remote service. SHOULD be equal to the actual `service.name` resource attribute of the remote service if any.\n  */\n  PEER_SERVICE: 'peer.service',\n\n  /**\n  * Username or client_id extracted from the access token or [Authorization](https://tools.ietf.org/html/rfc7235#section-4.2) header in the inbound request from outside the system.\n  */\n  ENDUSER_ID: 'enduser.id',\n\n  /**\n  * Actual/assumed role the client is making the request under extracted from token or application security context.\n  */\n  ENDUSER_ROLE: 'enduser.role',\n\n  /**\n  * Scopes or granted authorities the client currently possesses extracted from token or application security context. The value would come from the scope associated with an [OAuth 2.0 Access Token](https://tools.ietf.org/html/rfc6749#section-3.3) or an attribute value in a [SAML 2.0 Assertion](https://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html).\n  */\n  ENDUSER_SCOPE: 'enduser.scope',\n\n  /**\n  * Current &#34;managed&#34; thread ID (as opposed to OS thread ID).\n  */\n  THREAD_ID: 'thread.id',\n\n  /**\n  * Current thread name.\n  */\n  THREAD_NAME: 'thread.name',\n\n  /**\n  * The method or function name, or equivalent (usually rightmost part of the code unit&#39;s name).\n  */\n  CODE_FUNCTION: 'code.function',\n\n  /**\n  * The &#34;namespace&#34; within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.\n  */\n  CODE_NAMESPACE: 'code.namespace',\n\n  /**\n  * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n  */\n  CODE_FILEPATH: 'code.filepath',\n\n  /**\n  * The line number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.\n  */\n  CODE_LINENO: 'code.lineno',\n\n  /**\n  * HTTP request method.\n  */\n  HTTP_METHOD: 'http.method',\n\n  /**\n  * Full HTTP request URL in the form `scheme://host[:port]/path?query[#fragment]`. Usually the fragment is not transmitted over HTTP, but if it is known, it should be included nevertheless.\n  *\n  * Note: `http.url` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case the attribute&#39;s value should be `https://www.example.com/`.\n  */\n  HTTP_URL: 'http.url',\n\n  /**\n  * The full request target as passed in a HTTP request line or equivalent.\n  */\n  HTTP_TARGET: 'http.target',\n\n  /**\n  * The value of the [HTTP host header](https://tools.ietf.org/html/rfc7230#section-5.4). An empty Host header should also be reported, see note.\n  *\n  * Note: When the header is present but empty the attribute SHOULD be set to the empty string. Note that this is a valid situation that is expected in certain cases, according the aforementioned [section of RFC 7230](https://tools.ietf.org/html/rfc7230#section-5.4). When the header is not set the attribute MUST NOT be set.\n  */\n  HTTP_HOST: 'http.host',\n\n  /**\n  * The URI scheme identifying the used protocol.\n  */\n  HTTP_SCHEME: 'http.scheme',\n\n  /**\n  * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n  */\n  HTTP_STATUS_CODE: 'http.status_code',\n\n  /**\n  * Kind of HTTP protocol used.\n  *\n  * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n  */\n  HTTP_FLAVOR: 'http.flavor',\n\n  /**\n  * Value of the [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) header sent by the client.\n  */\n  HTTP_USER_AGENT: 'http.user_agent',\n\n  /**\n  * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n  */\n  HTTP_REQUEST_CONTENT_LENGTH: 'http.request_content_length',\n\n  /**\n  * The size of the uncompressed request payload body after transport decoding. Not set if transport encoding not used.\n  */\n  HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED: 'http.request_content_length_uncompressed',\n\n  /**\n  * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n  */\n  HTTP_RESPONSE_CONTENT_LENGTH: 'http.response_content_length',\n\n  /**\n  * The size of the uncompressed response payload body after transport decoding. Not set if transport encoding not used.\n  */\n  HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED: 'http.response_content_length_uncompressed',\n\n  /**\n  * The primary server name of the matched virtual host. This should be obtained via configuration. If no such configuration can be obtained, this attribute MUST NOT be set ( `net.host.name` should be used instead).\n  *\n  * Note: `http.url` is usually not readily available on the server side but would have to be assembled in a cumbersome and sometimes lossy process from other information (see e.g. open-telemetry/opentelemetry-python/pull/148). It is thus preferred to supply the raw data that is available.\n  */\n  HTTP_SERVER_NAME: 'http.server_name',\n\n  /**\n  * The matched route (path template).\n  */\n  HTTP_ROUTE: 'http.route',\n\n  /**\n  * The IP address of the original client behind all proxies, if known (e.g. from [X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)).\n  *\n  * Note: This is not necessarily the same as `net.peer.ip`, which would\nidentify the network-level peer, which may be a proxy.\n\nThis attribute should be set when a source of information different\nfrom the one used for `net.peer.ip`, is available even if that other\nsource just confirms the same value as `net.peer.ip`.\nRationale: For `net.peer.ip`, one typically does not know if it\ncomes from a proxy, reverse proxy, or the actual client. Setting\n`http.client_ip` when it&#39;s the same as `net.peer.ip` means that\none is at least somewhat confident that the address is not that of\nthe closest proxy.\n  */\n  HTTP_CLIENT_IP: 'http.client_ip',\n\n  /**\n  * The keys in the `RequestItems` object field.\n  */\n  AWS_DYNAMODB_TABLE_NAMES: 'aws.dynamodb.table_names',\n\n  /**\n  * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n  */\n  AWS_DYNAMODB_CONSUMED_CAPACITY: 'aws.dynamodb.consumed_capacity',\n\n  /**\n  * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n  */\n  AWS_DYNAMODB_ITEM_COLLECTION_METRICS: 'aws.dynamodb.item_collection_metrics',\n\n  /**\n  * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n  */\n  AWS_DYNAMODB_PROVISIONED_READ_CAPACITY: 'aws.dynamodb.provisioned_read_capacity',\n\n  /**\n  * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n  */\n  AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY: 'aws.dynamodb.provisioned_write_capacity',\n\n  /**\n  * The value of the `ConsistentRead` request parameter.\n  */\n  AWS_DYNAMODB_CONSISTENT_READ: 'aws.dynamodb.consistent_read',\n\n  /**\n  * The value of the `ProjectionExpression` request parameter.\n  */\n  AWS_DYNAMODB_PROJECTION: 'aws.dynamodb.projection',\n\n  /**\n  * The value of the `Limit` request parameter.\n  */\n  AWS_DYNAMODB_LIMIT: 'aws.dynamodb.limit',\n\n  /**\n  * The value of the `AttributesToGet` request parameter.\n  */\n  AWS_DYNAMODB_ATTRIBUTES_TO_GET: 'aws.dynamodb.attributes_to_get',\n\n  /**\n  * The value of the `IndexName` request parameter.\n  */\n  AWS_DYNAMODB_INDEX_NAME: 'aws.dynamodb.index_name',\n\n  /**\n  * The value of the `Select` request parameter.\n  */\n  AWS_DYNAMODB_SELECT: 'aws.dynamodb.select',\n\n  /**\n  * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field.\n  */\n  AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES: 'aws.dynamodb.global_secondary_indexes',\n\n  /**\n  * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n  */\n  AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES: 'aws.dynamodb.local_secondary_indexes',\n\n  /**\n  * The value of the `ExclusiveStartTableName` request parameter.\n  */\n  AWS_DYNAMODB_EXCLUSIVE_START_TABLE: 'aws.dynamodb.exclusive_start_table',\n\n  /**\n  * The the number of items in the `TableNames` response parameter.\n  */\n  AWS_DYNAMODB_TABLE_COUNT: 'aws.dynamodb.table_count',\n\n  /**\n  * The value of the `ScanIndexForward` request parameter.\n  */\n  AWS_DYNAMODB_SCAN_FORWARD: 'aws.dynamodb.scan_forward',\n\n  /**\n  * The value of the `Segment` request parameter.\n  */\n  AWS_DYNAMODB_SEGMENT: 'aws.dynamodb.segment',\n\n  /**\n  * The value of the `TotalSegments` request parameter.\n  */\n  AWS_DYNAMODB_TOTAL_SEGMENTS: 'aws.dynamodb.total_segments',\n\n  /**\n  * The value of the `Count` response parameter.\n  */\n  AWS_DYNAMODB_COUNT: 'aws.dynamodb.count',\n\n  /**\n  * The value of the `ScannedCount` response parameter.\n  */\n  AWS_DYNAMODB_SCANNED_COUNT: 'aws.dynamodb.scanned_count',\n\n  /**\n  * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n  */\n  AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS: 'aws.dynamodb.attribute_definitions',\n\n  /**\n  * The JSON-serialized value of each item in the the `GlobalSecondaryIndexUpdates` request field.\n  */\n  AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES: 'aws.dynamodb.global_secondary_index_updates',\n\n  /**\n  * A string identifying the messaging system.\n  */\n  MESSAGING_SYSTEM: 'messaging.system',\n\n  /**\n  * The message destination name. This might be equal to the span name but is required nevertheless.\n  */\n  MESSAGING_DESTINATION: 'messaging.destination',\n\n  /**\n  * The kind of message destination.\n  */\n  MESSAGING_DESTINATION_KIND: 'messaging.destination_kind',\n\n  /**\n  * A boolean that is true if the message destination is temporary.\n  */\n  MESSAGING_TEMP_DESTINATION: 'messaging.temp_destination',\n\n  /**\n  * The name of the transport protocol.\n  */\n  MESSAGING_PROTOCOL: 'messaging.protocol',\n\n  /**\n  * The version of the transport protocol.\n  */\n  MESSAGING_PROTOCOL_VERSION: 'messaging.protocol_version',\n\n  /**\n  * Connection string.\n  */\n  MESSAGING_URL: 'messaging.url',\n\n  /**\n  * A value used by the messaging system as an identifier for the message, represented as a string.\n  */\n  MESSAGING_MESSAGE_ID: 'messaging.message_id',\n\n  /**\n  * The [conversation ID](#conversations) identifying the conversation to which the message belongs, represented as a string. Sometimes called &#34;Correlation ID&#34;.\n  */\n  MESSAGING_CONVERSATION_ID: 'messaging.conversation_id',\n\n  /**\n  * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is unknown whether the compressed or uncompressed payload size is reported.\n  */\n  MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES: 'messaging.message_payload_size_bytes',\n\n  /**\n  * The compressed size of the message payload in bytes.\n  */\n  MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES: 'messaging.message_payload_compressed_size_bytes',\n\n  /**\n  * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n  */\n  MESSAGING_OPERATION: 'messaging.operation',\n\n  /**\n  * The identifier for the consumer receiving a message. For Kafka, set it to `{messaging.kafka.consumer_group} - {messaging.kafka.client_id}`, if both are present, or only `messaging.kafka.consumer_group`. For brokers, such as RabbitMQ and Artemis, set it to the `client_id` of the client consuming the message.\n  */\n  MESSAGING_CONSUMER_ID: 'messaging.consumer_id',\n\n  /**\n  * RabbitMQ message routing key.\n  */\n  MESSAGING_RABBITMQ_ROUTING_KEY: 'messaging.rabbitmq.routing_key',\n\n  /**\n  * Message keys in Kafka are used for grouping alike messages to ensure they&#39;re processed on the same partition. They differ from `messaging.message_id` in that they&#39;re not unique. If the key is `null`, the attribute MUST NOT be set.\n  *\n  * Note: If the key type is not string, it&#39;s string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don&#39;t include its value.\n  */\n  MESSAGING_KAFKA_MESSAGE_KEY: 'messaging.kafka.message_key',\n\n  /**\n  * Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.\n  */\n  MESSAGING_KAFKA_CONSUMER_GROUP: 'messaging.kafka.consumer_group',\n\n  /**\n  * Client Id for the Consumer or Producer that is handling the message.\n  */\n  MESSAGING_KAFKA_CLIENT_ID: 'messaging.kafka.client_id',\n\n  /**\n  * Partition the message is sent to.\n  */\n  MESSAGING_KAFKA_PARTITION: 'messaging.kafka.partition',\n\n  /**\n  * A boolean that is true if the message is a tombstone.\n  */\n  MESSAGING_KAFKA_TOMBSTONE: 'messaging.kafka.tombstone',\n\n  /**\n  * A string identifying the remoting system.\n  */\n  RPC_SYSTEM: 'rpc.system',\n\n  /**\n  * The full (logical) name of the service being called, including its package name, if applicable.\n  *\n  * Note: This is the logical name of the service from the RPC interface perspective, which can be different from the name of any implementing class. The `code.namespace` attribute may be used to store the latter (despite the attribute name, it may include a class name; e.g., class with method actually executing the call on the server side, RPC client stub class on the client side).\n  */\n  RPC_SERVICE: 'rpc.service',\n\n  /**\n  * The name of the (logical) method being called, must be equal to the $method part in the span name.\n  *\n  * Note: This is the logical name of the method from the RPC interface perspective, which can be different from the name of any implementing method/function. The `code.function` attribute may be used to store the latter (e.g., method actually executing the call on the server side, RPC client stub method on the client side).\n  */\n  RPC_METHOD: 'rpc.method',\n\n  /**\n  * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n  */\n  RPC_GRPC_STATUS_CODE: 'rpc.grpc.status_code',\n\n  /**\n  * Protocol version as in `jsonrpc` property of request/response. Since JSON-RPC 1.0 does not specify this, the value can be omitted.\n  */\n  RPC_JSONRPC_VERSION: 'rpc.jsonrpc.version',\n\n  /**\n  * `id` property of request or response. Since protocol allows id to be int, string, `null` or missing (for notifications), value is expected to be cast to string for simplicity. Use empty string in case of `null` value. Omit entirely if this is a notification.\n  */\n  RPC_JSONRPC_REQUEST_ID: 'rpc.jsonrpc.request_id',\n\n  /**\n  * `error.code` property of response if it is an error response.\n  */\n  RPC_JSONRPC_ERROR_CODE: 'rpc.jsonrpc.error_code',\n\n  /**\n  * `error.message` property of response if it is an error response.\n  */\n  RPC_JSONRPC_ERROR_MESSAGE: 'rpc.jsonrpc.error_message',\n\n  /**\n  * Whether this is a received or sent message.\n  */\n  MESSAGE_TYPE: 'message.type',\n\n  /**\n  * MUST be calculated as two different counters starting from `1` one for sent messages and one for received message.\n  *\n  * Note: This way we guarantee that the values will be consistent between different implementations.\n  */\n  MESSAGE_ID: 'message.id',\n\n  /**\n  * Compressed size of the message in bytes.\n  */\n  MESSAGE_COMPRESSED_SIZE: 'message.compressed_size',\n\n  /**\n  * Uncompressed size of the message in bytes.\n  */\n  MESSAGE_UNCOMPRESSED_SIZE: 'message.uncompressed_size',\n};\n\n\nexport const DbSystemValues = {\n  /** Some other SQL database. Fallback only. See notes. */\n  OTHER_SQL: 'other_sql',\n  /** Microsoft SQL Server. */\n  MSSQL: 'mssql',\n  /** MySQL. */\n  MYSQL: 'mysql',\n  /** Oracle Database. */\n  ORACLE: 'oracle',\n  /** IBM Db2. */\n  DB2: 'db2',\n  /** PostgreSQL. */\n  POSTGRESQL: 'postgresql',\n  /** Amazon Redshift. */\n  REDSHIFT: 'redshift',\n  /** Apache Hive. */\n  HIVE: 'hive',\n  /** Cloudscape. */\n  CLOUDSCAPE: 'cloudscape',\n  /** HyperSQL DataBase. */\n  HSQLDB: 'hsqldb',\n  /** Progress Database. */\n  PROGRESS: 'progress',\n  /** SAP MaxDB. */\n  MAXDB: 'maxdb',\n  /** SAP HANA. */\n  HANADB: 'hanadb',\n  /** Ingres. */\n  INGRES: 'ingres',\n  /** FirstSQL. */\n  FIRSTSQL: 'firstsql',\n  /** EnterpriseDB. */\n  EDB: 'edb',\n  /** InterSystems Caché. */\n  CACHE: 'cache',\n  /** Adabas (Adaptable Database System). */\n  ADABAS: 'adabas',\n  /** Firebird. */\n  FIREBIRD: 'firebird',\n  /** Apache Derby. */\n  DERBY: 'derby',\n  /** FileMaker. */\n  FILEMAKER: 'filemaker',\n  /** Informix. */\n  INFORMIX: 'informix',\n  /** InstantDB. */\n  INSTANTDB: 'instantdb',\n  /** InterBase. */\n  INTERBASE: 'interbase',\n  /** MariaDB. */\n  MARIADB: 'mariadb',\n  /** Netezza. */\n  NETEZZA: 'netezza',\n  /** Pervasive PSQL. */\n  PERVASIVE: 'pervasive',\n  /** PointBase. */\n  POINTBASE: 'pointbase',\n  /** SQLite. */\n  SQLITE: 'sqlite',\n  /** Sybase. */\n  SYBASE: 'sybase',\n  /** Teradata. */\n  TERADATA: 'teradata',\n  /** Vertica. */\n  VERTICA: 'vertica',\n  /** H2. */\n  H2: 'h2',\n  /** ColdFusion IMQ. */\n  COLDFUSION: 'coldfusion',\n  /** Apache Cassandra. */\n  CASSANDRA: 'cassandra',\n  /** Apache HBase. */\n  HBASE: 'hbase',\n  /** MongoDB. */\n  MONGODB: 'mongodb',\n  /** Redis. */\n  REDIS: 'redis',\n  /** Couchbase. */\n  COUCHBASE: 'couchbase',\n  /** CouchDB. */\n  COUCHDB: 'couchdb',\n  /** Microsoft Azure Cosmos DB. */\n  COSMOSDB: 'cosmosdb',\n  /** Amazon DynamoDB. */\n  DYNAMODB: 'dynamodb',\n  /** Neo4j. */\n  NEO4J: 'neo4j',\n  /** Apache Geode. */\n  GEODE: 'geode',\n  /** Elasticsearch. */\n  ELASTICSEARCH: 'elasticsearch',\n  /** Memcached. */\n  MEMCACHED: 'memcached',\n  /** CockroachDB. */\n  COCKROACHDB: 'cockroachdb',\n} as const;\nexport type DbSystemValues = typeof DbSystemValues[keyof typeof DbSystemValues];\n\n\n\n\nexport const DbCassandraConsistencyLevelValues = {\n  /** all. */\n  ALL: 'all',\n  /** each_quorum. */\n  EACH_QUORUM: 'each_quorum',\n  /** quorum. */\n  QUORUM: 'quorum',\n  /** local_quorum. */\n  LOCAL_QUORUM: 'local_quorum',\n  /** one. */\n  ONE: 'one',\n  /** two. */\n  TWO: 'two',\n  /** three. */\n  THREE: 'three',\n  /** local_one. */\n  LOCAL_ONE: 'local_one',\n  /** any. */\n  ANY: 'any',\n  /** serial. */\n  SERIAL: 'serial',\n  /** local_serial. */\n  LOCAL_SERIAL: 'local_serial',\n} as const;\nexport type DbCassandraConsistencyLevelValues = typeof DbCassandraConsistencyLevelValues[keyof typeof DbCassandraConsistencyLevelValues];\n\n\n\n\nexport const FaasTriggerValues = {\n  /** A response to some data source operation such as a database or filesystem read/write. */\n  DATASOURCE: 'datasource',\n  /** To provide an answer to an inbound HTTP request. */\n  HTTP: 'http',\n  /** A function is set to be executed when messages are sent to a messaging system. */\n  PUBSUB: 'pubsub',\n  /** A function is scheduled to be executed regularly. */\n  TIMER: 'timer',\n  /** If none of the others apply. */\n  OTHER: 'other',\n} as const;\nexport type FaasTriggerValues = typeof FaasTriggerValues[keyof typeof FaasTriggerValues];\n\n\n\n\nexport const FaasDocumentOperationValues = {\n  /** When a new object is created. */\n  INSERT: 'insert',\n  /** When an object is modified. */\n  EDIT: 'edit',\n  /** When an object is deleted. */\n  DELETE: 'delete',\n} as const;\nexport type FaasDocumentOperationValues = typeof FaasDocumentOperationValues[keyof typeof FaasDocumentOperationValues];\n\n\n\n\nexport const FaasInvokedProviderValues = {\n  /** Alibaba Cloud. */\n  ALIBABA_CLOUD: 'alibaba_cloud',\n  /** Amazon Web Services. */\n  AWS: 'aws',\n  /** Microsoft Azure. */\n  AZURE: 'azure',\n  /** Google Cloud Platform. */\n  GCP: 'gcp',\n} as const;\nexport type FaasInvokedProviderValues = typeof FaasInvokedProviderValues[keyof typeof FaasInvokedProviderValues];\n\n\n\n\nexport const NetTransportValues = {\n  /** ip_tcp. */\n  IP_TCP: 'ip_tcp',\n  /** ip_udp. */\n  IP_UDP: 'ip_udp',\n  /** Another IP-based protocol. */\n  IP: 'ip',\n  /** Unix Domain socket. See below. */\n  UNIX: 'unix',\n  /** Named or anonymous pipe. See note below. */\n  PIPE: 'pipe',\n  /** In-process communication. */\n  INPROC: 'inproc',\n  /** Something else (non IP-based). */\n  OTHER: 'other',\n} as const;\nexport type NetTransportValues = typeof NetTransportValues[keyof typeof NetTransportValues];\n\n\n\n\nexport const NetHostConnectionTypeValues = {\n  /** wifi. */\n  WIFI: 'wifi',\n  /** wired. */\n  WIRED: 'wired',\n  /** cell. */\n  CELL: 'cell',\n  /** unavailable. */\n  UNAVAILABLE: 'unavailable',\n  /** unknown. */\n  UNKNOWN: 'unknown',\n} as const;\nexport type NetHostConnectionTypeValues = typeof NetHostConnectionTypeValues[keyof typeof NetHostConnectionTypeValues];\n\n\n\n\nexport const NetHostConnectionSubtypeValues = {\n  /** GPRS. */\n  GPRS: 'gprs',\n  /** EDGE. */\n  EDGE: 'edge',\n  /** UMTS. */\n  UMTS: 'umts',\n  /** CDMA. */\n  CDMA: 'cdma',\n  /** EVDO Rel. 0. */\n  EVDO_0: 'evdo_0',\n  /** EVDO Rev. A. */\n  EVDO_A: 'evdo_a',\n  /** CDMA2000 1XRTT. */\n  CDMA2000_1XRTT: 'cdma2000_1xrtt',\n  /** HSDPA. */\n  HSDPA: 'hsdpa',\n  /** HSUPA. */\n  HSUPA: 'hsupa',\n  /** HSPA. */\n  HSPA: 'hspa',\n  /** IDEN. */\n  IDEN: 'iden',\n  /** EVDO Rev. B. */\n  EVDO_B: 'evdo_b',\n  /** LTE. */\n  LTE: 'lte',\n  /** EHRPD. */\n  EHRPD: 'ehrpd',\n  /** HSPAP. */\n  HSPAP: 'hspap',\n  /** GSM. */\n  GSM: 'gsm',\n  /** TD-SCDMA. */\n  TD_SCDMA: 'td_scdma',\n  /** IWLAN. */\n  IWLAN: 'iwlan',\n  /** 5G NR (New Radio). */\n  NR: 'nr',\n  /** 5G NRNSA (New Radio Non-Standalone). */\n  NRNSA: 'nrnsa',\n  /** LTE CA. */\n  LTE_CA: 'lte_ca',\n} as const;\nexport type NetHostConnectionSubtypeValues = typeof NetHostConnectionSubtypeValues[keyof typeof NetHostConnectionSubtypeValues];\n\n\n\n\nexport const HttpFlavorValues = {\n  /** HTTP 1.0. */\n  HTTP_1_0: '1.0',\n  /** HTTP 1.1. */\n  HTTP_1_1: '1.1',\n  /** HTTP 2. */\n  HTTP_2_0: '2.0',\n  /** SPDY protocol. */\n  SPDY: 'SPDY',\n  /** QUIC protocol. */\n  QUIC: 'QUIC',\n} as const;\nexport type HttpFlavorValues = typeof HttpFlavorValues[keyof typeof HttpFlavorValues];\n\n\n\n\nexport const MessagingDestinationKindValues = {\n  /** A message sent to a queue. */\n  QUEUE: 'queue',\n  /** A message sent to a topic. */\n  TOPIC: 'topic',\n} as const;\nexport type MessagingDestinationKindValues = typeof MessagingDestinationKindValues[keyof typeof MessagingDestinationKindValues];\n\n\n\n\nexport const MessagingOperationValues = {\n  /** receive. */\n  RECEIVE: 'receive',\n  /** process. */\n  PROCESS: 'process',\n} as const;\nexport type MessagingOperationValues = typeof MessagingOperationValues[keyof typeof MessagingOperationValues];\n\n\n\n\nexport const RpcGrpcStatusCodeValues = {\n  /** OK. */\n  OK: 0,\n  /** CANCELLED. */\n  CANCELLED: 1,\n  /** UNKNOWN. */\n  UNKNOWN: 2,\n  /** INVALID_ARGUMENT. */\n  INVALID_ARGUMENT: 3,\n  /** DEADLINE_EXCEEDED. */\n  DEADLINE_EXCEEDED: 4,\n  /** NOT_FOUND. */\n  NOT_FOUND: 5,\n  /** ALREADY_EXISTS. */\n  ALREADY_EXISTS: 6,\n  /** PERMISSION_DENIED. */\n  PERMISSION_DENIED: 7,\n  /** RESOURCE_EXHAUSTED. */\n  RESOURCE_EXHAUSTED: 8,\n  /** FAILED_PRECONDITION. */\n  FAILED_PRECONDITION: 9,\n  /** ABORTED. */\n  ABORTED: 10,\n  /** OUT_OF_RANGE. */\n  OUT_OF_RANGE: 11,\n  /** UNIMPLEMENTED. */\n  UNIMPLEMENTED: 12,\n  /** INTERNAL. */\n  INTERNAL: 13,\n  /** UNAVAILABLE. */\n  UNAVAILABLE: 14,\n  /** DATA_LOSS. */\n  DATA_LOSS: 15,\n  /** UNAUTHENTICATED. */\n  UNAUTHENTICATED: 16,\n} as const;\nexport type RpcGrpcStatusCodeValues = typeof RpcGrpcStatusCodeValues[keyof typeof RpcGrpcStatusCodeValues];\n\n\n\n\nexport const MessageTypeValues = {\n  /** sent. */\n  SENT: 'SENT',\n  /** received. */\n  RECEIVED: 'RECEIVED',\n} as const;\nexport type MessageTypeValues = typeof MessageTypeValues[keyof typeof MessageTypeValues];\n\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './SemanticResourceAttributes';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexport const SemanticResourceAttributes = {\n\n  /**\n  * Name of the cloud provider.\n  */\n  CLOUD_PROVIDER: 'cloud.provider',\n\n  /**\n  * The cloud account ID the resource is assigned to.\n  */\n  CLOUD_ACCOUNT_ID: 'cloud.account.id',\n\n  /**\n  * The geographical region the resource is running. Refer to your provider&#39;s docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/en-us/global-infrastructure/geographies/), or [Google Cloud regions](https://cloud.google.com/about/locations).\n  */\n  CLOUD_REGION: 'cloud.region',\n\n  /**\n  * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n  *\n  * Note: Availability zones are called &#34;zones&#34; on Alibaba Cloud and Google Cloud.\n  */\n  CLOUD_AVAILABILITY_ZONE: 'cloud.availability_zone',\n\n  /**\n  * The cloud platform in use.\n  *\n  * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n  */\n  CLOUD_PLATFORM: 'cloud.platform',\n\n  /**\n  * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n  */\n  AWS_ECS_CONTAINER_ARN: 'aws.ecs.container.arn',\n\n  /**\n  * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n  */\n  AWS_ECS_CLUSTER_ARN: 'aws.ecs.cluster.arn',\n\n  /**\n  * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n  */\n  AWS_ECS_LAUNCHTYPE: 'aws.ecs.launchtype',\n\n  /**\n  * The ARN of an [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html).\n  */\n  AWS_ECS_TASK_ARN: 'aws.ecs.task.arn',\n\n  /**\n  * The task definition family this task definition is a member of.\n  */\n  AWS_ECS_TASK_FAMILY: 'aws.ecs.task.family',\n\n  /**\n  * The revision for this task definition.\n  */\n  AWS_ECS_TASK_REVISION: 'aws.ecs.task.revision',\n\n  /**\n  * The ARN of an EKS cluster.\n  */\n  AWS_EKS_CLUSTER_ARN: 'aws.eks.cluster.arn',\n\n  /**\n  * The name(s) of the AWS log group(s) an application is writing to.\n  *\n  * Note: Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n  */\n  AWS_LOG_GROUP_NAMES: 'aws.log.group.names',\n\n  /**\n  * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n  *\n  * Note: See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n  */\n  AWS_LOG_GROUP_ARNS: 'aws.log.group.arns',\n\n  /**\n  * The name(s) of the AWS log stream(s) an application is writing to.\n  */\n  AWS_LOG_STREAM_NAMES: 'aws.log.stream.names',\n\n  /**\n  * The ARN(s) of the AWS log stream(s).\n  *\n  * Note: See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n  */\n  AWS_LOG_STREAM_ARNS: 'aws.log.stream.arns',\n\n  /**\n  * Container name.\n  */\n  CONTAINER_NAME: 'container.name',\n\n  /**\n  * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/reference/run/#container-identification). The UUID might be abbreviated.\n  */\n  CONTAINER_ID: 'container.id',\n\n  /**\n  * The container runtime managing this container.\n  */\n  CONTAINER_RUNTIME: 'container.runtime',\n\n  /**\n  * Name of the image the container was built on.\n  */\n  CONTAINER_IMAGE_NAME: 'container.image.name',\n\n  /**\n  * Container image tag.\n  */\n  CONTAINER_IMAGE_TAG: 'container.image.tag',\n\n  /**\n  * Name of the [deployment environment](https://en.wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n  */\n  DEPLOYMENT_ENVIRONMENT: 'deployment.environment',\n\n  /**\n  * A unique identifier representing the device.\n  *\n  * Note: The device identifier MUST only be defined using the values outlined below. This value is not an advertising identifier and MUST NOT be used as such. On iOS (Swift or Objective-C), this value MUST be equal to the [vendor identifier](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android (Java or Kotlin), this value MUST be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application. More information can be found [here](https://developer.android.com/training/articles/user-data-ids) on best practices and exact implementation details. Caution should be taken when storing personal data or anything which can identify a user. GDPR and data protection laws may apply, ensure you do your own due diligence.\n  */\n  DEVICE_ID: 'device.id',\n\n  /**\n  * The model identifier for the device.\n  *\n  * Note: It&#39;s recommended this value represents a machine readable version of the model identifier rather than the market or consumer-friendly name of the device.\n  */\n  DEVICE_MODEL_IDENTIFIER: 'device.model.identifier',\n\n  /**\n  * The marketing name for the device model.\n  *\n  * Note: It&#39;s recommended this value represents a human readable version of the device model rather than a machine readable alternative.\n  */\n  DEVICE_MODEL_NAME: 'device.model.name',\n\n  /**\n  * The name of the single function that this runtime instance executes.\n  *\n  * Note: This is the name of the function as configured/deployed on the FaaS platform and is usually different from the name of the callback function (which may be stored in the [`code.namespace`/`code.function`](../../trace/semantic_conventions/span-general.md#source-code-attributes) span attributes).\n  */\n  FAAS_NAME: 'faas.name',\n\n  /**\n  * The unique ID of the single function that this runtime instance executes.\n  *\n  * Note: Depending on the cloud provider, use:\n\n* **AWS Lambda:** The function [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).\nTake care not to use the &#34;invoked ARN&#34; directly but replace any\n[alias suffix](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html) with the resolved function version, as the same runtime instance may be invokable with multiple\ndifferent aliases.\n* **GCP:** The [URI of the resource](https://cloud.google.com/iam/docs/full-resource-names)\n* **Azure:** The [Fully Qualified Resource ID](https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id).\n\nOn some providers, it may not be possible to determine the full ID at startup,\nwhich is why this field cannot be made required. For example, on AWS the account ID\npart of the ARN is not available without calling another AWS API\nwhich may be deemed too slow for a short-running lambda function.\nAs an alternative, consider setting `faas.id` as a span attribute instead.\n  */\n  FAAS_ID: 'faas.id',\n\n  /**\n  * The immutable version of the function being executed.\n  *\n  * Note: Depending on the cloud provider and platform, use:\n\n* **AWS Lambda:** The [function version](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)\n  (an integer represented as a decimal string).\n* **Google Cloud Run:** The [revision](https://cloud.google.com/run/docs/managing/revisions)\n  (i.e., the function name plus the revision suffix).\n* **Google Cloud Functions:** The value of the\n  [`K_REVISION` environment variable](https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically).\n* **Azure Functions:** Not applicable. Do not set this attribute.\n  */\n  FAAS_VERSION: 'faas.version',\n\n  /**\n  * The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.\n  *\n  * Note: * **AWS Lambda:** Use the (full) log stream name.\n  */\n  FAAS_INSTANCE: 'faas.instance',\n\n  /**\n  * The amount of memory available to the serverless function in MiB.\n  *\n  * Note: It&#39;s recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information.\n  */\n  FAAS_MAX_MEMORY: 'faas.max_memory',\n\n  /**\n  * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider.\n  */\n  HOST_ID: 'host.id',\n\n  /**\n  * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n  */\n  HOST_NAME: 'host.name',\n\n  /**\n  * Type of host. For Cloud, this must be the machine type.\n  */\n  HOST_TYPE: 'host.type',\n\n  /**\n  * The CPU architecture the host system is running on.\n  */\n  HOST_ARCH: 'host.arch',\n\n  /**\n  * Name of the VM image or OS install the host was instantiated from.\n  */\n  HOST_IMAGE_NAME: 'host.image.name',\n\n  /**\n  * VM image ID. For Cloud, this value is from the provider.\n  */\n  HOST_IMAGE_ID: 'host.image.id',\n\n  /**\n  * The version string of the VM image as defined in [Version SpanAttributes](README.md#version-attributes).\n  */\n  HOST_IMAGE_VERSION: 'host.image.version',\n\n  /**\n  * The name of the cluster.\n  */\n  K8S_CLUSTER_NAME: 'k8s.cluster.name',\n\n  /**\n  * The name of the Node.\n  */\n  K8S_NODE_NAME: 'k8s.node.name',\n\n  /**\n  * The UID of the Node.\n  */\n  K8S_NODE_UID: 'k8s.node.uid',\n\n  /**\n  * The name of the namespace that the pod is running in.\n  */\n  K8S_NAMESPACE_NAME: 'k8s.namespace.name',\n\n  /**\n  * The UID of the Pod.\n  */\n  K8S_POD_UID: 'k8s.pod.uid',\n\n  /**\n  * The name of the Pod.\n  */\n  K8S_POD_NAME: 'k8s.pod.name',\n\n  /**\n  * The name of the Container in a Pod template.\n  */\n  K8S_CONTAINER_NAME: 'k8s.container.name',\n\n  /**\n  * The UID of the ReplicaSet.\n  */\n  K8S_REPLICASET_UID: 'k8s.replicaset.uid',\n\n  /**\n  * The name of the ReplicaSet.\n  */\n  K8S_REPLICASET_NAME: 'k8s.replicaset.name',\n\n  /**\n  * The UID of the Deployment.\n  */\n  K8S_DEPLOYMENT_UID: 'k8s.deployment.uid',\n\n  /**\n  * The name of the Deployment.\n  */\n  K8S_DEPLOYMENT_NAME: 'k8s.deployment.name',\n\n  /**\n  * The UID of the StatefulSet.\n  */\n  K8S_STATEFULSET_UID: 'k8s.statefulset.uid',\n\n  /**\n  * The name of the StatefulSet.\n  */\n  K8S_STATEFULSET_NAME: 'k8s.statefulset.name',\n\n  /**\n  * The UID of the DaemonSet.\n  */\n  K8S_DAEMONSET_UID: 'k8s.daemonset.uid',\n\n  /**\n  * The name of the DaemonSet.\n  */\n  K8S_DAEMONSET_NAME: 'k8s.daemonset.name',\n\n  /**\n  * The UID of the Job.\n  */\n  K8S_JOB_UID: 'k8s.job.uid',\n\n  /**\n  * The name of the Job.\n  */\n  K8S_JOB_NAME: 'k8s.job.name',\n\n  /**\n  * The UID of the CronJob.\n  */\n  K8S_CRONJOB_UID: 'k8s.cronjob.uid',\n\n  /**\n  * The name of the CronJob.\n  */\n  K8S_CRONJOB_NAME: 'k8s.cronjob.name',\n\n  /**\n  * The operating system type.\n  */\n  OS_TYPE: 'os.type',\n\n  /**\n  * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n  */\n  OS_DESCRIPTION: 'os.description',\n\n  /**\n  * Human readable operating system name.\n  */\n  OS_NAME: 'os.name',\n\n  /**\n  * The version string of the operating system as defined in [Version SpanAttributes](../../resource/semantic_conventions/README.md#version-attributes).\n  */\n  OS_VERSION: 'os.version',\n\n  /**\n  * Process identifier (PID).\n  */\n  PROCESS_PID: 'process.pid',\n\n  /**\n  * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n  */\n  PROCESS_EXECUTABLE_NAME: 'process.executable.name',\n\n  /**\n  * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n  */\n  PROCESS_EXECUTABLE_PATH: 'process.executable.path',\n\n  /**\n  * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n  */\n  PROCESS_COMMAND: 'process.command',\n\n  /**\n  * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n  */\n  PROCESS_COMMAND_LINE: 'process.command_line',\n\n  /**\n  * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n  */\n  PROCESS_COMMAND_ARGS: 'process.command_args',\n\n  /**\n  * The username of the user that owns the process.\n  */\n  PROCESS_OWNER: 'process.owner',\n\n  /**\n  * The name of the runtime of this process. For compiled native binaries, this SHOULD be the name of the compiler.\n  */\n  PROCESS_RUNTIME_NAME: 'process.runtime.name',\n\n  /**\n  * The version of the runtime of this process, as returned by the runtime without modification.\n  */\n  PROCESS_RUNTIME_VERSION: 'process.runtime.version',\n\n  /**\n  * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n  */\n  PROCESS_RUNTIME_DESCRIPTION: 'process.runtime.description',\n\n  /**\n  * Logical name of the service.\n  *\n  * Note: MUST be the same for all instances of horizontally scaled services. If the value was not specified, SDKs MUST fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md#process), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value MUST be set to `unknown_service`.\n  */\n  SERVICE_NAME: 'service.name',\n\n  /**\n  * A namespace for `service.name`.\n  *\n  * Note: A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n  */\n  SERVICE_NAMESPACE: 'service.namespace',\n\n  /**\n  * The string ID of the service instance.\n  *\n  * Note: MUST be unique for each instance of the same `service.namespace,service.name` pair (in other words `service.namespace,service.name,service.instance.id` triplet MUST be globally unique). The ID helps to distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled service). It is preferable for the ID to be persistent and stay the same for the lifetime of the service instance, however it is acceptable that the ID is ephemeral and changes during important lifetime events for the service (e.g. service restarts). If the service has no inherent unique ID that can be used as the value of this attribute it is recommended to generate a random Version 1 or Version 4 RFC 4122 UUID (services aiming for reproducible UUIDs may also use Version 5, see RFC 4122 for more recommendations).\n  */\n  SERVICE_INSTANCE_ID: 'service.instance.id',\n\n  /**\n  * The version string of the service API or implementation.\n  */\n  SERVICE_VERSION: 'service.version',\n\n  /**\n  * The name of the telemetry SDK as defined above.\n  */\n  TELEMETRY_SDK_NAME: 'telemetry.sdk.name',\n\n  /**\n  * The language of the telemetry SDK.\n  */\n  TELEMETRY_SDK_LANGUAGE: 'telemetry.sdk.language',\n\n  /**\n  * The version string of the telemetry SDK.\n  */\n  TELEMETRY_SDK_VERSION: 'telemetry.sdk.version',\n\n  /**\n  * The version string of the auto instrumentation agent, if used.\n  */\n  TELEMETRY_AUTO_VERSION: 'telemetry.auto.version',\n\n  /**\n  * The name of the web engine.\n  */\n  WEBENGINE_NAME: 'webengine.name',\n\n  /**\n  * The version of the web engine.\n  */\n  WEBENGINE_VERSION: 'webengine.version',\n\n  /**\n  * Additional description of the web engine (e.g. detailed version and edition information).\n  */\n  WEBENGINE_DESCRIPTION: 'webengine.description',\n};\n\n\nexport const CloudProviderValues = {\n  /** Alibaba Cloud. */\n  ALIBABA_CLOUD: 'alibaba_cloud',\n  /** Amazon Web Services. */\n  AWS: 'aws',\n  /** Microsoft Azure. */\n  AZURE: 'azure',\n  /** Google Cloud Platform. */\n  GCP: 'gcp',\n} as const;\nexport type CloudProviderValues = typeof CloudProviderValues[keyof typeof CloudProviderValues];\n\n\n\n\nexport const CloudPlatformValues = {\n  /** Alibaba Cloud Elastic Compute Service. */\n  ALIBABA_CLOUD_ECS: 'alibaba_cloud_ecs',\n  /** Alibaba Cloud Function Compute. */\n  ALIBABA_CLOUD_FC: 'alibaba_cloud_fc',\n  /** AWS Elastic Compute Cloud. */\n  AWS_EC2: 'aws_ec2',\n  /** AWS Elastic Container Service. */\n  AWS_ECS: 'aws_ecs',\n  /** AWS Elastic Kubernetes Service. */\n  AWS_EKS: 'aws_eks',\n  /** AWS Lambda. */\n  AWS_LAMBDA: 'aws_lambda',\n  /** AWS Elastic Beanstalk. */\n  AWS_ELASTIC_BEANSTALK: 'aws_elastic_beanstalk',\n  /** Azure Virtual Machines. */\n  AZURE_VM: 'azure_vm',\n  /** Azure Container Instances. */\n  AZURE_CONTAINER_INSTANCES: 'azure_container_instances',\n  /** Azure Kubernetes Service. */\n  AZURE_AKS: 'azure_aks',\n  /** Azure Functions. */\n  AZURE_FUNCTIONS: 'azure_functions',\n  /** Azure App Service. */\n  AZURE_APP_SERVICE: 'azure_app_service',\n  /** Google Cloud Compute Engine (GCE). */\n  GCP_COMPUTE_ENGINE: 'gcp_compute_engine',\n  /** Google Cloud Run. */\n  GCP_CLOUD_RUN: 'gcp_cloud_run',\n  /** Google Cloud Kubernetes Engine (GKE). */\n  GCP_KUBERNETES_ENGINE: 'gcp_kubernetes_engine',\n  /** Google Cloud Functions (GCF). */\n  GCP_CLOUD_FUNCTIONS: 'gcp_cloud_functions',\n  /** Google Cloud App Engine (GAE). */\n  GCP_APP_ENGINE: 'gcp_app_engine',\n} as const;\nexport type CloudPlatformValues = typeof CloudPlatformValues[keyof typeof CloudPlatformValues];\n\n\n\n\nexport const AwsEcsLaunchtypeValues = {\n  /** ec2. */\n  EC2: 'ec2',\n  /** fargate. */\n  FARGATE: 'fargate',\n} as const;\nexport type AwsEcsLaunchtypeValues = typeof AwsEcsLaunchtypeValues[keyof typeof AwsEcsLaunchtypeValues];\n\n\n\n\nexport const HostArchValues = {\n  /** AMD64. */\n  AMD64: 'amd64',\n  /** ARM32. */\n  ARM32: 'arm32',\n  /** ARM64. */\n  ARM64: 'arm64',\n  /** Itanium. */\n  IA64: 'ia64',\n  /** 32-bit PowerPC. */\n  PPC32: 'ppc32',\n  /** 64-bit PowerPC. */\n  PPC64: 'ppc64',\n  /** 32-bit x86. */\n  X86: 'x86',\n} as const;\nexport type HostArchValues = typeof HostArchValues[keyof typeof HostArchValues];\n\n\n\n\nexport const OsTypeValues = {\n  /** Microsoft Windows. */\n  WINDOWS: 'windows',\n  /** Linux. */\n  LINUX: 'linux',\n  /** Apple Darwin. */\n  DARWIN: 'darwin',\n  /** FreeBSD. */\n  FREEBSD: 'freebsd',\n  /** NetBSD. */\n  NETBSD: 'netbsd',\n  /** OpenBSD. */\n  OPENBSD: 'openbsd',\n  /** DragonFly BSD. */\n  DRAGONFLYBSD: 'dragonflybsd',\n  /** HP-UX (Hewlett Packard Unix). */\n  HPUX: 'hpux',\n  /** AIX (Advanced Interactive eXecutive). */\n  AIX: 'aix',\n  /** Oracle Solaris. */\n  SOLARIS: 'solaris',\n  /** IBM z/OS. */\n  Z_OS: 'z_os',\n} as const;\nexport type OsTypeValues = typeof OsTypeValues[keyof typeof OsTypeValues];\n\n\n\n\nexport const TelemetrySdkLanguageValues = {\n  /** cpp. */\n  CPP: 'cpp',\n  /** dotnet. */\n  DOTNET: 'dotnet',\n  /** erlang. */\n  ERLANG: 'erlang',\n  /** go. */\n  GO: 'go',\n  /** java. */\n  JAVA: 'java',\n  /** nodejs. */\n  NODEJS: 'nodejs',\n  /** php. */\n  PHP: 'php',\n  /** python. */\n  PYTHON: 'python',\n  /** ruby. */\n  RUBY: 'ruby',\n  /** webjs. */\n  WEBJS: 'webjs',\n} as const;\nexport type TelemetrySdkLanguageValues = typeof TelemetrySdkLanguageValues[keyof typeof TelemetrySdkLanguageValues];\n\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function unrefTimer(_timer: number): void {}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Exception } from '@opentelemetry/api';\n\n/**\n * This interface defines a fallback to read a timeOrigin when it is not available on performance.timeOrigin,\n * this happens for example on Safari Mac\n * then the timeOrigin is taken from fetchStart - which is the closest to timeOrigin\n */\nexport interface TimeOriginLegacy {\n  timing: {\n    fetchStart: number;\n  };\n}\n\n/**\n * This interface defines the params that are be added to the wrapped function\n * using the \"shimmer.wrap\"\n */\nexport interface ShimWrapped extends Function {\n  __wrapped: boolean;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  __unwrap: Function;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  __original: Function;\n}\n\n/**\n * An instrumentation library consists of the name and optional version\n * used to obtain a tracer or meter from a provider. This metadata is made\n * available on ReadableSpan and MetricRecord for use by the export pipeline.\n * @deprecated Use {@link InstrumentationScope} instead.\n */\nexport interface InstrumentationLibrary {\n  readonly name: string;\n  readonly version?: string;\n  readonly schemaUrl?: string;\n}\n\n/**\n * An instrumentation scope consists of the name and optional version\n * used to obtain a tracer or meter from a provider. This metadata is made\n * available on ReadableSpan and MetricRecord for use by the export pipeline.\n */\nexport interface InstrumentationScope {\n  readonly name: string;\n  readonly version?: string;\n  readonly schemaUrl?: string;\n}\n\n/** Defines an error handler function */\nexport type ErrorHandler = (ex: Exception) => void;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface ExportResult {\n  code: ExportResultCode;\n  error?: Error;\n}\n\nexport enum ExportResultCode {\n  SUCCESS,\n  FAILED,\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  TextMapGetter,\n  TextMapPropagator,\n  diag,\n  TextMapSetter,\n} from '@opentelemetry/api';\n\n/** Configuration object for composite propagator */\nexport interface CompositePropagatorConfig {\n  /**\n   * List of propagators to run. Propagators run in the\n   * list order. If a propagator later in the list writes the same context\n   * key as a propagator earlier in the list, the later on will \"win\".\n   */\n  propagators?: TextMapPropagator[];\n}\n\n/** Combines multiple propagators into a single propagator. */\nexport class CompositePropagator implements TextMapPropagator {\n  private readonly _propagators: TextMapPropagator[];\n  private readonly _fields: string[];\n\n  /**\n   * Construct a composite propagator from a list of propagators.\n   *\n   * @param [config] Configuration object for composite propagator\n   */\n  constructor(config: CompositePropagatorConfig = {}) {\n    this._propagators = config.propagators ?? [];\n\n    this._fields = Array.from(\n      new Set(\n        this._propagators\n          // older propagators may not have fields function, null check to be sure\n          .map(p => (typeof p.fields === 'function' ? p.fields() : []))\n          .reduce((x, y) => x.concat(y), [])\n      )\n    );\n  }\n\n  /**\n   * Run each of the configured propagators with the given context and carrier.\n   * Propagators are run in the order they are configured, so if multiple\n   * propagators write the same carrier key, the propagator later in the list\n   * will \"win\".\n   *\n   * @param context Context to inject\n   * @param carrier Carrier into which context will be injected\n   */\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    for (const propagator of this._propagators) {\n      try {\n        propagator.inject(context, carrier, setter);\n      } catch (err) {\n        diag.warn(\n          `Failed to inject with ${propagator.constructor.name}. Err: ${err.message}`\n        );\n      }\n    }\n  }\n\n  /**\n   * Run each of the configured propagators with the given context and carrier.\n   * Propagators are run in the order they are configured, so if multiple\n   * propagators write the same context key, the propagator later in the list\n   * will \"win\".\n   *\n   * @param context Context to add values to\n   * @param carrier Carrier from which to extract context\n   */\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    return this._propagators.reduce((ctx, propagator) => {\n      try {\n        return propagator.extract(ctx, carrier, getter);\n      } catch (err) {\n        diag.warn(\n          `Failed to inject with ${propagator.constructor.name}. Err: ${err.message}`\n        );\n      }\n      return ctx;\n    }, context);\n  }\n\n  fields(): string[] {\n    // return a new array so our fields cannot be modified\n    return this._fields.slice();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  SpanContext,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter, trace,\n  TraceFlags,\n} from '@opentelemetry/api';\nimport { isTracingSuppressed } from './suppress-tracing';\nimport { TraceState } from './TraceState';\n\nexport const TRACE_PARENT_HEADER = 'traceparent';\nexport const TRACE_STATE_HEADER = 'tracestate';\n\nconst VERSION = '00';\nconst VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nconst TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nconst PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nconst FLAGS_PART = '[\\\\da-f]{2}';\nconst TRACE_PARENT_REGEX = new RegExp(\n  `^\\\\s?(${VERSION_PART})-(${TRACE_ID_PART})-(${PARENT_ID_PART})-(${FLAGS_PART})(-.*)?\\\\s?$`\n);\n\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nexport function parseTraceParent(traceParent: string): SpanContext | null {\n  const match = TRACE_PARENT_REGEX.exec(traceParent);\n  if (!match) return null;\n\n  // According to the specification the implementation should be compatible\n  // with future versions. If there are more parts, we only reject it if it's using version 00\n  // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n  if (match[1] === '00' && match[5]) return null;\n\n  return {\n    traceId: match[2],\n    spanId: match[3],\n    traceFlags: parseInt(match[4], 16),\n  };\n}\n\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nexport class W3CTraceContextPropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const spanContext = trace.getSpanContext(context);\n    if (\n      !spanContext ||\n      isTracingSuppressed(context) ||\n      !isSpanContextValid(spanContext)\n    )\n      return;\n\n    const traceParent = `${VERSION}-${spanContext.traceId}-${\n      spanContext.spanId\n    }-0${Number(spanContext.traceFlags || TraceFlags.NONE).toString(16)}`;\n\n    setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n    if (spanContext.traceState) {\n      setter.set(\n        carrier,\n        TRACE_STATE_HEADER,\n        spanContext.traceState.serialize()\n      );\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n    if (!traceParentHeader) return context;\n    const traceParent = Array.isArray(traceParentHeader)\n      ? traceParentHeader[0]\n      : traceParentHeader;\n    if (typeof traceParent !== 'string') return context;\n    const spanContext = parseTraceParent(traceParent);\n    if (!spanContext) return context;\n\n    spanContext.isRemote = true;\n\n    const traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n    if (traceStateHeader) {\n      // If more than one `tracestate` header is found, we merge them into a\n      // single header.\n      const state = Array.isArray(traceStateHeader)\n        ? traceStateHeader.join(',')\n        : traceStateHeader;\n      spanContext.traceState = new TraceState(\n        typeof state === 'string' ? state : undefined\n      );\n    }\n    return trace.setSpanContext(context, spanContext);\n  }\n\n  fields(): string[] {\n    return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { validateKey, validateValue } from '../internal/validators';\n\nconst MAX_TRACE_STATE_ITEMS = 32;\nconst MAX_TRACE_STATE_LEN = 512;\nconst LIST_MEMBERS_SEPARATOR = ',';\nconst LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nexport class TraceState implements api.TraceState {\n  private _internalState: Map<string, string> = new Map();\n\n  constructor(rawTraceState?: string) {\n    if (rawTraceState) this._parse(rawTraceState);\n  }\n\n  set(key: string, value: string): TraceState {\n    // TODO: Benchmark the different approaches(map vs list) and\n    // use the faster one.\n    const traceState = this._clone();\n    if (traceState._internalState.has(key)) {\n      traceState._internalState.delete(key);\n    }\n    traceState._internalState.set(key, value);\n    return traceState;\n  }\n\n  unset(key: string): TraceState {\n    const traceState = this._clone();\n    traceState._internalState.delete(key);\n    return traceState;\n  }\n\n  get(key: string): string | undefined {\n    return this._internalState.get(key);\n  }\n\n  serialize(): string {\n    return this._keys()\n      .reduce((agg: string[], key) => {\n        agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + this.get(key));\n        return agg;\n      }, [])\n      .join(LIST_MEMBERS_SEPARATOR);\n  }\n\n  private _parse(rawTraceState: string) {\n    if (rawTraceState.length > MAX_TRACE_STATE_LEN) return;\n    this._internalState = rawTraceState\n      .split(LIST_MEMBERS_SEPARATOR)\n      .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n      .reduce((agg: Map<string, string>, part: string) => {\n        const listMember = part.trim(); // Optional Whitespace (OWS) handling\n        const i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n        if (i !== -1) {\n          const key = listMember.slice(0, i);\n          const value = listMember.slice(i + 1, part.length);\n          if (validateKey(key) && validateValue(value)) {\n            agg.set(key, value);\n          } else {\n            // TODO: Consider to add warning log\n          }\n        }\n        return agg;\n      }, new Map());\n\n    // Because of the reverse() requirement, trunc must be done after map is created\n    if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n      this._internalState = new Map(\n        Array.from(this._internalState.entries())\n          .reverse() // Use reverse same as original tracestate parse chain\n          .slice(0, MAX_TRACE_STATE_ITEMS)\n      );\n    }\n  }\n\n  private _keys(): string[] {\n    return Array.from(this._internalState.keys()).reverse();\n  }\n\n  private _clone(): TraceState {\n    const traceState = new TraceState();\n    traceState._internalState = new Map(this._internalState);\n    return traceState;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nconst VALID_KEY = `[a-z]${VALID_KEY_CHAR_RANGE}{0,255}`;\nconst VALID_VENDOR_KEY = `[a-z0-9]${VALID_KEY_CHAR_RANGE}{0,240}@[a-z]${VALID_KEY_CHAR_RANGE}{0,13}`;\nconst VALID_KEY_REGEX = new RegExp(`^(?:${VALID_KEY}|${VALID_VENDOR_KEY})$`);\nconst VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nconst INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key: string): boolean {\n  return VALID_KEY_REGEX.test(key);\n}\n\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value: string): boolean {\n  return (\n    VALID_VALUE_BASE_REGEX.test(value) &&\n    !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value)\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * IdGenerator provides an interface for generating Trace Id and Span Id.\n */\nexport interface IdGenerator {\n  /** Returns a trace ID composed of 32 lowercase hex characters. */\n  generateTraceId(): string;\n  /** Returns a span ID composed of 16 lowercase hex characters. */\n  generateSpanId(): string;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, createContextKey, Span } from '@opentelemetry/api';\n\nconst RPC_METADATA_KEY = createContextKey(\n  'OpenTelemetry SDK Context Key RPC_METADATA'\n);\n\nexport enum RPCType {\n  HTTP = 'http',\n}\n\ntype HTTPMetadata = {\n  type: RPCType.HTTP;\n  route?: string;\n  span: Span;\n};\n\n/**\n * Allows for future rpc metadata to be used with this mechanism\n */\nexport type RPCMetadata = HTTPMetadata;\n\nexport function setRPCMetadata(context: Context, meta: RPCMetadata): Context {\n  return context.setValue(RPC_METADATA_KEY, meta);\n}\n\nexport function deleteRPCMetadata(context: Context): Context {\n  return context.deleteValue(RPC_METADATA_KEY);\n}\n\nexport function getRPCMetadata(context: Context): RPCMetadata | undefined {\n  return context.getValue(RPC_METADATA_KEY) as RPCMetadata | undefined;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler, SamplingDecision, SamplingResult } from '@opentelemetry/api';\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples no traces.\n */\nexport class AlwaysOffSampler implements Sampler {\n  shouldSample(): SamplingResult {\n    return {\n      decision: SamplingDecision.NOT_RECORD,\n    };\n  }\n\n  toString(): string {\n    return 'AlwaysOffSampler';\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler, SamplingDecision, SamplingResult } from '@opentelemetry/api';\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples all traces.\n */\nexport class AlwaysOnSampler implements Sampler {\n  shouldSample(): SamplingResult {\n    return {\n      decision: SamplingDecision.RECORD_AND_SAMPLED,\n    };\n  }\n\n  toString(): string {\n    return 'AlwaysOnSampler';\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  Link,\n  Sampler,\n  SamplingResult,\n  SpanAttributes,\n  SpanKind,\n  TraceFlags, trace,\n} from '@opentelemetry/api';\nimport { globalErrorHandler } from '../../common/global-error-handler';\nimport { AlwaysOffSampler } from './AlwaysOffSampler';\nimport { AlwaysOnSampler } from './AlwaysOnSampler';\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nexport class ParentBasedSampler implements Sampler {\n  private _root: Sampler;\n  private _remoteParentSampled: Sampler;\n  private _remoteParentNotSampled: Sampler;\n  private _localParentSampled: Sampler;\n  private _localParentNotSampled: Sampler;\n\n  constructor(config: ParentBasedSamplerConfig) {\n    this._root = config.root;\n\n    if (!this._root) {\n      globalErrorHandler(\n        new Error('ParentBasedSampler must have a root sampler configured')\n      );\n      this._root = new AlwaysOnSampler();\n    }\n\n    this._remoteParentSampled =\n      config.remoteParentSampled ?? new AlwaysOnSampler();\n    this._remoteParentNotSampled =\n      config.remoteParentNotSampled ?? new AlwaysOffSampler();\n    this._localParentSampled =\n      config.localParentSampled ?? new AlwaysOnSampler();\n    this._localParentNotSampled =\n      config.localParentNotSampled ?? new AlwaysOffSampler();\n  }\n\n  shouldSample(\n    context: Context,\n    traceId: string,\n    spanName: string,\n    spanKind: SpanKind,\n    attributes: SpanAttributes,\n    links: Link[]\n  ): SamplingResult {\n    const parentContext = trace.getSpanContext(context);\n\n    if (!parentContext || !isSpanContextValid(parentContext)) {\n      return this._root.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    if (parentContext.isRemote) {\n      if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n        return this._remoteParentSampled.shouldSample(\n          context,\n          traceId,\n          spanName,\n          spanKind,\n          attributes,\n          links\n        );\n      }\n      return this._remoteParentNotSampled.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n      return this._localParentSampled.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    return this._localParentNotSampled.shouldSample(\n      context,\n      traceId,\n      spanName,\n      spanKind,\n      attributes,\n      links\n    );\n  }\n\n  toString(): string {\n    return `ParentBased{root=${this._root.toString()}, remoteParentSampled=${this._remoteParentSampled.toString()}, remoteParentNotSampled=${this._remoteParentNotSampled.toString()}, localParentSampled=${this._localParentSampled.toString()}, localParentNotSampled=${this._localParentNotSampled.toString()}}`;\n  }\n}\n\ninterface ParentBasedSamplerConfig {\n  /** Sampler called for spans with no parent */\n  root: Sampler;\n  /** Sampler called for spans with a remote parent which was sampled. Default AlwaysOn */\n  remoteParentSampled?: Sampler;\n  /** Sampler called for spans with a remote parent which was not sampled. Default AlwaysOff */\n  remoteParentNotSampled?: Sampler;\n  /** Sampler called for spans with a local parent which was sampled. Default AlwaysOn */\n  localParentSampled?: Sampler;\n  /** Sampler called for spans with a local parent which was not sampled. Default AlwaysOff */\n  localParentNotSampled?: Sampler;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Sampler,\n  SamplingDecision,\n  SamplingResult,\n  isValidTraceId,\n} from '@opentelemetry/api';\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples a given fraction of traces based of trace id deterministically.\n */\nexport class TraceIdRatioBasedSampler implements Sampler {\n  private _upperBound: number;\n\n  constructor(private readonly _ratio: number = 0) {\n    this._ratio = this._normalize(_ratio);\n    this._upperBound = Math.floor(this._ratio * 0xffffffff);\n  }\n\n  shouldSample(context: unknown, traceId: string): SamplingResult {\n    return {\n      decision:\n        isValidTraceId(traceId) && this._accumulate(traceId) < this._upperBound\n          ? SamplingDecision.RECORD_AND_SAMPLED\n          : SamplingDecision.NOT_RECORD,\n    };\n  }\n\n  toString(): string {\n    return `TraceIdRatioBased{${this._ratio}}`;\n  }\n\n  private _normalize(ratio: number): number {\n    if (typeof ratio !== 'number' || isNaN(ratio)) return 0;\n    return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n  }\n\n  private _accumulate(traceId: string): number {\n    let accumulation = 0;\n    for (let i = 0; i < traceId.length / 8; i++) {\n      const pos = i * 8;\n      const part = parseInt(traceId.slice(pos, pos + 8), 16);\n      accumulation = (accumulation ^ part) >>> 0;\n    }\n    return accumulation;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { isPlainObject } from './lodash.merge';\n\nconst MAX_LEVEL = 20;\n\ninterface ObjectInto {\n  obj: any;\n  key: string;\n}\n\n/**\n * Merges objects together\n * @param args - objects / values to be merged\n */\nexport function merge(...args: any[]): any {\n  let result: any = args.shift();\n  const objects: WeakMap<any, ObjectInto[]> | undefined = new WeakMap<any, ObjectInto[]>();\n  while (args.length > 0) {\n    result = mergeTwoObjects(result, args.shift(), 0, objects);\n  }\n\n  return result;\n}\n\nfunction takeValue(value: any): any {\n  if (isArray(value)) {\n    return value.slice();\n  }\n  return value;\n}\n\n/**\n * Merges two objects\n * @param one - first object\n * @param two - second object\n * @param level - current deep level\n * @param objects - objects holder that has been already referenced - to prevent\n * cyclic dependency\n */\nfunction mergeTwoObjects(\n  one: any,\n  two: any,\n  level = 0,\n  objects: WeakMap<any, ObjectInto[]>,\n): any {\n  let result: any;\n  if (level > MAX_LEVEL) {\n    return undefined;\n  }\n  level++;\n  if (isPrimitive(one) || isPrimitive(two) || isFunction(two)) {\n    result = takeValue(two);\n  } else if (isArray(one)) {\n    result = one.slice();\n    if (isArray(two)) {\n      for (let i = 0, j = two.length; i < j; i++) {\n        result.push(takeValue(two[i]));\n      }\n    } else if (isObject(two)) {\n      const keys = Object.keys(two);\n      for (let i = 0, j = keys.length; i < j; i++) {\n        const key = keys[i];\n        result[key] = takeValue(two[key]);\n      }\n    }\n  } else if (isObject(one)) {\n    if (isObject(two)) {\n      if (!shouldMerge(one, two)) {\n        return two;\n      }\n      result = Object.assign({}, one);\n      const keys = Object.keys(two);\n\n      for (let i = 0, j = keys.length; i < j; i++) {\n        const key = keys[i];\n        const twoValue = two[key];\n\n        if (isPrimitive(twoValue)) {\n          if (typeof twoValue === 'undefined') {\n            delete result[key];\n          } else {\n            // result[key] = takeValue(twoValue);\n            result[key] = twoValue;\n          }\n        } else {\n          const obj1 = result[key];\n          const obj2 = twoValue;\n\n          if (\n            wasObjectReferenced(one, key, objects) ||\n            wasObjectReferenced(two, key, objects)\n          ) {\n            delete result[key];\n          } else {\n\n            if (isObject(obj1) && isObject(obj2)) {\n              const arr1 = objects.get(obj1) || [];\n              const arr2 = objects.get(obj2) || [];\n              arr1.push({ obj: one, key });\n              arr2.push({ obj: two, key });\n              objects.set(obj1, arr1);\n              objects.set(obj2, arr2);\n            }\n\n            result[key] = mergeTwoObjects(\n              result[key],\n              twoValue,\n              level,\n              objects\n            );\n          }\n        }\n      }\n    } else {\n      result = two;\n    }\n  }\n\n  return result;\n}\n\n/**\n * Function to check if object has been already reference\n * @param obj\n * @param key\n * @param objects\n */\nfunction wasObjectReferenced(\n  obj: any,\n  key: string,\n  objects: WeakMap<any, ObjectInto[]>,\n): boolean {\n  const arr = objects.get(obj[key]) || [];\n  for (let i = 0, j = arr.length; i < j; i++) {\n    const info = arr[i];\n    if (info.key === key && info.obj === obj) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isArray(value: any): boolean {\n  return Array.isArray(value);\n}\n\nfunction isFunction(value: any): boolean {\n  return typeof value === 'function';\n}\n\nfunction isObject(value: any): boolean {\n  return !isPrimitive(value) && !isArray(value) && !isFunction(value) && typeof value === 'object';\n}\n\nfunction isPrimitive(value: any): boolean {\n  return typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean' ||\n    typeof value === 'undefined' ||\n    value instanceof Date ||\n    value instanceof RegExp ||\n    value === null;\n}\n\nfunction shouldMerge(one: any, two: any): boolean {\n  if (!isPlainObject(one) || !isPlainObject(two)) {\n    return false;\n  }\n\n  return true;\n}\n\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * based on lodash in order to support esm builds without esModuleInterop.\n * lodash is using MIT License.\n **/\n\nconst objectTag = '[object Object]';\nconst nullTag = '[object Null]';\nconst undefinedTag = '[object Undefined]';\nconst funcProto = Function.prototype;\nconst funcToString = funcProto.toString;\nconst objectCtorString = funcToString.call(Object);\nconst getPrototype = overArg(Object.getPrototypeOf, Object);\nconst objectProto = Object.prototype;\nconst hasOwnProperty = objectProto.hasOwnProperty;\nconst symToStringTag = Symbol ? Symbol.toStringTag : undefined;\nconst nativeObjectToString = objectProto.toString;\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func: Function, transform: any): any {\n  return function(arg: any) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nexport function isPlainObject(value: any) {\n  if (!isObjectLike(value) || baseGetTag(value) !== objectTag) {\n    return false;\n  }\n  const proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  const Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) === objectCtorString;\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value: any) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value: any) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value: any) {\n  const isOwn = hasOwnProperty.call(value, symToStringTag as any),\n    tag = value[symToStringTag as any];\n  let unmasked = false;\n\n  try {\n    value[symToStringTag as any] = undefined;\n    unmasked = true;\n  } catch (e) {\n    // silence\n  }\n\n  const result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag as any] = tag;\n    } else {\n      delete value[symToStringTag as any];\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value: any) {\n  return nativeObjectToString.call(value);\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function urlMatches(url: string, urlToMatch: string | RegExp): boolean {\n  if (typeof urlToMatch === 'string') {\n    return url === urlToMatch;\n  } else {\n    return !!url.match(urlToMatch);\n  }\n}\n/**\n * Check if {@param url} should be ignored when comparing against {@param ignoredUrls}\n * @param url\n * @param ignoredUrls\n */\nexport function isUrlIgnored(\n  url: string,\n  ignoredUrls?: Array<string | RegExp>\n): boolean {\n  if (!ignoredUrls) {\n    return false;\n  }\n\n  for (const ignoreUrl of ignoredUrls) {\n    if (urlMatches(url, ignoreUrl)) {\n      return true;\n    }\n  }\n  return false;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ShimWrapped } from '../common/types';\n\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nexport function isWrapped(func: unknown): func is ShimWrapped {\n  return (\n    typeof func === 'function' &&\n    typeof (func as ShimWrapped).__original === 'function' &&\n    typeof (func as ShimWrapped).__unwrap === 'function' &&\n    (func as ShimWrapped).__wrapped === true\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './promise';\n\n/**\n * Bind the callback and only invoke the callback once regardless how many times `BindOnceFuture.call` is invoked.\n */\nexport class BindOnceFuture<\n  R,\n  This = unknown,\n  T extends (this: This, ...args: unknown[]) => R = () => R\n> {\n  private _isCalled = false;\n  private _deferred = new Deferred<R>();\n  constructor(private _callback: T, private _that: This) {}\n\n  get isCalled() {\n    return this._isCalled;\n  }\n\n  get promise() {\n    return this._deferred.promise;\n  }\n\n  call(...args: Parameters<T>): Promise<R> {\n    if (!this._isCalled) {\n      this._isCalled = true;\n      try {\n        Promise.resolve(this._callback.call(this._that, ...args))\n          .then(\n            val => this._deferred.resolve(val),\n            err => this._deferred.reject(err)\n          );\n      } catch (err) {\n        this._deferred.reject(err);\n      }\n    }\n    return this._deferred.promise;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<T> {\n  private _promise: Promise<T>;\n  private _resolve!: (val: T) => void;\n  private _reject!: (error: unknown) => void;\n  constructor() {\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  get promise() {\n    return this._promise;\n  }\n\n  resolve(val: T) {\n    this._resolve(val);\n  }\n\n  reject(err: unknown) {\n    this._reject(err);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  isAttributeValue,\n  hrTime,\n  hrTimeDuration,\n  InstrumentationLibrary,\n  isTimeInput,\n  timeInputToHrTime,\n  sanitizeAttributes,\n} from '@opentelemetry/core';\nimport { Resource } from '@opentelemetry/resources';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { ReadableSpan } from './export/ReadableSpan';\nimport { TimedEvent } from './TimedEvent';\nimport { Tracer } from './Tracer';\nimport { SpanProcessor } from './SpanProcessor';\nimport { SpanLimits } from './types';\nimport { SpanAttributeValue, Context } from '@opentelemetry/api';\nimport { ExceptionEventName } from './enums';\n\n/**\n * This class represents a span.\n */\nexport class Span implements api.Span, ReadableSpan {\n  // Below properties are included to implement ReadableSpan for export\n  // purposes but are not intended to be written-to directly.\n  private readonly _spanContext: api.SpanContext;\n  readonly kind: api.SpanKind;\n  readonly parentSpanId?: string;\n  readonly attributes: api.SpanAttributes = {};\n  readonly links: api.Link[] = [];\n  readonly events: TimedEvent[] = [];\n  readonly startTime: api.HrTime;\n  readonly resource: Resource;\n  readonly instrumentationLibrary: InstrumentationLibrary;\n  name: string;\n  status: api.SpanStatus = {\n    code: api.SpanStatusCode.UNSET,\n  };\n  endTime: api.HrTime = [0, 0];\n  private _ended = false;\n  private _duration: api.HrTime = [-1, -1];\n  private readonly _spanProcessor: SpanProcessor;\n  private readonly _spanLimits: SpanLimits;\n  private readonly _attributeValueLengthLimit: number;\n\n  /** Constructs a new Span instance. */\n  constructor(\n    parentTracer: Tracer,\n    context: Context,\n    spanName: string,\n    spanContext: api.SpanContext,\n    kind: api.SpanKind,\n    parentSpanId?: string,\n    links: api.Link[] = [],\n    startTime: api.TimeInput = hrTime()\n  ) {\n    this.name = spanName;\n    this._spanContext = spanContext;\n    this.parentSpanId = parentSpanId;\n    this.kind = kind;\n    this.links = links;\n    this.startTime = timeInputToHrTime(startTime);\n    this.resource = parentTracer.resource;\n    this.instrumentationLibrary = parentTracer.instrumentationLibrary;\n    this._spanLimits = parentTracer.getSpanLimits();\n    this._spanProcessor = parentTracer.getActiveSpanProcessor();\n    this._spanProcessor.onStart(this, context);\n    this._attributeValueLengthLimit = this._spanLimits.attributeValueLengthLimit || 0;\n  }\n\n  spanContext(): api.SpanContext {\n    return this._spanContext;\n  }\n\n  setAttribute(key: string, value?: SpanAttributeValue): this;\n  setAttribute(key: string, value: unknown): this {\n    if (value == null || this._isSpanEnded()) return this;\n    if (key.length === 0) {\n      api.diag.warn(`Invalid attribute key: ${key}`);\n      return this;\n    }\n    if (!isAttributeValue(value)) {\n      api.diag.warn(`Invalid attribute value set for key: ${key}`);\n      return this;\n    }\n\n    if (\n      Object.keys(this.attributes).length >=\n        this._spanLimits.attributeCountLimit! &&\n      !Object.prototype.hasOwnProperty.call(this.attributes, key)\n    ) {\n      return this;\n    }\n    this.attributes[key] = this._truncateToSize(value);\n    return this;\n  }\n\n  setAttributes(attributes: api.SpanAttributes): this {\n    for (const [k, v] of Object.entries(attributes)) {\n      this.setAttribute(k, v);\n    }\n    return this;\n  }\n\n  /**\n   *\n   * @param name Span Name\n   * @param [attributesOrStartTime] Span attributes or start time\n   *     if type is {@type TimeInput} and 3rd param is undefined\n   * @param [startTime] Specified start time for the event\n   */\n  addEvent(\n    name: string,\n    attributesOrStartTime?: api.SpanAttributes | api.TimeInput,\n    startTime?: api.TimeInput\n  ): this {\n    if (this._isSpanEnded()) return this;\n    if (this._spanLimits.eventCountLimit === 0) {\n      api.diag.warn('No events allowed.');\n      return this;\n    }\n    if (this.events.length >= this._spanLimits.eventCountLimit!) {\n      api.diag.warn('Dropping extra events.');\n      this.events.shift();\n    }\n    if (isTimeInput(attributesOrStartTime)) {\n      if (typeof startTime === 'undefined') {\n        startTime = attributesOrStartTime as api.TimeInput;\n      }\n      attributesOrStartTime = undefined;\n    }\n    if (typeof startTime === 'undefined') {\n      startTime = hrTime();\n    }\n\n    const attributes = sanitizeAttributes(attributesOrStartTime);\n    this.events.push({\n      name,\n      attributes,\n      time: timeInputToHrTime(startTime),\n    });\n    return this;\n  }\n\n  setStatus(status: api.SpanStatus): this {\n    if (this._isSpanEnded()) return this;\n    this.status = status;\n    return this;\n  }\n\n  updateName(name: string): this {\n    if (this._isSpanEnded()) return this;\n    this.name = name;\n    return this;\n  }\n\n  end(endTime: api.TimeInput = hrTime()): void {\n    if (this._isSpanEnded()) {\n      api.diag.error('You can only call end() on a span once.');\n      return;\n    }\n    this._ended = true;\n    this.endTime = timeInputToHrTime(endTime);\n\n    this._duration = hrTimeDuration(this.startTime, this.endTime);\n    if (this._duration[0] < 0) {\n      api.diag.warn(\n        'Inconsistent start and end time, startTime > endTime',\n        this.startTime,\n        this.endTime\n      );\n    }\n\n    this._spanProcessor.onEnd(this);\n  }\n\n  isRecording(): boolean {\n    return this._ended === false;\n  }\n\n  recordException(exception: api.Exception, time: api.TimeInput = hrTime()): void {\n    const attributes: api.SpanAttributes = {};\n    if (typeof exception === 'string') {\n      attributes[SemanticAttributes.EXCEPTION_MESSAGE] = exception;\n    } else if (exception) {\n      if (exception.code) {\n        attributes[\n          SemanticAttributes.EXCEPTION_TYPE\n        ] = exception.code.toString();\n      } else if (exception.name) {\n        attributes[SemanticAttributes.EXCEPTION_TYPE] = exception.name;\n      }\n      if (exception.message) {\n        attributes[SemanticAttributes.EXCEPTION_MESSAGE] = exception.message;\n      }\n      if (exception.stack) {\n        attributes[SemanticAttributes.EXCEPTION_STACKTRACE] = exception.stack;\n      }\n    }\n\n    // these are minimum requirements from spec\n    if (\n      attributes[SemanticAttributes.EXCEPTION_TYPE] ||\n      attributes[SemanticAttributes.EXCEPTION_MESSAGE]\n    ) {\n      this.addEvent(ExceptionEventName, attributes, time);\n    } else {\n      api.diag.warn(`Failed to record an exception ${exception}`);\n    }\n  }\n\n  get duration(): api.HrTime {\n    return this._duration;\n  }\n\n  get ended(): boolean {\n    return this._ended;\n  }\n\n  private _isSpanEnded(): boolean {\n    if (this._ended) {\n      api.diag.warn(`Can not execute the operation on ended Span {traceId: ${this._spanContext.traceId}, spanId: ${this._spanContext.spanId}}`);\n    }\n    return this._ended;\n  }\n\n  // Utility function to truncate given value within size\n  // for value type of string, will truncate to given limit\n  // for type of non-string, will return same value\n  private _truncateToLimitUtil(value: string, limit: number): string {\n    if (value.length <= limit) {\n      return value;\n    }\n    return value.substr(0, limit);\n  }\n\n  /**\n   * If the given attribute value is of type string and has more characters than given {@code attributeValueLengthLimit} then\n   * return string with trucated to {@code attributeValueLengthLimit} characters\n   *\n   * If the given attribute value is array of strings then\n   * return new array of strings with each element truncated to {@code attributeValueLengthLimit} characters\n   *\n   * Otherwise return same Attribute {@code value}\n   *\n   * @param value Attribute value\n   * @returns truncated attribute value if required, otherwise same value\n   */\n  private _truncateToSize(value: SpanAttributeValue): SpanAttributeValue {\n    const limit = this._attributeValueLengthLimit;\n    // Check limit\n    if (limit <= 0) {\n      // Negative values are invalid, so do not truncate\n      api.diag.warn(`Attribute value limit must be positive, got ${limit}`);\n      return value;\n    }\n\n    // String\n    if (typeof value === 'string') {\n      return this._truncateToLimitUtil(value, limit);\n    }\n\n    // Array of strings\n    if (Array.isArray(value)) {\n      return (value as []).map(val => typeof val === 'string' ? this._truncateToLimitUtil(val, limit) : val);\n    }\n\n    // Other types, no need to apply value length limit\n    return value;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Event name definitions\nexport const ExceptionEventName = 'exception';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { buildSamplerFromEnv, loadDefaultConfig } from './config';\nimport { Sampler } from './Sampler';\nimport { SpanLimits, TracerConfig, GeneralLimits } from './types';\nimport {\n  DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  getEnvWithoutDefaults,\n} from '@opentelemetry/core';\n\n/**\n * Function to merge Default configuration (as specified in './config') with\n * user provided configurations.\n */\nexport function mergeConfig(userConfig: TracerConfig): TracerConfig & {\n  sampler: Sampler;\n  spanLimits: SpanLimits;\n  generalLimits: GeneralLimits;\n} {\n  const perInstanceDefaults: Partial<TracerConfig> = {\n    sampler: buildSamplerFromEnv(),\n  };\n\n  const DEFAULT_CONFIG = loadDefaultConfig();\n\n  const target = Object.assign(\n    {},\n    DEFAULT_CONFIG,\n    perInstanceDefaults,\n    userConfig\n  );\n\n  target.generalLimits = Object.assign(\n    {},\n    DEFAULT_CONFIG.generalLimits,\n    userConfig.generalLimits || {}\n  );\n\n  target.spanLimits = Object.assign(\n    {},\n    DEFAULT_CONFIG.spanLimits,\n    userConfig.spanLimits || {}\n  );\n\n  return target;\n}\n\n/**\n * When general limits are provided and model specific limits are not,\n * configures the model specific limits by using the values from the general ones.\n * @param userConfig User provided tracer configuration\n */\nexport function reconfigureLimits(userConfig: TracerConfig): TracerConfig {\n  const spanLimits = Object.assign({}, userConfig.spanLimits);\n\n  const parsedEnvConfig = getEnvWithoutDefaults();\n\n  /**\n   * Reassign span attribute count limit to use first non null value defined by user or use default value\n   */\n  spanLimits.attributeCountLimit =\n    userConfig.spanLimits?.attributeCountLimit ??\n    userConfig.generalLimits?.attributeCountLimit ??\n    parsedEnvConfig.OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT ??\n    parsedEnvConfig.OTEL_ATTRIBUTE_COUNT_LIMIT ??\n    DEFAULT_ATTRIBUTE_COUNT_LIMIT;\n\n  /**\n   * Reassign span attribute value length limit to use first non null value defined by user or use default value\n   */\n  spanLimits.attributeValueLengthLimit =\n    userConfig.spanLimits?.attributeValueLengthLimit ??\n    userConfig.generalLimits?.attributeValueLengthLimit ??\n    parsedEnvConfig.OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT ??\n    parsedEnvConfig.OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT ??\n    DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT;\n\n  return Object.assign({}, userConfig, { spanLimits });\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport {\n  getEnv,\n  TracesSamplerValues,\n  ENVIRONMENT,\n} from '@opentelemetry/core';\nimport { Sampler } from './Sampler';\nimport { AlwaysOffSampler } from './sampler/AlwaysOffSampler';\nimport { AlwaysOnSampler } from './sampler/AlwaysOnSampler';\nimport { ParentBasedSampler } from './sampler/ParentBasedSampler';\nimport { TraceIdRatioBasedSampler } from './sampler/TraceIdRatioBasedSampler';\n\nconst env = getEnv();\nconst FALLBACK_OTEL_TRACES_SAMPLER = TracesSamplerValues.AlwaysOn;\nconst DEFAULT_RATIO = 1;\n\n/**\n * Load default configuration. For fields with primitive values, any user-provided\n * value will override the corresponding default value. For fields with\n * non-primitive values (like `spanLimits`), the user-provided value will be\n * used to extend the default value.\n */\n\n// object needs to be wrapped in this function and called when needed otherwise\n// envs are parsed before tests are ran - causes tests using these envs to fail\nexport function loadDefaultConfig() {\n  return {\n    sampler: buildSamplerFromEnv(env),\n    forceFlushTimeoutMillis: 30000,\n    generalLimits: {\n      attributeValueLengthLimit: getEnv().OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n      attributeCountLimit: getEnv().OTEL_ATTRIBUTE_COUNT_LIMIT,\n    },\n    spanLimits: {\n      attributeValueLengthLimit: getEnv().OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n      attributeCountLimit: getEnv().OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT,\n      linkCountLimit: getEnv().OTEL_SPAN_LINK_COUNT_LIMIT,\n      eventCountLimit: getEnv().OTEL_SPAN_EVENT_COUNT_LIMIT,\n    },\n  };\n}\n\n/**\n * Based on environment, builds a sampler, complies with specification.\n * @param environment optional, by default uses getEnv(), but allows passing a value to reuse parsed environment\n */\nexport function buildSamplerFromEnv(\n  environment: Required<ENVIRONMENT> = getEnv()\n): Sampler {\n  switch (environment.OTEL_TRACES_SAMPLER) {\n    case TracesSamplerValues.AlwaysOn:\n      return new AlwaysOnSampler();\n    case TracesSamplerValues.AlwaysOff:\n      return new AlwaysOffSampler();\n    case TracesSamplerValues.ParentBasedAlwaysOn:\n      return new ParentBasedSampler({\n        root: new AlwaysOnSampler(),\n      });\n    case TracesSamplerValues.ParentBasedAlwaysOff:\n      return new ParentBasedSampler({\n        root: new AlwaysOffSampler(),\n      });\n    case TracesSamplerValues.TraceIdRatio:\n      return new TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv(environment));\n    case TracesSamplerValues.ParentBasedTraceIdRatio:\n      return new ParentBasedSampler({\n        root: new TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv(environment)),\n      });\n    default:\n      diag.error(\n        `OTEL_TRACES_SAMPLER value \"${environment.OTEL_TRACES_SAMPLER} invalid, defaulting to ${FALLBACK_OTEL_TRACES_SAMPLER}\".`\n      );\n      return new AlwaysOnSampler();\n  }\n}\n\nfunction getSamplerProbabilityFromEnv(\n  environment: Required<ENVIRONMENT>\n): number | undefined {\n  if (\n    environment.OTEL_TRACES_SAMPLER_ARG === undefined ||\n    environment.OTEL_TRACES_SAMPLER_ARG === ''\n  ) {\n    diag.error(\n      `OTEL_TRACES_SAMPLER_ARG is blank, defaulting to ${DEFAULT_RATIO}.`\n    );\n    return DEFAULT_RATIO;\n  }\n\n  const probability = Number(environment.OTEL_TRACES_SAMPLER_ARG);\n\n  if (isNaN(probability)) {\n    diag.error(\n      `OTEL_TRACES_SAMPLER_ARG=${environment.OTEL_TRACES_SAMPLER_ARG} was given, but it is invalid, defaulting to ${DEFAULT_RATIO}.`\n    );\n    return DEFAULT_RATIO;\n  }\n\n  if (probability < 0 || probability > 1) {\n    diag.error(\n      `OTEL_TRACES_SAMPLER_ARG=${environment.OTEL_TRACES_SAMPLER_ARG} was given, but it is out of range ([0..1]), defaulting to ${DEFAULT_RATIO}.`\n    );\n    return DEFAULT_RATIO;\n  }\n\n  return probability;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler, SamplingDecision, SamplingResult } from '../Sampler';\n\n/** Sampler that samples no traces. */\nexport class AlwaysOffSampler implements Sampler {\n  shouldSample(): SamplingResult {\n    return {\n      decision: SamplingDecision.NOT_RECORD,\n    };\n  }\n\n  toString(): string {\n    return 'AlwaysOffSampler';\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, Link, SpanAttributes, SpanKind } from '@opentelemetry/api';\n\n/**\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nexport enum SamplingDecision {\n  /**\n   * `Span.isRecording() === false`, span will not be recorded and all events\n   * and attributes will be dropped.\n   */\n  NOT_RECORD,\n  /**\n   * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n   * MUST NOT be set.\n   */\n  RECORD,\n  /**\n   * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n   * MUST be set.\n   */\n  RECORD_AND_SAMPLED,\n}\n\n/**\n * A sampling result contains a decision for a {@link Span} and additional\n * attributes the sampler would like to added to the Span.\n */\nexport interface SamplingResult {\n  /**\n   * A sampling decision, refer to {@link SamplingDecision} for details.\n   */\n  decision: SamplingDecision;\n  /**\n   * The list of attributes returned by SamplingResult MUST be immutable.\n   * Caller may call {@link Sampler}.shouldSample any number of times and\n   * can safely cache the returned value.\n   */\n  attributes?: Readonly<SpanAttributes>;\n}\n\n/**\n * This interface represent a sampler. Sampling is a mechanism to control the\n * noise and overhead introduced by OpenTelemetry by reducing the number of\n * samples of traces collected and sent to the backend.\n */\nexport interface Sampler {\n  /**\n   * Checks whether span needs to be created and tracked.\n   *\n   * @param context Parent Context which may contain a span.\n   * @param traceId of the span to be created. It can be different from the\n   *     traceId in the {@link SpanContext}. Typically in situations when the\n   *     span to be created starts a new trace.\n   * @param spanName of the span to be created.\n   * @param spanKind of the span to be created.\n   * @param attributes Initial set of SpanAttributes for the Span being constructed.\n   * @param links Collection of links that will be associated with the Span to\n   *     be created. Typically useful for batch operations.\n   * @returns a {@link SamplingResult}.\n   */\n  shouldSample(\n    context: Context,\n    traceId: string,\n    spanName: string,\n    spanKind: SpanKind,\n    attributes: SpanAttributes,\n    links: Link[]\n  ): SamplingResult;\n\n  /** Returns the sampler name or short description with the configuration. */\n  toString(): string;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler, SamplingDecision, SamplingResult } from '../Sampler';\n\n/** Sampler that samples all traces. */\nexport class AlwaysOnSampler implements Sampler {\n  shouldSample(): SamplingResult {\n    return {\n      decision: SamplingDecision.RECORD_AND_SAMPLED,\n    };\n  }\n\n  toString(): string {\n    return 'AlwaysOnSampler';\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  Link,\n  SpanAttributes,\n  SpanKind,\n  TraceFlags, trace,\n} from '@opentelemetry/api';\nimport { globalErrorHandler } from '@opentelemetry/core';\nimport { AlwaysOffSampler } from './AlwaysOffSampler';\nimport { AlwaysOnSampler } from './AlwaysOnSampler';\nimport { Sampler, SamplingResult } from '../Sampler';\n\n/**\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nexport class ParentBasedSampler implements Sampler {\n  private _root: Sampler;\n  private _remoteParentSampled: Sampler;\n  private _remoteParentNotSampled: Sampler;\n  private _localParentSampled: Sampler;\n  private _localParentNotSampled: Sampler;\n\n  constructor(config: ParentBasedSamplerConfig) {\n    this._root = config.root;\n\n    if (!this._root) {\n      globalErrorHandler(\n        new Error('ParentBasedSampler must have a root sampler configured')\n      );\n      this._root = new AlwaysOnSampler();\n    }\n\n    this._remoteParentSampled =\n      config.remoteParentSampled ?? new AlwaysOnSampler();\n    this._remoteParentNotSampled =\n      config.remoteParentNotSampled ?? new AlwaysOffSampler();\n    this._localParentSampled =\n      config.localParentSampled ?? new AlwaysOnSampler();\n    this._localParentNotSampled =\n      config.localParentNotSampled ?? new AlwaysOffSampler();\n  }\n\n  shouldSample(\n    context: Context,\n    traceId: string,\n    spanName: string,\n    spanKind: SpanKind,\n    attributes: SpanAttributes,\n    links: Link[]\n  ): SamplingResult {\n    const parentContext = trace.getSpanContext(context);\n\n    if (!parentContext || !isSpanContextValid(parentContext)) {\n      return this._root.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    if (parentContext.isRemote) {\n      if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n        return this._remoteParentSampled.shouldSample(\n          context,\n          traceId,\n          spanName,\n          spanKind,\n          attributes,\n          links\n        );\n      }\n      return this._remoteParentNotSampled.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n      return this._localParentSampled.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    return this._localParentNotSampled.shouldSample(\n      context,\n      traceId,\n      spanName,\n      spanKind,\n      attributes,\n      links\n    );\n  }\n\n  toString(): string {\n    return `ParentBased{root=${this._root.toString()}, remoteParentSampled=${this._remoteParentSampled.toString()}, remoteParentNotSampled=${this._remoteParentNotSampled.toString()}, localParentSampled=${this._localParentSampled.toString()}, localParentNotSampled=${this._localParentNotSampled.toString()}}`;\n  }\n}\n\ninterface ParentBasedSamplerConfig {\n  /** Sampler called for spans with no parent */\n  root: Sampler;\n  /** Sampler called for spans with a remote parent which was sampled. Default AlwaysOn */\n  remoteParentSampled?: Sampler;\n  /** Sampler called for spans with a remote parent which was not sampled. Default AlwaysOff */\n  remoteParentNotSampled?: Sampler;\n  /** Sampler called for spans with a local parent which was sampled. Default AlwaysOn */\n  localParentSampled?: Sampler;\n  /** Sampler called for spans with a local parent which was not sampled. Default AlwaysOff */\n  localParentNotSampled?: Sampler;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isValidTraceId } from '@opentelemetry/api';\nimport { Sampler, SamplingDecision, SamplingResult } from '../Sampler';\n\n\n/** Sampler that samples a given fraction of traces based of trace id deterministically. */\nexport class TraceIdRatioBasedSampler implements Sampler {\n  private _upperBound: number;\n\n  constructor(private readonly _ratio: number = 0) {\n    this._ratio = this._normalize(_ratio);\n    this._upperBound = Math.floor(this._ratio * 0xffffffff);\n  }\n\n  shouldSample(context: unknown, traceId: string): SamplingResult {\n    return {\n      decision:\n        isValidTraceId(traceId) && this._accumulate(traceId) < this._upperBound\n          ? SamplingDecision.RECORD_AND_SAMPLED\n          : SamplingDecision.NOT_RECORD,\n    };\n  }\n\n  toString(): string {\n    return `TraceIdRatioBased{${this._ratio}}`;\n  }\n\n  private _normalize(ratio: number): number {\n    if (typeof ratio !== 'number' || isNaN(ratio)) return 0;\n    return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n  }\n\n  private _accumulate(traceId: string): number {\n    let accumulation = 0;\n    for (let i = 0; i < traceId.length / 8; i++) {\n      const pos = i * 8;\n      const part = parseInt(traceId.slice(pos, pos + 8), 16);\n      accumulation = (accumulation ^ part) >>> 0;\n    }\n    return accumulation;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './export/BatchSpanProcessor';\nexport * from './RandomIdGenerator';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BatchSpanProcessorBase } from '../../../export/BatchSpanProcessorBase';\nimport { SpanExporter } from '../../../export/SpanExporter';\nimport { BatchSpanProcessorBrowserConfig } from '../../../types';\n\nexport class BatchSpanProcessor extends BatchSpanProcessorBase<BatchSpanProcessorBrowserConfig> {\n  private _visibilityChangeListener?: () => void;\n  private _pageHideListener?: () => void;\n\n  constructor(_exporter: SpanExporter, config?: BatchSpanProcessorBrowserConfig) {\n    super(_exporter, config);\n    this.onInit(config);\n  }\n\n  private onInit(config?: BatchSpanProcessorBrowserConfig): void {\n    if (config?.disableAutoFlushOnDocumentHide !== true && typeof document !== 'undefined') {\n      this._visibilityChangeListener = () => {\n        if (document.visibilityState === 'hidden') {\n          void this.forceFlush();\n        }\n      };\n      this._pageHideListener = () => {\n        void this.forceFlush();\n      };\n      document.addEventListener('visibilitychange', this._visibilityChangeListener);\n\n      // use 'pagehide' event as a fallback for Safari; see https://bugs.webkit.org/show_bug.cgi?id=116769\n      document.addEventListener('pagehide', this._pageHideListener);\n    }\n  }\n\n  protected onShutdown(): void {\n    if (typeof document !== 'undefined') {\n      if (this._visibilityChangeListener) {\n        document.removeEventListener('visibilitychange', this._visibilityChangeListener);\n      }\n      if (this._pageHideListener) {\n        document.removeEventListener('pagehide', this._pageHideListener);\n      }\n    }\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context, Context, TraceFlags } from '@opentelemetry/api';\nimport {\n  BindOnceFuture,\n  ExportResultCode,\n  getEnv,\n  globalErrorHandler,\n  suppressTracing,\n  unrefTimer,\n} from '@opentelemetry/core';\nimport { Span } from '../Span';\nimport { SpanProcessor } from '../SpanProcessor';\nimport { BufferConfig } from '../types';\nimport { ReadableSpan } from './ReadableSpan';\nimport { SpanExporter } from './SpanExporter';\n\n/**\n * Implementation of the {@link SpanProcessor} that batches spans exported by\n * the SDK then pushes them to the exporter pipeline.\n */\nexport abstract class BatchSpanProcessorBase<T extends BufferConfig> implements SpanProcessor {\n  private readonly _maxExportBatchSize: number;\n  private readonly _maxQueueSize: number;\n  private readonly _scheduledDelayMillis: number;\n  private readonly _exportTimeoutMillis: number;\n\n  private _finishedSpans: ReadableSpan[] = [];\n  private _timer: NodeJS.Timeout | undefined;\n  private _shutdownOnce: BindOnceFuture<void>;\n\n  constructor(private readonly _exporter: SpanExporter, config?: T) {\n    const env = getEnv();\n    this._maxExportBatchSize =\n      typeof config?.maxExportBatchSize === 'number'\n        ? config.maxExportBatchSize\n        : env.OTEL_BSP_MAX_EXPORT_BATCH_SIZE;\n    this._maxQueueSize =\n      typeof config?.maxQueueSize === 'number'\n        ? config.maxQueueSize\n        : env.OTEL_BSP_MAX_QUEUE_SIZE;\n    this._scheduledDelayMillis =\n      typeof config?.scheduledDelayMillis === 'number'\n        ? config.scheduledDelayMillis\n        : env.OTEL_BSP_SCHEDULE_DELAY;\n    this._exportTimeoutMillis =\n      typeof config?.exportTimeoutMillis === 'number'\n        ? config.exportTimeoutMillis\n        : env.OTEL_BSP_EXPORT_TIMEOUT;\n\n    this._shutdownOnce = new BindOnceFuture(this._shutdown, this);\n  }\n\n  forceFlush(): Promise<void> {\n    if (this._shutdownOnce.isCalled) {\n      return this._shutdownOnce.promise;\n    }\n    return this._flushAll();\n  }\n\n  // does nothing.\n  onStart(_span: Span, _parentContext: Context): void {}\n\n  onEnd(span: ReadableSpan): void {\n    if (this._shutdownOnce.isCalled) {\n      return;\n    }\n\n    if ((span.spanContext().traceFlags & TraceFlags.SAMPLED) === 0) {\n      return;\n    }\n\n    this._addToBuffer(span);\n  }\n\n  shutdown(): Promise<void> {\n    return this._shutdownOnce.call();\n  }\n\n  private _shutdown() {\n    return Promise.resolve()\n      .then(() => {\n        return this.onShutdown();\n      })\n      .then(() => {\n        return this._flushAll();\n      })\n      .then(() => {\n        return this._exporter.shutdown();\n      });\n  }\n\n  /** Add a span in the buffer. */\n  private _addToBuffer(span: ReadableSpan) {\n    if (this._finishedSpans.length >= this._maxQueueSize) {\n      // limit reached, drop span\n      return;\n    }\n    this._finishedSpans.push(span);\n    this._maybeStartTimer();\n  }\n\n  /**\n   * Send all spans to the exporter respecting the batch size limit\n   * This function is used only on forceFlush or shutdown,\n   * for all other cases _flush should be used\n   * */\n  private _flushAll(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const promises = [];\n      // calculate number of batches\n      const count = Math.ceil(\n        this._finishedSpans.length / this._maxExportBatchSize\n      );\n      for (let i = 0, j = count; i < j; i++) {\n        promises.push(this._flushOneBatch());\n      }\n      Promise.all(promises)\n        .then(() => {\n          resolve();\n        })\n        .catch(reject);\n    });\n  }\n\n  private _flushOneBatch(): Promise<void> {\n    this._clearTimer();\n    if (this._finishedSpans.length === 0) {\n      return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n      const timer = setTimeout(() => {\n        // don't wait anymore for export, this way the next batch can start\n        reject(new Error('Timeout'));\n      }, this._exportTimeoutMillis);\n      // prevent downstream exporter calls from generating spans\n      context.with(suppressTracing(context.active()), () => {\n        // Reset the finished spans buffer here because the next invocations of the _flush method\n        // could pass the same finished spans to the exporter if the buffer is cleared\n        // outside of the execution of this callback.\n        this._exporter.export(\n          this._finishedSpans.splice(0, this._maxExportBatchSize),\n          result => {\n            clearTimeout(timer);\n            if (result.code === ExportResultCode.SUCCESS) {\n              resolve();\n            } else {\n              reject(\n                result.error ??\n                  new Error('BatchSpanProcessor: span export failed')\n              );\n            }\n          }\n        );\n      });\n    });\n  }\n\n  private _maybeStartTimer() {\n    if (this._timer !== undefined) return;\n    this._timer = setTimeout(() => {\n      this._flushOneBatch()\n        .then(() => {\n          if (this._finishedSpans.length > 0) {\n            this._clearTimer();\n            this._maybeStartTimer();\n          }\n        })\n        .catch(e => {\n          globalErrorHandler(e);\n        });\n    }, this._scheduledDelayMillis);\n    unrefTimer(this._timer);\n  }\n\n  private _clearTimer() {\n    if (this._timer !== undefined) {\n      clearTimeout(this._timer);\n      this._timer = undefined;\n    }\n  }\n\n  protected abstract onShutdown(): void;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IdGenerator } from '../../IdGenerator';\n\nconst SPAN_ID_BYTES = 8;\nconst TRACE_ID_BYTES = 16;\n\nexport class RandomIdGenerator implements IdGenerator {\n  /**\n   * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n   * characters corresponding to 128 bits.\n   */\n  generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n\n  /**\n   * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n   * characters corresponding to 64 bits.\n   */\n  generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n}\n\nconst SHARED_CHAR_CODES_ARRAY = Array(32);\nfunction getIdGenerator(bytes: number): () => string {\n  return function generateId() {\n    for (let i = 0; i < bytes * 2; i++) {\n      SHARED_CHAR_CODES_ARRAY[i] = Math.floor(Math.random() * 16) + 48;\n      // valid hex characters in the range 48-57 and 97-102\n      if (SHARED_CHAR_CODES_ARRAY[i] >= 58) {\n        SHARED_CHAR_CODES_ARRAY[i] += 39;\n      }\n    }\n    return String.fromCharCode.apply(\n      null,\n      SHARED_CHAR_CODES_ARRAY.slice(0, bytes * 2)\n    );\n  };\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  context,\n  diag,\n  propagation,\n  TextMapPropagator,\n  trace,\n  TracerProvider,\n} from '@opentelemetry/api';\nimport {\n  CompositePropagator,\n  W3CBaggagePropagator,\n  W3CTraceContextPropagator,\n  getEnv,\n  merge,\n} from '@opentelemetry/core';\nimport { Resource } from '@opentelemetry/resources';\nimport { SpanProcessor, Tracer } from '.';\nimport { loadDefaultConfig } from './config';\nimport { MultiSpanProcessor } from './MultiSpanProcessor';\nimport { NoopSpanProcessor } from './export/NoopSpanProcessor';\nimport { SDKRegistrationConfig, TracerConfig } from './types';\nimport { SpanExporter } from './export/SpanExporter';\nimport { BatchSpanProcessor } from './platform';\nimport { reconfigureLimits } from './utility';\n\nexport type PROPAGATOR_FACTORY = () => TextMapPropagator;\nexport type EXPORTER_FACTORY = () => SpanExporter;\n\nexport enum ForceFlushState {\n  'resolved',\n  'timeout',\n  'error',\n  'unresolved',\n}\n\n/**\n * This class represents a basic tracer provider which platform libraries can extend\n */\nexport class BasicTracerProvider implements TracerProvider {\n  protected static readonly _registeredPropagators = new Map<\n    string,\n    PROPAGATOR_FACTORY\n  >([\n    ['tracecontext', () => new W3CTraceContextPropagator()],\n    ['baggage', () => new W3CBaggagePropagator()],\n  ]);\n\n  protected static readonly _registeredExporters = new Map<\n    string,\n    EXPORTER_FACTORY\n  >();\n\n  private readonly _config: TracerConfig;\n  private readonly _registeredSpanProcessors: SpanProcessor[] = [];\n  private readonly _tracers: Map<string, Tracer> = new Map();\n\n  activeSpanProcessor: SpanProcessor;\n  readonly resource: Resource;\n\n  constructor(config: TracerConfig = {}) {\n    const mergedConfig = merge({}, loadDefaultConfig(), reconfigureLimits(config));\n    this.resource = mergedConfig.resource ?? Resource.empty();\n    this.resource = Resource.default().merge(this.resource);\n    this._config = Object.assign({}, mergedConfig, {\n      resource: this.resource,\n    });\n\n    const defaultExporter = this._buildExporterFromEnv();\n    if (defaultExporter !== undefined) {\n      const batchProcessor = new BatchSpanProcessor(defaultExporter);\n      this.activeSpanProcessor = batchProcessor;\n    } else {\n      this.activeSpanProcessor = new NoopSpanProcessor();\n    }\n  }\n\n  getTracer(name: string, version?: string, options?: { schemaUrl?: string }): Tracer {\n    const key = `${name}@${version || ''}:${options?.schemaUrl || ''}`;\n    if (!this._tracers.has(key)) {\n      this._tracers.set(key, new Tracer({ name, version, schemaUrl: options?.schemaUrl }, this._config, this));\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this._tracers.get(key)!;\n  }\n\n  /**\n   * Adds a new {@link SpanProcessor} to this tracer.\n   * @param spanProcessor the new SpanProcessor to be added.\n   */\n  addSpanProcessor(spanProcessor: SpanProcessor): void {\n    if (this._registeredSpanProcessors.length === 0) {\n      // since we might have enabled by default a batchProcessor, we disable it\n      // before adding the new one\n      this.activeSpanProcessor\n        .shutdown()\n        .catch(err =>\n          diag.error(\n            'Error while trying to shutdown current span processor',\n            err\n          )\n        );\n    }\n    this._registeredSpanProcessors.push(spanProcessor);\n    this.activeSpanProcessor = new MultiSpanProcessor(\n      this._registeredSpanProcessors\n    );\n  }\n\n  getActiveSpanProcessor(): SpanProcessor {\n    return this.activeSpanProcessor;\n  }\n\n  /**\n   * Register this TracerProvider for use with the OpenTelemetry API.\n   * Undefined values may be replaced with defaults, and\n   * null values will be skipped.\n   *\n   * @param config Configuration object for SDK registration\n   */\n  register(config: SDKRegistrationConfig = {}): void {\n    trace.setGlobalTracerProvider(this);\n    if (config.propagator === undefined) {\n      config.propagator = this._buildPropagatorFromEnv();\n    }\n\n    if (config.contextManager) {\n      context.setGlobalContextManager(config.contextManager);\n    }\n\n    if (config.propagator) {\n      propagation.setGlobalPropagator(config.propagator);\n    }\n  }\n\n  forceFlush(): Promise<void> {\n    const timeout = this._config.forceFlushTimeoutMillis;\n    const promises = this._registeredSpanProcessors.map(\n      (spanProcessor: SpanProcessor) => {\n        return new Promise(resolve => {\n          let state: ForceFlushState;\n          const timeoutInterval = setTimeout(() => {\n            resolve(\n              new Error(\n                `Span processor did not completed within timeout period of ${timeout} ms`\n              )\n            );\n            state = ForceFlushState.timeout;\n          }, timeout);\n\n          spanProcessor\n            .forceFlush()\n            .then(() => {\n              clearTimeout(timeoutInterval);\n              if (state !== ForceFlushState.timeout) {\n                state = ForceFlushState.resolved;\n                resolve(state);\n              }\n            })\n            .catch(error => {\n              clearTimeout(timeoutInterval);\n              state = ForceFlushState.error;\n              resolve(error);\n            });\n        });\n      }\n    );\n\n    return new Promise<void>((resolve, reject) => {\n      Promise.all(promises)\n        .then(results => {\n          const errors = results.filter(\n            result => result !== ForceFlushState.resolved\n          );\n          if (errors.length > 0) {\n            reject(errors);\n          } else {\n            resolve();\n          }\n        })\n        .catch(error => reject([error]));\n    });\n  }\n\n  shutdown(): Promise<void> {\n    return this.activeSpanProcessor.shutdown();\n  }\n\n  /**\n   * TS cannot yet infer the type of this.constructor:\n   * https://github.com/Microsoft/TypeScript/issues/3841#issuecomment-337560146\n   * There is no need to override either of the getters in your child class.\n   * The type of the registered component maps should be the same across all\n   * classes in the inheritance tree.\n   */\n  protected _getPropagator(name: string): TextMapPropagator | undefined {\n    return (\n      (this.constructor as typeof BasicTracerProvider)._registeredPropagators\n    ).get(name)?.();\n  }\n\n  protected _getSpanExporter(name: string): SpanExporter | undefined {\n    return (\n      (this.constructor as typeof BasicTracerProvider)._registeredExporters\n    ).get(name)?.();\n  }\n\n  protected _buildPropagatorFromEnv(): TextMapPropagator | undefined {\n    // per spec, propagators from env must be deduplicated\n    const uniquePropagatorNames = Array.from(\n      new Set(getEnv().OTEL_PROPAGATORS)\n    );\n\n    const propagators = uniquePropagatorNames.map(name => {\n      const propagator = this._getPropagator(name);\n      if (!propagator) {\n        diag.warn(\n          `Propagator \"${name}\" requested through environment variable is unavailable.`\n        );\n      }\n\n      return propagator;\n    });\n    const validPropagators = propagators.reduce<TextMapPropagator[]>(\n      (list, item) => {\n        if (item) {\n          list.push(item);\n        }\n        return list;\n      },\n      []\n    );\n\n    if (validPropagators.length === 0) {\n      return;\n    } else if (uniquePropagatorNames.length === 1) {\n      return validPropagators[0];\n    } else {\n      return new CompositePropagator({\n        propagators: validPropagators,\n      });\n    }\n  }\n\n  protected _buildExporterFromEnv(): SpanExporter | undefined {\n    const exporterName = getEnv().OTEL_TRACES_EXPORTER;\n    if (exporterName === 'none') return;\n    const exporter = this._getSpanExporter(exporterName);\n    if (!exporter) {\n      diag.error(\n        `Exporter \"${exporterName}\" requested through environment variable is unavailable.`\n      );\n    }\n    return exporter;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './Resource';\nexport * from './platform';\nexport * from './types';\nexport * from './config';\nexport * from './detectors';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { SDK_INFO } from '@opentelemetry/core';\nimport { ResourceAttributes } from './types';\nimport { defaultServiceName } from './platform';\n\n/**\n * A Resource describes the entity for which a signals (metrics or trace) are\n * collected.\n */\nexport class Resource {\n  static readonly EMPTY = new Resource({});\n\n  /**\n   * Returns an empty Resource\n   */\n  static empty(): Resource {\n    return Resource.EMPTY;\n  }\n\n  /**\n   * Returns a Resource that indentifies the SDK in use.\n   */\n  static default(): Resource {\n    return new Resource({\n      [SemanticResourceAttributes.SERVICE_NAME]: defaultServiceName(),\n      [SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE]:\n        SDK_INFO[SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE],\n      [SemanticResourceAttributes.TELEMETRY_SDK_NAME]:\n        SDK_INFO[SemanticResourceAttributes.TELEMETRY_SDK_NAME],\n      [SemanticResourceAttributes.TELEMETRY_SDK_VERSION]:\n        SDK_INFO[SemanticResourceAttributes.TELEMETRY_SDK_VERSION],\n    });\n  }\n\n  constructor(\n    /**\n     * A dictionary of attributes with string keys and values that provide\n     * information about the entity as numbers, strings or booleans\n     * TODO: Consider to add check/validation on attributes.\n     */\n    readonly attributes: ResourceAttributes\n  ) {}\n\n  /**\n   * Returns a new, merged {@link Resource} by merging the current Resource\n   * with the other Resource. In case of a collision, other Resource takes\n   * precedence.\n   *\n   * @param other the Resource that will be merged with this.\n   * @returns the newly merged Resource.\n   */\n  merge(other: Resource | null): Resource {\n    if (!other || !Object.keys(other.attributes).length) return this;\n\n    // SpanAttributes from resource overwrite attributes from other resource.\n    const mergedAttributes = Object.assign(\n      {},\n      this.attributes,\n      other.attributes\n    );\n    return new Resource(mergedAttributes);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './default-service-name';\nexport * from './detect-resources';\nexport * from './HostDetector';\nexport * from './OSDetector';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function defaultServiceName(): string {\n  return 'unknown_service';\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Resource } from '../../Resource';\nimport { ResourceDetectionConfig } from '../../config';\nimport { diag } from '@opentelemetry/api';\n\n/**\n * Runs all resource detectors and returns the results merged into a single\n * Resource.\n *\n * @param config Configuration for resource detection\n */\nexport const detectResources = async (\n  config: ResourceDetectionConfig = {}\n): Promise<Resource> => {\n  const internalConfig: ResourceDetectionConfig = Object.assign(config);\n\n  const resources: Resource[] = await Promise.all(\n    (internalConfig.detectors || []).map(async d => {\n      try {\n        const resource = await d.detect(internalConfig);\n        diag.debug(`${d.constructor.name} found resource.`, resource);\n        return resource;\n      } catch (e) {\n        diag.debug(`${d.constructor.name} failed: ${e.message}`);\n        return Resource.empty();\n      }\n    })\n  );\n\n  return resources.reduce(\n    (acc, resource) => acc.merge(resource),\n    Resource.empty()\n  );\n};\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { noopDetector } from '../../detectors/NoopDetector';\n\nexport const hostDetector = noopDetector;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Resource } from '../Resource';\nimport { Detector } from '../types';\n\nexport class NoopDetector implements Detector {\n  async detect(): Promise<Resource> {\n    return new Resource({});\n  }\n}\n\nexport const noopDetector = new NoopDetector();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { noopDetector } from '../../detectors/NoopDetector';\n\nexport const osDetector = noopDetector;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Resource } from './Resource';\nimport { ResourceDetectionConfig } from './config';\nimport { SpanAttributes } from '@opentelemetry/api';\n\n/**\n * Interface for Resource attributes.\n * General `Attributes` interface is added in api v1.1.0.\n * To backward support older api (1.0.x), the deprecated `SpanAttributes` is used here.\n */\nexport type ResourceAttributes = SpanAttributes;\n\n/**\n * Interface for a Resource Detector. In order to detect resources in parallel\n * a detector returns a Promise containing a Resource.\n */\nexport interface Detector {\n  detect(config?: ResourceDetectionConfig): Promise<Resource>;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Detector } from './types';\n\n/**\n * ResourceDetectionConfig provides an interface for configuring resource auto-detection.\n */\nexport interface ResourceDetectionConfig {\n  detectors?: Array<Detector>;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './BrowserDetector';\nexport * from './EnvDetector';\nexport * from './ProcessDetector';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { Detector, Resource, ResourceDetectionConfig } from '..';\nimport { ResourceAttributes } from '../types';\n\n/**\n * BrowserDetector will be used to detect the resources related to browser.\n */\nclass BrowserDetector implements Detector {\n  async detect(config?: ResourceDetectionConfig): Promise<Resource> {\n    const isBrowser = typeof navigator !== 'undefined';\n    if (!isBrowser) {\n      return Resource.empty();\n    }\n    const browserResource: ResourceAttributes = {\n      [SemanticResourceAttributes.PROCESS_RUNTIME_NAME]: 'browser',\n      [SemanticResourceAttributes.PROCESS_RUNTIME_DESCRIPTION]: 'Web Browser',\n      [SemanticResourceAttributes.PROCESS_RUNTIME_VERSION]: navigator.userAgent\n    };\n    return this._getResourceAttributes(browserResource, config);\n  }\n  /**\n   * Validates process resource attribute map from process variables\n   *\n   * @param browserResource The un-sanitized resource attributes from process as key/value pairs.\n   * @param config: Config\n   * @returns The sanitized resource attributes.\n   */\n  private _getResourceAttributes(\n    browserResource: ResourceAttributes,\n    _config?: ResourceDetectionConfig\n  ) {\n    if (\n      browserResource[SemanticResourceAttributes.PROCESS_RUNTIME_VERSION] === ''\n    ) {\n      diag.debug(\n        'BrowserDetector failed: Unable to find required browser resources. '\n      );\n      return Resource.empty();\n    } else {\n      return new Resource({\n        ...browserResource,\n      });\n    }\n  }\n}\n\n\nexport const browserDetector = new BrowserDetector();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport { getEnv } from '@opentelemetry/core';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { Resource } from '../Resource';\nimport { Detector, ResourceAttributes } from '../types';\nimport { ResourceDetectionConfig } from '../config';\n\n/**\n * EnvDetector can be used to detect the presence of and create a Resource\n * from the OTEL_RESOURCE_ATTRIBUTES environment variable.\n */\nclass EnvDetector implements Detector {\n  // Type, attribute keys, and attribute values should not exceed 256 characters.\n  private readonly _MAX_LENGTH = 255;\n\n  // OTEL_RESOURCE_ATTRIBUTES is a comma-separated list of attributes.\n  private readonly _COMMA_SEPARATOR = ',';\n\n  // OTEL_RESOURCE_ATTRIBUTES contains key value pair separated by '='.\n  private readonly _LABEL_KEY_VALUE_SPLITTER = '=';\n\n  private readonly _ERROR_MESSAGE_INVALID_CHARS =\n    'should be a ASCII string with a length greater than 0 and not exceed ' +\n    this._MAX_LENGTH +\n    ' characters.';\n\n  private readonly _ERROR_MESSAGE_INVALID_VALUE =\n    'should be a ASCII string with a length not exceed ' +\n    this._MAX_LENGTH +\n    ' characters.';\n\n  /**\n   * Returns a {@link Resource} populated with attributes from the\n   * OTEL_RESOURCE_ATTRIBUTES environment variable. Note this is an async\n   * function to conform to the Detector interface.\n   *\n   * @param config The resource detection config\n   */\n  async detect(_config?: ResourceDetectionConfig): Promise<Resource> {\n    const attributes: ResourceAttributes = {};\n    const env = getEnv();\n\n    const rawAttributes = env.OTEL_RESOURCE_ATTRIBUTES;\n    const serviceName = env.OTEL_SERVICE_NAME;\n\n    if (rawAttributes) {\n      try {\n        const parsedAttributes = this._parseResourceAttributes(rawAttributes);\n        Object.assign(attributes, parsedAttributes);\n      } catch (e) {\n        diag.debug(`EnvDetector failed: ${e.message}`);\n      }\n    }\n\n    if (serviceName) {\n      attributes[SemanticResourceAttributes.SERVICE_NAME] = serviceName;\n    }\n\n    return new Resource(attributes);\n  }\n\n  /**\n   * Creates an attribute map from the OTEL_RESOURCE_ATTRIBUTES environment\n   * variable.\n   *\n   * OTEL_RESOURCE_ATTRIBUTES: A comma-separated list of attributes describing\n   * the source in more detail, e.g. “key1=val1,key2=val2”. Domain names and\n   * paths are accepted as attribute keys. Values may be quoted or unquoted in\n   * general. If a value contains whitespaces, =, or \" characters, it must\n   * always be quoted.\n   *\n   * @param rawEnvAttributes The resource attributes as a comma-seperated list\n   * of key/value pairs.\n   * @returns The sanitized resource attributes.\n   */\n  private _parseResourceAttributes(\n    rawEnvAttributes?: string\n  ): ResourceAttributes {\n    if (!rawEnvAttributes) return {};\n\n    const attributes: ResourceAttributes = {};\n    const rawAttributes: string[] = rawEnvAttributes.split(\n      this._COMMA_SEPARATOR,\n      -1\n    );\n    for (const rawAttribute of rawAttributes) {\n      const keyValuePair: string[] = rawAttribute.split(\n        this._LABEL_KEY_VALUE_SPLITTER,\n        -1\n      );\n      if (keyValuePair.length !== 2) {\n        continue;\n      }\n      let [key, value] = keyValuePair;\n      // Leading and trailing whitespaces are trimmed.\n      key = key.trim();\n      value = value.trim().split('^\"|\"$').join('');\n      if (!this._isValidAndNotEmpty(key)) {\n        throw new Error(`Attribute key ${this._ERROR_MESSAGE_INVALID_CHARS}`);\n      }\n      if (!this._isValid(value)) {\n        throw new Error(`Attribute value ${this._ERROR_MESSAGE_INVALID_VALUE}`);\n      }\n      attributes[key] = value;\n    }\n    return attributes;\n  }\n\n  /**\n   * Determines whether the given String is a valid printable ASCII string with\n   * a length not exceed _MAX_LENGTH characters.\n   *\n   * @param str The String to be validated.\n   * @returns Whether the String is valid.\n   */\n  private _isValid(name: string): boolean {\n    return name.length <= this._MAX_LENGTH && this._isPrintableString(name);\n  }\n\n  private _isPrintableString(str: string): boolean {\n    for (let i = 0; i < str.length; i++) {\n      const ch: string = str.charAt(i);\n      if (ch <= ' ' || ch >= '~') {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determines whether the given String is a valid printable ASCII string with\n   * a length greater than 0 and not exceed _MAX_LENGTH characters.\n   *\n   * @param str The String to be validated.\n   * @returns Whether the String is valid and not empty.\n   */\n  private _isValidAndNotEmpty(str: string): boolean {\n    return str.length > 0 && this._isValid(str);\n  }\n}\n\nexport const envDetector = new EnvDetector();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { Resource } from '../Resource';\nimport { Detector, ResourceAttributes } from '../types';\nimport { ResourceDetectionConfig } from '../config';\n\n/**\n * ProcessDetector will be used to detect the resources related current process running\n * and being instrumented from the NodeJS Process module.\n */\nclass ProcessDetector implements Detector {\n  async detect(config?: ResourceDetectionConfig): Promise<Resource> {\n    // Skip if not in Node.js environment.\n    if (typeof process !== 'object') {\n      return Resource.empty();\n    }\n    const processResource: ResourceAttributes = {\n      [SemanticResourceAttributes.PROCESS_PID]: process.pid,\n      [SemanticResourceAttributes.PROCESS_EXECUTABLE_NAME]: process.title || '',\n      [SemanticResourceAttributes.PROCESS_COMMAND]: process.argv[1] || '',\n      [SemanticResourceAttributes.PROCESS_COMMAND_LINE]:\n        process.argv.join(' ') || '',\n      [SemanticResourceAttributes.PROCESS_RUNTIME_VERSION]: process.versions.node,\n      [SemanticResourceAttributes.PROCESS_RUNTIME_NAME]: 'nodejs',\n      [SemanticResourceAttributes.PROCESS_RUNTIME_DESCRIPTION]: 'Node.js',\n    };\n    return this._getResourceAttributes(processResource, config);\n  }\n  /**\n   * Validates process resource attribute map from process varaibls\n   *\n   * @param processResource The unsantized resource attributes from process as key/value pairs.\n   * @param config: Config\n   * @returns The sanitized resource attributes.\n   */\n  private _getResourceAttributes(\n    processResource: ResourceAttributes,\n    _config?: ResourceDetectionConfig\n  ) {\n    if (\n      processResource[SemanticResourceAttributes.PROCESS_EXECUTABLE_NAME] ===\n        '' ||\n      processResource[SemanticResourceAttributes.PROCESS_EXECUTABLE_PATH] ===\n        '' ||\n      processResource[SemanticResourceAttributes.PROCESS_COMMAND] === '' ||\n      processResource[SemanticResourceAttributes.PROCESS_COMMAND_LINE] === '' ||\n      processResource[SemanticResourceAttributes.PROCESS_RUNTIME_VERSION] === ''\n    ) {\n      diag.debug(\n        'ProcessDetector failed: Unable to find required process resources. '\n      );\n      return Resource.empty();\n    } else {\n      return new Resource({\n        ...processResource,\n      });\n    }\n  }\n}\n\nexport const processDetector = new ProcessDetector();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '@opentelemetry/api';\nimport { globalErrorHandler } from '@opentelemetry/core';\nimport { ReadableSpan } from './export/ReadableSpan';\nimport { Span } from './Span';\nimport { SpanProcessor } from './SpanProcessor';\n\n/**\n * Implementation of the {@link SpanProcessor} that simply forwards all\n * received events to a list of {@link SpanProcessor}s.\n */\nexport class MultiSpanProcessor implements SpanProcessor {\n  constructor(private readonly _spanProcessors: SpanProcessor[]) {}\n\n  forceFlush(): Promise<void> {\n    const promises: Promise<void>[] = [];\n\n    for (const spanProcessor of this._spanProcessors) {\n      promises.push(spanProcessor.forceFlush());\n    }\n    return new Promise(resolve => {\n      Promise.all(promises)\n        .then(() => {\n          resolve();\n        })\n        .catch(error => {\n          globalErrorHandler(\n            error || new Error('MultiSpanProcessor: forceFlush failed')\n          );\n          resolve();\n        });\n    });\n  }\n\n  onStart(span: Span, context: Context): void {\n    for (const spanProcessor of this._spanProcessors) {\n      spanProcessor.onStart(span, context);\n    }\n  }\n\n  onEnd(span: ReadableSpan): void {\n    for (const spanProcessor of this._spanProcessors) {\n      spanProcessor.onEnd(span);\n    }\n  }\n\n  shutdown(): Promise<void> {\n    const promises: Promise<void>[] = [];\n\n    for (const spanProcessor of this._spanProcessors) {\n      promises.push(spanProcessor.shutdown());\n    }\n    return new Promise((resolve, reject) => {\n      Promise.all(promises).then(() => {\n        resolve();\n      }, reject);\n    });\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '@opentelemetry/api';\nimport { ReadableSpan } from './ReadableSpan';\nimport { Span } from '../Span';\nimport { SpanProcessor } from '../SpanProcessor';\n\n/** No-op implementation of SpanProcessor */\nexport class NoopSpanProcessor implements SpanProcessor {\n  onStart(_span: Span, _context: Context): void {}\n  onEnd(_span: ReadableSpan): void {}\n  shutdown(): Promise<void> {\n    return Promise.resolve();\n  }\n  forceFlush(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpanExporter } from './SpanExporter';\nimport { ReadableSpan } from './ReadableSpan';\nimport {\n  ExportResult,\n  ExportResultCode,\n  hrTimeToMicroseconds,\n} from '@opentelemetry/core';\n\n/**\n * This is implementation of {@link SpanExporter} that prints spans to the\n * console. This class can be used for diagnostic purposes.\n */\n\n/* eslint-disable no-console */\nexport class ConsoleSpanExporter implements SpanExporter {\n  /**\n   * Export spans.\n   * @param spans\n   * @param resultCallback\n   */\n  export(\n    spans: ReadableSpan[],\n    resultCallback: (result: ExportResult) => void\n  ): void {\n    return this._sendSpans(spans, resultCallback);\n  }\n\n  /**\n   * Shutdown the exporter.\n   */\n  shutdown(): Promise<void> {\n    this._sendSpans([]);\n    return Promise.resolve();\n  }\n\n  /**\n   * converts span info into more readable format\n   * @param span\n   */\n  private _exportInfo(span: ReadableSpan) {\n    return {\n      traceId: span.spanContext().traceId,\n      parentId: span.parentSpanId,\n      name: span.name,\n      id: span.spanContext().spanId,\n      kind: span.kind,\n      timestamp: hrTimeToMicroseconds(span.startTime),\n      duration: hrTimeToMicroseconds(span.duration),\n      attributes: span.attributes,\n      status: span.status,\n      events: span.events,\n      links: span.links\n    };\n  }\n\n  /**\n   * Showing spans in console\n   * @param spans\n   * @param done\n   */\n  private _sendSpans(\n    spans: ReadableSpan[],\n    done?: (result: ExportResult) => void\n  ): void {\n    for (const span of spans) {\n      console.dir(this._exportInfo(span), { depth: 3 });\n    }\n    if (done) {\n      return done({ code: ExportResultCode.SUCCESS });\n    }\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpanExporter } from './SpanExporter';\nimport { ReadableSpan } from './ReadableSpan';\nimport { ExportResult, ExportResultCode } from '@opentelemetry/core';\n\n/**\n * This class can be used for testing purposes. It stores the exported spans\n * in a list in memory that can be retrieved using the `getFinishedSpans()`\n * method.\n */\nexport class InMemorySpanExporter implements SpanExporter {\n  private _finishedSpans: ReadableSpan[] = [];\n  /**\n   * Indicates if the exporter has been \"shutdown.\"\n   * When false, exported spans will not be stored in-memory.\n   */\n  protected _stopped = false;\n\n  export(\n    spans: ReadableSpan[],\n    resultCallback: (result: ExportResult) => void\n  ): void {\n    if (this._stopped)\n      return resultCallback({\n        code: ExportResultCode.FAILED,\n        error: new Error('Exporter has been stopped'),\n      });\n    this._finishedSpans.push(...spans);\n\n    setTimeout(() => resultCallback({ code: ExportResultCode.SUCCESS }), 0);\n  }\n\n  shutdown(): Promise<void> {\n    this._stopped = true;\n    this._finishedSpans = [];\n    return Promise.resolve();\n  }\n\n  reset(): void {\n    this._finishedSpans = [];\n  }\n\n  getFinishedSpans(): ReadableSpan[] {\n    return this._finishedSpans;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  SpanKind,\n  SpanStatus,\n  SpanAttributes,\n  HrTime,\n  Link,\n  SpanContext,\n} from '@opentelemetry/api';\nimport { Resource } from '@opentelemetry/resources';\nimport { InstrumentationLibrary } from '@opentelemetry/core';\nimport { TimedEvent } from '../TimedEvent';\n\nexport interface ReadableSpan {\n  readonly name: string;\n  readonly kind: SpanKind;\n  readonly spanContext: () => SpanContext;\n  readonly parentSpanId?: string;\n  readonly startTime: HrTime;\n  readonly endTime: HrTime;\n  readonly status: SpanStatus;\n  readonly attributes: SpanAttributes;\n  readonly links: Link[];\n  readonly events: TimedEvent[];\n  readonly duration: HrTime;\n  readonly ended: boolean;\n  readonly resource: Resource;\n  readonly instrumentationLibrary: InstrumentationLibrary;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context, Context, TraceFlags } from '@opentelemetry/api';\nimport {\n  ExportResultCode,\n  globalErrorHandler,\n  suppressTracing,\n  BindOnceFuture,\n} from '@opentelemetry/core';\nimport { Span } from '../Span';\nimport { SpanProcessor } from '../SpanProcessor';\nimport { ReadableSpan } from './ReadableSpan';\nimport { SpanExporter } from './SpanExporter';\n\n/**\n * An implementation of the {@link SpanProcessor} that converts the {@link Span}\n * to {@link ReadableSpan} and passes it to the configured exporter.\n *\n * Only spans that are sampled are converted.\n */\nexport class SimpleSpanProcessor implements SpanProcessor {\n  private _shutdownOnce: BindOnceFuture<void>;\n\n  constructor(private readonly _exporter: SpanExporter) {\n    this._shutdownOnce = new BindOnceFuture(this._shutdown, this);\n  }\n\n  forceFlush(): Promise<void> {\n    // do nothing as all spans are being exported without waiting\n    return Promise.resolve();\n  }\n\n  // does nothing.\n  onStart(_span: Span, _parentContext: Context): void {}\n\n  onEnd(span: ReadableSpan): void {\n    if (this._shutdownOnce.isCalled) {\n      return;\n    }\n\n    if ((span.spanContext().traceFlags & TraceFlags.SAMPLED) === 0) {\n      return;\n    }\n\n    // prevent downstream exporter calls from generating spans\n    context.with(suppressTracing(context.active()), () => {\n      this._exporter.export([span], result => {\n        if (result.code !== ExportResultCode.SUCCESS) {\n          globalErrorHandler(\n            result.error ??\n              new Error(\n                `SimpleSpanProcessor: span export failed (status ${result})`\n              )\n          );\n        }\n      });\n    });\n  }\n\n  shutdown(): Promise<void> {\n    return this._shutdownOnce.call();\n  }\n\n  private _shutdown(): Promise<void> {\n    return this._exporter.shutdown();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExportResult } from '@opentelemetry/core';\nimport { ReadableSpan } from './ReadableSpan';\n\n/**\n * An interface that allows different tracing services to export recorded data\n * for sampled spans in their own format.\n *\n * To export data this MUST be register to the Tracer SDK using a optional\n * config.\n */\nexport interface SpanExporter {\n  /**\n   * Called to export sampled {@link ReadableSpan}s.\n   * @param spans the list of sampled Spans to be exported.\n   */\n  export(\n    spans: ReadableSpan[],\n    resultCallback: (result: ExportResult) => void\n  ): void;\n\n  /** Stops the exporter. */\n  shutdown(): Promise<void>;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '@opentelemetry/api';\nimport { ReadableSpan } from './export/ReadableSpan';\nimport { Span } from './Span';\n\n/**\n * SpanProcessor is the interface Tracer SDK uses to allow synchronous hooks\n * for when a {@link Span} is started or when a {@link Span} is ended.\n */\nexport interface SpanProcessor {\n  /**\n   * Forces to export all finished spans\n   */\n  forceFlush(): Promise<void>;\n\n  /**\n   * Called when a {@link Span} is started, if the `span.isRecording()`\n   * returns true.\n   * @param span the Span that just started.\n   */\n  onStart(span: Span, parentContext: Context): void;\n\n  /**\n   * Called when a {@link ReadableSpan} is ended, if the `span.isRecording()`\n   * returns true.\n   * @param span the Span that just ended.\n   */\n  onEnd(span: ReadableSpan): void;\n\n  /**\n   * Shuts down the processor. Called when SDK is shut down. This is an\n   * opportunity for processor to do any cleanup required.\n   */\n  shutdown(): Promise<void>;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HrTime, SpanAttributes } from '@opentelemetry/api';\n\n/**\n * Represents a timed event.\n * A timed event is an event with a timestamp.\n */\nexport interface TimedEvent {\n  time: HrTime;\n  /** The name of the event. */\n  name: string;\n  /** The attributes of the event. */\n  attributes?: SpanAttributes;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContextManager, TextMapPropagator } from '@opentelemetry/api';\nimport { Resource } from '@opentelemetry/resources';\nimport { IdGenerator } from './IdGenerator';\nimport { Sampler } from './Sampler';\n\n/**\n * TracerConfig provides an interface for configuring a Basic Tracer.\n */\nexport interface TracerConfig {\n  /**\n   * Sampler determines if a span should be recorded or should be a NoopSpan.\n   */\n  sampler?: Sampler;\n\n  /** General Limits */\n  generalLimits?: GeneralLimits;\n\n  /** Span Limits */\n  spanLimits?: SpanLimits;\n\n  /** Resource associated with trace telemetry  */\n  resource?: Resource;\n\n  /**\n   * Generator of trace and span IDs\n   * The default idGenerator generates random ids\n   */\n  idGenerator?: IdGenerator;\n\n  /**\n   * How long the forceFlush can run before it is cancelled.\n   * The default value is 30000ms\n   */\n  forceFlushTimeoutMillis?: number;\n}\n\n/**\n * Configuration options for registering the API with the SDK.\n * Undefined values may be substituted for defaults, and null\n * values will not be registered.\n */\nexport interface SDKRegistrationConfig {\n  /** Propagator to register as the global propagator */\n  propagator?: TextMapPropagator | null;\n\n  /** Context manager to register as the global context manager */\n  contextManager?: ContextManager | null;\n}\n\n/** Global configuration limits of trace service */\nexport interface GeneralLimits {\n  /** attributeValueLengthLimit is maximum allowed attribute value size */\n  attributeValueLengthLimit?: number;\n  /** attributeCountLimit is number of attributes per trace */\n  attributeCountLimit?: number;\n}\n\n/** Global configuration of trace service */\nexport interface SpanLimits {\n  /** attributeValueLengthLimit is maximum allowed attribute value size */\n  attributeValueLengthLimit?: number;\n  /** attributeCountLimit is number of attributes per span */\n  attributeCountLimit?: number;\n  /** linkCountLimit is number of links per span */\n  linkCountLimit?: number;\n  /** eventCountLimit is number of message events per span */\n  eventCountLimit?: number;\n}\n\n/** Interface configuration for a buffer. */\nexport interface BufferConfig {\n  /** The maximum batch size of every export. It must be smaller or equal to\n   * maxQueueSize. The default value is 512. */\n  maxExportBatchSize?: number;\n\n  /** The delay interval in milliseconds between two consecutive exports.\n   *  The default value is 5000ms. */\n  scheduledDelayMillis?: number;\n\n  /** How long the export can run before it is cancelled.\n   * The default value is 30000ms */\n  exportTimeoutMillis?: number;\n\n  /** The maximum queue size. After the size is reached spans are dropped.\n   * The default value is 2048. */\n  maxQueueSize?: number;\n}\n\n/** Interface configuration for BatchSpanProcessor on browser */\nexport interface BatchSpanProcessorBrowserConfig extends BufferConfig {\n  /** Disable flush when a user navigates to a new page, closes the tab or the browser, or,\n   * on mobile, switches to a different app. Auto flush is enabled by default. */\n  disableAutoFlushOnDocumentHide?: boolean;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** IdGenerator provides an interface for generating Trace Id and Span Id */\nexport interface IdGenerator {\n  /** Returns a trace ID composed of 32 lowercase hex characters. */\n  generateTraceId(): string;\n  /** Returns a span ID composed of 16 lowercase hex characters. */\n  generateSpanId(): string;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, ContextManager, ROOT_CONTEXT } from '@opentelemetry/api';\n\n/**\n * Stack Context Manager for managing the state in web\n * it doesn't fully support the async calls though\n */\nexport class StackContextManager implements ContextManager {\n  /**\n   * whether the context manager is enabled or not\n   */\n  private _enabled = false;\n\n  /**\n   * Keeps the reference to current context\n   */\n  public _currentContext = ROOT_CONTEXT;\n\n  /**\n   *\n   * @param context\n   * @param target Function to be executed within the context\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _bindFunction<T extends Function>(\n    context = ROOT_CONTEXT,\n    target: T\n  ): T {\n    const manager = this;\n    const contextWrapper = function (this: unknown, ...args: unknown[]) {\n      return manager.with(context, () => target.apply(this, args));\n    };\n    Object.defineProperty(contextWrapper, 'length', {\n      enumerable: false,\n      configurable: true,\n      writable: false,\n      value: target.length,\n    });\n    return (contextWrapper as unknown) as T;\n  }\n\n  /**\n   * Returns the active context\n   */\n  active(): Context {\n    return this._currentContext;\n  }\n\n  /**\n   * Binds a the certain context or the active one to the target function and then returns the target\n   * @param context A context (span) to be bind to target\n   * @param target a function or event emitter. When target or one of its callbacks is called,\n   *  the provided context will be used as the active context for the duration of the call.\n   */\n  bind<T>(context: Context, target: T): T {\n    // if no specific context to propagate is given, we use the current one\n    if (context === undefined) {\n      context = this.active();\n    }\n    if (typeof target === 'function') {\n      return this._bindFunction(context, target);\n    }\n    return target;\n  }\n\n  /**\n   * Disable the context manager (clears the current context)\n   */\n  disable(): this {\n    this._currentContext = ROOT_CONTEXT;\n    this._enabled = false;\n    return this;\n  }\n\n  /**\n   * Enables the context manager and creates a default(root) context\n   */\n  enable(): this {\n    if (this._enabled) {\n      return this;\n    }\n    this._enabled = true;\n    this._currentContext = ROOT_CONTEXT;\n    return this;\n  }\n\n  /**\n   * Calls the callback function [fn] with the provided [context]. If [context] is undefined then it will use the window.\n   * The context will be set as active\n   * @param context\n   * @param fn Callback function\n   * @param thisArg optional receiver to be used for calling fn\n   * @param args optional arguments forwarded to fn\n   */\n  with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    context: Context | null,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    const previousContext = this._currentContext;\n    this._currentContext = context || ROOT_CONTEXT;\n\n    try {\n      return fn.call(thisArg, ...args);\n    } finally {\n      this._currentContext = previousContext;\n    }\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum PerformanceTimingNames {\n  CONNECT_END = 'connectEnd',\n  CONNECT_START = 'connectStart',\n  DECODED_BODY_SIZE = 'decodedBodySize',\n  DOM_COMPLETE = 'domComplete',\n  DOM_CONTENT_LOADED_EVENT_END = 'domContentLoadedEventEnd',\n  DOM_CONTENT_LOADED_EVENT_START = 'domContentLoadedEventStart',\n  DOM_INTERACTIVE = 'domInteractive',\n  DOMAIN_LOOKUP_END = 'domainLookupEnd',\n  DOMAIN_LOOKUP_START = 'domainLookupStart',\n  ENCODED_BODY_SIZE = 'encodedBodySize',\n  FETCH_START = 'fetchStart',\n  LOAD_EVENT_END = 'loadEventEnd',\n  LOAD_EVENT_START = 'loadEventStart',\n  NAVIGATION_START = 'navigationStart',\n  REDIRECT_END = 'redirectEnd',\n  REDIRECT_START = 'redirectStart',\n  REQUEST_START = 'requestStart',\n  RESPONSE_END = 'responseEnd',\n  RESPONSE_START = 'responseStart',\n  SECURE_CONNECTION_START = 'secureConnectionStart',\n  UNLOAD_EVENT_END = 'unloadEventEnd',\n  UNLOAD_EVENT_START = 'unloadEventStart',\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PerformanceTimingNames } from './enums/PerformanceTimingNames';\n\nexport type PerformanceEntries = {\n  [PerformanceTimingNames.CONNECT_END]?: number;\n  [PerformanceTimingNames.CONNECT_START]?: number;\n  [PerformanceTimingNames.DECODED_BODY_SIZE]?: number;\n  [PerformanceTimingNames.DOM_COMPLETE]?: number;\n  [PerformanceTimingNames.DOM_CONTENT_LOADED_EVENT_END]?: number;\n  [PerformanceTimingNames.DOM_CONTENT_LOADED_EVENT_START]?: number;\n  [PerformanceTimingNames.DOM_INTERACTIVE]?: number;\n  [PerformanceTimingNames.DOMAIN_LOOKUP_END]?: number;\n  [PerformanceTimingNames.DOMAIN_LOOKUP_START]?: number;\n  [PerformanceTimingNames.ENCODED_BODY_SIZE]?: number;\n  [PerformanceTimingNames.FETCH_START]?: number;\n  [PerformanceTimingNames.LOAD_EVENT_END]?: number;\n  [PerformanceTimingNames.LOAD_EVENT_START]?: number;\n  [PerformanceTimingNames.REDIRECT_END]?: number;\n  [PerformanceTimingNames.REDIRECT_START]?: number;\n  [PerformanceTimingNames.REQUEST_START]?: number;\n  [PerformanceTimingNames.RESPONSE_END]?: number;\n  [PerformanceTimingNames.RESPONSE_START]?: number;\n  [PerformanceTimingNames.SECURE_CONNECTION_START]?: number;\n  [PerformanceTimingNames.UNLOAD_EVENT_END]?: number;\n  [PerformanceTimingNames.UNLOAD_EVENT_START]?: number;\n};\n\n/**\n * This interface defines a fallback to read performance metrics,\n * this happens for example on Safari Mac\n */\nexport interface PerformanceLegacy {\n  timing?: PerformanceEntries;\n}\n\n/**\n * This interface is used in {@link getResource} function to return\n *     main request and it's corresponding PreFlight request\n */\nexport interface PerformanceResourceTimingInfo {\n  corsPreFlightRequest?: PerformanceResourceTiming;\n  mainRequest?: PerformanceResourceTiming;\n}\n\ntype PropagateTraceHeaderCorsUrl = string | RegExp;\n\n/**\n * urls which should include trace headers when origin doesn't match\n */\nexport type PropagateTraceHeaderCorsUrls =\n  | PropagateTraceHeaderCorsUrl\n  | PropagateTraceHeaderCorsUrl[];\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  PerformanceEntries,\n  PerformanceResourceTimingInfo,\n  PropagateTraceHeaderCorsUrls,\n} from './types';\nimport { PerformanceTimingNames as PTN } from './enums/PerformanceTimingNames';\nimport * as api from '@opentelemetry/api';\nimport {\n  hrTimeToNanoseconds,\n  timeInputToHrTime,\n  urlMatches,\n} from '@opentelemetry/core';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\n\n// Used to normalize relative URLs\nlet urlNormalizingAnchor: HTMLAnchorElement | undefined;\nfunction getUrlNormalizingAnchor(): HTMLAnchorElement {\n  if (!urlNormalizingAnchor) {\n    urlNormalizingAnchor = document.createElement('a');\n  }\n\n  return urlNormalizingAnchor;\n}\n\n/**\n * Helper function to be able to use enum as typed key in type and in interface when using forEach\n * @param obj\n * @param key\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function hasKey<O>(obj: O, key: keyof any): key is keyof O {\n  return key in obj;\n}\n\n/**\n * Helper function for starting an event on span based on {@link PerformanceEntries}\n * @param span\n * @param performanceName name of performance entry for time start\n * @param entries\n */\nexport function addSpanNetworkEvent(\n  span: api.Span,\n  performanceName: string,\n  entries: PerformanceEntries\n): api.Span | undefined {\n  if (\n    hasKey(entries, performanceName) &&\n    typeof entries[performanceName] === 'number'\n  ) {\n    span.addEvent(performanceName, entries[performanceName]);\n    return span;\n  }\n  return undefined;\n}\n\n/**\n * Helper function for adding network events\n * @param span\n * @param resource\n */\nexport function addSpanNetworkEvents(\n  span: api.Span,\n  resource: PerformanceEntries\n): void {\n  addSpanNetworkEvent(span, PTN.FETCH_START, resource);\n  addSpanNetworkEvent(span, PTN.DOMAIN_LOOKUP_START, resource);\n  addSpanNetworkEvent(span, PTN.DOMAIN_LOOKUP_END, resource);\n  addSpanNetworkEvent(span, PTN.CONNECT_START, resource);\n  addSpanNetworkEvent(span, PTN.SECURE_CONNECTION_START, resource);\n  addSpanNetworkEvent(span, PTN.CONNECT_END, resource);\n  addSpanNetworkEvent(span, PTN.REQUEST_START, resource);\n  addSpanNetworkEvent(span, PTN.RESPONSE_START, resource);\n  addSpanNetworkEvent(span, PTN.RESPONSE_END, resource);\n  const encodedLength = resource[PTN.ENCODED_BODY_SIZE];\n  if (encodedLength !== undefined) {\n    span.setAttribute(\n      SemanticAttributes.HTTP_RESPONSE_CONTENT_LENGTH,\n      encodedLength\n    );\n  }\n  const decodedLength = resource[PTN.DECODED_BODY_SIZE];\n  // Spec: Not set if transport encoding not used (in which case encoded and decoded sizes match)\n  if (decodedLength !== undefined && encodedLength !== decodedLength) {\n    span.setAttribute(\n      SemanticAttributes.HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED,\n      decodedLength\n    );\n  }\n}\n\n/**\n * sort resources by startTime\n * @param filteredResources\n */\nexport function sortResources(filteredResources: PerformanceResourceTiming[]): PerformanceResourceTiming[] {\n  return filteredResources.slice().sort((a, b) => {\n    const valueA = a[PTN.FETCH_START];\n    const valueB = b[PTN.FETCH_START];\n    if (valueA > valueB) {\n      return 1;\n    } else if (valueA < valueB) {\n      return -1;\n    }\n    return 0;\n  });\n}\n\n/**\n * Get closest performance resource ignoring the resources that have been\n * already used.\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n * @param initiatorType\n */\nexport function getResource(\n  spanUrl: string,\n  startTimeHR: api.HrTime,\n  endTimeHR: api.HrTime,\n  resources: PerformanceResourceTiming[],\n  ignoredResources: WeakSet<PerformanceResourceTiming> = new WeakSet<PerformanceResourceTiming>(),\n  initiatorType?: string\n): PerformanceResourceTimingInfo {\n  // de-relativize the URL before usage (does no harm to absolute URLs)\n  const parsedSpanUrl = parseUrl(spanUrl);\n  spanUrl = parsedSpanUrl.toString();\n\n  const filteredResources = filterResourcesForSpan(\n    spanUrl,\n    startTimeHR,\n    endTimeHR,\n    resources,\n    ignoredResources,\n    initiatorType\n  );\n\n  if (filteredResources.length === 0) {\n    return {\n      mainRequest: undefined,\n    };\n  }\n  if (filteredResources.length === 1) {\n    return {\n      mainRequest: filteredResources[0],\n    };\n  }\n  const sorted = sortResources(filteredResources);\n\n  if (parsedSpanUrl.origin !== location.origin && sorted.length > 1) {\n    let corsPreFlightRequest: PerformanceResourceTiming | undefined = sorted[0];\n    let mainRequest: PerformanceResourceTiming = findMainRequest(\n      sorted,\n      corsPreFlightRequest[PTN.RESPONSE_END],\n      endTimeHR\n    );\n\n    const responseEnd = corsPreFlightRequest[PTN.RESPONSE_END];\n    const fetchStart = mainRequest[PTN.FETCH_START];\n\n    // no corsPreFlightRequest\n    if (fetchStart < responseEnd) {\n      mainRequest = corsPreFlightRequest;\n      corsPreFlightRequest = undefined;\n    }\n\n    return {\n      corsPreFlightRequest,\n      mainRequest,\n    };\n  } else {\n    return {\n      mainRequest: filteredResources[0],\n    };\n  }\n}\n\n/**\n * Will find the main request skipping the cors pre flight requests\n * @param resources\n * @param corsPreFlightRequestEndTime\n * @param spanEndTimeHR\n */\nfunction findMainRequest(\n  resources: PerformanceResourceTiming[],\n  corsPreFlightRequestEndTime: number,\n  spanEndTimeHR: api.HrTime\n): PerformanceResourceTiming {\n  const spanEndTime = hrTimeToNanoseconds(spanEndTimeHR);\n  const minTime = hrTimeToNanoseconds(\n    timeInputToHrTime(corsPreFlightRequestEndTime)\n  );\n\n  let mainRequest: PerformanceResourceTiming = resources[1];\n  let bestGap;\n\n  const length = resources.length;\n  for (let i = 1; i < length; i++) {\n    const resource = resources[i];\n    const resourceStartTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.FETCH_START])\n    );\n\n    const resourceEndTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.RESPONSE_END])\n    );\n\n    const currentGap = spanEndTime - resourceEndTime;\n\n    if (resourceStartTime >= minTime && (!bestGap || currentGap < bestGap)) {\n      bestGap = currentGap;\n      mainRequest = resource;\n    }\n  }\n  return mainRequest;\n}\n\n/**\n * Filter all resources that has started and finished according to span start time and end time.\n *     It will return the closest resource to a start time\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n */\nfunction filterResourcesForSpan(\n  spanUrl: string,\n  startTimeHR: api.HrTime,\n  endTimeHR: api.HrTime,\n  resources: PerformanceResourceTiming[],\n  ignoredResources: WeakSet<PerformanceResourceTiming>,\n  initiatorType?: string\n) {\n  const startTime = hrTimeToNanoseconds(startTimeHR);\n  const endTime = hrTimeToNanoseconds(endTimeHR);\n  let filteredResources = resources.filter(resource => {\n    const resourceStartTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.FETCH_START])\n    );\n    const resourceEndTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.RESPONSE_END])\n    );\n\n    return (\n      resource.initiatorType.toLowerCase() ===\n        (initiatorType || 'xmlhttprequest') &&\n      resource.name === spanUrl &&\n      resourceStartTime >= startTime &&\n      resourceEndTime <= endTime\n    );\n  });\n\n  if (filteredResources.length > 0) {\n    filteredResources = filteredResources.filter(resource => {\n      return !ignoredResources.has(resource);\n    });\n  }\n\n  return filteredResources;\n}\n\n/**\n * The URLLike interface represents an URL and HTMLAnchorElement compatible fields.\n */\nexport interface URLLike {\n  hash: string;\n  host: string;\n  hostname: string;\n  href: string;\n  readonly origin: string;\n  password: string;\n  pathname: string;\n  port: string;\n  protocol: string;\n  search: string;\n  username: string;\n}\n\n/**\n * Parses url using URL constructor or fallback to anchor element.\n * @param url\n */\nexport function parseUrl(url: string): URLLike {\n  if (typeof URL === 'function') {\n    return new URL(url, location.href);\n  }\n  const element = getUrlNormalizingAnchor();\n  element.href = url;\n  return element;\n}\n\n/**\n * Parses url using URL constructor or fallback to anchor element and serialize\n * it to a string.\n *\n * Performs the steps described in https://html.spec.whatwg.org/multipage/urls-and-fetching.html#parse-a-url\n *\n * @param url\n */\nexport function normalizeUrl(url: string): string {\n  const urlLike = parseUrl(url);\n  return urlLike.href;\n}\n\n/**\n * Get element XPath\n * @param target - target element\n * @param optimised - when id attribute of element is present the xpath can be\n * simplified to contain id\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function getElementXPath(target: any, optimised?: boolean): string {\n  if (target.nodeType === Node.DOCUMENT_NODE) {\n    return '/';\n  }\n  const targetValue = getNodeValue(target, optimised);\n  if (optimised && targetValue.indexOf('@id') > 0) {\n    return targetValue;\n  }\n  let xpath = '';\n  if (target.parentNode) {\n    xpath += getElementXPath(target.parentNode, false);\n  }\n  xpath += targetValue;\n\n  return xpath;\n}\n\n/**\n * get node index within the siblings\n * @param target\n */\nfunction getNodeIndex(target: HTMLElement): number {\n  if (!target.parentNode) {\n    return 0;\n  }\n  const allowedTypes = [target.nodeType];\n  if (target.nodeType === Node.CDATA_SECTION_NODE) {\n    allowedTypes.push(Node.TEXT_NODE);\n  }\n  let elements = Array.from(target.parentNode.childNodes);\n  elements = elements.filter((element: Node) => {\n    const localName = (element as HTMLElement).localName;\n    return (\n      allowedTypes.indexOf(element.nodeType) >= 0 &&\n      localName === target.localName\n    );\n  });\n  if (elements.length >= 1) {\n    return elements.indexOf(target) + 1; // xpath starts from 1\n  }\n  // if there are no other similar child xpath doesn't need index\n  return 0;\n}\n\n/**\n * get node value for xpath\n * @param target\n * @param optimised\n */\nfunction getNodeValue(target: HTMLElement, optimised?: boolean): string {\n  const nodeType = target.nodeType;\n  const index = getNodeIndex(target);\n  let nodeValue = '';\n  if (nodeType === Node.ELEMENT_NODE) {\n    const id = target.getAttribute('id');\n    if (optimised && id) {\n      return `//*[@id=\"${id}\"]`;\n    }\n    nodeValue = target.localName;\n  } else if (\n    nodeType === Node.TEXT_NODE ||\n    nodeType === Node.CDATA_SECTION_NODE\n  ) {\n    nodeValue = 'text()';\n  } else if (nodeType === Node.COMMENT_NODE) {\n    nodeValue = 'comment()';\n  } else {\n    return '';\n  }\n  // if index is 1 it can be omitted in xpath\n  if (nodeValue && index > 1) {\n    return `/${nodeValue}[${index}]`;\n  }\n  return `/${nodeValue}`;\n}\n\n/**\n * Checks if trace headers should be propagated\n * @param spanUrl\n * @private\n */\nexport function shouldPropagateTraceHeaders(\n  spanUrl: string,\n  propagateTraceHeaderCorsUrls?: PropagateTraceHeaderCorsUrls\n): boolean {\n  let propagateTraceHeaderUrls = propagateTraceHeaderCorsUrls || [];\n  if (\n    typeof propagateTraceHeaderUrls === 'string' ||\n    propagateTraceHeaderUrls instanceof RegExp\n  ) {\n    propagateTraceHeaderUrls = [propagateTraceHeaderUrls];\n  }\n  const parsedSpanUrl = parseUrl(spanUrl);\n\n  if (parsedSpanUrl.origin === location.origin) {\n    return true;\n  } else {\n    return propagateTraceHeaderUrls.some(propagateTraceHeaderUrl =>\n      urlMatches(spanUrl, propagateTraceHeaderUrl)\n    );\n  }\n}\n",null,null,null,null,null,null,null,null,null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './autoLoader';\nexport * from './platform/index';\nexport * from './types';\nexport * from './types_internal';\nexport * from './utils';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { trace } from '@opentelemetry/api';\nimport { metrics } from '@opentelemetry/api-metrics';\nimport {\n  disableInstrumentations,\n  enableInstrumentations,\n  parseInstrumentationOptions,\n} from './autoLoaderUtils';\nimport { AutoLoaderOptions } from './types_internal';\n\n/**\n * It will register instrumentations and plugins\n * @param options\n * @return returns function to unload instrumentation and plugins that were\n *   registered\n */\nexport function registerInstrumentations(\n  options: AutoLoaderOptions\n): () => void {\n  const { instrumentations } = parseInstrumentationOptions(\n    options.instrumentations\n  );\n  const tracerProvider = options.tracerProvider || trace.getTracerProvider();\n  const meterProvider = options.meterProvider || metrics.getMeterProvider();\n\n  enableInstrumentations(instrumentations, tracerProvider, meterProvider);\n\n  return () => {\n    disableInstrumentations(instrumentations);\n  };\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './NoopMeter';\nexport * from './NoopMeterProvider';\nexport * from './types/Meter';\nexport * from './types/MeterProvider';\nexport * from './types/Metric';\nexport * from './types/ObservableResult';\n\nimport { MetricsAPI } from './api/metrics';\n/** Entrypoint for metrics API */\nexport const metrics = MetricsAPI.getInstance();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Meter, MeterOptions } from '../types/Meter';\nimport { MeterProvider } from '../types/MeterProvider';\nimport { NOOP_METER_PROVIDER } from '../NoopMeterProvider';\nimport {\n  API_BACKWARDS_COMPATIBILITY_VERSION,\n  GLOBAL_METRICS_API_KEY,\n  makeGetter,\n  _global,\n} from './global-utils';\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Metrics API\n */\nexport class MetricsAPI {\n  private static _instance?: MetricsAPI;\n\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  private constructor() {}\n\n  /** Get the singleton instance of the Metrics API */\n  public static getInstance(): MetricsAPI {\n    if (!this._instance) {\n      this._instance = new MetricsAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Set the current global meter. Returns the initialized global meter provider.\n   */\n  public setGlobalMeterProvider(provider: MeterProvider): MeterProvider {\n    if (_global[GLOBAL_METRICS_API_KEY]) {\n      // global meter provider has already been set\n      return this.getMeterProvider();\n    }\n\n    _global[GLOBAL_METRICS_API_KEY] = makeGetter(\n      API_BACKWARDS_COMPATIBILITY_VERSION,\n      provider,\n      NOOP_METER_PROVIDER\n    );\n\n    return provider;\n  }\n\n  /**\n   * Returns the global meter provider.\n   */\n  public getMeterProvider(): MeterProvider {\n    return (\n      _global[GLOBAL_METRICS_API_KEY]?.(API_BACKWARDS_COMPATIBILITY_VERSION) ??\n      NOOP_METER_PROVIDER\n    );\n  }\n\n  /**\n   * Returns a meter from the global meter provider.\n   */\n  public getMeter(name: string, version?: string, options?: MeterOptions): Meter {\n    return this.getMeterProvider().getMeter(name, version, options);\n  }\n\n  /** Remove the global meter provider */\n  public disable(): void {\n    delete _global[GLOBAL_METRICS_API_KEY];\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Meter, MeterOptions } from './types/Meter';\nimport { MeterProvider } from './types/MeterProvider';\nimport { NOOP_METER } from './NoopMeter';\n\n/**\n * An implementation of the {@link MeterProvider} which returns an impotent Meter\n * for all calls to `getMeter`\n */\nexport class NoopMeterProvider implements MeterProvider {\n  getMeter(_name: string, _version?: string, _options?: MeterOptions): Meter {\n    return NOOP_METER;\n  }\n}\n\nexport const NOOP_METER_PROVIDER = new NoopMeterProvider();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Meter } from './types/Meter';\nimport {\n  BatchObservableCallback,\n  Counter,\n  Histogram,\n  MetricOptions,\n  ObservableCallback,\n  ObservableCounter,\n  ObservableGauge,\n  ObservableUpDownCounter,\n  UpDownCounter,\n  MetricAttributes,\n  Observable,\n} from './types/Metric';\n\n/**\n * NoopMeter is a noop implementation of the {@link Meter} interface. It reuses\n * constant NoopMetrics for all of its methods.\n */\nexport class NoopMeter implements Meter {\n  constructor() {}\n\n  /**\n   * @see {@link Meter.createHistogram}\n   */\n  createHistogram(_name: string, _options?: MetricOptions): Histogram {\n    return NOOP_HISTOGRAM_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createCounter}\n   */\n  createCounter(_name: string, _options?: MetricOptions): Counter {\n    return NOOP_COUNTER_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createUpDownCounter}\n   */\n  createUpDownCounter(_name: string, _options?: MetricOptions): UpDownCounter {\n    return NOOP_UP_DOWN_COUNTER_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createObservableGauge}\n   */\n  createObservableGauge(\n    _name: string,\n    _options?: MetricOptions,\n  ): ObservableGauge {\n    return NOOP_OBSERVABLE_GAUGE_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createObservableCounter}\n   */\n  createObservableCounter(\n    _name: string,\n    _options?: MetricOptions,\n  ): ObservableCounter {\n    return NOOP_OBSERVABLE_COUNTER_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createObservableUpDownCounter}\n   */\n  createObservableUpDownCounter(\n    _name: string,\n    _options?: MetricOptions,\n  ): ObservableUpDownCounter {\n    return NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.addBatchObservableCallback}\n   */\n  addBatchObservableCallback(_callback: BatchObservableCallback, _observables: Observable[]): void {}\n\n  /**\n   * @see {@link Meter.removeBatchObservableCallback}\n   */\n  removeBatchObservableCallback(_callback: BatchObservableCallback): void {}\n}\n\nexport class NoopMetric {}\n\nexport class NoopCounterMetric extends NoopMetric implements Counter {\n  add(_value: number, _attributes: MetricAttributes): void {}\n}\n\nexport class NoopUpDownCounterMetric extends NoopMetric implements UpDownCounter {\n  add(_value: number, _attributes: MetricAttributes): void {}\n}\n\nexport class NoopHistogramMetric extends NoopMetric implements Histogram {\n  record(_value: number, _attributes: MetricAttributes): void {}\n}\n\nexport class NoopObservableMetric {\n  addCallback(_callback: ObservableCallback) {}\n  removeCallback(_callback: ObservableCallback) {}\n}\n\nexport class NoopObservableCounterMetric extends NoopObservableMetric implements ObservableCounter {}\nexport class NoopObservableGaugeMetric extends NoopObservableMetric implements ObservableGauge {}\nexport class NoopObservableUpDownCounterMetric extends NoopObservableMetric implements ObservableUpDownCounter {}\n\nexport const NOOP_METER = new NoopMeter();\n\n// Synchronous instruments\nexport const NOOP_COUNTER_METRIC = new NoopCounterMetric();\nexport const NOOP_HISTOGRAM_METRIC = new NoopHistogramMetric();\nexport const NOOP_UP_DOWN_COUNTER_METRIC = new NoopUpDownCounterMetric();\n\n// Asynchronous instruments\nexport const NOOP_OBSERVABLE_COUNTER_METRIC = new NoopObservableCounterMetric();\nexport const NOOP_OBSERVABLE_GAUGE_METRIC = new NoopObservableGaugeMetric();\nexport const NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC = new NoopObservableUpDownCounterMetric();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MeterProvider } from '../types/MeterProvider';\nimport { _globalThis } from '../platform';\n\nexport const GLOBAL_METRICS_API_KEY = Symbol.for(\n  'io.opentelemetry.js.api.metrics'\n);\n\ntype Get<T> = (version: number) => T;\ntype OtelGlobal = Partial<{\n  [GLOBAL_METRICS_API_KEY]: Get<MeterProvider>;\n}>;\n\nexport const _global = _globalThis as OtelGlobal;\n\n/**\n * Make a function which accepts a version integer and returns the instance of an API if the version\n * is compatible, or a fallback version (usually NOOP) if it is not.\n *\n * @param requiredVersion Backwards compatibility version which is required to return the instance\n * @param instance Instance which should be returned if the required version is compatible\n * @param fallback Fallback instance, usually NOOP, which will be returned if the required version is not compatible\n */\nexport function makeGetter<T>(\n  requiredVersion: number,\n  instance: T,\n  fallback: T\n): Get<T> {\n  return (version: number): T =>\n    version === requiredVersion ? instance : fallback;\n}\n\n/**\n * A number which should be incremented each time a backwards incompatible\n * change is made to the API. This number is used when an API package\n * attempts to access the global API to ensure it is getting a compatible\n * version. If the global API is not compatible with the API package\n * attempting to get it, a NOOP API implementation will be returned.\n */\nexport const API_BACKWARDS_COMPATIBILITY_VERSION = 4;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './globalThis';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Updates to this file should also be replicated to @opentelemetry/api and\n// @opentelemetry/core too.\n\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport const _globalThis: typeof globalThis =\n  typeof globalThis === 'object' ? globalThis :\n    typeof self === 'object' ? self :\n      typeof window === 'object' ? window :\n        typeof global === 'object' ? global :\n  {} as typeof globalThis;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BatchObservableCallback,\n  Counter,\n  Histogram,\n  MetricOptions,\n  Observable,\n  ObservableCounter,\n  ObservableGauge,\n  ObservableUpDownCounter,\n  UpDownCounter,\n} from './Metric';\n\n/**\n * An interface describes additional metadata of a meter.\n */\nexport interface MeterOptions {\n  /**\n   * The schemaUrl of the meter or instrumentation library\n   */\n  schemaUrl?: string;\n}\n\n/**\n * An interface to allow the recording metrics.\n *\n * {@link Metric}s are used for recording pre-defined aggregation (`Counter`),\n * or raw values (`Histogram`) in which the aggregation and attributes\n * for the exported metric are deferred.\n */\nexport interface Meter {\n  /**\n   * Creates and returns a new `Histogram`.\n   * @param name the name of the metric.\n   * @param [options] the metric options.\n   */\n  createHistogram(name: string, options?: MetricOptions): Histogram;\n\n  /**\n   * Creates a new `Counter` metric. Generally, this kind of metric when the\n   * value is a quantity, the sum is of primary interest, and the event count\n   * and value distribution are not of primary interest.\n   * @param name the name of the metric.\n   * @param [options] the metric options.\n   */\n  createCounter(name: string, options?: MetricOptions): Counter;\n\n  /**\n   * Creates a new `UpDownCounter` metric. UpDownCounter is a synchronous\n   * instrument and very similar to Counter except that Add(increment)\n   * supports negative increments. It is generally useful for capturing changes\n   * in an amount of resources used, or any quantity that rises and falls\n   * during a request.\n   * Example uses for UpDownCounter:\n   * <ol>\n   *   <li> count the number of active requests. </li>\n   *   <li> count memory in use by instrumenting new and delete. </li>\n   *   <li> count queue size by instrumenting enqueue and dequeue. </li>\n   *   <li> count semaphore up and down operations. </li>\n   * </ol>\n   *\n   * @param name the name of the metric.\n   * @param [options] the metric options.\n   */\n  createUpDownCounter(name: string, options?: MetricOptions): UpDownCounter;\n\n  /**\n   * Creates a new `ObservableGauge` metric.\n   *\n   * The callback SHOULD be safe to be invoked concurrently.\n   *\n   * @param name the name of the metric.\n   * @param [options] the metric options.\n   */\n  createObservableGauge(\n    name: string,\n    options?: MetricOptions\n  ): ObservableGauge;\n\n  /**\n   * Creates a new `ObservableCounter` metric.\n   *\n   * The callback SHOULD be safe to be invoked concurrently.\n   *\n   * @param name the name of the metric.\n   * @param [options] the metric options.\n   */\n  createObservableCounter(\n    name: string,\n    options?: MetricOptions\n  ): ObservableCounter;\n\n  /**\n   * Creates a new `ObservableUpDownCounter` metric.\n   *\n   * The callback SHOULD be safe to be invoked concurrently.\n   *\n   * @param name the name of the metric.\n   * @param [options] the metric options.\n   */\n  createObservableUpDownCounter(\n    name: string,\n    options?: MetricOptions\n  ): ObservableUpDownCounter;\n\n  /**\n   * Sets up a function that will be called whenever a metric collection is\n   * initiated.\n   *\n   * If the function is already in the list of callbacks for this Observable,\n   * the function is not added a second time.\n   *\n   * Only the associated observables can be observed in the callback.\n   * Measurements of observables that are not associated observed in the\n   * callback are dropped.\n   *\n   * @param callback the batch observable callback\n   * @param observables the observables associated with this batch observable callback\n   */\n  addBatchObservableCallback(callback: BatchObservableCallback, observables: Observable[]): void;\n\n  /**\n   * Removes a callback previously registered with {@link Meter.addBatchObservableCallback}.\n   *\n   * The callback to be removed is identified using a combination of the callback itself,\n   * and the set of the observables associated with it.\n   *\n   * @param callback the batch observable callback\n   * @param observables the observables associated with this batch observable callback\n   */\n  removeBatchObservableCallback(callback: BatchObservableCallback, observables: Observable[]): void;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Meter, MeterOptions } from './Meter';\n\n/**\n * A registry for creating named {@link Meter}s.\n */\nexport interface MeterProvider {\n  /**\n   * Returns a Meter, creating one if one with the given name, version, and\n   * schemaUrl pair is not already created.\n   *\n   * @param name The name of the meter or instrumentation library.\n   * @param version The version of the meter or instrumentation library.\n   * @param options The options of the meter or instrumentation library.\n   * @returns Meter A Meter with the given name and version\n   */\n  getMeter(name: string, version?: string, options?: MeterOptions): Meter;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '@opentelemetry/api';\nimport { BatchObservableResult, ObservableResult } from './ObservableResult';\n\n/**\n * Options needed for metric creation\n */\nexport interface MetricOptions {\n  /**\n   * The description of the Metric.\n   * @default ''\n   */\n  description?: string;\n\n  /**\n   * The unit of the Metric values.\n   * @default ''\n   */\n  unit?: string;\n\n  /**\n   * Indicates the type of the recorded value.\n   * @default {@link ValueType.DOUBLE}\n   */\n  valueType?: ValueType;\n}\n\n/** The Type of value. It describes how the data is reported. */\nexport enum ValueType {\n  INT,\n  DOUBLE,\n}\n\n/**\n * Counter is the most common synchronous instrument. This instrument supports\n * an `Add(increment)` function for reporting a sum, and is restricted to\n * non-negative increments. The default aggregation is Sum, as for any additive\n * instrument.\n *\n * Example uses for Counter:\n * <ol>\n *   <li> count the number of bytes received. </li>\n *   <li> count the number of requests completed. </li>\n *   <li> count the number of accounts created. </li>\n *   <li> count the number of checkpoints run. </li>\n *   <li> count the number of 5xx errors. </li>\n * <ol>\n */\nexport interface Counter {\n  /**\n   * Increment value of counter by the input. Inputs may not be negative.\n   */\n  add(value: number, attributes?: MetricAttributes, context?: Context): void;\n}\n\nexport interface UpDownCounter {\n  /**\n   * Increment value of counter by the input. Inputs may be negative.\n   */\n  add(value: number, attributes?: MetricAttributes, context?: Context): void;\n}\n\nexport interface Histogram {\n  /**\n   * Records a measurement. Value of the measurement must not be negative.\n   */\n  record(value: number, attributes?: MetricAttributes, context?: Context): void;\n}\n\n/**\n * key-value pairs passed by the user.\n */\nexport type MetricAttributes = { [key: string]: string };\n\n/**\n * The observable callback for Observable instruments.\n */\nexport type ObservableCallback = (observableResult: ObservableResult) => void | Promise<void>;\n\n/**\n * The observable callback for a batch of Observable instruments.\n */\nexport type BatchObservableCallback = (observableResult: BatchObservableResult) => void | Promise<void>;\n\nexport interface Observable {\n  /**\n   * Sets up a function that will be called whenever a metric collection is initiated.\n   *\n   * If the function is already in the list of callbacks for this Observable, the function is not added a second time.\n   */\n  addCallback(callback: ObservableCallback): void;\n\n  /**\n   * Removes a callback previously registered with {@link Observable.addCallback}.\n   */\n  removeCallback(callback: ObservableCallback): void;\n}\n\nexport type ObservableCounter = Observable;\nexport type ObservableUpDownCounter = Observable;\nexport type ObservableGauge = Observable;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MetricAttributes, Observable } from './Metric';\n\n/**\n * Interface that is being used in callback function for Observable Metric.\n */\nexport interface ObservableResult {\n  /**\n   * Observe a measurement of the value associated with the given attributes.\n   *\n   * @param value The value to be observed.\n   * @param attributes The attributes associated with the value. If more than\n   * one values associated with the same attributes values, SDK may pick the\n   * last one or simply drop the entire observable result.\n   */\n  observe(value: number, attributes?: MetricAttributes): void;\n}\n\n/**\n * Interface that is being used in batch observable callback function.\n */\nexport interface BatchObservableResult {\n  /**\n   * Observe a measurement of the value associated with the given attributes.\n   *\n   * @param metric The observable metric to be observed.\n   * @param value The value to be observed.\n   * @param attributes The attributes associated with the value. If more than\n   * one values associated with the same attributes values, SDK may pick the\n   * last one or simply drop the entire observable result.\n   */\n  observe(metric: Observable, value: number, attributes?: MetricAttributes): void;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TracerProvider } from '@opentelemetry/api';\nimport { MeterProvider } from '@opentelemetry/api-metrics';\nimport { Instrumentation } from './types';\nimport { AutoLoaderResult, InstrumentationOption } from './types_internal';\n\n/**\n * Parses the options and returns instrumentations, node plugins and\n *   web plugins\n * @param options\n */\nexport function parseInstrumentationOptions(\n  options: InstrumentationOption[] = []\n): AutoLoaderResult {\n  let instrumentations: Instrumentation[] = [];\n  for (let i = 0, j = options.length; i < j; i++) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const option = options[i] as any;\n    if (Array.isArray(option)) {\n      const results = parseInstrumentationOptions(option);\n      instrumentations = instrumentations.concat(results.instrumentations);\n    } else if (typeof option === 'function') {\n      instrumentations.push(new option());\n    } else if ((option as Instrumentation).instrumentationName) {\n      instrumentations.push(option);\n    }\n  }\n\n  return { instrumentations };\n}\n\n/**\n * Enable instrumentations\n * @param instrumentations\n * @param tracerProvider\n * @param meterProvider\n */\nexport function enableInstrumentations(\n  instrumentations: Instrumentation[],\n  tracerProvider?: TracerProvider,\n  meterProvider?: MeterProvider\n): void {\n  for (let i = 0, j = instrumentations.length; i < j; i++) {\n    const instrumentation = instrumentations[i];\n    if (tracerProvider) {\n      instrumentation.setTracerProvider(tracerProvider);\n    }\n    if (meterProvider) {\n      instrumentation.setMeterProvider(meterProvider);\n    }\n    // instrumentations have been already enabled during creation\n    // so enable only if user prevented that by setting enabled to false\n    // this is to prevent double enabling but when calling register all\n    // instrumentations should be now enabled\n    if (!instrumentation.getConfig().enabled) {\n      instrumentation.enable();\n    }\n  }\n}\n\n/**\n * Disable instrumentations\n * @param instrumentations\n */\nexport function disableInstrumentations(instrumentations: Instrumentation[]): void {\n  instrumentations.forEach(instrumentation => instrumentation.disable());\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './instrumentation';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationAbstract } from '../../instrumentation';\nimport * as types from '../../types';\n\n/**\n * Base abstract class for instrumenting web plugins\n */\nexport abstract class InstrumentationBase\n  extends InstrumentationAbstract\n  implements types.Instrumentation {\n  constructor(\n    instrumentationName: string,\n    instrumentationVersion: string,\n    config: types.InstrumentationConfig = {}\n  ) {\n    super(instrumentationName, instrumentationVersion, config);\n\n    if (this._config.enabled) {\n      this.enable();\n    }\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  diag,\n  DiagLogger,\n  trace,\n  Tracer,\n  TracerProvider,\n} from '@opentelemetry/api';\nimport { Meter, MeterProvider, metrics } from '@opentelemetry/api-metrics';\nimport * as shimmer from 'shimmer';\nimport { InstrumentationModuleDefinition } from './platform/node';\nimport * as types from './types';\n\n/**\n * Base abstract internal class for instrumenting node and web plugins\n */\nexport abstract class InstrumentationAbstract<T = any>\nimplements types.Instrumentation {\n  protected _config: types.InstrumentationConfig;\n\n  private _tracer: Tracer;\n  private _meter: Meter;\n  protected _diag: DiagLogger;\n\n  constructor(\n    public readonly instrumentationName: string,\n    public readonly instrumentationVersion: string,\n    config: types.InstrumentationConfig = {}\n  ) {\n    this._config = {\n      enabled: true,\n      ...config,\n    };\n\n    this._diag = diag.createComponentLogger({\n      namespace: instrumentationName,\n    });\n\n    this._tracer = trace.getTracer(instrumentationName, instrumentationVersion);\n\n    this._meter = metrics.getMeter(instrumentationName, instrumentationVersion);\n  }\n\n  /* Api to wrap instrumented method */\n  protected _wrap = shimmer.wrap;\n  /* Api to unwrap instrumented methods */\n  protected _unwrap = shimmer.unwrap;\n  /* Api to mass wrap instrumented method */\n  protected _massWrap = shimmer.massWrap;\n  /* Api to mass unwrap instrumented methods */\n  protected _massUnwrap = shimmer.massUnwrap;\n\n  /* Returns meter */\n  protected get meter(): Meter {\n    return this._meter;\n  }\n\n  /**\n   * Sets MeterProvider to this plugin\n   * @param meterProvider\n   */\n  public setMeterProvider(meterProvider: MeterProvider): void {\n    this._meter = meterProvider.getMeter(\n      this.instrumentationName,\n      this.instrumentationVersion\n    );\n  }\n\n  /* Returns InstrumentationConfig */\n  public getConfig(): types.InstrumentationConfig {\n    return this._config;\n  }\n\n  /**\n   * Sets InstrumentationConfig to this plugin\n   * @param InstrumentationConfig\n   */\n  public setConfig(config: types.InstrumentationConfig = {}): void {\n    this._config = Object.assign({}, config);\n  }\n\n  /**\n   * Sets TraceProvider to this plugin\n   * @param tracerProvider\n   */\n  public setTracerProvider(tracerProvider: TracerProvider): void {\n    this._tracer = tracerProvider.getTracer(\n      this.instrumentationName,\n      this.instrumentationVersion\n    );\n  }\n\n  /* Returns tracer */\n  protected get tracer(): Tracer {\n    return this._tracer;\n  }\n\n  /* Disable plugin */\n  public abstract enable(): void;\n\n  /* Enable plugin */\n  public abstract disable(): void;\n\n  /**\n   * Init method in which plugin should define _modules and patches for\n   * methods\n   */\n  protected abstract init():\n    | InstrumentationModuleDefinition<T>\n    | InstrumentationModuleDefinition<T>[]\n    | void;\n}\n","'use strict'\n\nfunction isFunction (funktion) {\n  return typeof funktion === 'function'\n}\n\n// Default to complaining loudly when things don't go according to plan.\nvar logger = console.error.bind(console)\n\n// Sets a property on an object, preserving its enumerability.\n// This function assumes that the property is already writable.\nfunction defineProperty (obj, name, value) {\n  var enumerable = !!obj[name] && obj.propertyIsEnumerable(name)\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: enumerable,\n    writable: true,\n    value: value\n  })\n}\n\n// Keep initialization idempotent.\nfunction shimmer (options) {\n  if (options && options.logger) {\n    if (!isFunction(options.logger)) logger(\"new logger isn't a function, not replacing\")\n    else logger = options.logger\n  }\n}\n\nfunction wrap (nodule, name, wrapper) {\n  if (!nodule || !nodule[name]) {\n    logger('no original function ' + name + ' to wrap')\n    return\n  }\n\n  if (!wrapper) {\n    logger('no wrapper function')\n    logger((new Error()).stack)\n    return\n  }\n\n  if (!isFunction(nodule[name]) || !isFunction(wrapper)) {\n    logger('original object and wrapper must be functions')\n    return\n  }\n\n  var original = nodule[name]\n  var wrapped = wrapper(original, name)\n\n  defineProperty(wrapped, '__original', original)\n  defineProperty(wrapped, '__unwrap', function () {\n    if (nodule[name] === wrapped) defineProperty(nodule, name, original)\n  })\n  defineProperty(wrapped, '__wrapped', true)\n\n  defineProperty(nodule, name, wrapped)\n  return wrapped\n}\n\nfunction massWrap (nodules, names, wrapper) {\n  if (!nodules) {\n    logger('must provide one or more modules to patch')\n    logger((new Error()).stack)\n    return\n  } else if (!Array.isArray(nodules)) {\n    nodules = [nodules]\n  }\n\n  if (!(names && Array.isArray(names))) {\n    logger('must provide one or more functions to wrap on modules')\n    return\n  }\n\n  nodules.forEach(function (nodule) {\n    names.forEach(function (name) {\n      wrap(nodule, name, wrapper)\n    })\n  })\n}\n\nfunction unwrap (nodule, name) {\n  if (!nodule || !nodule[name]) {\n    logger('no function to unwrap.')\n    logger((new Error()).stack)\n    return\n  }\n\n  if (!nodule[name].__unwrap) {\n    logger('no original to unwrap to -- has ' + name + ' already been unwrapped?')\n  } else {\n    return nodule[name].__unwrap()\n  }\n}\n\nfunction massUnwrap (nodules, names) {\n  if (!nodules) {\n    logger('must provide one or more modules to patch')\n    logger((new Error()).stack)\n    return\n  } else if (!Array.isArray(nodules)) {\n    nodules = [nodules]\n  }\n\n  if (!(names && Array.isArray(names))) {\n    logger('must provide one or more functions to unwrap on modules')\n    return\n  }\n\n  nodules.forEach(function (nodule) {\n    names.forEach(function (name) {\n      unwrap(nodule, name)\n    })\n  })\n}\n\nshimmer.wrap = wrap\nshimmer.massWrap = massWrap\nshimmer.unwrap = unwrap\nshimmer.massUnwrap = massUnwrap\n\nmodule.exports = shimmer\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TracerProvider } from '@opentelemetry/api';\nimport { MeterProvider } from '@opentelemetry/api-metrics';\n\n/** Interface Instrumentation to apply patch. */\nexport interface Instrumentation {\n  /** Instrumentation Name  */\n  instrumentationName: string;\n\n  /** Instrumentation Version  */\n  instrumentationVersion: string;\n\n  /**\n   * Instrumentation Description - please describe all useful information\n   * as Instrumentation might patch different version of different modules,\n   * or support different browsers etc.\n   */\n  instrumentationDescription?: string;\n\n  /** Method to disable the instrumentation  */\n  disable(): void;\n\n  /** Method to enable the instrumentation  */\n  enable(): void;\n\n  /** Method to set tracer provider  */\n  setTracerProvider(tracerProvider: TracerProvider): void;\n\n  /** Method to set meter provider  */\n  setMeterProvider(meterProvider: MeterProvider): void;\n\n  /** Method to set instrumentation config  */\n  setConfig(config: InstrumentationConfig): void;\n\n  /** Method to get instrumentation config  */\n  getConfig(): InstrumentationConfig;\n\n  /**\n   * Contains all supported versions.\n   * All versions must be compatible with [semver](https://semver.org/spec/v2.0.0.html) format.\n   * If the version is not supported, we won't apply instrumentation patch (see `enable` method).\n   * If omitted, all versions of the module will be patched.\n   */\n  supportedVersions?: string[];\n}\n\nexport interface InstrumentationConfig {\n  /**\n   * Whether to enable the plugin.\n   * @default true\n   */\n  enabled?: boolean;\n}\n\n/**\n * This interface defines the params that are be added to the wrapped function\n * using the \"shimmer.wrap\"\n */\nexport interface ShimWrapped extends Function {\n  __wrapped: boolean;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  __unwrap: Function;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  __original: Function;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TracerProvider } from '@opentelemetry/api';\nimport { MeterProvider } from '@opentelemetry/api-metrics';\nimport { InstrumentationBase } from './platform';\nimport { Instrumentation } from './types';\n\nexport type InstrumentationOption =\n  | typeof InstrumentationBase\n  | typeof InstrumentationBase[]\n  | Instrumentation\n  | Instrumentation[];\n\nexport interface AutoLoaderResult {\n  instrumentations: Instrumentation[];\n}\n\nexport interface AutoLoaderOptions {\n  instrumentations?: InstrumentationOption[];\n  tracerProvider?: TracerProvider;\n  meterProvider?: MeterProvider;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ShimWrapped } from './types';\n\n/**\n * function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nexport function safeExecuteInTheMiddle<T>(\n  execute: () => T,\n  onFinish: (e: Error | undefined, result: T | undefined) => void,\n  preventThrowingError?: boolean\n): T {\n  let error: Error | undefined;\n  let result: T | undefined;\n  try {\n    result = execute();\n  } catch (e) {\n    error = e;\n  } finally {\n    onFinish(error, result);\n    if (error && !preventThrowingError) {\n      // eslint-disable-next-line no-unsafe-finally\n      throw error;\n    }\n    // eslint-disable-next-line no-unsafe-finally\n    return result as T;\n  }\n}\n\n/**\n * Async function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nexport async function safeExecuteInTheMiddleAsync<T>(\n  execute: () => T,\n  onFinish: (e: Error | undefined, result: T | undefined) => void,\n  preventThrowingError?: boolean\n): Promise<T> {\n  let error: Error | undefined;\n  let result: T | undefined;\n  try {\n    result = await execute();\n  } catch (e) {\n    error = e;\n  } finally {\n    onFinish(error, result);\n    if (error && !preventThrowingError) {\n      // eslint-disable-next-line no-unsafe-finally\n      throw error;\n    }\n    // eslint-disable-next-line no-unsafe-finally\n    return result as T;\n  }\n}\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nexport function isWrapped(func: unknown): func is ShimWrapped {\n  return (\n    typeof func === 'function' &&\n    typeof (func as ShimWrapped).__original === 'function' &&\n    typeof (func as ShimWrapped).__unwrap === 'function' &&\n    (func as ShimWrapped).__wrapped === true\n  );\n}\n",null,null,null,null,null,null,null,null,null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './fetch';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  isWrapped,\n  InstrumentationBase,\n  InstrumentationConfig,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport * as core from '@opentelemetry/core';\nimport * as web from '@opentelemetry/sdk-trace-web';\nimport { AttributeNames } from './enums/AttributeNames';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { FetchError, FetchResponse, SpanData } from './types';\nimport { VERSION } from './version';\nimport { _globalThis } from '@opentelemetry/core';\n\n// how long to wait for observer to collect information about resources\n// this is needed as event \"load\" is called before observer\n// hard to say how long it should really wait, seems like 300ms is\n// safe enough\nconst OBSERVER_WAIT_TIME_MS = 300;\n\nexport interface FetchCustomAttributeFunction {\n  (\n    span: api.Span,\n    request: Request | RequestInit,\n    result: Response | FetchError\n  ): void;\n}\n\n/**\n * FetchPlugin Config\n */\nexport interface FetchInstrumentationConfig extends InstrumentationConfig {\n  // the number of timing resources is limited, after the limit\n  // (chrome 250, safari 150) the information is not collected anymore\n  // the only way to prevent that is to regularly clean the resources\n  // whenever it is possible, this is needed only when PerformanceObserver\n  // is not available\n  clearTimingResources?: boolean;\n  // urls which should include trace headers when origin doesn't match\n  propagateTraceHeaderCorsUrls?: web.PropagateTraceHeaderCorsUrls;\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  ignoreUrls?: Array<string | RegExp>;\n  /** Function for adding custom attributes on the span */\n  applyCustomAttributesOnSpan?: FetchCustomAttributeFunction;\n}\n\n/**\n * This class represents a fetch plugin for auto instrumentation\n */\nexport class FetchInstrumentation extends InstrumentationBase<Promise<Response>> {\n  readonly component: string = 'fetch';\n  readonly version: string = VERSION;\n  moduleName = this.component;\n  private _usedResources = new WeakSet<PerformanceResourceTiming>();\n  private _tasksCount = 0;\n\n  constructor(config?: FetchInstrumentationConfig) {\n    super(\n      '@opentelemetry/instrumentation-fetch',\n      VERSION,\n      config\n    );\n  }\n\n  init(): void {}\n\n  private _getConfig(): FetchInstrumentationConfig {\n    return this._config;\n  }\n\n  /**\n   * Add cors pre flight child span\n   * @param span\n   * @param corsPreFlightRequest\n   */\n  private _addChildSpan(\n    span: api.Span,\n    corsPreFlightRequest: PerformanceResourceTiming\n  ): void {\n    const childSpan = this.tracer.startSpan(\n      'CORS Preflight',\n      {\n        startTime: corsPreFlightRequest[web.PerformanceTimingNames.FETCH_START],\n      },\n      api.trace.setSpan(api.context.active(), span)\n    );\n    web.addSpanNetworkEvents(childSpan, corsPreFlightRequest);\n    childSpan.end(\n      corsPreFlightRequest[web.PerformanceTimingNames.RESPONSE_END]\n    );\n  }\n\n  /**\n   * Adds more attributes to span just before ending it\n   * @param span\n   * @param response\n   */\n  private _addFinalSpanAttributes(\n    span: api.Span,\n    response: FetchResponse\n  ): void {\n    const parsedUrl = web.parseUrl(response.url);\n    span.setAttribute(SemanticAttributes.HTTP_STATUS_CODE, response.status);\n    if (response.statusText != null) {\n      span.setAttribute(AttributeNames.HTTP_STATUS_TEXT, response.statusText);\n    }\n    span.setAttribute(SemanticAttributes.HTTP_HOST, parsedUrl.host);\n    span.setAttribute(\n      SemanticAttributes.HTTP_SCHEME,\n      parsedUrl.protocol.replace(':', '')\n    );\n    span.setAttribute(SemanticAttributes.HTTP_USER_AGENT, navigator.userAgent);\n  }\n\n  /**\n   * Add headers\n   * @param options\n   * @param spanUrl\n   */\n  private _addHeaders(options: Request | RequestInit, spanUrl: string): void {\n    if (\n      !web.shouldPropagateTraceHeaders(\n        spanUrl,\n        this._getConfig().propagateTraceHeaderCorsUrls\n      )\n    ) {\n      const headers: Partial<Record<string, unknown>> = {};\n      api.propagation.inject(api.context.active(), headers);\n      if (Object.keys(headers).length > 0) {\n        this._diag.debug('headers inject skipped due to CORS policy');\n      }\n      return;\n    }\n\n    if (options instanceof Request) {\n      api.propagation.inject(api.context.active(), options.headers, {\n        set: (h, k, v) => h.set(k, typeof v === 'string' ? v : String(v)),\n      });\n    } else if (options.headers instanceof Headers) {\n      api.propagation.inject(api.context.active(), options.headers, {\n        set: (h, k, v) => h.set(k, typeof v === 'string' ? v : String(v)),\n      });\n    } else {\n      const headers: Partial<Record<string, unknown>> = {};\n      api.propagation.inject(api.context.active(), headers);\n      options.headers = Object.assign({}, headers, options.headers || {});\n    }\n  }\n\n  /**\n   * Clears the resource timings and all resources assigned with spans\n   *     when {@link FetchPluginConfig.clearTimingResources} is\n   *     set to true (default false)\n   * @private\n   */\n  private _clearResources() {\n    if (this._tasksCount === 0 && this._getConfig().clearTimingResources) {\n      performance.clearResourceTimings();\n      this._usedResources = new WeakSet<PerformanceResourceTiming>();\n    }\n  }\n\n  /**\n   * Creates a new span\n   * @param url\n   * @param options\n   */\n  private _createSpan(\n    url: string,\n    options: Partial<Request | RequestInit> = {}\n  ): api.Span | undefined {\n    if (core.isUrlIgnored(url, this._getConfig().ignoreUrls)) {\n      this._diag.debug('ignoring span as url matches ignored url');\n      return;\n    }\n    const method = (options.method || 'GET').toUpperCase();\n    const spanName = `HTTP ${method}`;\n    return this.tracer.startSpan(spanName, {\n      kind: api.SpanKind.CLIENT,\n      attributes: {\n        [AttributeNames.COMPONENT]: this.moduleName,\n        [SemanticAttributes.HTTP_METHOD]: method,\n        [SemanticAttributes.HTTP_URL]: url,\n      },\n    });\n  }\n\n  /**\n   * Finds appropriate resource and add network events to the span\n   * @param span\n   * @param resourcesObserver\n   * @param endTime\n   */\n  private _findResourceAndAddNetworkEvents(\n    span: api.Span,\n    resourcesObserver: SpanData,\n    endTime: api.HrTime\n  ): void {\n    let resources: PerformanceResourceTiming[] = resourcesObserver.entries;\n    if (!resources.length) {\n      if (!performance.getEntriesByType) {\n        return;\n      }\n      // fallback - either Observer is not available or it took longer\n      // then OBSERVER_WAIT_TIME_MS and observer didn't collect enough\n      // information\n      resources = performance.getEntriesByType(\n        'resource'\n      ) as PerformanceResourceTiming[];\n    }\n    const resource = web.getResource(\n      resourcesObserver.spanUrl,\n      resourcesObserver.startTime,\n      endTime,\n      resources,\n      this._usedResources,\n      'fetch'\n    );\n\n    if (resource.mainRequest) {\n      const mainRequest = resource.mainRequest;\n      this._markResourceAsUsed(mainRequest);\n\n      const corsPreFlightRequest = resource.corsPreFlightRequest;\n      if (corsPreFlightRequest) {\n        this._addChildSpan(span, corsPreFlightRequest);\n        this._markResourceAsUsed(corsPreFlightRequest);\n      }\n      web.addSpanNetworkEvents(span, mainRequest);\n    }\n  }\n\n  /**\n   * Marks certain [resource]{@link PerformanceResourceTiming} when information\n   * from this is used to add events to span.\n   * This is done to avoid reusing the same resource again for next span\n   * @param resource\n   */\n  private _markResourceAsUsed(resource: PerformanceResourceTiming): void {\n    this._usedResources.add(resource);\n  }\n\n  /**\n   * Finish span, add attributes, network events etc.\n   * @param span\n   * @param spanData\n   * @param response\n   */\n  private _endSpan(\n    span: api.Span,\n    spanData: SpanData,\n    response: FetchResponse\n  ) {\n    const endTime = core.hrTime();\n    this._addFinalSpanAttributes(span, response);\n\n    setTimeout(() => {\n      spanData.observer?.disconnect();\n      this._findResourceAndAddNetworkEvents(span, spanData, endTime);\n      this._tasksCount--;\n      this._clearResources();\n      span.end(endTime);\n    }, OBSERVER_WAIT_TIME_MS);\n  }\n\n  /**\n   * Patches the constructor of fetch\n   */\n  private _patchConstructor(): (original: typeof fetch) => typeof fetch {\n    return original => {\n      const plugin = this;\n      return function patchConstructor(\n        this: typeof globalThis,\n        ...args: Parameters<typeof fetch>\n      ): Promise<Response> {\n        const self = this;\n        const url = web.parseUrl(args[0] instanceof Request ? args[0].url : args[0]).href;\n\n        const options = args[0] instanceof Request ? args[0] : args[1] || {};\n        const createdSpan = plugin._createSpan(url, options);\n        if (!createdSpan) {\n          return original.apply(this, args);\n        }\n        const spanData = plugin._prepareSpanData(url);\n\n        function endSpanOnError(span: api.Span, error: FetchError) {\n          plugin._applyAttributesAfterFetch(span, options, error);\n          plugin._endSpan(span, spanData, {\n            status: error.status || 0,\n            statusText: error.message,\n            url,\n          });\n        }\n\n        function endSpanOnSuccess(span: api.Span, response: Response) {\n          plugin._applyAttributesAfterFetch(span, options, response);\n          const spanResponse = {\n            status: response.status,\n            statusText: response.statusText,\n            headers: response.headers,\n            url\n          };\n          if (response.status >= 200 && response.status < 400) {\n            if (response.url != null && response.url !== '') {\n              spanResponse.url = url;\n            }\n          }\n          plugin._endSpan(span, spanData, {\n            status: response.status,\n            statusText: response.statusText,\n            url,\n          });\n        }\n\n        function onSuccess(\n          span: api.Span,\n          resolve: (value: Response | PromiseLike<Response>) => void,\n          response: Response\n        ): void {\n          try {\n            const resClone = response.clone();\n            const resClone4Hook = response.clone();\n            const body = resClone.body;\n            if (body) {\n              const reader = body.getReader();\n              const read = (): void => {\n                reader.read().then(\n                  ({ done }) => {\n                    if (done) {\n                      endSpanOnSuccess(span, resClone4Hook);\n                    } else {\n                      read();\n                    }\n                  },\n                  error => {\n                    endSpanOnError(span, error);\n                  }\n                );\n              };\n              read();\n            } else {\n              // some older browsers don't have .body implemented\n              endSpanOnSuccess(span, response);\n            }\n          } finally {\n            resolve(response);\n          }\n        }\n\n        function onError(\n          span: api.Span,\n          reject: (reason?: unknown) => void,\n          error: FetchError\n        ) {\n          try {\n            endSpanOnError(span, error);\n          } finally {\n            reject(error);\n          }\n        }\n\n        return new Promise((resolve, reject) => {\n          return api.context.with(\n            api.trace.setSpan(api.context.active(), createdSpan),\n            () => {\n              plugin._addHeaders(options, url);\n              plugin._tasksCount++;\n              // TypeScript complains about arrow function captured a this typed as globalThis\n              // ts(7041)\n              return original\n                .apply(self, options instanceof Request ? [options] : [url, options])\n                .then(\n                  onSuccess.bind(self, createdSpan, resolve),\n                  onError.bind(self, createdSpan, reject)\n                );\n            }\n          );\n        });\n      };\n    };\n  }\n\n  private _applyAttributesAfterFetch(\n    span: api.Span,\n    request: Request | RequestInit,\n    result: Response | FetchError\n  ) {\n    const applyCustomAttributesOnSpan = this._getConfig()\n      .applyCustomAttributesOnSpan;\n    if (applyCustomAttributesOnSpan) {\n      safeExecuteInTheMiddle(\n        () => applyCustomAttributesOnSpan(span, request, result),\n        error => {\n          if (!error) {\n            return;\n          }\n\n          this._diag.error('applyCustomAttributesOnSpan', error);\n        },\n        true\n      );\n    }\n  }\n\n  /**\n   * Prepares a span data - needed later for matching appropriate network\n   *     resources\n   * @param spanUrl\n   */\n  private _prepareSpanData(spanUrl: string): SpanData {\n    const startTime = core.hrTime();\n    const entries: PerformanceResourceTiming[] = [];\n    if (typeof PerformanceObserver !== 'function') {\n      return { entries, startTime, spanUrl };\n    }\n\n    const observer = new PerformanceObserver(list => {\n      const perfObsEntries = list.getEntries() as PerformanceResourceTiming[];\n      perfObsEntries.forEach(entry => {\n        if (\n          entry.initiatorType === 'fetch' &&\n          entry.name === spanUrl\n        ) {\n          entries.push(entry);\n        }\n      });\n    });\n    observer.observe({\n      entryTypes: ['resource'],\n    });\n    return { entries, observer, startTime, spanUrl };\n  }\n\n  /**\n   * implements enable function\n   */\n  override enable(): void {\n    if (isWrapped(fetch)) {\n      this._unwrap(_globalThis, 'fetch');\n      this._diag.debug('removing previous patch for constructor');\n    }\n    this._wrap(_globalThis, 'fetch', this._patchConstructor());\n  }\n\n  /**\n   * implements unpatch function\n   */\n  override disable(): void {\n    this._unwrap(_globalThis, 'fetch');\n    this._usedResources = new WeakSet<PerformanceResourceTiming>();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './baggage/propagation/W3CBaggagePropagator';\nexport * from './common/attributes';\nexport * from './common/global-error-handler';\nexport * from './common/logging-error-handler';\nexport * from './common/time';\nexport * from './common/types';\nexport * from './ExportResult';\nexport * from './version';\nexport * as baggageUtils from './baggage/utils';\nexport * from './platform';\nexport * from './propagation/composite';\nexport * from './trace/W3CTraceContextPropagator';\nexport * from './trace/IdGenerator';\nexport * from './trace/rpc-metadata';\nexport * from './trace/sampler/AlwaysOffSampler';\nexport * from './trace/sampler/AlwaysOnSampler';\nexport * from './trace/sampler/ParentBasedSampler';\nexport * from './trace/sampler/TraceIdRatioBasedSampler';\nexport * from './trace/suppress-tracing';\nexport * from './trace/TraceState';\nexport * from './utils/environment';\nexport * from './utils/merge';\nexport * from './utils/sampling';\nexport * from './utils/url';\nexport * from './utils/wrap';\nexport * from './utils/callback';\nexport * from './version';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Baggage, BaggageEntryMetadata, baggageEntryMetadataFromString } from '@opentelemetry/api';\nimport {\n  BAGGAGE_ITEMS_SEPARATOR,\n  BAGGAGE_PROPERTIES_SEPARATOR,\n  BAGGAGE_KEY_PAIR_SEPARATOR,\n  BAGGAGE_MAX_TOTAL_LENGTH,\n} from './constants';\n\ntype ParsedBaggageKeyValue = { key: string, value: string, metadata: BaggageEntryMetadata | undefined };\n\nexport function serializeKeyPairs(keyPairs: string[]): string {\n  return keyPairs.reduce((hValue: string, current: string) => {\n    const value = `${hValue}${hValue !== '' ? BAGGAGE_ITEMS_SEPARATOR : ''\n    }${current}`;\n    return value.length > BAGGAGE_MAX_TOTAL_LENGTH ? hValue : value;\n  }, '');\n}\n\nexport function getKeyPairs(baggage: Baggage): string[] {\n  return baggage.getAllEntries().map(([key, value]) => {\n    let entry = `${encodeURIComponent(key)}=${encodeURIComponent(value.value)}`;\n\n    // include opaque metadata if provided\n    // NOTE: we intentionally don't URI-encode the metadata - that responsibility falls on the metadata implementation\n    if (value.metadata !== undefined) {\n      entry += BAGGAGE_PROPERTIES_SEPARATOR + value.metadata.toString();\n    }\n\n    return entry;\n  });\n}\n\nexport function parsePairKeyValue(entry: string): ParsedBaggageKeyValue | undefined {\n  const valueProps = entry.split(BAGGAGE_PROPERTIES_SEPARATOR);\n  if (valueProps.length <= 0) return;\n  const keyPairPart = valueProps.shift();\n  if (!keyPairPart) return;\n  const keyPair = keyPairPart.split(BAGGAGE_KEY_PAIR_SEPARATOR);\n  if (keyPair.length !== 2) return;\n  const key = decodeURIComponent(keyPair[0].trim());\n  const value = decodeURIComponent(keyPair[1].trim());\n  let metadata;\n  if (valueProps.length > 0) {\n    metadata = baggageEntryMetadataFromString(\n      valueProps.join(BAGGAGE_PROPERTIES_SEPARATOR)\n    );\n  }\n  return { key, value, metadata };\n}\n\n/**\n * Parse a string serialized in the baggage HTTP Format (without metadata):\n * https://github.com/w3c/baggage/blob/master/baggage/HTTP_HEADER_FORMAT.md\n */\nexport function parseKeyPairsIntoRecord(value?: string): Record<string, string> {\n  if (typeof value !== 'string' || value.length === 0) return {};\n  return value\n    .split(BAGGAGE_ITEMS_SEPARATOR)\n    .map(entry => {\n      return parsePairKeyValue(entry);\n    })\n    .filter(keyPair => keyPair !== undefined && keyPair.value.length > 0)\n    .reduce<Record<string, string>>((headers, keyPair) => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      headers[keyPair!.key] = keyPair!.value;\n      return headers;\n    }, {});\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const BAGGAGE_KEY_PAIR_SEPARATOR = '=';\nexport const BAGGAGE_PROPERTIES_SEPARATOR = ';';\nexport const BAGGAGE_ITEMS_SEPARATOR = ',';\n\n// Name of the http header used to propagate the baggage\nexport const BAGGAGE_HEADER = 'baggage';\n// Maximum number of name-value pairs allowed by w3c spec\nexport const BAGGAGE_MAX_NAME_VALUE_PAIRS = 180;\n// Maximum number of bytes per a single name-value pair allowed by w3c spec\nexport const BAGGAGE_MAX_PER_NAME_VALUE_PAIRS = 4096;\n// Maximum total length of all name-value pairs allowed by w3c spec\nexport const BAGGAGE_MAX_TOTAL_LENGTH = 8192;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BaggageEntry,\n  Context,\n  propagation,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n} from '@opentelemetry/api';\n\nimport { isTracingSuppressed } from '../../trace/suppress-tracing';\nimport {\n  BAGGAGE_HEADER,\n  BAGGAGE_ITEMS_SEPARATOR,\n  BAGGAGE_MAX_NAME_VALUE_PAIRS,\n  BAGGAGE_MAX_PER_NAME_VALUE_PAIRS\n} from '../constants';\nimport {\n  getKeyPairs,\n  parsePairKeyValue,\n  serializeKeyPairs\n} from '../utils';\n\n/**\n * Propagates {@link Baggage} through Context format propagation.\n *\n * Based on the Baggage specification:\n * https://w3c.github.io/baggage/\n */\nexport class W3CBaggagePropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const baggage = propagation.getBaggage(context);\n    if (!baggage || isTracingSuppressed(context)) return;\n    const keyPairs = getKeyPairs(baggage)\n      .filter((pair: string) => {\n        return pair.length <= BAGGAGE_MAX_PER_NAME_VALUE_PAIRS;\n      })\n      .slice(0, BAGGAGE_MAX_NAME_VALUE_PAIRS);\n    const headerValue = serializeKeyPairs(keyPairs);\n    if (headerValue.length > 0) {\n      setter.set(carrier, BAGGAGE_HEADER, headerValue);\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const headerValue = getter.get(carrier, BAGGAGE_HEADER);\n    const baggageString = Array.isArray(headerValue) ? headerValue.join(BAGGAGE_ITEMS_SEPARATOR) : headerValue;\n    if (!baggageString) return context;\n    const baggage: Record<string, BaggageEntry> = {};\n    if (baggageString.length === 0) {\n      return context;\n    }\n    const pairs = baggageString.split(BAGGAGE_ITEMS_SEPARATOR);\n    pairs.forEach(entry => {\n      const keyPair = parsePairKeyValue(entry);\n      if (keyPair) {\n        const baggageEntry: BaggageEntry = { value: keyPair.value };\n        if (keyPair.metadata) {\n          baggageEntry.metadata = keyPair.metadata;\n        }\n        baggage[keyPair.key] = baggageEntry;\n      }\n    });\n    if (Object.entries(baggage).length === 0) {\n      return context;\n    }\n    return propagation.setBaggage(context, propagation.createBaggage(baggage));\n  }\n\n  fields(): string[] {\n    return [BAGGAGE_HEADER];\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, createContextKey } from '@opentelemetry/api';\n\nconst SUPPRESS_TRACING_KEY = createContextKey(\n  'OpenTelemetry SDK Context Key SUPPRESS_TRACING'\n);\n\nexport function suppressTracing(context: Context): Context {\n  return context.setValue(SUPPRESS_TRACING_KEY, true);\n}\n\nexport function unsuppressTracing(context: Context): Context {\n  return context.deleteValue(SUPPRESS_TRACING_KEY);\n}\n\nexport function isTracingSuppressed(context: Context): boolean {\n  return context.getValue(SUPPRESS_TRACING_KEY) === true;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, SpanAttributeValue, SpanAttributes } from '@opentelemetry/api';\n\nexport function sanitizeAttributes(attributes: unknown): SpanAttributes {\n  const out: SpanAttributes = {};\n\n  if (typeof attributes !== 'object' || attributes == null) {\n    return out;\n  }\n\n  for (const [key, val] of Object.entries(attributes)) {\n    if (!isAttributeKey(key)) {\n      diag.warn(`Invalid attribute key: ${key}`);\n      continue;\n    }\n    if (!isAttributeValue(val)) {\n      diag.warn(`Invalid attribute value set for key: ${key}`);\n      continue;\n    }\n    if (Array.isArray(val)) {\n      out[key] = val.slice();\n    } else {\n      out[key] = val;\n    }\n  }\n\n  return out;\n}\n\nexport function isAttributeKey(key: unknown): key is string {\n  return typeof key === 'string' && key.length > 0;\n}\n\nexport function isAttributeValue(val: unknown): val is SpanAttributeValue {\n  if (val == null) {\n    return true;\n  }\n\n  if (Array.isArray(val)) {\n    return isHomogeneousAttributeValueArray(val);\n  }\n\n  return isValidPrimitiveAttributeValue(val);\n}\n\nfunction isHomogeneousAttributeValueArray(arr: unknown[]): boolean {\n  let type: string | undefined;\n\n  for (const element of arr) {\n    // null/undefined elements are allowed\n    if (element == null) continue;\n\n    if (!type) {\n      if (isValidPrimitiveAttributeValue(element)) {\n        type = typeof element;\n        continue;\n      }\n      // encountered an invalid primitive\n      return false;\n    }\n\n    if (typeof element === type) {\n      continue;\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction isValidPrimitiveAttributeValue(val: unknown): boolean {\n  switch (typeof val) {\n    case 'number':\n    case 'boolean':\n    case 'string':\n      return true;\n  }\n\n  return false;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Exception } from '@opentelemetry/api';\nimport { loggingErrorHandler } from './logging-error-handler';\nimport { ErrorHandler } from './types';\n\n/** The global error handler delegate */\nlet delegateHandler = loggingErrorHandler();\n\n/**\n * Set the global error handler\n * @param {ErrorHandler} handler\n */\nexport function setGlobalErrorHandler(handler: ErrorHandler): void {\n  delegateHandler = handler;\n}\n\n/**\n * Return the global error handler\n * @param {Exception} ex\n */\nexport function globalErrorHandler(ex: Exception): void {\n  try {\n    delegateHandler(ex);\n  } catch {} // eslint-disable-line no-empty\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, Exception } from '@opentelemetry/api';\nimport { ErrorHandler } from './types';\n\n/**\n * Returns a function that logs an error using the provided logger, or a\n * console logger if one was not provided.\n */\nexport function loggingErrorHandler(): ErrorHandler {\n  return (ex: Exception) => {\n    diag.error(stringifyException(ex));\n  };\n}\n\n/**\n * Converts an exception into a string representation\n * @param {Exception} ex\n */\nfunction stringifyException(ex: Exception | string): string {\n  if (typeof ex === 'string') {\n    return ex;\n  } else {\n    return JSON.stringify(flattenException(ex));\n  }\n}\n\n/**\n * Flattens an exception into key-value pairs by traversing the prototype chain\n * and coercing values to strings. Duplicate properties will not be overwritten;\n * the first insert wins.\n */\nfunction flattenException(ex: Exception): Record<string, string> {\n  const result = {} as Record<string, string>;\n  let current = ex;\n\n  while (current !== null) {\n    Object.getOwnPropertyNames(current).forEach(propertyName => {\n      if (result[propertyName]) return;\n      const value = current[propertyName as keyof typeof current];\n      if (value) {\n        result[propertyName] = String(value);\n      }\n    });\n    current = Object.getPrototypeOf(current);\n  }\n\n  return result;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { otperformance as performance } from '../platform';\nimport { TimeOriginLegacy } from './types';\n\nconst NANOSECOND_DIGITS = 9;\nconst SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n\n/**\n * Converts a number to HrTime, HrTime = [number, number].\n * The first number is UNIX Epoch time in seconds since 00:00:00 UTC on 1 January 1970.\n * The second number represents the partial second elapsed since Unix Epoch time represented by first number in nanoseconds.\n * For example, 2021-01-01T12:30:10.150Z in UNIX Epoch time in milliseconds is represented as 1609504210150.\n * numberToHrtime calculates the first number by converting and truncating the Epoch time in milliseconds to seconds:\n * HrTime[0] = Math.trunc(1609504210150 / 1000) = 1609504210.\n * numberToHrtime calculates the second number by converting the digits after the decimal point of the subtraction, (1609504210150 / 1000) - HrTime[0], to nanoseconds:\n * HrTime[1] = Number((1609504210.150 - HrTime[0]).toFixed(9)) * SECOND_TO_NANOSECONDS = 150000000.\n * This is represented in HrTime format as [1609504210, 150000000].\n * @param epochMillis\n */\nfunction numberToHrtime(epochMillis: number): api.HrTime {\n  const epochSeconds = epochMillis / 1000;\n  // Decimals only.\n  const seconds = Math.trunc(epochSeconds);\n  // Round sub-nanosecond accuracy to nanosecond.\n  const nanos =\n    Number((epochSeconds - seconds).toFixed(NANOSECOND_DIGITS)) *\n    SECOND_TO_NANOSECONDS;\n  return [seconds, nanos];\n}\n\nfunction getTimeOrigin(): number {\n  let timeOrigin = performance.timeOrigin;\n  if (typeof timeOrigin !== 'number') {\n    const perf: TimeOriginLegacy = (performance as unknown) as TimeOriginLegacy;\n    timeOrigin = perf.timing && perf.timing.fetchStart;\n  }\n  return timeOrigin;\n}\n\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow?: number): api.HrTime {\n  const timeOrigin = numberToHrtime(getTimeOrigin());\n  const now = numberToHrtime(\n    typeof performanceNow === 'number' ? performanceNow : performance.now()\n  );\n\n  let seconds = timeOrigin[0] + now[0];\n  let nanos = timeOrigin[1] + now[1];\n\n  // Nanoseconds\n  if (nanos > SECOND_TO_NANOSECONDS) {\n    nanos -= SECOND_TO_NANOSECONDS;\n    seconds += 1;\n  }\n\n  return [seconds, nanos];\n}\n\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time: api.TimeInput): api.HrTime {\n  // process.hrtime\n  if (isTimeInputHrTime(time)) {\n    return time as api.HrTime;\n  } else if (typeof time === 'number') {\n    // Must be a performance.now() if it's smaller than process start time.\n    if (time < getTimeOrigin()) {\n      return hrTime(time);\n    } else {\n      // epoch milliseconds or performance.timeOrigin\n      return numberToHrtime(time);\n    }\n  } else if (time instanceof Date) {\n    return numberToHrtime(time.getTime());\n  } else {\n    throw TypeError('Invalid input type');\n  }\n}\n\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(\n  startTime: api.HrTime,\n  endTime: api.HrTime\n): api.HrTime {\n  let seconds = endTime[0] - startTime[0];\n  let nanos = endTime[1] - startTime[1];\n\n  // overflow\n  if (nanos < 0) {\n    seconds -= 1;\n    // negate\n    nanos += SECOND_TO_NANOSECONDS;\n  }\n\n  return [seconds, nanos];\n}\n\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time: api.HrTime): string {\n  const precision = NANOSECOND_DIGITS;\n  const tmp = `${'0'.repeat(precision)}${time[1]}Z`;\n  const nanoString = tmp.substr(tmp.length - precision - 1);\n  const date = new Date(time[0] * 1000).toISOString();\n  return date.replace('000Z', nanoString);\n}\n\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time: api.HrTime): number {\n  return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time: api.HrTime): number {\n  return Math.round(time[0] * 1e3 + time[1] / 1e6);\n}\n\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time: api.HrTime): number {\n  return Math.round(time[0] * 1e6 + time[1] / 1e3);\n}\n\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value: unknown): value is api.HrTime {\n  return (\n    Array.isArray(value) &&\n    value.length === 2 &&\n    typeof value[0] === 'number' &&\n    typeof value[1] === 'number'\n  );\n}\n\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(value: unknown): value is api.HrTime | number | Date {\n  return (\n    isTimeInputHrTime(value) ||\n    typeof value === 'number' ||\n    value instanceof Date\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './environment';\nexport * from './globalThis';\nexport * from './hex-to-base64';\nexport * from './RandomIdGenerator';\nexport * from './performance';\nexport * from './sdk-info';\nexport * from './timer-util';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_ENVIRONMENT,\n  ENVIRONMENT,\n  RAW_ENVIRONMENT,\n  parseEnvironment,\n} from '../../utils/environment';\nimport { _globalThis } from './globalThis';\n\n/**\n * Gets the environment variables\n */\nexport function getEnv(): Required<ENVIRONMENT> {\n  const globalEnv = parseEnvironment(_globalThis as typeof globalThis & RAW_ENVIRONMENT);\n  return Object.assign({}, DEFAULT_ENVIRONMENT, globalEnv);\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagLogLevel } from '@opentelemetry/api';\nimport { TracesSamplerValues } from './sampling';\n\nconst DEFAULT_LIST_SEPARATOR = ',';\n\n/**\n * Environment interface to define all names\n */\n\nconst ENVIRONMENT_NUMBERS_KEYS = [\n  'OTEL_BSP_EXPORT_TIMEOUT',\n  'OTEL_BSP_MAX_EXPORT_BATCH_SIZE',\n  'OTEL_BSP_MAX_QUEUE_SIZE',\n  'OTEL_BSP_SCHEDULE_DELAY',\n  'OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_SPAN_EVENT_COUNT_LIMIT',\n  'OTEL_SPAN_LINK_COUNT_LIMIT',\n  'OTEL_EXPORTER_OTLP_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_TRACES_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_METRICS_TIMEOUT',\n  'OTEL_EXPORTER_JAEGER_AGENT_PORT',\n] as const;\n\ntype ENVIRONMENT_NUMBERS = {\n  [K in typeof ENVIRONMENT_NUMBERS_KEYS[number]]?: number;\n};\n\nfunction isEnvVarANumber(key: unknown): key is keyof ENVIRONMENT_NUMBERS {\n  return (\n    ENVIRONMENT_NUMBERS_KEYS.indexOf(key as keyof ENVIRONMENT_NUMBERS) > -1\n  );\n}\n\nconst ENVIRONMENT_LISTS_KEYS = [\n  'OTEL_NO_PATCH_MODULES',\n  'OTEL_PROPAGATORS',\n] as const;\n\ntype ENVIRONMENT_LISTS = {\n  [K in typeof ENVIRONMENT_LISTS_KEYS[number]]?: string[];\n};\n\nfunction isEnvVarAList(key: unknown): key is keyof ENVIRONMENT_LISTS {\n  return ENVIRONMENT_LISTS_KEYS.indexOf(key as keyof ENVIRONMENT_LISTS) > -1;\n}\n\nexport type ENVIRONMENT = {\n  CONTAINER_NAME?: string;\n  ECS_CONTAINER_METADATA_URI_V4?: string;\n  ECS_CONTAINER_METADATA_URI?: string;\n  HOSTNAME?: string;\n  KUBERNETES_SERVICE_HOST?: string;\n  NAMESPACE?: string;\n  OTEL_EXPORTER_JAEGER_AGENT_HOST?: string;\n  OTEL_EXPORTER_JAEGER_ENDPOINT?: string;\n  OTEL_EXPORTER_JAEGER_PASSWORD?: string;\n  OTEL_EXPORTER_JAEGER_USER?: string;\n  OTEL_EXPORTER_OTLP_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_TRACES_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_METRICS_HEADERS?: string;\n  OTEL_EXPORTER_ZIPKIN_ENDPOINT?: string;\n  OTEL_LOG_LEVEL?: DiagLogLevel;\n  OTEL_RESOURCE_ATTRIBUTES?: string;\n  OTEL_SERVICE_NAME?: string;\n  OTEL_TRACES_EXPORTER?: string;\n  OTEL_TRACES_SAMPLER_ARG?: string;\n  OTEL_TRACES_SAMPLER?: string;\n  OTEL_EXPORTER_OTLP_INSECURE?: string,\n  OTEL_EXPORTER_OTLP_TRACES_INSECURE?: string,\n  OTEL_EXPORTER_OTLP_METRICS_INSECURE?: string,\n  OTEL_EXPORTER_OTLP_CERTIFICATE?: string,\n  OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE?: string,\n  OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE?: string,\n  OTEL_EXPORTER_OTLP_COMPRESSION?: string,\n  OTEL_EXPORTER_OTLP_TRACES_COMPRESSION?: string,\n  OTEL_EXPORTER_OTLP_METRICS_COMPRESSION?: string\n  OTEL_EXPORTER_OTLP_CLIENT_KEY?: string,\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY?: string,\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY?: string,\n  OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE?: string,\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE?: string,\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE?: string\n} & ENVIRONMENT_NUMBERS &\n  ENVIRONMENT_LISTS;\n\nexport type RAW_ENVIRONMENT = {\n  [key: string]: string | number | undefined | string[];\n};\n\nexport const DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT = Infinity;\n\nexport const DEFAULT_ATTRIBUTE_COUNT_LIMIT = 128;\n\n/**\n * Default environment variables\n */\nexport const DEFAULT_ENVIRONMENT: Required<ENVIRONMENT> = {\n  CONTAINER_NAME: '',\n  ECS_CONTAINER_METADATA_URI_V4: '',\n  ECS_CONTAINER_METADATA_URI: '',\n  HOSTNAME: '',\n  KUBERNETES_SERVICE_HOST: '',\n  NAMESPACE: '',\n  OTEL_BSP_EXPORT_TIMEOUT: 30000,\n  OTEL_BSP_MAX_EXPORT_BATCH_SIZE: 512,\n  OTEL_BSP_MAX_QUEUE_SIZE: 2048,\n  OTEL_BSP_SCHEDULE_DELAY: 5000,\n  OTEL_EXPORTER_JAEGER_AGENT_HOST: '',\n  OTEL_EXPORTER_JAEGER_AGENT_PORT: 6832,\n  OTEL_EXPORTER_JAEGER_ENDPOINT: '',\n  OTEL_EXPORTER_JAEGER_PASSWORD: '',\n  OTEL_EXPORTER_JAEGER_USER: '',\n  OTEL_EXPORTER_OTLP_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_HEADERS: '',\n  OTEL_EXPORTER_OTLP_TRACES_HEADERS: '',\n  OTEL_EXPORTER_OTLP_METRICS_HEADERS: '',\n  OTEL_EXPORTER_OTLP_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_METRICS_TIMEOUT: 10000,\n  OTEL_EXPORTER_ZIPKIN_ENDPOINT: 'http://localhost:9411/api/v2/spans',\n  OTEL_LOG_LEVEL: DiagLogLevel.INFO,\n  OTEL_NO_PATCH_MODULES: [],\n  OTEL_PROPAGATORS: ['tracecontext', 'baggage'],\n  OTEL_RESOURCE_ATTRIBUTES: '',\n  OTEL_SERVICE_NAME: '',\n  OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  OTEL_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT ,\n  OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_SPAN_EVENT_COUNT_LIMIT: 128,\n  OTEL_SPAN_LINK_COUNT_LIMIT: 128,\n  OTEL_TRACES_EXPORTER: 'none',\n  OTEL_TRACES_SAMPLER: TracesSamplerValues.ParentBasedAlwaysOn,\n  OTEL_TRACES_SAMPLER_ARG: '',\n  OTEL_EXPORTER_OTLP_INSECURE: '',\n  OTEL_EXPORTER_OTLP_TRACES_INSECURE: '',\n  OTEL_EXPORTER_OTLP_METRICS_INSECURE: '',\n  OTEL_EXPORTER_OTLP_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_TRACES_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_METRICS_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE: ''\n};\n\n/**\n * Parses a variable as number with number validation\n * @param name\n * @param environment\n * @param values\n * @param min\n * @param max\n */\nfunction parseNumber(\n  name: keyof ENVIRONMENT_NUMBERS,\n  environment: ENVIRONMENT,\n  values: RAW_ENVIRONMENT,\n  min = -Infinity,\n  max = Infinity\n) {\n  if (typeof values[name] !== 'undefined') {\n    const value = Number(values[name] as string);\n    if (!isNaN(value)) {\n      if (value < min) {\n        environment[name] = min;\n      } else if (value > max) {\n        environment[name] = max;\n      } else {\n        environment[name] = value;\n      }\n    }\n  }\n}\n\n/**\n * Parses list-like strings from input into output.\n * @param name\n * @param environment\n * @param values\n * @param separator\n */\nfunction parseStringList(\n  name: keyof ENVIRONMENT_LISTS,\n  output: ENVIRONMENT,\n  input: RAW_ENVIRONMENT,\n  separator = DEFAULT_LIST_SEPARATOR\n) {\n  const givenValue = input[name];\n  if (typeof givenValue === 'string') {\n    output[name] = givenValue.split(separator).map(v => v.trim());\n  }\n}\n\n// The support string -> DiagLogLevel mappings\nconst logLevelMap: { [key: string]: DiagLogLevel } = {\n  ALL: DiagLogLevel.ALL,\n  VERBOSE: DiagLogLevel.VERBOSE,\n  DEBUG: DiagLogLevel.DEBUG,\n  INFO: DiagLogLevel.INFO,\n  WARN: DiagLogLevel.WARN,\n  ERROR: DiagLogLevel.ERROR,\n  NONE: DiagLogLevel.NONE,\n};\n\n/**\n * Environmentally sets log level if valid log level string is provided\n * @param key\n * @param environment\n * @param values\n */\nfunction setLogLevelFromEnv(\n  key: keyof ENVIRONMENT,\n  environment: RAW_ENVIRONMENT | ENVIRONMENT,\n  values: RAW_ENVIRONMENT\n) {\n  const value = values[key];\n  if (typeof value === 'string') {\n    const theLevel = logLevelMap[value.toUpperCase()];\n    if (theLevel != null) {\n      environment[key] = theLevel;\n    }\n  }\n}\n\n/**\n * Parses environment values\n * @param values\n */\nexport function parseEnvironment(values: RAW_ENVIRONMENT): ENVIRONMENT {\n  const environment: ENVIRONMENT = {};\n\n  for (const env in DEFAULT_ENVIRONMENT) {\n    const key = env as keyof ENVIRONMENT;\n\n    switch (key) {\n      case 'OTEL_LOG_LEVEL':\n        setLogLevelFromEnv(key, environment, values);\n        break;\n\n      default:\n        if (isEnvVarANumber(key)) {\n          parseNumber(key, environment, values);\n        } else if (isEnvVarAList(key)) {\n          parseStringList(key, environment, values);\n        } else {\n          const value = values[key];\n          if (typeof value !== 'undefined' && value !== null) {\n            environment[key] = String(value);\n          }\n        }\n    }\n  }\n\n  return environment;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum TracesSamplerValues {\n  AlwaysOff = 'always_off',\n  AlwaysOn = 'always_on',\n  ParentBasedAlwaysOff = 'parentbased_always_off',\n  ParentBasedAlwaysOn = 'parentbased_always_on',\n  ParentBasedTraceIdRatio = 'parentbased_traceidratio',\n  TraceIdRatio = 'traceidratio',\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Updates to this file should also be replicated to @opentelemetry/api and\n// @opentelemetry/api-metrics too.\n\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport const _globalThis: typeof globalThis =\n  typeof globalThis === 'object' ? globalThis :\n    typeof self === 'object' ? self :\n      typeof window === 'object' ? window :\n        typeof global === 'object' ? global :\n  {} as typeof globalThis;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function hexToBase64(hexStr: string): string {\n  const hexStrLen = hexStr.length;\n  let hexAsciiCharsStr = '';\n  for (let i = 0; i < hexStrLen; i += 2) {\n    const hexPair = hexStr.substring(i, i + 2);\n    const hexVal = parseInt(hexPair, 16);\n    hexAsciiCharsStr += String.fromCharCode(hexVal);\n  }\n  return btoa(hexAsciiCharsStr);\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { IdGenerator } from '../../trace/IdGenerator';\n\nconst SPAN_ID_BYTES = 8;\nconst TRACE_ID_BYTES = 16;\n\nexport class RandomIdGenerator implements IdGenerator {\n  /**\n   * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n   * characters corresponding to 128 bits.\n   */\n  generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n\n  /**\n   * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n   * characters corresponding to 64 bits.\n   */\n  generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n}\n\nconst SHARED_CHAR_CODES_ARRAY = Array(32);\nfunction getIdGenerator(bytes: number): () => string {\n  return function generateId() {\n    for (let i = 0; i < bytes * 2; i++) {\n      SHARED_CHAR_CODES_ARRAY[i] = Math.floor(Math.random() * 16) + 48;\n      // valid hex characters in the range 48-57 and 97-102\n      if (SHARED_CHAR_CODES_ARRAY[i] >= 58) {\n        SHARED_CHAR_CODES_ARRAY[i] += 39;\n      }\n    }\n    return String.fromCharCode.apply(\n      null,\n      SHARED_CHAR_CODES_ARRAY.slice(0, bytes * 2)\n    );\n  };\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const otperformance = performance;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VERSION } from '../../version';\nimport {\n  TelemetrySdkLanguageValues,\n  SemanticResourceAttributes,\n} from '@opentelemetry/semantic-conventions';\n\n/** Constants describing the SDK in use */\nexport const SDK_INFO = {\n  [SemanticResourceAttributes.TELEMETRY_SDK_NAME]: 'opentelemetry',\n  [SemanticResourceAttributes.PROCESS_RUNTIME_NAME]: 'browser',\n  [SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE]: TelemetrySdkLanguageValues.WEBJS,\n  [SemanticResourceAttributes.TELEMETRY_SDK_VERSION]: VERSION,\n};\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '1.3.1';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './trace';\nexport * from './resource';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './SemanticAttributes';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexport const SemanticAttributes = {\n\n  /**\n  * The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).\n  *\n  * Note: This may be different from `faas.id` if an alias is involved.\n  */\n  AWS_LAMBDA_INVOKED_ARN: 'aws.lambda.invoked_arn',\n\n  /**\n  * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n  */\n  DB_SYSTEM: 'db.system',\n\n  /**\n  * The connection string used to connect to the database. It is recommended to remove embedded credentials.\n  */\n  DB_CONNECTION_STRING: 'db.connection_string',\n\n  /**\n  * Username for accessing the database.\n  */\n  DB_USER: 'db.user',\n\n  /**\n  * The fully-qualified class name of the [Java Database Connectivity (JDBC)](https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/) driver used to connect.\n  */\n  DB_JDBC_DRIVER_CLASSNAME: 'db.jdbc.driver_classname',\n\n  /**\n  * If no [tech-specific attribute](#call-level-attributes-for-specific-technologies) is defined, this attribute is used to report the name of the database being accessed. For commands that switch the database, this should be set to the target database (even if the command fails).\n  *\n  * Note: In some SQL databases, the database name to be used is called &#34;schema name&#34;.\n  */\n  DB_NAME: 'db.name',\n\n  /**\n  * The database statement being executed.\n  *\n  * Note: The value may be sanitized to exclude sensitive information.\n  */\n  DB_STATEMENT: 'db.statement',\n\n  /**\n  * The name of the operation being executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as `findAndModify`, or the SQL keyword.\n  *\n  * Note: When setting this to an SQL keyword, it is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if the operation name is provided by the library being instrumented. If the SQL statement has an ambiguous operation, or performs more than one operation, this value may be omitted.\n  */\n  DB_OPERATION: 'db.operation',\n\n  /**\n  * The Microsoft SQL Server [instance name](https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15) connecting to. This name is used to determine the port of a named instance.\n  *\n  * Note: If setting a `db.mssql.instance_name`, `net.peer.port` is no longer required (but still recommended if non-standard).\n  */\n  DB_MSSQL_INSTANCE_NAME: 'db.mssql.instance_name',\n\n  /**\n  * The name of the keyspace being accessed. To be used instead of the generic `db.name` attribute.\n  */\n  DB_CASSANDRA_KEYSPACE: 'db.cassandra.keyspace',\n\n  /**\n  * The fetch size used for paging, i.e. how many rows will be returned at once.\n  */\n  DB_CASSANDRA_PAGE_SIZE: 'db.cassandra.page_size',\n\n  /**\n  * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n  */\n  DB_CASSANDRA_CONSISTENCY_LEVEL: 'db.cassandra.consistency_level',\n\n  /**\n  * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n  *\n  * Note: This mirrors the db.sql.table attribute but references cassandra rather than sql. It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n  */\n  DB_CASSANDRA_TABLE: 'db.cassandra.table',\n\n  /**\n  * Whether or not the query is idempotent.\n  */\n  DB_CASSANDRA_IDEMPOTENCE: 'db.cassandra.idempotence',\n\n  /**\n  * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n  */\n  DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT: 'db.cassandra.speculative_execution_count',\n\n  /**\n  * The ID of the coordinating node for a query.\n  */\n  DB_CASSANDRA_COORDINATOR_ID: 'db.cassandra.coordinator.id',\n\n  /**\n  * The data center of the coordinating node for a query.\n  */\n  DB_CASSANDRA_COORDINATOR_DC: 'db.cassandra.coordinator.dc',\n\n  /**\n  * The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed. To be used instead of the generic `db.name` attribute.\n  */\n  DB_HBASE_NAMESPACE: 'db.hbase.namespace',\n\n  /**\n  * The index of the database being accessed as used in the [`SELECT` command](https://redis.io/commands/select), provided as an integer. To be used instead of the generic `db.name` attribute.\n  */\n  DB_REDIS_DATABASE_INDEX: 'db.redis.database_index',\n\n  /**\n  * The collection being accessed within the database stated in `db.name`.\n  */\n  DB_MONGODB_COLLECTION: 'db.mongodb.collection',\n\n  /**\n  * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n  *\n  * Note: It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n  */\n  DB_SQL_TABLE: 'db.sql.table',\n\n  /**\n  * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n  */\n  EXCEPTION_TYPE: 'exception.type',\n\n  /**\n  * The exception message.\n  */\n  EXCEPTION_MESSAGE: 'exception.message',\n\n  /**\n  * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n  */\n  EXCEPTION_STACKTRACE: 'exception.stacktrace',\n\n  /**\n  * SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n  *\n  * Note: An exception is considered to have escaped (or left) the scope of a span,\nif that span is ended while the exception is still logically &#34;in flight&#34;.\nThis may be actually &#34;in flight&#34; in some languages (e.g. if the exception\nis passed to a Context manager&#39;s `__exit__` method in Python) but will\nusually be caught at the point of recording the exception in most languages.\n\nIt is usually not possible to determine at the point where an exception is thrown\nwhether it will escape the scope of a span.\nHowever, it is trivial to know that an exception\nwill escape, if one checks for an active exception just before ending the span,\nas done in the [example above](#exception-end-example).\n\nIt follows that an exception may still escape the scope of the span\neven if the `exception.escaped` attribute was not set or set to false,\nsince the event might have been recorded at a time where it was not\nclear whether the exception will escape.\n  */\n  EXCEPTION_ESCAPED: 'exception.escaped',\n\n  /**\n  * Type of the trigger on which the function is executed.\n  */\n  FAAS_TRIGGER: 'faas.trigger',\n\n  /**\n  * The execution ID of the current function execution.\n  */\n  FAAS_EXECUTION: 'faas.execution',\n\n  /**\n  * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n  */\n  FAAS_DOCUMENT_COLLECTION: 'faas.document.collection',\n\n  /**\n  * Describes the type of the operation that was performed on the data.\n  */\n  FAAS_DOCUMENT_OPERATION: 'faas.document.operation',\n\n  /**\n  * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n  */\n  FAAS_DOCUMENT_TIME: 'faas.document.time',\n\n  /**\n  * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n  */\n  FAAS_DOCUMENT_NAME: 'faas.document.name',\n\n  /**\n  * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n  */\n  FAAS_TIME: 'faas.time',\n\n  /**\n  * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n  */\n  FAAS_CRON: 'faas.cron',\n\n  /**\n  * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n  */\n  FAAS_COLDSTART: 'faas.coldstart',\n\n  /**\n  * The name of the invoked function.\n  *\n  * Note: SHOULD be equal to the `faas.name` resource attribute of the invoked function.\n  */\n  FAAS_INVOKED_NAME: 'faas.invoked_name',\n\n  /**\n  * The cloud provider of the invoked function.\n  *\n  * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n  */\n  FAAS_INVOKED_PROVIDER: 'faas.invoked_provider',\n\n  /**\n  * The cloud region of the invoked function.\n  *\n  * Note: SHOULD be equal to the `cloud.region` resource attribute of the invoked function.\n  */\n  FAAS_INVOKED_REGION: 'faas.invoked_region',\n\n  /**\n  * Transport protocol used. See note below.\n  */\n  NET_TRANSPORT: 'net.transport',\n\n  /**\n  * Remote address of the peer (dotted decimal for IPv4 or [RFC5952](https://tools.ietf.org/html/rfc5952) for IPv6).\n  */\n  NET_PEER_IP: 'net.peer.ip',\n\n  /**\n  * Remote port number.\n  */\n  NET_PEER_PORT: 'net.peer.port',\n\n  /**\n  * Remote hostname or similar, see note below.\n  */\n  NET_PEER_NAME: 'net.peer.name',\n\n  /**\n  * Like `net.peer.ip` but for the host IP. Useful in case of a multi-IP host.\n  */\n  NET_HOST_IP: 'net.host.ip',\n\n  /**\n  * Like `net.peer.port` but for the host port.\n  */\n  NET_HOST_PORT: 'net.host.port',\n\n  /**\n  * Local hostname or similar, see note below.\n  */\n  NET_HOST_NAME: 'net.host.name',\n\n  /**\n  * The internet connection type currently being used by the host.\n  */\n  NET_HOST_CONNECTION_TYPE: 'net.host.connection.type',\n\n  /**\n  * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n  */\n  NET_HOST_CONNECTION_SUBTYPE: 'net.host.connection.subtype',\n\n  /**\n  * The name of the mobile carrier.\n  */\n  NET_HOST_CARRIER_NAME: 'net.host.carrier.name',\n\n  /**\n  * The mobile carrier country code.\n  */\n  NET_HOST_CARRIER_MCC: 'net.host.carrier.mcc',\n\n  /**\n  * The mobile carrier network code.\n  */\n  NET_HOST_CARRIER_MNC: 'net.host.carrier.mnc',\n\n  /**\n  * The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.\n  */\n  NET_HOST_CARRIER_ICC: 'net.host.carrier.icc',\n\n  /**\n  * The [`service.name`](../../resource/semantic_conventions/README.md#service) of the remote service. SHOULD be equal to the actual `service.name` resource attribute of the remote service if any.\n  */\n  PEER_SERVICE: 'peer.service',\n\n  /**\n  * Username or client_id extracted from the access token or [Authorization](https://tools.ietf.org/html/rfc7235#section-4.2) header in the inbound request from outside the system.\n  */\n  ENDUSER_ID: 'enduser.id',\n\n  /**\n  * Actual/assumed role the client is making the request under extracted from token or application security context.\n  */\n  ENDUSER_ROLE: 'enduser.role',\n\n  /**\n  * Scopes or granted authorities the client currently possesses extracted from token or application security context. The value would come from the scope associated with an [OAuth 2.0 Access Token](https://tools.ietf.org/html/rfc6749#section-3.3) or an attribute value in a [SAML 2.0 Assertion](https://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html).\n  */\n  ENDUSER_SCOPE: 'enduser.scope',\n\n  /**\n  * Current &#34;managed&#34; thread ID (as opposed to OS thread ID).\n  */\n  THREAD_ID: 'thread.id',\n\n  /**\n  * Current thread name.\n  */\n  THREAD_NAME: 'thread.name',\n\n  /**\n  * The method or function name, or equivalent (usually rightmost part of the code unit&#39;s name).\n  */\n  CODE_FUNCTION: 'code.function',\n\n  /**\n  * The &#34;namespace&#34; within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.\n  */\n  CODE_NAMESPACE: 'code.namespace',\n\n  /**\n  * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n  */\n  CODE_FILEPATH: 'code.filepath',\n\n  /**\n  * The line number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.\n  */\n  CODE_LINENO: 'code.lineno',\n\n  /**\n  * HTTP request method.\n  */\n  HTTP_METHOD: 'http.method',\n\n  /**\n  * Full HTTP request URL in the form `scheme://host[:port]/path?query[#fragment]`. Usually the fragment is not transmitted over HTTP, but if it is known, it should be included nevertheless.\n  *\n  * Note: `http.url` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case the attribute&#39;s value should be `https://www.example.com/`.\n  */\n  HTTP_URL: 'http.url',\n\n  /**\n  * The full request target as passed in a HTTP request line or equivalent.\n  */\n  HTTP_TARGET: 'http.target',\n\n  /**\n  * The value of the [HTTP host header](https://tools.ietf.org/html/rfc7230#section-5.4). An empty Host header should also be reported, see note.\n  *\n  * Note: When the header is present but empty the attribute SHOULD be set to the empty string. Note that this is a valid situation that is expected in certain cases, according the aforementioned [section of RFC 7230](https://tools.ietf.org/html/rfc7230#section-5.4). When the header is not set the attribute MUST NOT be set.\n  */\n  HTTP_HOST: 'http.host',\n\n  /**\n  * The URI scheme identifying the used protocol.\n  */\n  HTTP_SCHEME: 'http.scheme',\n\n  /**\n  * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n  */\n  HTTP_STATUS_CODE: 'http.status_code',\n\n  /**\n  * Kind of HTTP protocol used.\n  *\n  * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n  */\n  HTTP_FLAVOR: 'http.flavor',\n\n  /**\n  * Value of the [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) header sent by the client.\n  */\n  HTTP_USER_AGENT: 'http.user_agent',\n\n  /**\n  * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n  */\n  HTTP_REQUEST_CONTENT_LENGTH: 'http.request_content_length',\n\n  /**\n  * The size of the uncompressed request payload body after transport decoding. Not set if transport encoding not used.\n  */\n  HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED: 'http.request_content_length_uncompressed',\n\n  /**\n  * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n  */\n  HTTP_RESPONSE_CONTENT_LENGTH: 'http.response_content_length',\n\n  /**\n  * The size of the uncompressed response payload body after transport decoding. Not set if transport encoding not used.\n  */\n  HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED: 'http.response_content_length_uncompressed',\n\n  /**\n  * The primary server name of the matched virtual host. This should be obtained via configuration. If no such configuration can be obtained, this attribute MUST NOT be set ( `net.host.name` should be used instead).\n  *\n  * Note: `http.url` is usually not readily available on the server side but would have to be assembled in a cumbersome and sometimes lossy process from other information (see e.g. open-telemetry/opentelemetry-python/pull/148). It is thus preferred to supply the raw data that is available.\n  */\n  HTTP_SERVER_NAME: 'http.server_name',\n\n  /**\n  * The matched route (path template).\n  */\n  HTTP_ROUTE: 'http.route',\n\n  /**\n  * The IP address of the original client behind all proxies, if known (e.g. from [X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)).\n  *\n  * Note: This is not necessarily the same as `net.peer.ip`, which would\nidentify the network-level peer, which may be a proxy.\n\nThis attribute should be set when a source of information different\nfrom the one used for `net.peer.ip`, is available even if that other\nsource just confirms the same value as `net.peer.ip`.\nRationale: For `net.peer.ip`, one typically does not know if it\ncomes from a proxy, reverse proxy, or the actual client. Setting\n`http.client_ip` when it&#39;s the same as `net.peer.ip` means that\none is at least somewhat confident that the address is not that of\nthe closest proxy.\n  */\n  HTTP_CLIENT_IP: 'http.client_ip',\n\n  /**\n  * The keys in the `RequestItems` object field.\n  */\n  AWS_DYNAMODB_TABLE_NAMES: 'aws.dynamodb.table_names',\n\n  /**\n  * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n  */\n  AWS_DYNAMODB_CONSUMED_CAPACITY: 'aws.dynamodb.consumed_capacity',\n\n  /**\n  * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n  */\n  AWS_DYNAMODB_ITEM_COLLECTION_METRICS: 'aws.dynamodb.item_collection_metrics',\n\n  /**\n  * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n  */\n  AWS_DYNAMODB_PROVISIONED_READ_CAPACITY: 'aws.dynamodb.provisioned_read_capacity',\n\n  /**\n  * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n  */\n  AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY: 'aws.dynamodb.provisioned_write_capacity',\n\n  /**\n  * The value of the `ConsistentRead` request parameter.\n  */\n  AWS_DYNAMODB_CONSISTENT_READ: 'aws.dynamodb.consistent_read',\n\n  /**\n  * The value of the `ProjectionExpression` request parameter.\n  */\n  AWS_DYNAMODB_PROJECTION: 'aws.dynamodb.projection',\n\n  /**\n  * The value of the `Limit` request parameter.\n  */\n  AWS_DYNAMODB_LIMIT: 'aws.dynamodb.limit',\n\n  /**\n  * The value of the `AttributesToGet` request parameter.\n  */\n  AWS_DYNAMODB_ATTRIBUTES_TO_GET: 'aws.dynamodb.attributes_to_get',\n\n  /**\n  * The value of the `IndexName` request parameter.\n  */\n  AWS_DYNAMODB_INDEX_NAME: 'aws.dynamodb.index_name',\n\n  /**\n  * The value of the `Select` request parameter.\n  */\n  AWS_DYNAMODB_SELECT: 'aws.dynamodb.select',\n\n  /**\n  * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field.\n  */\n  AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES: 'aws.dynamodb.global_secondary_indexes',\n\n  /**\n  * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n  */\n  AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES: 'aws.dynamodb.local_secondary_indexes',\n\n  /**\n  * The value of the `ExclusiveStartTableName` request parameter.\n  */\n  AWS_DYNAMODB_EXCLUSIVE_START_TABLE: 'aws.dynamodb.exclusive_start_table',\n\n  /**\n  * The the number of items in the `TableNames` response parameter.\n  */\n  AWS_DYNAMODB_TABLE_COUNT: 'aws.dynamodb.table_count',\n\n  /**\n  * The value of the `ScanIndexForward` request parameter.\n  */\n  AWS_DYNAMODB_SCAN_FORWARD: 'aws.dynamodb.scan_forward',\n\n  /**\n  * The value of the `Segment` request parameter.\n  */\n  AWS_DYNAMODB_SEGMENT: 'aws.dynamodb.segment',\n\n  /**\n  * The value of the `TotalSegments` request parameter.\n  */\n  AWS_DYNAMODB_TOTAL_SEGMENTS: 'aws.dynamodb.total_segments',\n\n  /**\n  * The value of the `Count` response parameter.\n  */\n  AWS_DYNAMODB_COUNT: 'aws.dynamodb.count',\n\n  /**\n  * The value of the `ScannedCount` response parameter.\n  */\n  AWS_DYNAMODB_SCANNED_COUNT: 'aws.dynamodb.scanned_count',\n\n  /**\n  * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n  */\n  AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS: 'aws.dynamodb.attribute_definitions',\n\n  /**\n  * The JSON-serialized value of each item in the the `GlobalSecondaryIndexUpdates` request field.\n  */\n  AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES: 'aws.dynamodb.global_secondary_index_updates',\n\n  /**\n  * A string identifying the messaging system.\n  */\n  MESSAGING_SYSTEM: 'messaging.system',\n\n  /**\n  * The message destination name. This might be equal to the span name but is required nevertheless.\n  */\n  MESSAGING_DESTINATION: 'messaging.destination',\n\n  /**\n  * The kind of message destination.\n  */\n  MESSAGING_DESTINATION_KIND: 'messaging.destination_kind',\n\n  /**\n  * A boolean that is true if the message destination is temporary.\n  */\n  MESSAGING_TEMP_DESTINATION: 'messaging.temp_destination',\n\n  /**\n  * The name of the transport protocol.\n  */\n  MESSAGING_PROTOCOL: 'messaging.protocol',\n\n  /**\n  * The version of the transport protocol.\n  */\n  MESSAGING_PROTOCOL_VERSION: 'messaging.protocol_version',\n\n  /**\n  * Connection string.\n  */\n  MESSAGING_URL: 'messaging.url',\n\n  /**\n  * A value used by the messaging system as an identifier for the message, represented as a string.\n  */\n  MESSAGING_MESSAGE_ID: 'messaging.message_id',\n\n  /**\n  * The [conversation ID](#conversations) identifying the conversation to which the message belongs, represented as a string. Sometimes called &#34;Correlation ID&#34;.\n  */\n  MESSAGING_CONVERSATION_ID: 'messaging.conversation_id',\n\n  /**\n  * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is unknown whether the compressed or uncompressed payload size is reported.\n  */\n  MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES: 'messaging.message_payload_size_bytes',\n\n  /**\n  * The compressed size of the message payload in bytes.\n  */\n  MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES: 'messaging.message_payload_compressed_size_bytes',\n\n  /**\n  * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n  */\n  MESSAGING_OPERATION: 'messaging.operation',\n\n  /**\n  * The identifier for the consumer receiving a message. For Kafka, set it to `{messaging.kafka.consumer_group} - {messaging.kafka.client_id}`, if both are present, or only `messaging.kafka.consumer_group`. For brokers, such as RabbitMQ and Artemis, set it to the `client_id` of the client consuming the message.\n  */\n  MESSAGING_CONSUMER_ID: 'messaging.consumer_id',\n\n  /**\n  * RabbitMQ message routing key.\n  */\n  MESSAGING_RABBITMQ_ROUTING_KEY: 'messaging.rabbitmq.routing_key',\n\n  /**\n  * Message keys in Kafka are used for grouping alike messages to ensure they&#39;re processed on the same partition. They differ from `messaging.message_id` in that they&#39;re not unique. If the key is `null`, the attribute MUST NOT be set.\n  *\n  * Note: If the key type is not string, it&#39;s string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don&#39;t include its value.\n  */\n  MESSAGING_KAFKA_MESSAGE_KEY: 'messaging.kafka.message_key',\n\n  /**\n  * Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.\n  */\n  MESSAGING_KAFKA_CONSUMER_GROUP: 'messaging.kafka.consumer_group',\n\n  /**\n  * Client Id for the Consumer or Producer that is handling the message.\n  */\n  MESSAGING_KAFKA_CLIENT_ID: 'messaging.kafka.client_id',\n\n  /**\n  * Partition the message is sent to.\n  */\n  MESSAGING_KAFKA_PARTITION: 'messaging.kafka.partition',\n\n  /**\n  * A boolean that is true if the message is a tombstone.\n  */\n  MESSAGING_KAFKA_TOMBSTONE: 'messaging.kafka.tombstone',\n\n  /**\n  * A string identifying the remoting system.\n  */\n  RPC_SYSTEM: 'rpc.system',\n\n  /**\n  * The full (logical) name of the service being called, including its package name, if applicable.\n  *\n  * Note: This is the logical name of the service from the RPC interface perspective, which can be different from the name of any implementing class. The `code.namespace` attribute may be used to store the latter (despite the attribute name, it may include a class name; e.g., class with method actually executing the call on the server side, RPC client stub class on the client side).\n  */\n  RPC_SERVICE: 'rpc.service',\n\n  /**\n  * The name of the (logical) method being called, must be equal to the $method part in the span name.\n  *\n  * Note: This is the logical name of the method from the RPC interface perspective, which can be different from the name of any implementing method/function. The `code.function` attribute may be used to store the latter (e.g., method actually executing the call on the server side, RPC client stub method on the client side).\n  */\n  RPC_METHOD: 'rpc.method',\n\n  /**\n  * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n  */\n  RPC_GRPC_STATUS_CODE: 'rpc.grpc.status_code',\n\n  /**\n  * Protocol version as in `jsonrpc` property of request/response. Since JSON-RPC 1.0 does not specify this, the value can be omitted.\n  */\n  RPC_JSONRPC_VERSION: 'rpc.jsonrpc.version',\n\n  /**\n  * `id` property of request or response. Since protocol allows id to be int, string, `null` or missing (for notifications), value is expected to be cast to string for simplicity. Use empty string in case of `null` value. Omit entirely if this is a notification.\n  */\n  RPC_JSONRPC_REQUEST_ID: 'rpc.jsonrpc.request_id',\n\n  /**\n  * `error.code` property of response if it is an error response.\n  */\n  RPC_JSONRPC_ERROR_CODE: 'rpc.jsonrpc.error_code',\n\n  /**\n  * `error.message` property of response if it is an error response.\n  */\n  RPC_JSONRPC_ERROR_MESSAGE: 'rpc.jsonrpc.error_message',\n\n  /**\n  * Whether this is a received or sent message.\n  */\n  MESSAGE_TYPE: 'message.type',\n\n  /**\n  * MUST be calculated as two different counters starting from `1` one for sent messages and one for received message.\n  *\n  * Note: This way we guarantee that the values will be consistent between different implementations.\n  */\n  MESSAGE_ID: 'message.id',\n\n  /**\n  * Compressed size of the message in bytes.\n  */\n  MESSAGE_COMPRESSED_SIZE: 'message.compressed_size',\n\n  /**\n  * Uncompressed size of the message in bytes.\n  */\n  MESSAGE_UNCOMPRESSED_SIZE: 'message.uncompressed_size',\n};\n\n\nexport const DbSystemValues = {\n  /** Some other SQL database. Fallback only. See notes. */\n  OTHER_SQL: 'other_sql',\n  /** Microsoft SQL Server. */\n  MSSQL: 'mssql',\n  /** MySQL. */\n  MYSQL: 'mysql',\n  /** Oracle Database. */\n  ORACLE: 'oracle',\n  /** IBM Db2. */\n  DB2: 'db2',\n  /** PostgreSQL. */\n  POSTGRESQL: 'postgresql',\n  /** Amazon Redshift. */\n  REDSHIFT: 'redshift',\n  /** Apache Hive. */\n  HIVE: 'hive',\n  /** Cloudscape. */\n  CLOUDSCAPE: 'cloudscape',\n  /** HyperSQL DataBase. */\n  HSQLDB: 'hsqldb',\n  /** Progress Database. */\n  PROGRESS: 'progress',\n  /** SAP MaxDB. */\n  MAXDB: 'maxdb',\n  /** SAP HANA. */\n  HANADB: 'hanadb',\n  /** Ingres. */\n  INGRES: 'ingres',\n  /** FirstSQL. */\n  FIRSTSQL: 'firstsql',\n  /** EnterpriseDB. */\n  EDB: 'edb',\n  /** InterSystems Caché. */\n  CACHE: 'cache',\n  /** Adabas (Adaptable Database System). */\n  ADABAS: 'adabas',\n  /** Firebird. */\n  FIREBIRD: 'firebird',\n  /** Apache Derby. */\n  DERBY: 'derby',\n  /** FileMaker. */\n  FILEMAKER: 'filemaker',\n  /** Informix. */\n  INFORMIX: 'informix',\n  /** InstantDB. */\n  INSTANTDB: 'instantdb',\n  /** InterBase. */\n  INTERBASE: 'interbase',\n  /** MariaDB. */\n  MARIADB: 'mariadb',\n  /** Netezza. */\n  NETEZZA: 'netezza',\n  /** Pervasive PSQL. */\n  PERVASIVE: 'pervasive',\n  /** PointBase. */\n  POINTBASE: 'pointbase',\n  /** SQLite. */\n  SQLITE: 'sqlite',\n  /** Sybase. */\n  SYBASE: 'sybase',\n  /** Teradata. */\n  TERADATA: 'teradata',\n  /** Vertica. */\n  VERTICA: 'vertica',\n  /** H2. */\n  H2: 'h2',\n  /** ColdFusion IMQ. */\n  COLDFUSION: 'coldfusion',\n  /** Apache Cassandra. */\n  CASSANDRA: 'cassandra',\n  /** Apache HBase. */\n  HBASE: 'hbase',\n  /** MongoDB. */\n  MONGODB: 'mongodb',\n  /** Redis. */\n  REDIS: 'redis',\n  /** Couchbase. */\n  COUCHBASE: 'couchbase',\n  /** CouchDB. */\n  COUCHDB: 'couchdb',\n  /** Microsoft Azure Cosmos DB. */\n  COSMOSDB: 'cosmosdb',\n  /** Amazon DynamoDB. */\n  DYNAMODB: 'dynamodb',\n  /** Neo4j. */\n  NEO4J: 'neo4j',\n  /** Apache Geode. */\n  GEODE: 'geode',\n  /** Elasticsearch. */\n  ELASTICSEARCH: 'elasticsearch',\n  /** Memcached. */\n  MEMCACHED: 'memcached',\n  /** CockroachDB. */\n  COCKROACHDB: 'cockroachdb',\n} as const;\nexport type DbSystemValues = typeof DbSystemValues[keyof typeof DbSystemValues];\n\n\n\n\nexport const DbCassandraConsistencyLevelValues = {\n  /** all. */\n  ALL: 'all',\n  /** each_quorum. */\n  EACH_QUORUM: 'each_quorum',\n  /** quorum. */\n  QUORUM: 'quorum',\n  /** local_quorum. */\n  LOCAL_QUORUM: 'local_quorum',\n  /** one. */\n  ONE: 'one',\n  /** two. */\n  TWO: 'two',\n  /** three. */\n  THREE: 'three',\n  /** local_one. */\n  LOCAL_ONE: 'local_one',\n  /** any. */\n  ANY: 'any',\n  /** serial. */\n  SERIAL: 'serial',\n  /** local_serial. */\n  LOCAL_SERIAL: 'local_serial',\n} as const;\nexport type DbCassandraConsistencyLevelValues = typeof DbCassandraConsistencyLevelValues[keyof typeof DbCassandraConsistencyLevelValues];\n\n\n\n\nexport const FaasTriggerValues = {\n  /** A response to some data source operation such as a database or filesystem read/write. */\n  DATASOURCE: 'datasource',\n  /** To provide an answer to an inbound HTTP request. */\n  HTTP: 'http',\n  /** A function is set to be executed when messages are sent to a messaging system. */\n  PUBSUB: 'pubsub',\n  /** A function is scheduled to be executed regularly. */\n  TIMER: 'timer',\n  /** If none of the others apply. */\n  OTHER: 'other',\n} as const;\nexport type FaasTriggerValues = typeof FaasTriggerValues[keyof typeof FaasTriggerValues];\n\n\n\n\nexport const FaasDocumentOperationValues = {\n  /** When a new object is created. */\n  INSERT: 'insert',\n  /** When an object is modified. */\n  EDIT: 'edit',\n  /** When an object is deleted. */\n  DELETE: 'delete',\n} as const;\nexport type FaasDocumentOperationValues = typeof FaasDocumentOperationValues[keyof typeof FaasDocumentOperationValues];\n\n\n\n\nexport const FaasInvokedProviderValues = {\n  /** Alibaba Cloud. */\n  ALIBABA_CLOUD: 'alibaba_cloud',\n  /** Amazon Web Services. */\n  AWS: 'aws',\n  /** Microsoft Azure. */\n  AZURE: 'azure',\n  /** Google Cloud Platform. */\n  GCP: 'gcp',\n} as const;\nexport type FaasInvokedProviderValues = typeof FaasInvokedProviderValues[keyof typeof FaasInvokedProviderValues];\n\n\n\n\nexport const NetTransportValues = {\n  /** ip_tcp. */\n  IP_TCP: 'ip_tcp',\n  /** ip_udp. */\n  IP_UDP: 'ip_udp',\n  /** Another IP-based protocol. */\n  IP: 'ip',\n  /** Unix Domain socket. See below. */\n  UNIX: 'unix',\n  /** Named or anonymous pipe. See note below. */\n  PIPE: 'pipe',\n  /** In-process communication. */\n  INPROC: 'inproc',\n  /** Something else (non IP-based). */\n  OTHER: 'other',\n} as const;\nexport type NetTransportValues = typeof NetTransportValues[keyof typeof NetTransportValues];\n\n\n\n\nexport const NetHostConnectionTypeValues = {\n  /** wifi. */\n  WIFI: 'wifi',\n  /** wired. */\n  WIRED: 'wired',\n  /** cell. */\n  CELL: 'cell',\n  /** unavailable. */\n  UNAVAILABLE: 'unavailable',\n  /** unknown. */\n  UNKNOWN: 'unknown',\n} as const;\nexport type NetHostConnectionTypeValues = typeof NetHostConnectionTypeValues[keyof typeof NetHostConnectionTypeValues];\n\n\n\n\nexport const NetHostConnectionSubtypeValues = {\n  /** GPRS. */\n  GPRS: 'gprs',\n  /** EDGE. */\n  EDGE: 'edge',\n  /** UMTS. */\n  UMTS: 'umts',\n  /** CDMA. */\n  CDMA: 'cdma',\n  /** EVDO Rel. 0. */\n  EVDO_0: 'evdo_0',\n  /** EVDO Rev. A. */\n  EVDO_A: 'evdo_a',\n  /** CDMA2000 1XRTT. */\n  CDMA2000_1XRTT: 'cdma2000_1xrtt',\n  /** HSDPA. */\n  HSDPA: 'hsdpa',\n  /** HSUPA. */\n  HSUPA: 'hsupa',\n  /** HSPA. */\n  HSPA: 'hspa',\n  /** IDEN. */\n  IDEN: 'iden',\n  /** EVDO Rev. B. */\n  EVDO_B: 'evdo_b',\n  /** LTE. */\n  LTE: 'lte',\n  /** EHRPD. */\n  EHRPD: 'ehrpd',\n  /** HSPAP. */\n  HSPAP: 'hspap',\n  /** GSM. */\n  GSM: 'gsm',\n  /** TD-SCDMA. */\n  TD_SCDMA: 'td_scdma',\n  /** IWLAN. */\n  IWLAN: 'iwlan',\n  /** 5G NR (New Radio). */\n  NR: 'nr',\n  /** 5G NRNSA (New Radio Non-Standalone). */\n  NRNSA: 'nrnsa',\n  /** LTE CA. */\n  LTE_CA: 'lte_ca',\n} as const;\nexport type NetHostConnectionSubtypeValues = typeof NetHostConnectionSubtypeValues[keyof typeof NetHostConnectionSubtypeValues];\n\n\n\n\nexport const HttpFlavorValues = {\n  /** HTTP 1.0. */\n  HTTP_1_0: '1.0',\n  /** HTTP 1.1. */\n  HTTP_1_1: '1.1',\n  /** HTTP 2. */\n  HTTP_2_0: '2.0',\n  /** SPDY protocol. */\n  SPDY: 'SPDY',\n  /** QUIC protocol. */\n  QUIC: 'QUIC',\n} as const;\nexport type HttpFlavorValues = typeof HttpFlavorValues[keyof typeof HttpFlavorValues];\n\n\n\n\nexport const MessagingDestinationKindValues = {\n  /** A message sent to a queue. */\n  QUEUE: 'queue',\n  /** A message sent to a topic. */\n  TOPIC: 'topic',\n} as const;\nexport type MessagingDestinationKindValues = typeof MessagingDestinationKindValues[keyof typeof MessagingDestinationKindValues];\n\n\n\n\nexport const MessagingOperationValues = {\n  /** receive. */\n  RECEIVE: 'receive',\n  /** process. */\n  PROCESS: 'process',\n} as const;\nexport type MessagingOperationValues = typeof MessagingOperationValues[keyof typeof MessagingOperationValues];\n\n\n\n\nexport const RpcGrpcStatusCodeValues = {\n  /** OK. */\n  OK: 0,\n  /** CANCELLED. */\n  CANCELLED: 1,\n  /** UNKNOWN. */\n  UNKNOWN: 2,\n  /** INVALID_ARGUMENT. */\n  INVALID_ARGUMENT: 3,\n  /** DEADLINE_EXCEEDED. */\n  DEADLINE_EXCEEDED: 4,\n  /** NOT_FOUND. */\n  NOT_FOUND: 5,\n  /** ALREADY_EXISTS. */\n  ALREADY_EXISTS: 6,\n  /** PERMISSION_DENIED. */\n  PERMISSION_DENIED: 7,\n  /** RESOURCE_EXHAUSTED. */\n  RESOURCE_EXHAUSTED: 8,\n  /** FAILED_PRECONDITION. */\n  FAILED_PRECONDITION: 9,\n  /** ABORTED. */\n  ABORTED: 10,\n  /** OUT_OF_RANGE. */\n  OUT_OF_RANGE: 11,\n  /** UNIMPLEMENTED. */\n  UNIMPLEMENTED: 12,\n  /** INTERNAL. */\n  INTERNAL: 13,\n  /** UNAVAILABLE. */\n  UNAVAILABLE: 14,\n  /** DATA_LOSS. */\n  DATA_LOSS: 15,\n  /** UNAUTHENTICATED. */\n  UNAUTHENTICATED: 16,\n} as const;\nexport type RpcGrpcStatusCodeValues = typeof RpcGrpcStatusCodeValues[keyof typeof RpcGrpcStatusCodeValues];\n\n\n\n\nexport const MessageTypeValues = {\n  /** sent. */\n  SENT: 'SENT',\n  /** received. */\n  RECEIVED: 'RECEIVED',\n} as const;\nexport type MessageTypeValues = typeof MessageTypeValues[keyof typeof MessageTypeValues];\n\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './SemanticResourceAttributes';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexport const SemanticResourceAttributes = {\n\n  /**\n  * Name of the cloud provider.\n  */\n  CLOUD_PROVIDER: 'cloud.provider',\n\n  /**\n  * The cloud account ID the resource is assigned to.\n  */\n  CLOUD_ACCOUNT_ID: 'cloud.account.id',\n\n  /**\n  * The geographical region the resource is running. Refer to your provider&#39;s docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/en-us/global-infrastructure/geographies/), or [Google Cloud regions](https://cloud.google.com/about/locations).\n  */\n  CLOUD_REGION: 'cloud.region',\n\n  /**\n  * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n  *\n  * Note: Availability zones are called &#34;zones&#34; on Alibaba Cloud and Google Cloud.\n  */\n  CLOUD_AVAILABILITY_ZONE: 'cloud.availability_zone',\n\n  /**\n  * The cloud platform in use.\n  *\n  * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n  */\n  CLOUD_PLATFORM: 'cloud.platform',\n\n  /**\n  * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n  */\n  AWS_ECS_CONTAINER_ARN: 'aws.ecs.container.arn',\n\n  /**\n  * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n  */\n  AWS_ECS_CLUSTER_ARN: 'aws.ecs.cluster.arn',\n\n  /**\n  * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n  */\n  AWS_ECS_LAUNCHTYPE: 'aws.ecs.launchtype',\n\n  /**\n  * The ARN of an [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html).\n  */\n  AWS_ECS_TASK_ARN: 'aws.ecs.task.arn',\n\n  /**\n  * The task definition family this task definition is a member of.\n  */\n  AWS_ECS_TASK_FAMILY: 'aws.ecs.task.family',\n\n  /**\n  * The revision for this task definition.\n  */\n  AWS_ECS_TASK_REVISION: 'aws.ecs.task.revision',\n\n  /**\n  * The ARN of an EKS cluster.\n  */\n  AWS_EKS_CLUSTER_ARN: 'aws.eks.cluster.arn',\n\n  /**\n  * The name(s) of the AWS log group(s) an application is writing to.\n  *\n  * Note: Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n  */\n  AWS_LOG_GROUP_NAMES: 'aws.log.group.names',\n\n  /**\n  * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n  *\n  * Note: See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n  */\n  AWS_LOG_GROUP_ARNS: 'aws.log.group.arns',\n\n  /**\n  * The name(s) of the AWS log stream(s) an application is writing to.\n  */\n  AWS_LOG_STREAM_NAMES: 'aws.log.stream.names',\n\n  /**\n  * The ARN(s) of the AWS log stream(s).\n  *\n  * Note: See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n  */\n  AWS_LOG_STREAM_ARNS: 'aws.log.stream.arns',\n\n  /**\n  * Container name.\n  */\n  CONTAINER_NAME: 'container.name',\n\n  /**\n  * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/reference/run/#container-identification). The UUID might be abbreviated.\n  */\n  CONTAINER_ID: 'container.id',\n\n  /**\n  * The container runtime managing this container.\n  */\n  CONTAINER_RUNTIME: 'container.runtime',\n\n  /**\n  * Name of the image the container was built on.\n  */\n  CONTAINER_IMAGE_NAME: 'container.image.name',\n\n  /**\n  * Container image tag.\n  */\n  CONTAINER_IMAGE_TAG: 'container.image.tag',\n\n  /**\n  * Name of the [deployment environment](https://en.wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n  */\n  DEPLOYMENT_ENVIRONMENT: 'deployment.environment',\n\n  /**\n  * A unique identifier representing the device.\n  *\n  * Note: The device identifier MUST only be defined using the values outlined below. This value is not an advertising identifier and MUST NOT be used as such. On iOS (Swift or Objective-C), this value MUST be equal to the [vendor identifier](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android (Java or Kotlin), this value MUST be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application. More information can be found [here](https://developer.android.com/training/articles/user-data-ids) on best practices and exact implementation details. Caution should be taken when storing personal data or anything which can identify a user. GDPR and data protection laws may apply, ensure you do your own due diligence.\n  */\n  DEVICE_ID: 'device.id',\n\n  /**\n  * The model identifier for the device.\n  *\n  * Note: It&#39;s recommended this value represents a machine readable version of the model identifier rather than the market or consumer-friendly name of the device.\n  */\n  DEVICE_MODEL_IDENTIFIER: 'device.model.identifier',\n\n  /**\n  * The marketing name for the device model.\n  *\n  * Note: It&#39;s recommended this value represents a human readable version of the device model rather than a machine readable alternative.\n  */\n  DEVICE_MODEL_NAME: 'device.model.name',\n\n  /**\n  * The name of the single function that this runtime instance executes.\n  *\n  * Note: This is the name of the function as configured/deployed on the FaaS platform and is usually different from the name of the callback function (which may be stored in the [`code.namespace`/`code.function`](../../trace/semantic_conventions/span-general.md#source-code-attributes) span attributes).\n  */\n  FAAS_NAME: 'faas.name',\n\n  /**\n  * The unique ID of the single function that this runtime instance executes.\n  *\n  * Note: Depending on the cloud provider, use:\n\n* **AWS Lambda:** The function [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).\nTake care not to use the &#34;invoked ARN&#34; directly but replace any\n[alias suffix](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html) with the resolved function version, as the same runtime instance may be invokable with multiple\ndifferent aliases.\n* **GCP:** The [URI of the resource](https://cloud.google.com/iam/docs/full-resource-names)\n* **Azure:** The [Fully Qualified Resource ID](https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id).\n\nOn some providers, it may not be possible to determine the full ID at startup,\nwhich is why this field cannot be made required. For example, on AWS the account ID\npart of the ARN is not available without calling another AWS API\nwhich may be deemed too slow for a short-running lambda function.\nAs an alternative, consider setting `faas.id` as a span attribute instead.\n  */\n  FAAS_ID: 'faas.id',\n\n  /**\n  * The immutable version of the function being executed.\n  *\n  * Note: Depending on the cloud provider and platform, use:\n\n* **AWS Lambda:** The [function version](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)\n  (an integer represented as a decimal string).\n* **Google Cloud Run:** The [revision](https://cloud.google.com/run/docs/managing/revisions)\n  (i.e., the function name plus the revision suffix).\n* **Google Cloud Functions:** The value of the\n  [`K_REVISION` environment variable](https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically).\n* **Azure Functions:** Not applicable. Do not set this attribute.\n  */\n  FAAS_VERSION: 'faas.version',\n\n  /**\n  * The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.\n  *\n  * Note: * **AWS Lambda:** Use the (full) log stream name.\n  */\n  FAAS_INSTANCE: 'faas.instance',\n\n  /**\n  * The amount of memory available to the serverless function in MiB.\n  *\n  * Note: It&#39;s recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information.\n  */\n  FAAS_MAX_MEMORY: 'faas.max_memory',\n\n  /**\n  * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider.\n  */\n  HOST_ID: 'host.id',\n\n  /**\n  * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n  */\n  HOST_NAME: 'host.name',\n\n  /**\n  * Type of host. For Cloud, this must be the machine type.\n  */\n  HOST_TYPE: 'host.type',\n\n  /**\n  * The CPU architecture the host system is running on.\n  */\n  HOST_ARCH: 'host.arch',\n\n  /**\n  * Name of the VM image or OS install the host was instantiated from.\n  */\n  HOST_IMAGE_NAME: 'host.image.name',\n\n  /**\n  * VM image ID. For Cloud, this value is from the provider.\n  */\n  HOST_IMAGE_ID: 'host.image.id',\n\n  /**\n  * The version string of the VM image as defined in [Version SpanAttributes](README.md#version-attributes).\n  */\n  HOST_IMAGE_VERSION: 'host.image.version',\n\n  /**\n  * The name of the cluster.\n  */\n  K8S_CLUSTER_NAME: 'k8s.cluster.name',\n\n  /**\n  * The name of the Node.\n  */\n  K8S_NODE_NAME: 'k8s.node.name',\n\n  /**\n  * The UID of the Node.\n  */\n  K8S_NODE_UID: 'k8s.node.uid',\n\n  /**\n  * The name of the namespace that the pod is running in.\n  */\n  K8S_NAMESPACE_NAME: 'k8s.namespace.name',\n\n  /**\n  * The UID of the Pod.\n  */\n  K8S_POD_UID: 'k8s.pod.uid',\n\n  /**\n  * The name of the Pod.\n  */\n  K8S_POD_NAME: 'k8s.pod.name',\n\n  /**\n  * The name of the Container in a Pod template.\n  */\n  K8S_CONTAINER_NAME: 'k8s.container.name',\n\n  /**\n  * The UID of the ReplicaSet.\n  */\n  K8S_REPLICASET_UID: 'k8s.replicaset.uid',\n\n  /**\n  * The name of the ReplicaSet.\n  */\n  K8S_REPLICASET_NAME: 'k8s.replicaset.name',\n\n  /**\n  * The UID of the Deployment.\n  */\n  K8S_DEPLOYMENT_UID: 'k8s.deployment.uid',\n\n  /**\n  * The name of the Deployment.\n  */\n  K8S_DEPLOYMENT_NAME: 'k8s.deployment.name',\n\n  /**\n  * The UID of the StatefulSet.\n  */\n  K8S_STATEFULSET_UID: 'k8s.statefulset.uid',\n\n  /**\n  * The name of the StatefulSet.\n  */\n  K8S_STATEFULSET_NAME: 'k8s.statefulset.name',\n\n  /**\n  * The UID of the DaemonSet.\n  */\n  K8S_DAEMONSET_UID: 'k8s.daemonset.uid',\n\n  /**\n  * The name of the DaemonSet.\n  */\n  K8S_DAEMONSET_NAME: 'k8s.daemonset.name',\n\n  /**\n  * The UID of the Job.\n  */\n  K8S_JOB_UID: 'k8s.job.uid',\n\n  /**\n  * The name of the Job.\n  */\n  K8S_JOB_NAME: 'k8s.job.name',\n\n  /**\n  * The UID of the CronJob.\n  */\n  K8S_CRONJOB_UID: 'k8s.cronjob.uid',\n\n  /**\n  * The name of the CronJob.\n  */\n  K8S_CRONJOB_NAME: 'k8s.cronjob.name',\n\n  /**\n  * The operating system type.\n  */\n  OS_TYPE: 'os.type',\n\n  /**\n  * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n  */\n  OS_DESCRIPTION: 'os.description',\n\n  /**\n  * Human readable operating system name.\n  */\n  OS_NAME: 'os.name',\n\n  /**\n  * The version string of the operating system as defined in [Version SpanAttributes](../../resource/semantic_conventions/README.md#version-attributes).\n  */\n  OS_VERSION: 'os.version',\n\n  /**\n  * Process identifier (PID).\n  */\n  PROCESS_PID: 'process.pid',\n\n  /**\n  * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n  */\n  PROCESS_EXECUTABLE_NAME: 'process.executable.name',\n\n  /**\n  * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n  */\n  PROCESS_EXECUTABLE_PATH: 'process.executable.path',\n\n  /**\n  * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n  */\n  PROCESS_COMMAND: 'process.command',\n\n  /**\n  * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n  */\n  PROCESS_COMMAND_LINE: 'process.command_line',\n\n  /**\n  * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n  */\n  PROCESS_COMMAND_ARGS: 'process.command_args',\n\n  /**\n  * The username of the user that owns the process.\n  */\n  PROCESS_OWNER: 'process.owner',\n\n  /**\n  * The name of the runtime of this process. For compiled native binaries, this SHOULD be the name of the compiler.\n  */\n  PROCESS_RUNTIME_NAME: 'process.runtime.name',\n\n  /**\n  * The version of the runtime of this process, as returned by the runtime without modification.\n  */\n  PROCESS_RUNTIME_VERSION: 'process.runtime.version',\n\n  /**\n  * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n  */\n  PROCESS_RUNTIME_DESCRIPTION: 'process.runtime.description',\n\n  /**\n  * Logical name of the service.\n  *\n  * Note: MUST be the same for all instances of horizontally scaled services. If the value was not specified, SDKs MUST fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md#process), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value MUST be set to `unknown_service`.\n  */\n  SERVICE_NAME: 'service.name',\n\n  /**\n  * A namespace for `service.name`.\n  *\n  * Note: A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n  */\n  SERVICE_NAMESPACE: 'service.namespace',\n\n  /**\n  * The string ID of the service instance.\n  *\n  * Note: MUST be unique for each instance of the same `service.namespace,service.name` pair (in other words `service.namespace,service.name,service.instance.id` triplet MUST be globally unique). The ID helps to distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled service). It is preferable for the ID to be persistent and stay the same for the lifetime of the service instance, however it is acceptable that the ID is ephemeral and changes during important lifetime events for the service (e.g. service restarts). If the service has no inherent unique ID that can be used as the value of this attribute it is recommended to generate a random Version 1 or Version 4 RFC 4122 UUID (services aiming for reproducible UUIDs may also use Version 5, see RFC 4122 for more recommendations).\n  */\n  SERVICE_INSTANCE_ID: 'service.instance.id',\n\n  /**\n  * The version string of the service API or implementation.\n  */\n  SERVICE_VERSION: 'service.version',\n\n  /**\n  * The name of the telemetry SDK as defined above.\n  */\n  TELEMETRY_SDK_NAME: 'telemetry.sdk.name',\n\n  /**\n  * The language of the telemetry SDK.\n  */\n  TELEMETRY_SDK_LANGUAGE: 'telemetry.sdk.language',\n\n  /**\n  * The version string of the telemetry SDK.\n  */\n  TELEMETRY_SDK_VERSION: 'telemetry.sdk.version',\n\n  /**\n  * The version string of the auto instrumentation agent, if used.\n  */\n  TELEMETRY_AUTO_VERSION: 'telemetry.auto.version',\n\n  /**\n  * The name of the web engine.\n  */\n  WEBENGINE_NAME: 'webengine.name',\n\n  /**\n  * The version of the web engine.\n  */\n  WEBENGINE_VERSION: 'webengine.version',\n\n  /**\n  * Additional description of the web engine (e.g. detailed version and edition information).\n  */\n  WEBENGINE_DESCRIPTION: 'webengine.description',\n};\n\n\nexport const CloudProviderValues = {\n  /** Alibaba Cloud. */\n  ALIBABA_CLOUD: 'alibaba_cloud',\n  /** Amazon Web Services. */\n  AWS: 'aws',\n  /** Microsoft Azure. */\n  AZURE: 'azure',\n  /** Google Cloud Platform. */\n  GCP: 'gcp',\n} as const;\nexport type CloudProviderValues = typeof CloudProviderValues[keyof typeof CloudProviderValues];\n\n\n\n\nexport const CloudPlatformValues = {\n  /** Alibaba Cloud Elastic Compute Service. */\n  ALIBABA_CLOUD_ECS: 'alibaba_cloud_ecs',\n  /** Alibaba Cloud Function Compute. */\n  ALIBABA_CLOUD_FC: 'alibaba_cloud_fc',\n  /** AWS Elastic Compute Cloud. */\n  AWS_EC2: 'aws_ec2',\n  /** AWS Elastic Container Service. */\n  AWS_ECS: 'aws_ecs',\n  /** AWS Elastic Kubernetes Service. */\n  AWS_EKS: 'aws_eks',\n  /** AWS Lambda. */\n  AWS_LAMBDA: 'aws_lambda',\n  /** AWS Elastic Beanstalk. */\n  AWS_ELASTIC_BEANSTALK: 'aws_elastic_beanstalk',\n  /** Azure Virtual Machines. */\n  AZURE_VM: 'azure_vm',\n  /** Azure Container Instances. */\n  AZURE_CONTAINER_INSTANCES: 'azure_container_instances',\n  /** Azure Kubernetes Service. */\n  AZURE_AKS: 'azure_aks',\n  /** Azure Functions. */\n  AZURE_FUNCTIONS: 'azure_functions',\n  /** Azure App Service. */\n  AZURE_APP_SERVICE: 'azure_app_service',\n  /** Google Cloud Compute Engine (GCE). */\n  GCP_COMPUTE_ENGINE: 'gcp_compute_engine',\n  /** Google Cloud Run. */\n  GCP_CLOUD_RUN: 'gcp_cloud_run',\n  /** Google Cloud Kubernetes Engine (GKE). */\n  GCP_KUBERNETES_ENGINE: 'gcp_kubernetes_engine',\n  /** Google Cloud Functions (GCF). */\n  GCP_CLOUD_FUNCTIONS: 'gcp_cloud_functions',\n  /** Google Cloud App Engine (GAE). */\n  GCP_APP_ENGINE: 'gcp_app_engine',\n} as const;\nexport type CloudPlatformValues = typeof CloudPlatformValues[keyof typeof CloudPlatformValues];\n\n\n\n\nexport const AwsEcsLaunchtypeValues = {\n  /** ec2. */\n  EC2: 'ec2',\n  /** fargate. */\n  FARGATE: 'fargate',\n} as const;\nexport type AwsEcsLaunchtypeValues = typeof AwsEcsLaunchtypeValues[keyof typeof AwsEcsLaunchtypeValues];\n\n\n\n\nexport const HostArchValues = {\n  /** AMD64. */\n  AMD64: 'amd64',\n  /** ARM32. */\n  ARM32: 'arm32',\n  /** ARM64. */\n  ARM64: 'arm64',\n  /** Itanium. */\n  IA64: 'ia64',\n  /** 32-bit PowerPC. */\n  PPC32: 'ppc32',\n  /** 64-bit PowerPC. */\n  PPC64: 'ppc64',\n  /** 32-bit x86. */\n  X86: 'x86',\n} as const;\nexport type HostArchValues = typeof HostArchValues[keyof typeof HostArchValues];\n\n\n\n\nexport const OsTypeValues = {\n  /** Microsoft Windows. */\n  WINDOWS: 'windows',\n  /** Linux. */\n  LINUX: 'linux',\n  /** Apple Darwin. */\n  DARWIN: 'darwin',\n  /** FreeBSD. */\n  FREEBSD: 'freebsd',\n  /** NetBSD. */\n  NETBSD: 'netbsd',\n  /** OpenBSD. */\n  OPENBSD: 'openbsd',\n  /** DragonFly BSD. */\n  DRAGONFLYBSD: 'dragonflybsd',\n  /** HP-UX (Hewlett Packard Unix). */\n  HPUX: 'hpux',\n  /** AIX (Advanced Interactive eXecutive). */\n  AIX: 'aix',\n  /** Oracle Solaris. */\n  SOLARIS: 'solaris',\n  /** IBM z/OS. */\n  Z_OS: 'z_os',\n} as const;\nexport type OsTypeValues = typeof OsTypeValues[keyof typeof OsTypeValues];\n\n\n\n\nexport const TelemetrySdkLanguageValues = {\n  /** cpp. */\n  CPP: 'cpp',\n  /** dotnet. */\n  DOTNET: 'dotnet',\n  /** erlang. */\n  ERLANG: 'erlang',\n  /** go. */\n  GO: 'go',\n  /** java. */\n  JAVA: 'java',\n  /** nodejs. */\n  NODEJS: 'nodejs',\n  /** php. */\n  PHP: 'php',\n  /** python. */\n  PYTHON: 'python',\n  /** ruby. */\n  RUBY: 'ruby',\n  /** webjs. */\n  WEBJS: 'webjs',\n} as const;\nexport type TelemetrySdkLanguageValues = typeof TelemetrySdkLanguageValues[keyof typeof TelemetrySdkLanguageValues];\n\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function unrefTimer(_timer: number): void {}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Exception } from '@opentelemetry/api';\n\n/**\n * This interface defines a fallback to read a timeOrigin when it is not available on performance.timeOrigin,\n * this happens for example on Safari Mac\n * then the timeOrigin is taken from fetchStart - which is the closest to timeOrigin\n */\nexport interface TimeOriginLegacy {\n  timing: {\n    fetchStart: number;\n  };\n}\n\n/**\n * This interface defines the params that are be added to the wrapped function\n * using the \"shimmer.wrap\"\n */\nexport interface ShimWrapped extends Function {\n  __wrapped: boolean;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  __unwrap: Function;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  __original: Function;\n}\n\n/**\n * An instrumentation library consists of the name and optional version\n * used to obtain a tracer or meter from a provider. This metadata is made\n * available on ReadableSpan and MetricRecord for use by the export pipeline.\n * @deprecated Use {@link InstrumentationScope} instead.\n */\nexport interface InstrumentationLibrary {\n  readonly name: string;\n  readonly version?: string;\n  readonly schemaUrl?: string;\n}\n\n/**\n * An instrumentation scope consists of the name and optional version\n * used to obtain a tracer or meter from a provider. This metadata is made\n * available on ReadableSpan and MetricRecord for use by the export pipeline.\n */\nexport interface InstrumentationScope {\n  readonly name: string;\n  readonly version?: string;\n  readonly schemaUrl?: string;\n}\n\n/** Defines an error handler function */\nexport type ErrorHandler = (ex: Exception) => void;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface ExportResult {\n  code: ExportResultCode;\n  error?: Error;\n}\n\nexport enum ExportResultCode {\n  SUCCESS,\n  FAILED,\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  TextMapGetter,\n  TextMapPropagator,\n  diag,\n  TextMapSetter,\n} from '@opentelemetry/api';\n\n/** Configuration object for composite propagator */\nexport interface CompositePropagatorConfig {\n  /**\n   * List of propagators to run. Propagators run in the\n   * list order. If a propagator later in the list writes the same context\n   * key as a propagator earlier in the list, the later on will \"win\".\n   */\n  propagators?: TextMapPropagator[];\n}\n\n/** Combines multiple propagators into a single propagator. */\nexport class CompositePropagator implements TextMapPropagator {\n  private readonly _propagators: TextMapPropagator[];\n  private readonly _fields: string[];\n\n  /**\n   * Construct a composite propagator from a list of propagators.\n   *\n   * @param [config] Configuration object for composite propagator\n   */\n  constructor(config: CompositePropagatorConfig = {}) {\n    this._propagators = config.propagators ?? [];\n\n    this._fields = Array.from(\n      new Set(\n        this._propagators\n          // older propagators may not have fields function, null check to be sure\n          .map(p => (typeof p.fields === 'function' ? p.fields() : []))\n          .reduce((x, y) => x.concat(y), [])\n      )\n    );\n  }\n\n  /**\n   * Run each of the configured propagators with the given context and carrier.\n   * Propagators are run in the order they are configured, so if multiple\n   * propagators write the same carrier key, the propagator later in the list\n   * will \"win\".\n   *\n   * @param context Context to inject\n   * @param carrier Carrier into which context will be injected\n   */\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    for (const propagator of this._propagators) {\n      try {\n        propagator.inject(context, carrier, setter);\n      } catch (err) {\n        diag.warn(\n          `Failed to inject with ${propagator.constructor.name}. Err: ${err.message}`\n        );\n      }\n    }\n  }\n\n  /**\n   * Run each of the configured propagators with the given context and carrier.\n   * Propagators are run in the order they are configured, so if multiple\n   * propagators write the same context key, the propagator later in the list\n   * will \"win\".\n   *\n   * @param context Context to add values to\n   * @param carrier Carrier from which to extract context\n   */\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    return this._propagators.reduce((ctx, propagator) => {\n      try {\n        return propagator.extract(ctx, carrier, getter);\n      } catch (err) {\n        diag.warn(\n          `Failed to inject with ${propagator.constructor.name}. Err: ${err.message}`\n        );\n      }\n      return ctx;\n    }, context);\n  }\n\n  fields(): string[] {\n    // return a new array so our fields cannot be modified\n    return this._fields.slice();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  SpanContext,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter, trace,\n  TraceFlags,\n} from '@opentelemetry/api';\nimport { isTracingSuppressed } from './suppress-tracing';\nimport { TraceState } from './TraceState';\n\nexport const TRACE_PARENT_HEADER = 'traceparent';\nexport const TRACE_STATE_HEADER = 'tracestate';\n\nconst VERSION = '00';\nconst VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nconst TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nconst PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nconst FLAGS_PART = '[\\\\da-f]{2}';\nconst TRACE_PARENT_REGEX = new RegExp(\n  `^\\\\s?(${VERSION_PART})-(${TRACE_ID_PART})-(${PARENT_ID_PART})-(${FLAGS_PART})(-.*)?\\\\s?$`\n);\n\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nexport function parseTraceParent(traceParent: string): SpanContext | null {\n  const match = TRACE_PARENT_REGEX.exec(traceParent);\n  if (!match) return null;\n\n  // According to the specification the implementation should be compatible\n  // with future versions. If there are more parts, we only reject it if it's using version 00\n  // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n  if (match[1] === '00' && match[5]) return null;\n\n  return {\n    traceId: match[2],\n    spanId: match[3],\n    traceFlags: parseInt(match[4], 16),\n  };\n}\n\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nexport class W3CTraceContextPropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const spanContext = trace.getSpanContext(context);\n    if (\n      !spanContext ||\n      isTracingSuppressed(context) ||\n      !isSpanContextValid(spanContext)\n    )\n      return;\n\n    const traceParent = `${VERSION}-${spanContext.traceId}-${\n      spanContext.spanId\n    }-0${Number(spanContext.traceFlags || TraceFlags.NONE).toString(16)}`;\n\n    setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n    if (spanContext.traceState) {\n      setter.set(\n        carrier,\n        TRACE_STATE_HEADER,\n        spanContext.traceState.serialize()\n      );\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n    if (!traceParentHeader) return context;\n    const traceParent = Array.isArray(traceParentHeader)\n      ? traceParentHeader[0]\n      : traceParentHeader;\n    if (typeof traceParent !== 'string') return context;\n    const spanContext = parseTraceParent(traceParent);\n    if (!spanContext) return context;\n\n    spanContext.isRemote = true;\n\n    const traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n    if (traceStateHeader) {\n      // If more than one `tracestate` header is found, we merge them into a\n      // single header.\n      const state = Array.isArray(traceStateHeader)\n        ? traceStateHeader.join(',')\n        : traceStateHeader;\n      spanContext.traceState = new TraceState(\n        typeof state === 'string' ? state : undefined\n      );\n    }\n    return trace.setSpanContext(context, spanContext);\n  }\n\n  fields(): string[] {\n    return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { validateKey, validateValue } from '../internal/validators';\n\nconst MAX_TRACE_STATE_ITEMS = 32;\nconst MAX_TRACE_STATE_LEN = 512;\nconst LIST_MEMBERS_SEPARATOR = ',';\nconst LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nexport class TraceState implements api.TraceState {\n  private _internalState: Map<string, string> = new Map();\n\n  constructor(rawTraceState?: string) {\n    if (rawTraceState) this._parse(rawTraceState);\n  }\n\n  set(key: string, value: string): TraceState {\n    // TODO: Benchmark the different approaches(map vs list) and\n    // use the faster one.\n    const traceState = this._clone();\n    if (traceState._internalState.has(key)) {\n      traceState._internalState.delete(key);\n    }\n    traceState._internalState.set(key, value);\n    return traceState;\n  }\n\n  unset(key: string): TraceState {\n    const traceState = this._clone();\n    traceState._internalState.delete(key);\n    return traceState;\n  }\n\n  get(key: string): string | undefined {\n    return this._internalState.get(key);\n  }\n\n  serialize(): string {\n    return this._keys()\n      .reduce((agg: string[], key) => {\n        agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + this.get(key));\n        return agg;\n      }, [])\n      .join(LIST_MEMBERS_SEPARATOR);\n  }\n\n  private _parse(rawTraceState: string) {\n    if (rawTraceState.length > MAX_TRACE_STATE_LEN) return;\n    this._internalState = rawTraceState\n      .split(LIST_MEMBERS_SEPARATOR)\n      .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n      .reduce((agg: Map<string, string>, part: string) => {\n        const listMember = part.trim(); // Optional Whitespace (OWS) handling\n        const i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n        if (i !== -1) {\n          const key = listMember.slice(0, i);\n          const value = listMember.slice(i + 1, part.length);\n          if (validateKey(key) && validateValue(value)) {\n            agg.set(key, value);\n          } else {\n            // TODO: Consider to add warning log\n          }\n        }\n        return agg;\n      }, new Map());\n\n    // Because of the reverse() requirement, trunc must be done after map is created\n    if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n      this._internalState = new Map(\n        Array.from(this._internalState.entries())\n          .reverse() // Use reverse same as original tracestate parse chain\n          .slice(0, MAX_TRACE_STATE_ITEMS)\n      );\n    }\n  }\n\n  private _keys(): string[] {\n    return Array.from(this._internalState.keys()).reverse();\n  }\n\n  private _clone(): TraceState {\n    const traceState = new TraceState();\n    traceState._internalState = new Map(this._internalState);\n    return traceState;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nconst VALID_KEY = `[a-z]${VALID_KEY_CHAR_RANGE}{0,255}`;\nconst VALID_VENDOR_KEY = `[a-z0-9]${VALID_KEY_CHAR_RANGE}{0,240}@[a-z]${VALID_KEY_CHAR_RANGE}{0,13}`;\nconst VALID_KEY_REGEX = new RegExp(`^(?:${VALID_KEY}|${VALID_VENDOR_KEY})$`);\nconst VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nconst INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key: string): boolean {\n  return VALID_KEY_REGEX.test(key);\n}\n\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value: string): boolean {\n  return (\n    VALID_VALUE_BASE_REGEX.test(value) &&\n    !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value)\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** IdGenerator provides an interface for generating Trace Id and Span Id */\nexport interface IdGenerator {\n  /** Returns a trace ID composed of 32 lowercase hex characters. */\n  generateTraceId(): string;\n  /** Returns a span ID composed of 16 lowercase hex characters. */\n  generateSpanId(): string;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, createContextKey, Span } from '@opentelemetry/api';\n\nconst RPC_METADATA_KEY = createContextKey(\n  'OpenTelemetry SDK Context Key RPC_METADATA'\n);\n\nexport enum RPCType {\n  HTTP = 'http',\n}\n\ntype HTTPMetadata = {\n  type: RPCType.HTTP;\n  route?: string;\n  span: Span;\n};\n\n/**\n * Allows for future rpc metadata to be used with this mechanism\n */\nexport type RPCMetadata = HTTPMetadata;\n\nexport function setRPCMetadata(context: Context, meta: RPCMetadata): Context {\n  return context.setValue(RPC_METADATA_KEY, meta);\n}\n\nexport function deleteRPCMetadata(context: Context): Context {\n  return context.deleteValue(RPC_METADATA_KEY);\n}\n\nexport function getRPCMetadata(context: Context): RPCMetadata | undefined {\n  return context.getValue(RPC_METADATA_KEY) as RPCMetadata | undefined;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler, SamplingDecision, SamplingResult } from '@opentelemetry/api';\n\n/** Sampler that samples no traces. */\nexport class AlwaysOffSampler implements Sampler {\n  shouldSample(): SamplingResult {\n    return {\n      decision: SamplingDecision.NOT_RECORD,\n    };\n  }\n\n  toString(): string {\n    return 'AlwaysOffSampler';\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler, SamplingDecision, SamplingResult } from '@opentelemetry/api';\n\n/** Sampler that samples all traces. */\nexport class AlwaysOnSampler implements Sampler {\n  shouldSample(): SamplingResult {\n    return {\n      decision: SamplingDecision.RECORD_AND_SAMPLED,\n    };\n  }\n\n  toString(): string {\n    return 'AlwaysOnSampler';\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  Link,\n  Sampler,\n  SamplingResult,\n  SpanAttributes,\n  SpanKind,\n  TraceFlags, trace,\n} from '@opentelemetry/api';\nimport { globalErrorHandler } from '../../common/global-error-handler';\nimport { AlwaysOffSampler } from './AlwaysOffSampler';\nimport { AlwaysOnSampler } from './AlwaysOnSampler';\n\n/**\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nexport class ParentBasedSampler implements Sampler {\n  private _root: Sampler;\n  private _remoteParentSampled: Sampler;\n  private _remoteParentNotSampled: Sampler;\n  private _localParentSampled: Sampler;\n  private _localParentNotSampled: Sampler;\n\n  constructor(config: ParentBasedSamplerConfig) {\n    this._root = config.root;\n\n    if (!this._root) {\n      globalErrorHandler(\n        new Error('ParentBasedSampler must have a root sampler configured')\n      );\n      this._root = new AlwaysOnSampler();\n    }\n\n    this._remoteParentSampled =\n      config.remoteParentSampled ?? new AlwaysOnSampler();\n    this._remoteParentNotSampled =\n      config.remoteParentNotSampled ?? new AlwaysOffSampler();\n    this._localParentSampled =\n      config.localParentSampled ?? new AlwaysOnSampler();\n    this._localParentNotSampled =\n      config.localParentNotSampled ?? new AlwaysOffSampler();\n  }\n\n  shouldSample(\n    context: Context,\n    traceId: string,\n    spanName: string,\n    spanKind: SpanKind,\n    attributes: SpanAttributes,\n    links: Link[]\n  ): SamplingResult {\n    const parentContext = trace.getSpanContext(context);\n\n    if (!parentContext || !isSpanContextValid(parentContext)) {\n      return this._root.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    if (parentContext.isRemote) {\n      if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n        return this._remoteParentSampled.shouldSample(\n          context,\n          traceId,\n          spanName,\n          spanKind,\n          attributes,\n          links\n        );\n      }\n      return this._remoteParentNotSampled.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n      return this._localParentSampled.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    return this._localParentNotSampled.shouldSample(\n      context,\n      traceId,\n      spanName,\n      spanKind,\n      attributes,\n      links\n    );\n  }\n\n  toString(): string {\n    return `ParentBased{root=${this._root.toString()}, remoteParentSampled=${this._remoteParentSampled.toString()}, remoteParentNotSampled=${this._remoteParentNotSampled.toString()}, localParentSampled=${this._localParentSampled.toString()}, localParentNotSampled=${this._localParentNotSampled.toString()}}`;\n  }\n}\n\ninterface ParentBasedSamplerConfig {\n  /** Sampler called for spans with no parent */\n  root: Sampler;\n  /** Sampler called for spans with a remote parent which was sampled. Default AlwaysOn */\n  remoteParentSampled?: Sampler;\n  /** Sampler called for spans with a remote parent which was not sampled. Default AlwaysOff */\n  remoteParentNotSampled?: Sampler;\n  /** Sampler called for spans with a local parent which was sampled. Default AlwaysOn */\n  localParentSampled?: Sampler;\n  /** Sampler called for spans with a local parent which was not sampled. Default AlwaysOff */\n  localParentNotSampled?: Sampler;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Sampler,\n  SamplingDecision,\n  SamplingResult,\n  isValidTraceId,\n} from '@opentelemetry/api';\n\n/** Sampler that samples a given fraction of traces based of trace id deterministically. */\nexport class TraceIdRatioBasedSampler implements Sampler {\n  private _upperBound: number;\n\n  constructor(private readonly _ratio: number = 0) {\n    this._ratio = this._normalize(_ratio);\n    this._upperBound = Math.floor(this._ratio * 0xffffffff);\n  }\n\n  shouldSample(context: unknown, traceId: string): SamplingResult {\n    return {\n      decision:\n        isValidTraceId(traceId) && this._accumulate(traceId) < this._upperBound\n          ? SamplingDecision.RECORD_AND_SAMPLED\n          : SamplingDecision.NOT_RECORD,\n    };\n  }\n\n  toString(): string {\n    return `TraceIdRatioBased{${this._ratio}}`;\n  }\n\n  private _normalize(ratio: number): number {\n    if (typeof ratio !== 'number' || isNaN(ratio)) return 0;\n    return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n  }\n\n  private _accumulate(traceId: string): number {\n    let accumulation = 0;\n    for (let i = 0; i < traceId.length / 8; i++) {\n      const pos = i * 8;\n      const part = parseInt(traceId.slice(pos, pos + 8), 16);\n      accumulation = (accumulation ^ part) >>> 0;\n    }\n    return accumulation;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { isPlainObject } from './lodash.merge';\n\nconst MAX_LEVEL = 20;\n\ninterface ObjectInto {\n  obj: any;\n  key: string;\n}\n\n/**\n * Merges objects together\n * @param args - objects / values to be merged\n */\nexport function merge(...args: any[]): any {\n  let result: any = args.shift();\n  const objects: WeakMap<any, ObjectInto[]> | undefined = new WeakMap<any, ObjectInto[]>();\n  while (args.length > 0) {\n    result = mergeTwoObjects(result, args.shift(), 0, objects);\n  }\n\n  return result;\n}\n\nfunction takeValue(value: any): any {\n  if (isArray(value)) {\n    return value.slice();\n  }\n  return value;\n}\n\n/**\n * Merges two objects\n * @param one - first object\n * @param two - second object\n * @param level - current deep level\n * @param objects - objects holder that has been already referenced - to prevent\n * cyclic dependency\n */\nfunction mergeTwoObjects(\n  one: any,\n  two: any,\n  level = 0,\n  objects: WeakMap<any, ObjectInto[]>,\n): any {\n  let result: any;\n  if (level > MAX_LEVEL) {\n    return undefined;\n  }\n  level++;\n  if (isPrimitive(one) || isPrimitive(two) || isFunction(two)) {\n    result = takeValue(two);\n  } else if (isArray(one)) {\n    result = one.slice();\n    if (isArray(two)) {\n      for (let i = 0, j = two.length; i < j; i++) {\n        result.push(takeValue(two[i]));\n      }\n    } else if (isObject(two)) {\n      const keys = Object.keys(two);\n      for (let i = 0, j = keys.length; i < j; i++) {\n        const key = keys[i];\n        result[key] = takeValue(two[key]);\n      }\n    }\n  } else if (isObject(one)) {\n    if (isObject(two)) {\n      if (!shouldMerge(one, two)) {\n        return two;\n      }\n      result = Object.assign({}, one);\n      const keys = Object.keys(two);\n\n      for (let i = 0, j = keys.length; i < j; i++) {\n        const key = keys[i];\n        const twoValue = two[key];\n\n        if (isPrimitive(twoValue)) {\n          if (typeof twoValue === 'undefined') {\n            delete result[key];\n          } else {\n            // result[key] = takeValue(twoValue);\n            result[key] = twoValue;\n          }\n        } else {\n          const obj1 = result[key];\n          const obj2 = twoValue;\n\n          if (\n            wasObjectReferenced(one, key, objects) ||\n            wasObjectReferenced(two, key, objects)\n          ) {\n            delete result[key];\n          } else {\n\n            if (isObject(obj1) && isObject(obj2)) {\n              const arr1 = objects.get(obj1) || [];\n              const arr2 = objects.get(obj2) || [];\n              arr1.push({ obj: one, key });\n              arr2.push({ obj: two, key });\n              objects.set(obj1, arr1);\n              objects.set(obj2, arr2);\n            }\n\n            result[key] = mergeTwoObjects(\n              result[key],\n              twoValue,\n              level,\n              objects\n            );\n          }\n        }\n      }\n    } else {\n      result = two;\n    }\n  }\n\n  return result;\n}\n\n/**\n * Function to check if object has been already reference\n * @param obj\n * @param key\n * @param objects\n */\nfunction wasObjectReferenced(\n  obj: any,\n  key: string,\n  objects: WeakMap<any, ObjectInto[]>,\n): boolean {\n  const arr = objects.get(obj[key]) || [];\n  for (let i = 0, j = arr.length; i < j; i++) {\n    const info = arr[i];\n    if (info.key === key && info.obj === obj) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isArray(value: any): boolean {\n  return Array.isArray(value);\n}\n\nfunction isFunction(value: any): boolean {\n  return typeof value === 'function';\n}\n\nfunction isObject(value: any): boolean {\n  return !isPrimitive(value) && !isArray(value) && !isFunction(value) && typeof value === 'object';\n}\n\nfunction isPrimitive(value: any): boolean {\n  return typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean' ||\n    typeof value === 'undefined' ||\n    value instanceof Date ||\n    value instanceof RegExp ||\n    value === null;\n}\n\nfunction shouldMerge(one: any, two: any): boolean {\n  if (!isPlainObject(one) || !isPlainObject(two)) {\n    return false;\n  }\n\n  return true;\n}\n\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * based on lodash in order to support esm builds without esModuleInterop.\n * lodash is using MIT License.\n **/\n\nconst objectTag = '[object Object]';\nconst nullTag = '[object Null]';\nconst undefinedTag = '[object Undefined]';\nconst funcProto = Function.prototype;\nconst funcToString = funcProto.toString;\nconst objectCtorString = funcToString.call(Object);\nconst getPrototype = overArg(Object.getPrototypeOf, Object);\nconst objectProto = Object.prototype;\nconst hasOwnProperty = objectProto.hasOwnProperty;\nconst symToStringTag = Symbol ? Symbol.toStringTag : undefined;\nconst nativeObjectToString = objectProto.toString;\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func: Function, transform: any): any {\n  return function(arg: any) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nexport function isPlainObject(value: any) {\n  if (!isObjectLike(value) || baseGetTag(value) !== objectTag) {\n    return false;\n  }\n  const proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  const Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) === objectCtorString;\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value: any) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value: any) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value: any) {\n  const isOwn = hasOwnProperty.call(value, symToStringTag as any),\n    tag = value[symToStringTag as any];\n  let unmasked = false;\n\n  try {\n    value[symToStringTag as any] = undefined;\n    unmasked = true;\n  } catch (e) {\n    // silence\n  }\n\n  const result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag as any] = tag;\n    } else {\n      delete value[symToStringTag as any];\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value: any) {\n  return nativeObjectToString.call(value);\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function urlMatches(url: string, urlToMatch: string | RegExp): boolean {\n  if (typeof urlToMatch === 'string') {\n    return url === urlToMatch;\n  } else {\n    return !!url.match(urlToMatch);\n  }\n}\n/**\n * Check if {@param url} should be ignored when comparing against {@param ignoredUrls}\n * @param url\n * @param ignoredUrls\n */\nexport function isUrlIgnored(\n  url: string,\n  ignoredUrls?: Array<string | RegExp>\n): boolean {\n  if (!ignoredUrls) {\n    return false;\n  }\n\n  for (const ignoreUrl of ignoredUrls) {\n    if (urlMatches(url, ignoreUrl)) {\n      return true;\n    }\n  }\n  return false;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ShimWrapped } from '../common/types';\n\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nexport function isWrapped(func: unknown): func is ShimWrapped {\n  return (\n    typeof func === 'function' &&\n    typeof (func as ShimWrapped).__original === 'function' &&\n    typeof (func as ShimWrapped).__unwrap === 'function' &&\n    (func as ShimWrapped).__wrapped === true\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './promise';\n\n/**\n * Bind the callback and only invoke the callback once regardless how many times `BindOnceFuture.call` is invoked.\n */\nexport class BindOnceFuture<\n  R,\n  This = unknown,\n  T extends (this: This, ...args: unknown[]) => R = () => R\n> {\n  private _isCalled = false;\n  private _deferred = new Deferred<R>();\n  constructor(private _callback: T, private _that: This) {}\n\n  get isCalled() {\n    return this._isCalled;\n  }\n\n  get promise() {\n    return this._deferred.promise;\n  }\n\n  call(...args: Parameters<T>): Promise<R> {\n    if (!this._isCalled) {\n      this._isCalled = true;\n      try {\n        Promise.resolve(this._callback.call(this._that, ...args))\n          .then(\n            val => this._deferred.resolve(val),\n            err => this._deferred.reject(err)\n          );\n      } catch (err) {\n        this._deferred.reject(err);\n      }\n    }\n    return this._deferred.promise;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<T> {\n  private _promise: Promise<T>;\n  private _resolve!: (val: T) => void;\n  private _reject!: (error: unknown) => void;\n  constructor() {\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  get promise() {\n    return this._promise;\n  }\n\n  resolve(val: T) {\n    this._resolve(val);\n  }\n\n  reject(err: unknown) {\n    this._reject(err);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './WebTracerProvider';\nexport * from './StackContextManager';\nexport * from './enums/PerformanceTimingNames';\nexport * from './types';\nexport * from './utils';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BasicTracerProvider,\n  SDKRegistrationConfig,\n  TracerConfig,\n} from '@opentelemetry/sdk-trace-base';\nimport { StackContextManager } from './StackContextManager';\n\n/**\n * WebTracerConfig provides an interface for configuring a Web Tracer.\n */\nexport type WebTracerConfig = TracerConfig;\n\n/**\n * This class represents a web tracer with {@link StackContextManager}\n */\nexport class WebTracerProvider extends BasicTracerProvider {\n  /**\n   * Constructs a new Tracer instance.\n   * @param config Web Tracer config\n   */\n  constructor(config: WebTracerConfig = {}) {\n    super(config);\n\n    if ((config as SDKRegistrationConfig).contextManager) {\n      throw (\n        'contextManager should be defined in register method not in' +\n        ' constructor'\n      );\n    }\n    if ((config as SDKRegistrationConfig).propagator) {\n      throw 'propagator should be defined in register method not in constructor';\n    }\n  }\n\n  /**\n   * Register this TracerProvider for use with the OpenTelemetry API.\n   * Undefined values may be replaced with defaults, and\n   * null values will be skipped.\n   *\n   * @param config Configuration object for SDK registration\n   */\n  override register(config: SDKRegistrationConfig = {}): void {\n    if (config.contextManager === undefined) {\n      config.contextManager = new StackContextManager();\n    }\n    if (config.contextManager) {\n      config.contextManager.enable();\n    }\n\n    super.register(config);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './Tracer';\nexport * from './BasicTracerProvider';\nexport * from './platform';\nexport * from './export/ConsoleSpanExporter';\nexport * from './export/InMemorySpanExporter';\nexport * from './export/ReadableSpan';\nexport * from './export/SimpleSpanProcessor';\nexport * from './export/SpanExporter';\nexport * from './export/NoopSpanProcessor';\nexport * from './Span';\nexport * from './SpanProcessor';\nexport * from './TimedEvent';\nexport * from './types';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  IdGenerator,\n  InstrumentationLibrary,\n  RandomIdGenerator,\n  sanitizeAttributes,\n  isTracingSuppressed,\n} from '@opentelemetry/core';\nimport { Resource } from '@opentelemetry/resources';\nimport { BasicTracerProvider } from './BasicTracerProvider';\nimport { Span } from './Span';\nimport { GeneralLimits, SpanLimits, TracerConfig } from './types';\nimport { mergeConfig } from './utility';\nimport { SpanProcessor } from './SpanProcessor';\n\n/**\n * This class represents a basic tracer.\n */\nexport class Tracer implements api.Tracer {\n  private readonly _sampler: api.Sampler;\n  private readonly _generalLimits: GeneralLimits;\n  private readonly _spanLimits: SpanLimits;\n  private readonly _idGenerator: IdGenerator;\n  readonly resource: Resource;\n  readonly instrumentationLibrary: InstrumentationLibrary;\n\n  /**\n   * Constructs a new Tracer instance.\n   */\n  constructor(\n    instrumentationLibrary: InstrumentationLibrary,\n    config: TracerConfig,\n    private _tracerProvider: BasicTracerProvider\n  ) {\n    const localConfig = mergeConfig(config);\n    this._sampler = localConfig.sampler;\n    this._generalLimits = localConfig.generalLimits;\n    this._spanLimits = localConfig.spanLimits;\n    this._idGenerator = config.idGenerator || new RandomIdGenerator();\n    this.resource = _tracerProvider.resource;\n    this.instrumentationLibrary = instrumentationLibrary;\n  }\n\n  /**\n   * Starts a new Span or returns the default NoopSpan based on the sampling\n   * decision.\n   */\n  startSpan(\n    name: string,\n    options: api.SpanOptions = {},\n    context = api.context.active()\n  ): api.Span {\n    if (isTracingSuppressed(context)) {\n      api.diag.debug('Instrumentation suppressed, returning Noop Span');\n      return api.trace.wrapSpanContext(api.INVALID_SPAN_CONTEXT);\n    }\n\n    // remove span from context in case a root span is requested via options\n    if (options.root) {\n      context = api.trace.deleteSpan(context);\n    }\n\n    const parentSpanContext = api.trace.getSpanContext(context);\n    const spanId = this._idGenerator.generateSpanId();\n    let traceId;\n    let traceState;\n    let parentSpanId;\n    if (!parentSpanContext || !api.trace.isSpanContextValid(parentSpanContext)) {\n      // New root span.\n      traceId = this._idGenerator.generateTraceId();\n    } else {\n      // New child span.\n      traceId = parentSpanContext.traceId;\n      traceState = parentSpanContext.traceState;\n      parentSpanId = parentSpanContext.spanId;\n    }\n\n    const spanKind = options.kind ?? api.SpanKind.INTERNAL;\n    const links = (options.links ?? []).map(link => {\n      return {\n        context: link.context,\n        attributes: sanitizeAttributes(link.attributes),\n      };\n    });\n    const attributes = sanitizeAttributes(options.attributes);\n    // make sampling decision\n    const samplingResult = this._sampler.shouldSample(\n      context,\n      traceId,\n      name,\n      spanKind,\n      attributes,\n      links\n    );\n\n    const traceFlags =\n      samplingResult.decision === api.SamplingDecision.RECORD_AND_SAMPLED\n        ? api.TraceFlags.SAMPLED\n        : api.TraceFlags.NONE;\n    const spanContext = { traceId, spanId, traceFlags, traceState };\n    if (samplingResult.decision === api.SamplingDecision.NOT_RECORD) {\n      api.diag.debug('Recording is off, propagating context in a non-recording span');\n      return api.trace.wrapSpanContext(spanContext);\n    }\n\n    const span = new Span(\n      this,\n      context,\n      name,\n      spanContext,\n      spanKind,\n      parentSpanId,\n      links,\n      options.startTime\n    );\n    // Set initial span attributes. The attributes object may have been mutated\n    // by the sampler, so we sanitize the merged attributes before setting them.\n    const initAttributes = sanitizeAttributes(Object.assign(attributes, samplingResult.attributes));\n    span.setAttributes(initAttributes);\n    return span;\n  }\n\n  /**\n   * Starts a new {@link Span} and calls the given function passing it the\n   * created span as first argument.\n   * Additionally the new span gets set in context and this context is activated\n   * for the duration of the function call.\n   *\n   * @param name The name of the span\n   * @param [options] SpanOptions used for span creation\n   * @param [context] Context to use to extract parent\n   * @param fn function called in the context of the span and receives the newly created span as an argument\n   * @returns return value of fn\n   * @example\n   *   const something = tracer.startActiveSpan('op', span => {\n   *     try {\n   *       do some work\n   *       span.setStatus({code: SpanStatusCode.OK});\n   *       return something;\n   *     } catch (err) {\n   *       span.setStatus({\n   *         code: SpanStatusCode.ERROR,\n   *         message: err.message,\n   *       });\n   *       throw err;\n   *     } finally {\n   *       span.end();\n   *     }\n   *   });\n   * @example\n   *   const span = tracer.startActiveSpan('op', span => {\n   *     try {\n   *       do some work\n   *       return span;\n   *     } catch (err) {\n   *       span.setStatus({\n   *         code: SpanStatusCode.ERROR,\n   *         message: err.message,\n   *       });\n   *       throw err;\n   *     }\n   *   });\n   *   do some more work\n   *   span.end();\n   */\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    opts: api.SpanOptions,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    opts: api.SpanOptions,\n    ctx: api.Context,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    arg2?: F | api.SpanOptions,\n    arg3?: F | api.Context,\n    arg4?: F\n  ): ReturnType<F> | undefined {\n    let opts: api.SpanOptions | undefined;\n    let ctx: api.Context | undefined;\n    let fn: F;\n\n    if (arguments.length < 2) {\n      return;\n    } else if (arguments.length === 2) {\n      fn = arg2 as F;\n    } else if (arguments.length === 3) {\n      opts = arg2 as api.SpanOptions | undefined;\n      fn = arg3 as F;\n    } else {\n      opts = arg2 as api.SpanOptions | undefined;\n      ctx = arg3 as api.Context | undefined;\n      fn = arg4 as F;\n    }\n\n    const parentContext = ctx ?? api.context.active();\n    const span = this.startSpan(name, opts, parentContext);\n    const contextWithSpanSet = api.trace.setSpan(parentContext, span);\n\n    return api.context.with(contextWithSpanSet, fn, undefined, span);\n  }\n\n  /** Returns the active {@link GeneralLimits}. */\n  getGeneralLimits(): GeneralLimits {\n    return this._generalLimits;\n  }\n\n  /** Returns the active {@link SpanLimits}. */\n  getSpanLimits(): SpanLimits {\n    return this._spanLimits;\n  }\n\n  getActiveSpanProcessor(): SpanProcessor {\n    return this._tracerProvider.getActiveSpanProcessor();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  isAttributeValue,\n  hrTime,\n  hrTimeDuration,\n  InstrumentationLibrary,\n  isTimeInput,\n  timeInputToHrTime,\n  sanitizeAttributes,\n} from '@opentelemetry/core';\nimport { Resource } from '@opentelemetry/resources';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { ReadableSpan } from './export/ReadableSpan';\nimport { TimedEvent } from './TimedEvent';\nimport { Tracer } from './Tracer';\nimport { SpanProcessor } from './SpanProcessor';\nimport { SpanLimits } from './types';\nimport { SpanAttributeValue, Context } from '@opentelemetry/api';\nimport { ExceptionEventName } from './enums';\n\n/**\n * This class represents a span.\n */\nexport class Span implements api.Span, ReadableSpan {\n  // Below properties are included to implement ReadableSpan for export\n  // purposes but are not intended to be written-to directly.\n  private readonly _spanContext: api.SpanContext;\n  readonly kind: api.SpanKind;\n  readonly parentSpanId?: string;\n  readonly attributes: api.SpanAttributes = {};\n  readonly links: api.Link[] = [];\n  readonly events: TimedEvent[] = [];\n  readonly startTime: api.HrTime;\n  readonly resource: Resource;\n  readonly instrumentationLibrary: InstrumentationLibrary;\n  name: string;\n  status: api.SpanStatus = {\n    code: api.SpanStatusCode.UNSET,\n  };\n  endTime: api.HrTime = [0, 0];\n  private _ended = false;\n  private _duration: api.HrTime = [-1, -1];\n  private readonly _spanProcessor: SpanProcessor;\n  private readonly _spanLimits: SpanLimits;\n  private readonly _attributeValueLengthLimit: number;\n\n  /** Constructs a new Span instance. */\n  constructor(\n    parentTracer: Tracer,\n    context: Context,\n    spanName: string,\n    spanContext: api.SpanContext,\n    kind: api.SpanKind,\n    parentSpanId?: string,\n    links: api.Link[] = [],\n    startTime: api.TimeInput = hrTime()\n  ) {\n    this.name = spanName;\n    this._spanContext = spanContext;\n    this.parentSpanId = parentSpanId;\n    this.kind = kind;\n    this.links = links;\n    this.startTime = timeInputToHrTime(startTime);\n    this.resource = parentTracer.resource;\n    this.instrumentationLibrary = parentTracer.instrumentationLibrary;\n    this._spanLimits = parentTracer.getSpanLimits();\n    this._spanProcessor = parentTracer.getActiveSpanProcessor();\n    this._spanProcessor.onStart(this, context);\n    this._attributeValueLengthLimit = this._spanLimits.attributeValueLengthLimit || 0;\n  }\n\n  spanContext(): api.SpanContext {\n    return this._spanContext;\n  }\n\n  setAttribute(key: string, value?: SpanAttributeValue): this;\n  setAttribute(key: string, value: unknown): this {\n    if (value == null || this._isSpanEnded()) return this;\n    if (key.length === 0) {\n      api.diag.warn(`Invalid attribute key: ${key}`);\n      return this;\n    }\n    if (!isAttributeValue(value)) {\n      api.diag.warn(`Invalid attribute value set for key: ${key}`);\n      return this;\n    }\n\n    if (\n      Object.keys(this.attributes).length >=\n        this._spanLimits.attributeCountLimit! &&\n      !Object.prototype.hasOwnProperty.call(this.attributes, key)\n    ) {\n      return this;\n    }\n    this.attributes[key] = this._truncateToSize(value);\n    return this;\n  }\n\n  setAttributes(attributes: api.SpanAttributes): this {\n    for (const [k, v] of Object.entries(attributes)) {\n      this.setAttribute(k, v);\n    }\n    return this;\n  }\n\n  /**\n   *\n   * @param name Span Name\n   * @param [attributesOrStartTime] Span attributes or start time\n   *     if type is {@type TimeInput} and 3rd param is undefined\n   * @param [startTime] Specified start time for the event\n   */\n  addEvent(\n    name: string,\n    attributesOrStartTime?: api.SpanAttributes | api.TimeInput,\n    startTime?: api.TimeInput\n  ): this {\n    if (this._isSpanEnded()) return this;\n    if (this._spanLimits.eventCountLimit === 0) {\n      api.diag.warn('No events allowed.');\n      return this;\n    }\n    if (this.events.length >= this._spanLimits.eventCountLimit!) {\n      api.diag.warn('Dropping extra events.');\n      this.events.shift();\n    }\n    if (isTimeInput(attributesOrStartTime)) {\n      if (typeof startTime === 'undefined') {\n        startTime = attributesOrStartTime as api.TimeInput;\n      }\n      attributesOrStartTime = undefined;\n    }\n    if (typeof startTime === 'undefined') {\n      startTime = hrTime();\n    }\n\n    const attributes = sanitizeAttributes(attributesOrStartTime);\n    this.events.push({\n      name,\n      attributes,\n      time: timeInputToHrTime(startTime),\n    });\n    return this;\n  }\n\n  setStatus(status: api.SpanStatus): this {\n    if (this._isSpanEnded()) return this;\n    this.status = status;\n    return this;\n  }\n\n  updateName(name: string): this {\n    if (this._isSpanEnded()) return this;\n    this.name = name;\n    return this;\n  }\n\n  end(endTime: api.TimeInput = hrTime()): void {\n    if (this._isSpanEnded()) {\n      api.diag.error('You can only call end() on a span once.');\n      return;\n    }\n    this._ended = true;\n    this.endTime = timeInputToHrTime(endTime);\n\n    this._duration = hrTimeDuration(this.startTime, this.endTime);\n    if (this._duration[0] < 0) {\n      api.diag.warn(\n        'Inconsistent start and end time, startTime > endTime',\n        this.startTime,\n        this.endTime\n      );\n    }\n\n    this._spanProcessor.onEnd(this);\n  }\n\n  isRecording(): boolean {\n    return this._ended === false;\n  }\n\n  recordException(exception: api.Exception, time: api.TimeInput = hrTime()): void {\n    const attributes: api.SpanAttributes = {};\n    if (typeof exception === 'string') {\n      attributes[SemanticAttributes.EXCEPTION_MESSAGE] = exception;\n    } else if (exception) {\n      if (exception.code) {\n        attributes[\n          SemanticAttributes.EXCEPTION_TYPE\n        ] = exception.code.toString();\n      } else if (exception.name) {\n        attributes[SemanticAttributes.EXCEPTION_TYPE] = exception.name;\n      }\n      if (exception.message) {\n        attributes[SemanticAttributes.EXCEPTION_MESSAGE] = exception.message;\n      }\n      if (exception.stack) {\n        attributes[SemanticAttributes.EXCEPTION_STACKTRACE] = exception.stack;\n      }\n    }\n\n    // these are minimum requirements from spec\n    if (\n      attributes[SemanticAttributes.EXCEPTION_TYPE] ||\n      attributes[SemanticAttributes.EXCEPTION_MESSAGE]\n    ) {\n      this.addEvent(ExceptionEventName, attributes, time);\n    } else {\n      api.diag.warn(`Failed to record an exception ${exception}`);\n    }\n  }\n\n  get duration(): api.HrTime {\n    return this._duration;\n  }\n\n  get ended(): boolean {\n    return this._ended;\n  }\n\n  private _isSpanEnded(): boolean {\n    if (this._ended) {\n      api.diag.warn(`Can not execute the operation on ended Span {traceId: ${this._spanContext.traceId}, spanId: ${this._spanContext.spanId}}`);\n    }\n    return this._ended;\n  }\n\n  // Utility function to truncate given value within size\n  // for value type of string, will truncate to given limit\n  // for type of non-string, will return same value\n  private _truncateToLimitUtil(value: string, limit: number): string {\n    if (value.length <= limit) {\n      return value;\n    }\n    return value.substr(0, limit);\n  }\n\n  /**\n   * If the given attribute value is of type string and has more characters than given {@code attributeValueLengthLimit} then\n   * return string with trucated to {@code attributeValueLengthLimit} characters\n   *\n   * If the given attribute value is array of strings then\n   * return new array of strings with each element truncated to {@code attributeValueLengthLimit} characters\n   *\n   * Otherwise return same Attribute {@code value}\n   *\n   * @param value Attribute value\n   * @returns truncated attribute value if required, otherwise same value\n   */\n  private _truncateToSize(value: SpanAttributeValue): SpanAttributeValue {\n    const limit = this._attributeValueLengthLimit;\n    // Check limit\n    if (limit <= 0) {\n      // Negative values are invalid, so do not truncate\n      api.diag.warn(`Attribute value limit must be positive, got ${limit}`);\n      return value;\n    }\n\n    // String\n    if (typeof value === 'string') {\n      return this._truncateToLimitUtil(value, limit);\n    }\n\n    // Array of strings\n    if (Array.isArray(value)) {\n      return (value as []).map(val => typeof val === 'string' ? this._truncateToLimitUtil(val, limit) : val);\n    }\n\n    // Other types, no need to apply value length limit\n    return value;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Event name definitions\nexport const ExceptionEventName = 'exception';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler } from '@opentelemetry/api';\nimport { buildSamplerFromEnv, DEFAULT_CONFIG } from './config';\nimport { SpanLimits, TracerConfig, GeneralLimits } from './types';\n\n/**\n * Function to merge Default configuration (as specified in './config') with\n * user provided configurations.\n */\nexport function mergeConfig(userConfig: TracerConfig): TracerConfig & {\n  sampler: Sampler;\n  spanLimits: SpanLimits;\n  generalLimits: GeneralLimits;\n} {\n  const perInstanceDefaults: Partial<TracerConfig> = {\n    sampler: buildSamplerFromEnv(),\n  };\n\n  const target = Object.assign(\n    {},\n    DEFAULT_CONFIG,\n    perInstanceDefaults,\n    userConfig\n  );\n\n  target.generalLimits = Object.assign(\n    {},\n    DEFAULT_CONFIG.generalLimits,\n    userConfig.generalLimits || {}\n  );\n\n  target.spanLimits = Object.assign(\n    {},\n    DEFAULT_CONFIG.spanLimits,\n    userConfig.spanLimits || {}\n  );\n\n  return target;\n}\n\n/**\n * When general limits are provided and model specific limits are not,\n * configures the model specific limits by using the values from the general ones.\n * @param userConfig User provided tracer configuration\n */\nexport function reconfigureLimits(userConfig: TracerConfig): TracerConfig {\n  const spanLimits = Object.assign({}, userConfig.spanLimits);\n\n  /**\n   * When span attribute count limit is not defined, but general attribute count limit is defined\n   * Then, span attribute count limit will be same as general one\n   */\n  if (spanLimits.attributeCountLimit == null && userConfig.generalLimits?.attributeCountLimit != null) {\n    spanLimits.attributeCountLimit = userConfig.generalLimits.attributeCountLimit;\n  }\n\n  /**\n   * When span attribute value length limit is not defined, but general attribute value length limit is defined\n   * Then, span attribute value length limit will be same as general one\n   */\n  if (spanLimits.attributeValueLengthLimit == null && userConfig.generalLimits?.attributeValueLengthLimit != null) {\n    spanLimits.attributeValueLengthLimit = userConfig.generalLimits.attributeValueLengthLimit;\n  }\n\n  return Object.assign({}, userConfig, { spanLimits });\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, Sampler } from '@opentelemetry/api';\nimport {\n  AlwaysOffSampler,\n  AlwaysOnSampler,\n  getEnv,\n  TracesSamplerValues,\n  ParentBasedSampler,\n  ENVIRONMENT,\n  TraceIdRatioBasedSampler,\n} from '@opentelemetry/core';\n\nconst env = getEnv();\nconst FALLBACK_OTEL_TRACES_SAMPLER = TracesSamplerValues.AlwaysOn;\nconst DEFAULT_RATIO = 1;\n\n/**\n * Default configuration. For fields with primitive values, any user-provided\n * value will override the corresponding default value. For fields with\n * non-primitive values (like `spanLimits`), the user-provided value will be\n * used to extend the default value.\n */\nexport const DEFAULT_CONFIG = {\n  sampler: buildSamplerFromEnv(env),\n  forceFlushTimeoutMillis: 30000,\n  generalLimits: {\n    attributeValueLengthLimit: getEnv().OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n    attributeCountLimit: getEnv().OTEL_ATTRIBUTE_COUNT_LIMIT,\n  },\n  spanLimits: {\n    attributeValueLengthLimit: getEnv().OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n    attributeCountLimit: getEnv().OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT,\n    linkCountLimit: getEnv().OTEL_SPAN_LINK_COUNT_LIMIT,\n    eventCountLimit: getEnv().OTEL_SPAN_EVENT_COUNT_LIMIT,\n  },\n};\n\n/**\n * Based on environment, builds a sampler, complies with specification.\n * @param environment optional, by default uses getEnv(), but allows passing a value to reuse parsed environment\n */\nexport function buildSamplerFromEnv(\n  environment: Required<ENVIRONMENT> = getEnv()\n): Sampler {\n  switch (environment.OTEL_TRACES_SAMPLER) {\n    case TracesSamplerValues.AlwaysOn:\n      return new AlwaysOnSampler();\n    case TracesSamplerValues.AlwaysOff:\n      return new AlwaysOffSampler();\n    case TracesSamplerValues.ParentBasedAlwaysOn:\n      return new ParentBasedSampler({\n        root: new AlwaysOnSampler(),\n      });\n    case TracesSamplerValues.ParentBasedAlwaysOff:\n      return new ParentBasedSampler({\n        root: new AlwaysOffSampler(),\n      });\n    case TracesSamplerValues.TraceIdRatio:\n      return new TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv(environment));\n    case TracesSamplerValues.ParentBasedTraceIdRatio:\n      return new ParentBasedSampler({\n        root: new TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv(environment)),\n      });\n    default:\n      diag.error(\n        `OTEL_TRACES_SAMPLER value \"${environment.OTEL_TRACES_SAMPLER} invalid, defaulting to ${FALLBACK_OTEL_TRACES_SAMPLER}\".`\n      );\n      return new AlwaysOnSampler();\n  }\n}\n\nfunction getSamplerProbabilityFromEnv(\n  environment: Required<ENVIRONMENT>\n): number | undefined {\n  if (\n    environment.OTEL_TRACES_SAMPLER_ARG === undefined ||\n    environment.OTEL_TRACES_SAMPLER_ARG === ''\n  ) {\n    diag.error(\n      `OTEL_TRACES_SAMPLER_ARG is blank, defaulting to ${DEFAULT_RATIO}.`\n    );\n    return DEFAULT_RATIO;\n  }\n\n  const probability = Number(environment.OTEL_TRACES_SAMPLER_ARG);\n\n  if (isNaN(probability)) {\n    diag.error(\n      `OTEL_TRACES_SAMPLER_ARG=${environment.OTEL_TRACES_SAMPLER_ARG} was given, but it is invalid, defaulting to ${DEFAULT_RATIO}.`\n    );\n    return DEFAULT_RATIO;\n  }\n\n  if (probability < 0 || probability > 1) {\n    diag.error(\n      `OTEL_TRACES_SAMPLER_ARG=${environment.OTEL_TRACES_SAMPLER_ARG} was given, but it is out of range ([0..1]), defaulting to ${DEFAULT_RATIO}.`\n    );\n    return DEFAULT_RATIO;\n  }\n\n  return probability;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  context,\n  diag,\n  propagation,\n  TextMapPropagator,\n  trace,\n  TracerProvider,\n} from '@opentelemetry/api';\nimport {\n  CompositePropagator,\n  W3CBaggagePropagator,\n  W3CTraceContextPropagator,\n  getEnv,\n  merge,\n} from '@opentelemetry/core';\nimport { Resource } from '@opentelemetry/resources';\nimport { SpanProcessor, Tracer } from '.';\nimport { DEFAULT_CONFIG } from './config';\nimport { MultiSpanProcessor } from './MultiSpanProcessor';\nimport { NoopSpanProcessor } from './export/NoopSpanProcessor';\nimport { SDKRegistrationConfig, TracerConfig } from './types';\nimport { SpanExporter } from './export/SpanExporter';\nimport { BatchSpanProcessor } from './platform';\nimport { reconfigureLimits } from './utility';\n\nexport type PROPAGATOR_FACTORY = () => TextMapPropagator;\nexport type EXPORTER_FACTORY = () => SpanExporter;\n\nexport enum ForceFlushState {\n  'resolved',\n  'timeout',\n  'error',\n  'unresolved',\n}\n\n/**\n * This class represents a basic tracer provider which platform libraries can extend\n */\nexport class BasicTracerProvider implements TracerProvider {\n  protected static readonly _registeredPropagators = new Map<\n    string,\n    PROPAGATOR_FACTORY\n  >([\n    ['tracecontext', () => new W3CTraceContextPropagator()],\n    ['baggage', () => new W3CBaggagePropagator()],\n  ]);\n\n  protected static readonly _registeredExporters = new Map<\n    string,\n    EXPORTER_FACTORY\n  >();\n\n  private readonly _config: TracerConfig;\n  private readonly _registeredSpanProcessors: SpanProcessor[] = [];\n  private readonly _tracers: Map<string, Tracer> = new Map();\n\n  activeSpanProcessor: SpanProcessor;\n  readonly resource: Resource;\n\n  constructor(config: TracerConfig = {}) {\n    const mergedConfig = merge({}, DEFAULT_CONFIG, reconfigureLimits(config));\n    this.resource = mergedConfig.resource ?? Resource.empty();\n    this.resource = Resource.default().merge(this.resource);\n    this._config = Object.assign({}, mergedConfig, {\n      resource: this.resource,\n    });\n\n    const defaultExporter = this._buildExporterFromEnv();\n    if (defaultExporter !== undefined) {\n      const batchProcessor = new BatchSpanProcessor(defaultExporter);\n      this.activeSpanProcessor = batchProcessor;\n    } else {\n      this.activeSpanProcessor = new NoopSpanProcessor();\n    }\n  }\n\n  getTracer(name: string, version?: string, options?: { schemaUrl?: string }): Tracer {\n    const key = `${name}@${version || ''}:${options?.schemaUrl || ''}`;\n    if (!this._tracers.has(key)) {\n      this._tracers.set(key, new Tracer({ name, version, schemaUrl: options?.schemaUrl }, this._config, this));\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this._tracers.get(key)!;\n  }\n\n  /**\n   * Adds a new {@link SpanProcessor} to this tracer.\n   * @param spanProcessor the new SpanProcessor to be added.\n   */\n  addSpanProcessor(spanProcessor: SpanProcessor): void {\n    if (this._registeredSpanProcessors.length === 0) {\n      // since we might have enabled by default a batchProcessor, we disable it\n      // before adding the new one\n      this.activeSpanProcessor\n        .shutdown()\n        .catch(err =>\n          diag.error(\n            'Error while trying to shutdown current span processor',\n            err\n          )\n        );\n    }\n    this._registeredSpanProcessors.push(spanProcessor);\n    this.activeSpanProcessor = new MultiSpanProcessor(\n      this._registeredSpanProcessors\n    );\n  }\n\n  getActiveSpanProcessor(): SpanProcessor {\n    return this.activeSpanProcessor;\n  }\n\n  /**\n   * Register this TracerProvider for use with the OpenTelemetry API.\n   * Undefined values may be replaced with defaults, and\n   * null values will be skipped.\n   *\n   * @param config Configuration object for SDK registration\n   */\n  register(config: SDKRegistrationConfig = {}): void {\n    trace.setGlobalTracerProvider(this);\n    if (config.propagator === undefined) {\n      config.propagator = this._buildPropagatorFromEnv();\n    }\n\n    if (config.contextManager) {\n      context.setGlobalContextManager(config.contextManager);\n    }\n\n    if (config.propagator) {\n      propagation.setGlobalPropagator(config.propagator);\n    }\n  }\n\n  forceFlush(): Promise<void> {\n    const timeout = this._config.forceFlushTimeoutMillis;\n    const promises = this._registeredSpanProcessors.map(\n      (spanProcessor: SpanProcessor) => {\n        return new Promise(resolve => {\n          let state: ForceFlushState;\n          const timeoutInterval = setTimeout(() => {\n            resolve(\n              new Error(\n                `Span processor did not completed within timeout period of ${timeout} ms`\n              )\n            );\n            state = ForceFlushState.timeout;\n          }, timeout);\n\n          spanProcessor\n            .forceFlush()\n            .then(() => {\n              clearTimeout(timeoutInterval);\n              if (state !== ForceFlushState.timeout) {\n                state = ForceFlushState.resolved;\n                resolve(state);\n              }\n            })\n            .catch(error => {\n              clearTimeout(timeoutInterval);\n              state = ForceFlushState.error;\n              resolve(error);\n            });\n        });\n      }\n    );\n\n    return new Promise<void>((resolve, reject) => {\n      Promise.all(promises)\n        .then(results => {\n          const errors = results.filter(\n            result => result !== ForceFlushState.resolved\n          );\n          if (errors.length > 0) {\n            reject(errors);\n          } else {\n            resolve();\n          }\n        })\n        .catch(error => reject([error]));\n    });\n  }\n\n  shutdown(): Promise<void> {\n    return this.activeSpanProcessor.shutdown();\n  }\n\n  protected _getPropagator(name: string): TextMapPropagator | undefined {\n    return BasicTracerProvider._registeredPropagators.get(name)?.();\n  }\n\n  protected _getSpanExporter(name: string): SpanExporter | undefined {\n    return BasicTracerProvider._registeredExporters.get(name)?.();\n  }\n\n  protected _buildPropagatorFromEnv(): TextMapPropagator | undefined {\n    // per spec, propagators from env must be deduplicated\n    const uniquePropagatorNames = Array.from(\n      new Set(getEnv().OTEL_PROPAGATORS)\n    );\n\n    const propagators = uniquePropagatorNames.map(name => {\n      const propagator = this._getPropagator(name);\n      if (!propagator) {\n        diag.warn(\n          `Propagator \"${name}\" requested through environment variable is unavailable.`\n        );\n      }\n\n      return propagator;\n    });\n    const validPropagators = propagators.reduce<TextMapPropagator[]>(\n      (list, item) => {\n        if (item) {\n          list.push(item);\n        }\n        return list;\n      },\n      []\n    );\n\n    if (validPropagators.length === 0) {\n      return;\n    } else if (uniquePropagatorNames.length === 1) {\n      return validPropagators[0];\n    } else {\n      return new CompositePropagator({\n        propagators: validPropagators,\n      });\n    }\n  }\n\n  protected _buildExporterFromEnv(): SpanExporter | undefined {\n    const exporterName = getEnv().OTEL_TRACES_EXPORTER;\n    if (exporterName === 'none') return;\n    const exporter = this._getSpanExporter(exporterName);\n    if (!exporter) {\n      diag.error(\n        `Exporter \"${exporterName}\" requested through environment variable is unavailable.`\n      );\n    }\n    return exporter;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './Resource';\nexport * from './platform';\nexport * from './types';\nexport * from './config';\nexport * from './detectors';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { SDK_INFO } from '@opentelemetry/core';\nimport { ResourceAttributes } from './types';\nimport { defaultServiceName } from './platform';\n\n/**\n * A Resource describes the entity for which a signals (metrics or trace) are\n * collected.\n */\nexport class Resource {\n  static readonly EMPTY = new Resource({});\n\n  /**\n   * Returns an empty Resource\n   */\n  static empty(): Resource {\n    return Resource.EMPTY;\n  }\n\n  /**\n   * Returns a Resource that indentifies the SDK in use.\n   */\n  static default(): Resource {\n    return new Resource({\n      [SemanticResourceAttributes.SERVICE_NAME]: defaultServiceName(),\n      [SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE]:\n        SDK_INFO[SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE],\n      [SemanticResourceAttributes.TELEMETRY_SDK_NAME]:\n        SDK_INFO[SemanticResourceAttributes.TELEMETRY_SDK_NAME],\n      [SemanticResourceAttributes.TELEMETRY_SDK_VERSION]:\n        SDK_INFO[SemanticResourceAttributes.TELEMETRY_SDK_VERSION],\n    });\n  }\n\n  constructor(\n    /**\n     * A dictionary of attributes with string keys and values that provide\n     * information about the entity as numbers, strings or booleans\n     * TODO: Consider to add check/validation on attributes.\n     */\n    readonly attributes: ResourceAttributes\n  ) {}\n\n  /**\n   * Returns a new, merged {@link Resource} by merging the current Resource\n   * with the other Resource. In case of a collision, other Resource takes\n   * precedence.\n   *\n   * @param other the Resource that will be merged with this.\n   * @returns the newly merged Resource.\n   */\n  merge(other: Resource | null): Resource {\n    if (!other || !Object.keys(other.attributes).length) return this;\n\n    // SpanAttributes from resource overwrite attributes from other resource.\n    const mergedAttributes = Object.assign(\n      {},\n      this.attributes,\n      other.attributes\n    );\n    return new Resource(mergedAttributes);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './default-service-name';\nexport * from './detect-resources';\nexport * from './HostDetector';\nexport * from './OSDetector';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function defaultServiceName(): string {\n  return 'unknown_service';\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Resource } from '../../Resource';\nimport { ResourceDetectionConfig } from '../../config';\nimport { diag } from '@opentelemetry/api';\n\n/**\n * Runs all resource detectors and returns the results merged into a single\n * Resource.\n *\n * @param config Configuration for resource detection\n */\nexport const detectResources = async (\n  config: ResourceDetectionConfig = {}\n): Promise<Resource> => {\n  const internalConfig: ResourceDetectionConfig = Object.assign(config);\n\n  const resources: Resource[] = await Promise.all(\n    (internalConfig.detectors || []).map(async d => {\n      try {\n        const resource = await d.detect(internalConfig);\n        diag.debug(`${d.constructor.name} found resource.`, resource);\n        return resource;\n      } catch (e) {\n        diag.debug(`${d.constructor.name} failed: ${e.message}`);\n        return Resource.empty();\n      }\n    })\n  );\n\n  return resources.reduce(\n    (acc, resource) => acc.merge(resource),\n    Resource.empty()\n  );\n};\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { noopDetector } from '../../detectors/NoopDetector';\n\nexport const hostDetector = noopDetector;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Resource } from '../Resource';\nimport { Detector } from '../types';\n\nexport class NoopDetector implements Detector {\n  async detect(): Promise<Resource> {\n    return new Resource({});\n  }\n}\n\nexport const noopDetector = new NoopDetector();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { noopDetector } from '../../detectors/NoopDetector';\n\nexport const osDetector = noopDetector;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Resource } from './Resource';\nimport { ResourceDetectionConfig } from './config';\nimport { SpanAttributes } from '@opentelemetry/api';\n\n/**\n * Interface for Resource attributes.\n * General `Attributes` interface is added in api v1.1.0.\n * To backward support older api (1.0.x), the deprecated `SpanAttributes` is used here.\n */\nexport type ResourceAttributes = SpanAttributes;\n\n/**\n * Interface for a Resource Detector. In order to detect resources in parallel\n * a detector returns a Promise containing a Resource.\n */\nexport interface Detector {\n  detect(config?: ResourceDetectionConfig): Promise<Resource>;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Detector } from './types';\n\n/**\n * ResourceDetectionConfig provides an interface for configuring resource auto-detection.\n */\nexport interface ResourceDetectionConfig {\n  detectors?: Array<Detector>;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './BrowserDetector';\nexport * from './EnvDetector';\nexport * from './ProcessDetector';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { Detector, Resource, ResourceDetectionConfig } from '..';\nimport { ResourceAttributes } from '../types';\n\n/**\n * BrowserDetector will be used to detect the resources related to browser.\n */\nclass BrowserDetector implements Detector {\n  async detect(config?: ResourceDetectionConfig): Promise<Resource> {\n    const isBrowser = typeof navigator !== 'undefined';\n    if (!isBrowser) {\n      return Resource.empty();\n    }\n    const browserResource: ResourceAttributes = {\n      [SemanticResourceAttributes.PROCESS_RUNTIME_NAME]: 'browser',\n      [SemanticResourceAttributes.PROCESS_RUNTIME_DESCRIPTION]: 'Web Browser',\n      [SemanticResourceAttributes.PROCESS_RUNTIME_VERSION]: navigator.userAgent\n    };\n    return this._getResourceAttributes(browserResource, config);\n  }\n  /**\n   * Validates process resource attribute map from process variables\n   *\n   * @param browserResource The un-sanitized resource attributes from process as key/value pairs.\n   * @param config: Config\n   * @returns The sanitized resource attributes.\n   */\n  private _getResourceAttributes(\n    browserResource: ResourceAttributes,\n    _config?: ResourceDetectionConfig\n  ) {\n    if (\n      browserResource[SemanticResourceAttributes.PROCESS_RUNTIME_VERSION] === ''\n    ) {\n      diag.debug(\n        'BrowserDetector failed: Unable to find required browser resources. '\n      );\n      return Resource.empty();\n    } else {\n      return new Resource({\n        ...browserResource,\n      });\n    }\n  }\n}\n\n\nexport const browserDetector = new BrowserDetector();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport { getEnv } from '@opentelemetry/core';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { Resource } from '../Resource';\nimport { Detector, ResourceAttributes } from '../types';\nimport { ResourceDetectionConfig } from '../config';\n\n/**\n * EnvDetector can be used to detect the presence of and create a Resource\n * from the OTEL_RESOURCE_ATTRIBUTES environment variable.\n */\nclass EnvDetector implements Detector {\n  // Type, attribute keys, and attribute values should not exceed 256 characters.\n  private readonly _MAX_LENGTH = 255;\n\n  // OTEL_RESOURCE_ATTRIBUTES is a comma-separated list of attributes.\n  private readonly _COMMA_SEPARATOR = ',';\n\n  // OTEL_RESOURCE_ATTRIBUTES contains key value pair separated by '='.\n  private readonly _LABEL_KEY_VALUE_SPLITTER = '=';\n\n  private readonly _ERROR_MESSAGE_INVALID_CHARS =\n    'should be a ASCII string with a length greater than 0 and not exceed ' +\n    this._MAX_LENGTH +\n    ' characters.';\n\n  private readonly _ERROR_MESSAGE_INVALID_VALUE =\n    'should be a ASCII string with a length not exceed ' +\n    this._MAX_LENGTH +\n    ' characters.';\n\n  /**\n   * Returns a {@link Resource} populated with attributes from the\n   * OTEL_RESOURCE_ATTRIBUTES environment variable. Note this is an async\n   * function to conform to the Detector interface.\n   *\n   * @param config The resource detection config\n   */\n  async detect(_config?: ResourceDetectionConfig): Promise<Resource> {\n    const attributes: ResourceAttributes = {};\n    const env = getEnv();\n\n    const rawAttributes = env.OTEL_RESOURCE_ATTRIBUTES;\n    const serviceName = env.OTEL_SERVICE_NAME;\n\n    if (rawAttributes) {\n      try {\n        const parsedAttributes = this._parseResourceAttributes(rawAttributes);\n        Object.assign(attributes, parsedAttributes);\n      } catch (e) {\n        diag.debug(`EnvDetector failed: ${e.message}`);\n      }\n    }\n\n    if (serviceName) {\n      attributes[SemanticResourceAttributes.SERVICE_NAME] = serviceName;\n    }\n\n    return new Resource(attributes);\n  }\n\n  /**\n   * Creates an attribute map from the OTEL_RESOURCE_ATTRIBUTES environment\n   * variable.\n   *\n   * OTEL_RESOURCE_ATTRIBUTES: A comma-separated list of attributes describing\n   * the source in more detail, e.g. “key1=val1,key2=val2”. Domain names and\n   * paths are accepted as attribute keys. Values may be quoted or unquoted in\n   * general. If a value contains whitespaces, =, or \" characters, it must\n   * always be quoted.\n   *\n   * @param rawEnvAttributes The resource attributes as a comma-seperated list\n   * of key/value pairs.\n   * @returns The sanitized resource attributes.\n   */\n  private _parseResourceAttributes(\n    rawEnvAttributes?: string\n  ): ResourceAttributes {\n    if (!rawEnvAttributes) return {};\n\n    const attributes: ResourceAttributes = {};\n    const rawAttributes: string[] = rawEnvAttributes.split(\n      this._COMMA_SEPARATOR,\n      -1\n    );\n    for (const rawAttribute of rawAttributes) {\n      const keyValuePair: string[] = rawAttribute.split(\n        this._LABEL_KEY_VALUE_SPLITTER,\n        -1\n      );\n      if (keyValuePair.length !== 2) {\n        continue;\n      }\n      let [key, value] = keyValuePair;\n      // Leading and trailing whitespaces are trimmed.\n      key = key.trim();\n      value = value.trim().split('^\"|\"$').join('');\n      if (!this._isValidAndNotEmpty(key)) {\n        throw new Error(`Attribute key ${this._ERROR_MESSAGE_INVALID_CHARS}`);\n      }\n      if (!this._isValid(value)) {\n        throw new Error(`Attribute value ${this._ERROR_MESSAGE_INVALID_VALUE}`);\n      }\n      attributes[key] = value;\n    }\n    return attributes;\n  }\n\n  /**\n   * Determines whether the given String is a valid printable ASCII string with\n   * a length not exceed _MAX_LENGTH characters.\n   *\n   * @param str The String to be validated.\n   * @returns Whether the String is valid.\n   */\n  private _isValid(name: string): boolean {\n    return name.length <= this._MAX_LENGTH && this._isPrintableString(name);\n  }\n\n  private _isPrintableString(str: string): boolean {\n    for (let i = 0; i < str.length; i++) {\n      const ch: string = str.charAt(i);\n      if (ch <= ' ' || ch >= '~') {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determines whether the given String is a valid printable ASCII string with\n   * a length greater than 0 and not exceed _MAX_LENGTH characters.\n   *\n   * @param str The String to be validated.\n   * @returns Whether the String is valid and not empty.\n   */\n  private _isValidAndNotEmpty(str: string): boolean {\n    return str.length > 0 && this._isValid(str);\n  }\n}\n\nexport const envDetector = new EnvDetector();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { Resource } from '../Resource';\nimport { Detector, ResourceAttributes } from '../types';\nimport { ResourceDetectionConfig } from '../config';\n\n/**\n * ProcessDetector will be used to detect the resources related current process running\n * and being instrumented from the NodeJS Process module.\n */\nclass ProcessDetector implements Detector {\n  async detect(config?: ResourceDetectionConfig): Promise<Resource> {\n    // Skip if not in Node.js environment.\n    if (typeof process !== 'object') {\n      return Resource.empty();\n    }\n    const processResource: ResourceAttributes = {\n      [SemanticResourceAttributes.PROCESS_PID]: process.pid,\n      [SemanticResourceAttributes.PROCESS_EXECUTABLE_NAME]: process.title || '',\n      [SemanticResourceAttributes.PROCESS_COMMAND]: process.argv[1] || '',\n      [SemanticResourceAttributes.PROCESS_COMMAND_LINE]:\n        process.argv.join(' ') || '',\n      [SemanticResourceAttributes.PROCESS_RUNTIME_VERSION]: process.versions.node,\n      [SemanticResourceAttributes.PROCESS_RUNTIME_NAME]: 'nodejs',\n      [SemanticResourceAttributes.PROCESS_RUNTIME_DESCRIPTION]: 'Node.js',\n    };\n    return this._getResourceAttributes(processResource, config);\n  }\n  /**\n   * Validates process resource attribute map from process varaibls\n   *\n   * @param processResource The unsantized resource attributes from process as key/value pairs.\n   * @param config: Config\n   * @returns The sanitized resource attributes.\n   */\n  private _getResourceAttributes(\n    processResource: ResourceAttributes,\n    _config?: ResourceDetectionConfig\n  ) {\n    if (\n      processResource[SemanticResourceAttributes.PROCESS_EXECUTABLE_NAME] ===\n        '' ||\n      processResource[SemanticResourceAttributes.PROCESS_EXECUTABLE_PATH] ===\n        '' ||\n      processResource[SemanticResourceAttributes.PROCESS_COMMAND] === '' ||\n      processResource[SemanticResourceAttributes.PROCESS_COMMAND_LINE] === '' ||\n      processResource[SemanticResourceAttributes.PROCESS_RUNTIME_VERSION] === ''\n    ) {\n      diag.debug(\n        'ProcessDetector failed: Unable to find required process resources. '\n      );\n      return Resource.empty();\n    } else {\n      return new Resource({\n        ...processResource,\n      });\n    }\n  }\n}\n\nexport const processDetector = new ProcessDetector();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '@opentelemetry/api';\nimport { globalErrorHandler } from '@opentelemetry/core';\nimport { ReadableSpan } from './export/ReadableSpan';\nimport { Span } from './Span';\nimport { SpanProcessor } from './SpanProcessor';\n\n/**\n * Implementation of the {@link SpanProcessor} that simply forwards all\n * received events to a list of {@link SpanProcessor}s.\n */\nexport class MultiSpanProcessor implements SpanProcessor {\n  constructor(private readonly _spanProcessors: SpanProcessor[]) {}\n\n  forceFlush(): Promise<void> {\n    const promises: Promise<void>[] = [];\n\n    for (const spanProcessor of this._spanProcessors) {\n      promises.push(spanProcessor.forceFlush());\n    }\n    return new Promise(resolve => {\n      Promise.all(promises)\n        .then(() => {\n          resolve();\n        })\n        .catch(error => {\n          globalErrorHandler(\n            error || new Error('MultiSpanProcessor: forceFlush failed')\n          );\n          resolve();\n        });\n    });\n  }\n\n  onStart(span: Span, context: Context): void {\n    for (const spanProcessor of this._spanProcessors) {\n      spanProcessor.onStart(span, context);\n    }\n  }\n\n  onEnd(span: ReadableSpan): void {\n    for (const spanProcessor of this._spanProcessors) {\n      spanProcessor.onEnd(span);\n    }\n  }\n\n  shutdown(): Promise<void> {\n    const promises: Promise<void>[] = [];\n\n    for (const spanProcessor of this._spanProcessors) {\n      promises.push(spanProcessor.shutdown());\n    }\n    return new Promise((resolve, reject) => {\n      Promise.all(promises).then(() => {\n        resolve();\n      }, reject);\n    });\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '@opentelemetry/api';\nimport { ReadableSpan } from './ReadableSpan';\nimport { Span } from '../Span';\nimport { SpanProcessor } from '../SpanProcessor';\n\n/** No-op implementation of SpanProcessor */\nexport class NoopSpanProcessor implements SpanProcessor {\n  onStart(_span: Span, _context: Context): void {}\n  onEnd(_span: ReadableSpan): void {}\n  shutdown(): Promise<void> {\n    return Promise.resolve();\n  }\n  forceFlush(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './export/BatchSpanProcessor';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BatchSpanProcessorBase } from '../../../export/BatchSpanProcessorBase';\nimport { SpanExporter } from '../../../export/SpanExporter';\nimport { BatchSpanProcessorBrowserConfig } from '../../../types';\n\nexport class BatchSpanProcessor extends BatchSpanProcessorBase<BatchSpanProcessorBrowserConfig> {\n  private _visibilityChangeListener?: () => void;\n  private _pageHideListener?: () => void;\n\n  constructor(_exporter: SpanExporter, config?: BatchSpanProcessorBrowserConfig) {\n    super(_exporter, config);\n    this.onInit(config);\n  }\n\n  private onInit(config?: BatchSpanProcessorBrowserConfig): void {\n    if (config?.disableAutoFlushOnDocumentHide !== true && document != null) {\n      this._visibilityChangeListener = () => {\n        if (document.visibilityState === 'hidden') {\n          void this.forceFlush();\n        }\n      };\n      this._pageHideListener = () => {\n        void this.forceFlush();\n      };\n      document.addEventListener('visibilitychange', this._visibilityChangeListener);\n\n      // use 'pagehide' event as a fallback for Safari; see https://bugs.webkit.org/show_bug.cgi?id=116769\n      document.addEventListener('pagehide', this._pageHideListener);\n    }\n  }\n\n  protected onShutdown(): void {\n    if (this._visibilityChangeListener) {\n      document.removeEventListener('visibilitychange', this._visibilityChangeListener);\n    }\n    if (this._pageHideListener) {\n      document.removeEventListener('pagehide', this._pageHideListener);\n    }\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context, Context, TraceFlags } from '@opentelemetry/api';\nimport {\n  BindOnceFuture,\n  ExportResultCode,\n  getEnv,\n  globalErrorHandler,\n  suppressTracing,\n  unrefTimer,\n} from '@opentelemetry/core';\nimport { Span } from '../Span';\nimport { SpanProcessor } from '../SpanProcessor';\nimport { BufferConfig } from '../types';\nimport { ReadableSpan } from './ReadableSpan';\nimport { SpanExporter } from './SpanExporter';\n\n/**\n * Implementation of the {@link SpanProcessor} that batches spans exported by\n * the SDK then pushes them to the exporter pipeline.\n */\nexport abstract class BatchSpanProcessorBase<T extends BufferConfig> implements SpanProcessor {\n  private readonly _maxExportBatchSize: number;\n  private readonly _maxQueueSize: number;\n  private readonly _scheduledDelayMillis: number;\n  private readonly _exportTimeoutMillis: number;\n\n  private _finishedSpans: ReadableSpan[] = [];\n  private _timer: NodeJS.Timeout | undefined;\n  private _shutdownOnce: BindOnceFuture<void>;\n\n  constructor(private readonly _exporter: SpanExporter, config?: T) {\n    const env = getEnv();\n    this._maxExportBatchSize =\n      typeof config?.maxExportBatchSize === 'number'\n        ? config.maxExportBatchSize\n        : env.OTEL_BSP_MAX_EXPORT_BATCH_SIZE;\n    this._maxQueueSize =\n      typeof config?.maxQueueSize === 'number'\n        ? config.maxQueueSize\n        : env.OTEL_BSP_MAX_QUEUE_SIZE;\n    this._scheduledDelayMillis =\n      typeof config?.scheduledDelayMillis === 'number'\n        ? config.scheduledDelayMillis\n        : env.OTEL_BSP_SCHEDULE_DELAY;\n    this._exportTimeoutMillis =\n      typeof config?.exportTimeoutMillis === 'number'\n        ? config.exportTimeoutMillis\n        : env.OTEL_BSP_EXPORT_TIMEOUT;\n\n    this._shutdownOnce = new BindOnceFuture(this._shutdown, this);\n  }\n\n  forceFlush(): Promise<void> {\n    if (this._shutdownOnce.isCalled) {\n      return this._shutdownOnce.promise;\n    }\n    return this._flushAll();\n  }\n\n  // does nothing.\n  onStart(_span: Span, _parentContext: Context): void {}\n\n  onEnd(span: ReadableSpan): void {\n    if (this._shutdownOnce.isCalled) {\n      return;\n    }\n\n    if ((span.spanContext().traceFlags & TraceFlags.SAMPLED) === 0) {\n      return;\n    }\n\n    this._addToBuffer(span);\n  }\n\n  shutdown(): Promise<void> {\n    return this._shutdownOnce.call();\n  }\n\n  private _shutdown() {\n    return Promise.resolve()\n      .then(() => {\n        return this.onShutdown();\n      })\n      .then(() => {\n        return this._flushAll();\n      })\n      .then(() => {\n        return this._exporter.shutdown();\n      });\n  }\n\n  /** Add a span in the buffer. */\n  private _addToBuffer(span: ReadableSpan) {\n    if (this._finishedSpans.length >= this._maxQueueSize) {\n      // limit reached, drop span\n      return;\n    }\n    this._finishedSpans.push(span);\n    this._maybeStartTimer();\n  }\n\n  /**\n   * Send all spans to the exporter respecting the batch size limit\n   * This function is used only on forceFlush or shutdown,\n   * for all other cases _flush should be used\n   * */\n  private _flushAll(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const promises = [];\n      // calculate number of batches\n      const count = Math.ceil(\n        this._finishedSpans.length / this._maxExportBatchSize\n      );\n      for (let i = 0, j = count; i < j; i++) {\n        promises.push(this._flushOneBatch());\n      }\n      Promise.all(promises)\n        .then(() => {\n          resolve();\n        })\n        .catch(reject);\n    });\n  }\n\n  private _flushOneBatch(): Promise<void> {\n    this._clearTimer();\n    if (this._finishedSpans.length === 0) {\n      return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n      const timer = setTimeout(() => {\n        // don't wait anymore for export, this way the next batch can start\n        reject(new Error('Timeout'));\n      }, this._exportTimeoutMillis);\n      // prevent downstream exporter calls from generating spans\n      context.with(suppressTracing(context.active()), () => {\n        // Reset the finished spans buffer here because the next invocations of the _flush method\n        // could pass the same finished spans to the exporter if the buffer is cleared\n        // outside of the execution of this callback.\n        this._exporter.export(\n          this._finishedSpans.splice(0, this._maxExportBatchSize),\n          result => {\n            clearTimeout(timer);\n            if (result.code === ExportResultCode.SUCCESS) {\n              resolve();\n            } else {\n              reject(\n                result.error ??\n                  new Error('BatchSpanProcessor: span export failed')\n              );\n            }\n          }\n        );\n      });\n    });\n  }\n\n  private _maybeStartTimer() {\n    if (this._timer !== undefined) return;\n    this._timer = setTimeout(() => {\n      this._flushOneBatch()\n        .then(() => {\n          if (this._finishedSpans.length > 0) {\n            this._clearTimer();\n            this._maybeStartTimer();\n          }\n        })\n        .catch(e => {\n          globalErrorHandler(e);\n        });\n    }, this._scheduledDelayMillis);\n    unrefTimer(this._timer);\n  }\n\n  private _clearTimer() {\n    if (this._timer !== undefined) {\n      clearTimeout(this._timer);\n      this._timer = undefined;\n    }\n  }\n\n  protected abstract onShutdown(): void;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpanExporter } from './SpanExporter';\nimport { ReadableSpan } from './ReadableSpan';\nimport {\n  ExportResult,\n  ExportResultCode,\n  hrTimeToMicroseconds,\n} from '@opentelemetry/core';\n\n/**\n * This is implementation of {@link SpanExporter} that prints spans to the\n * console. This class can be used for diagnostic purposes.\n */\n\n/* eslint-disable no-console */\nexport class ConsoleSpanExporter implements SpanExporter {\n  /**\n   * Export spans.\n   * @param spans\n   * @param resultCallback\n   */\n  export(\n    spans: ReadableSpan[],\n    resultCallback: (result: ExportResult) => void\n  ): void {\n    return this._sendSpans(spans, resultCallback);\n  }\n\n  /**\n   * Shutdown the exporter.\n   */\n  shutdown(): Promise<void> {\n    this._sendSpans([]);\n    return Promise.resolve();\n  }\n\n  /**\n   * converts span info into more readable format\n   * @param span\n   */\n  private _exportInfo(span: ReadableSpan) {\n    return {\n      traceId: span.spanContext().traceId,\n      parentId: span.parentSpanId,\n      name: span.name,\n      id: span.spanContext().spanId,\n      kind: span.kind,\n      timestamp: hrTimeToMicroseconds(span.startTime),\n      duration: hrTimeToMicroseconds(span.duration),\n      attributes: span.attributes,\n      status: span.status,\n      events: span.events,\n      links: span.links\n    };\n  }\n\n  /**\n   * Showing spans in console\n   * @param spans\n   * @param done\n   */\n  private _sendSpans(\n    spans: ReadableSpan[],\n    done?: (result: ExportResult) => void\n  ): void {\n    for (const span of spans) {\n      console.dir(this._exportInfo(span), { depth: 3 });\n    }\n    if (done) {\n      return done({ code: ExportResultCode.SUCCESS });\n    }\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpanExporter } from './SpanExporter';\nimport { ReadableSpan } from './ReadableSpan';\nimport { ExportResult, ExportResultCode } from '@opentelemetry/core';\n\n/**\n * This class can be used for testing purposes. It stores the exported spans\n * in a list in memory that can be retrieved using the `getFinishedSpans()`\n * method.\n */\nexport class InMemorySpanExporter implements SpanExporter {\n  private _finishedSpans: ReadableSpan[] = [];\n  /**\n   * Indicates if the exporter has been \"shutdown.\"\n   * When false, exported spans will not be stored in-memory.\n   */\n  protected _stopped = false;\n\n  export(\n    spans: ReadableSpan[],\n    resultCallback: (result: ExportResult) => void\n  ): void {\n    if (this._stopped)\n      return resultCallback({\n        code: ExportResultCode.FAILED,\n        error: new Error('Exporter has been stopped'),\n      });\n    this._finishedSpans.push(...spans);\n\n    setTimeout(() => resultCallback({ code: ExportResultCode.SUCCESS }), 0);\n  }\n\n  shutdown(): Promise<void> {\n    this._stopped = true;\n    this._finishedSpans = [];\n    return Promise.resolve();\n  }\n\n  reset(): void {\n    this._finishedSpans = [];\n  }\n\n  getFinishedSpans(): ReadableSpan[] {\n    return this._finishedSpans;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  SpanKind,\n  SpanStatus,\n  SpanAttributes,\n  HrTime,\n  Link,\n  SpanContext,\n} from '@opentelemetry/api';\nimport { Resource } from '@opentelemetry/resources';\nimport { InstrumentationLibrary } from '@opentelemetry/core';\nimport { TimedEvent } from '../TimedEvent';\n\nexport interface ReadableSpan {\n  readonly name: string;\n  readonly kind: SpanKind;\n  readonly spanContext: () => SpanContext;\n  readonly parentSpanId?: string;\n  readonly startTime: HrTime;\n  readonly endTime: HrTime;\n  readonly status: SpanStatus;\n  readonly attributes: SpanAttributes;\n  readonly links: Link[];\n  readonly events: TimedEvent[];\n  readonly duration: HrTime;\n  readonly ended: boolean;\n  readonly resource: Resource;\n  readonly instrumentationLibrary: InstrumentationLibrary;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context, Context, TraceFlags } from '@opentelemetry/api';\nimport {\n  ExportResultCode,\n  globalErrorHandler,\n  suppressTracing,\n  BindOnceFuture,\n} from '@opentelemetry/core';\nimport { Span } from '../Span';\nimport { SpanProcessor } from '../SpanProcessor';\nimport { ReadableSpan } from './ReadableSpan';\nimport { SpanExporter } from './SpanExporter';\n\n/**\n * An implementation of the {@link SpanProcessor} that converts the {@link Span}\n * to {@link ReadableSpan} and passes it to the configured exporter.\n *\n * Only spans that are sampled are converted.\n */\nexport class SimpleSpanProcessor implements SpanProcessor {\n  private _shutdownOnce: BindOnceFuture<void>;\n\n  constructor(private readonly _exporter: SpanExporter) {\n    this._shutdownOnce = new BindOnceFuture(this._shutdown, this);\n  }\n\n  forceFlush(): Promise<void> {\n    // do nothing as all spans are being exported without waiting\n    return Promise.resolve();\n  }\n\n  // does nothing.\n  onStart(_span: Span, _parentContext: Context): void {}\n\n  onEnd(span: ReadableSpan): void {\n    if (this._shutdownOnce.isCalled) {\n      return;\n    }\n\n    if ((span.spanContext().traceFlags & TraceFlags.SAMPLED) === 0) {\n      return;\n    }\n\n    // prevent downstream exporter calls from generating spans\n    context.with(suppressTracing(context.active()), () => {\n      this._exporter.export([span], result => {\n        if (result.code !== ExportResultCode.SUCCESS) {\n          globalErrorHandler(\n            result.error ??\n              new Error(\n                `SimpleSpanProcessor: span export failed (status ${result})`\n              )\n          );\n        }\n      });\n    });\n  }\n\n  shutdown(): Promise<void> {\n    return this._shutdownOnce.call();\n  }\n\n  private _shutdown(): Promise<void> {\n    return this._exporter.shutdown();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExportResult } from '@opentelemetry/core';\nimport { ReadableSpan } from './ReadableSpan';\n\n/**\n * An interface that allows different tracing services to export recorded data\n * for sampled spans in their own format.\n *\n * To export data this MUST be register to the Tracer SDK using a optional\n * config.\n */\nexport interface SpanExporter {\n  /**\n   * Called to export sampled {@link ReadableSpan}s.\n   * @param spans the list of sampled Spans to be exported.\n   */\n  export(\n    spans: ReadableSpan[],\n    resultCallback: (result: ExportResult) => void\n  ): void;\n\n  /** Stops the exporter. */\n  shutdown(): Promise<void>;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '@opentelemetry/api';\nimport { ReadableSpan } from './export/ReadableSpan';\nimport { Span } from './Span';\n\n/**\n * SpanProcessor is the interface Tracer SDK uses to allow synchronous hooks\n * for when a {@link Span} is started or when a {@link Span} is ended.\n */\nexport interface SpanProcessor {\n  /**\n   * Forces to export all finished spans\n   */\n  forceFlush(): Promise<void>;\n\n  /**\n   * Called when a {@link Span} is started, if the `span.isRecording()`\n   * returns true.\n   * @param span the Span that just started.\n   */\n  onStart(span: Span, parentContext: Context): void;\n\n  /**\n   * Called when a {@link ReadableSpan} is ended, if the `span.isRecording()`\n   * returns true.\n   * @param span the Span that just ended.\n   */\n  onEnd(span: ReadableSpan): void;\n\n  /**\n   * Shuts down the processor. Called when SDK is shut down. This is an\n   * opportunity for processor to do any cleanup required.\n   */\n  shutdown(): Promise<void>;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HrTime, SpanAttributes } from '@opentelemetry/api';\n\n/**\n * Represents a timed event.\n * A timed event is an event with a timestamp.\n */\nexport interface TimedEvent {\n  time: HrTime;\n  /** The name of the event. */\n  name: string;\n  /** The attributes of the event. */\n  attributes?: SpanAttributes;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TextMapPropagator, Sampler } from '@opentelemetry/api';\nimport { IdGenerator } from '@opentelemetry/core';\n\nimport { ContextManager } from '@opentelemetry/api';\nimport { Resource } from '@opentelemetry/resources';\n\n/**\n * TracerConfig provides an interface for configuring a Basic Tracer.\n */\nexport interface TracerConfig {\n  /**\n   * Sampler determines if a span should be recorded or should be a NoopSpan.\n   */\n  sampler?: Sampler;\n\n  /** General Limits */\n  generalLimits?: GeneralLimits;\n\n  /** Span Limits */\n  spanLimits?: SpanLimits;\n\n  /** Resource associated with trace telemetry  */\n  resource?: Resource;\n\n  /**\n   * Generator of trace and span IDs\n   * The default idGenerator generates random ids\n   */\n  idGenerator?: IdGenerator;\n\n  /**\n   * How long the forceFlush can run before it is cancelled.\n   * The default value is 30000ms\n   */\n  forceFlushTimeoutMillis?: number;\n}\n\n/**\n * Configuration options for registering the API with the SDK.\n * Undefined values may be substituted for defaults, and null\n * values will not be registered.\n */\nexport interface SDKRegistrationConfig {\n  /** Propagator to register as the global propagator */\n  propagator?: TextMapPropagator | null;\n\n  /** Context manager to register as the global context manager */\n  contextManager?: ContextManager | null;\n}\n\n/** Global configuration limits of trace service */\nexport interface GeneralLimits {\n  /** attributeValueLengthLimit is maximum allowed attribute value size */\n  attributeValueLengthLimit?: number;\n  /** attributeCountLimit is number of attributes per trace */\n  attributeCountLimit?: number;\n}\n\n/** Global configuration of trace service */\nexport interface SpanLimits {\n  /** attributeValueLengthLimit is maximum allowed attribute value size */\n  attributeValueLengthLimit?: number;\n  /** attributeCountLimit is number of attributes per span */\n  attributeCountLimit?: number;\n  /** linkCountLimit is number of links per span */\n  linkCountLimit?: number;\n  /** eventCountLimit is number of message events per span */\n  eventCountLimit?: number;\n}\n\n/** Interface configuration for a buffer. */\nexport interface BufferConfig {\n  /** The maximum batch size of every export. It must be smaller or equal to\n   * maxQueueSize. The default value is 512. */\n  maxExportBatchSize?: number;\n\n  /** The delay interval in milliseconds between two consecutive exports.\n   *  The default value is 5000ms. */\n  scheduledDelayMillis?: number;\n\n  /** How long the export can run before it is cancelled.\n   * The default value is 30000ms */\n  exportTimeoutMillis?: number;\n\n  /** The maximum queue size. After the size is reached spans are dropped.\n   * The default value is 2048. */\n  maxQueueSize?: number;\n}\n\n/** Interface configuration for BatchSpanProcessor on browser */\nexport interface BatchSpanProcessorBrowserConfig extends BufferConfig {\n  /** Disable flush when a user navigates to a new page, closes the tab or the browser, or,\n   * on mobile, switches to a different app. Auto flush is enabled by default. */\n  disableAutoFlushOnDocumentHide?: boolean;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, ContextManager, ROOT_CONTEXT } from '@opentelemetry/api';\n\n/**\n * Stack Context Manager for managing the state in web\n * it doesn't fully support the async calls though\n */\nexport class StackContextManager implements ContextManager {\n  /**\n   * whether the context manager is enabled or not\n   */\n  private _enabled = false;\n\n  /**\n   * Keeps the reference to current context\n   */\n  public _currentContext = ROOT_CONTEXT;\n\n  /**\n   *\n   * @param context\n   * @param target Function to be executed within the context\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _bindFunction<T extends Function>(\n    context = ROOT_CONTEXT,\n    target: T\n  ): T {\n    const manager = this;\n    const contextWrapper = function (this: unknown, ...args: unknown[]) {\n      return manager.with(context, () => target.apply(this, args));\n    };\n    Object.defineProperty(contextWrapper, 'length', {\n      enumerable: false,\n      configurable: true,\n      writable: false,\n      value: target.length,\n    });\n    return (contextWrapper as unknown) as T;\n  }\n\n  /**\n   * Returns the active context\n   */\n  active(): Context {\n    return this._currentContext;\n  }\n\n  /**\n   * Binds a the certain context or the active one to the target function and then returns the target\n   * @param context A context (span) to be bind to target\n   * @param target a function or event emitter. When target or one of its callbacks is called,\n   *  the provided context will be used as the active context for the duration of the call.\n   */\n  bind<T>(context: Context, target: T): T {\n    // if no specific context to propagate is given, we use the current one\n    if (context === undefined) {\n      context = this.active();\n    }\n    if (typeof target === 'function') {\n      return this._bindFunction(context, target);\n    }\n    return target;\n  }\n\n  /**\n   * Disable the context manager (clears the current context)\n   */\n  disable(): this {\n    this._currentContext = ROOT_CONTEXT;\n    this._enabled = false;\n    return this;\n  }\n\n  /**\n   * Enables the context manager and creates a default(root) context\n   */\n  enable(): this {\n    if (this._enabled) {\n      return this;\n    }\n    this._enabled = true;\n    this._currentContext = ROOT_CONTEXT;\n    return this;\n  }\n\n  /**\n   * Calls the callback function [fn] with the provided [context]. If [context] is undefined then it will use the window.\n   * The context will be set as active\n   * @param context\n   * @param fn Callback function\n   * @param thisArg optional receiver to be used for calling fn\n   * @param args optional arguments forwarded to fn\n   */\n  with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    context: Context | null,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    const previousContext = this._currentContext;\n    this._currentContext = context || ROOT_CONTEXT;\n\n    try {\n      return fn.call(thisArg, ...args);\n    } finally {\n      this._currentContext = previousContext;\n    }\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum PerformanceTimingNames {\n  CONNECT_END = 'connectEnd',\n  CONNECT_START = 'connectStart',\n  DECODED_BODY_SIZE = 'decodedBodySize',\n  DOM_COMPLETE = 'domComplete',\n  DOM_CONTENT_LOADED_EVENT_END = 'domContentLoadedEventEnd',\n  DOM_CONTENT_LOADED_EVENT_START = 'domContentLoadedEventStart',\n  DOM_INTERACTIVE = 'domInteractive',\n  DOMAIN_LOOKUP_END = 'domainLookupEnd',\n  DOMAIN_LOOKUP_START = 'domainLookupStart',\n  ENCODED_BODY_SIZE = 'encodedBodySize',\n  FETCH_START = 'fetchStart',\n  LOAD_EVENT_END = 'loadEventEnd',\n  LOAD_EVENT_START = 'loadEventStart',\n  NAVIGATION_START = 'navigationStart',\n  REDIRECT_END = 'redirectEnd',\n  REDIRECT_START = 'redirectStart',\n  REQUEST_START = 'requestStart',\n  RESPONSE_END = 'responseEnd',\n  RESPONSE_START = 'responseStart',\n  SECURE_CONNECTION_START = 'secureConnectionStart',\n  UNLOAD_EVENT_END = 'unloadEventEnd',\n  UNLOAD_EVENT_START = 'unloadEventStart',\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PerformanceTimingNames } from './enums/PerformanceTimingNames';\n\nexport type PerformanceEntries = {\n  [PerformanceTimingNames.CONNECT_END]?: number;\n  [PerformanceTimingNames.CONNECT_START]?: number;\n  [PerformanceTimingNames.DECODED_BODY_SIZE]?: number;\n  [PerformanceTimingNames.DOM_COMPLETE]?: number;\n  [PerformanceTimingNames.DOM_CONTENT_LOADED_EVENT_END]?: number;\n  [PerformanceTimingNames.DOM_CONTENT_LOADED_EVENT_START]?: number;\n  [PerformanceTimingNames.DOM_INTERACTIVE]?: number;\n  [PerformanceTimingNames.DOMAIN_LOOKUP_END]?: number;\n  [PerformanceTimingNames.DOMAIN_LOOKUP_START]?: number;\n  [PerformanceTimingNames.ENCODED_BODY_SIZE]?: number;\n  [PerformanceTimingNames.FETCH_START]?: number;\n  [PerformanceTimingNames.LOAD_EVENT_END]?: number;\n  [PerformanceTimingNames.LOAD_EVENT_START]?: number;\n  [PerformanceTimingNames.REDIRECT_END]?: number;\n  [PerformanceTimingNames.REDIRECT_START]?: number;\n  [PerformanceTimingNames.REQUEST_START]?: number;\n  [PerformanceTimingNames.RESPONSE_END]?: number;\n  [PerformanceTimingNames.RESPONSE_START]?: number;\n  [PerformanceTimingNames.SECURE_CONNECTION_START]?: number;\n  [PerformanceTimingNames.UNLOAD_EVENT_END]?: number;\n  [PerformanceTimingNames.UNLOAD_EVENT_START]?: number;\n};\n\n/**\n * This interface defines a fallback to read performance metrics,\n * this happens for example on Safari Mac\n */\nexport interface PerformanceLegacy {\n  timing?: PerformanceEntries;\n}\n\n/**\n * This interface is used in {@link getResource} function to return\n *     main request and it's corresponding PreFlight request\n */\nexport interface PerformanceResourceTimingInfo {\n  corsPreFlightRequest?: PerformanceResourceTiming;\n  mainRequest?: PerformanceResourceTiming;\n}\n\ntype PropagateTraceHeaderCorsUrl = string | RegExp;\n\n/**\n * urls which should include trace headers when origin doesn't match\n */\nexport type PropagateTraceHeaderCorsUrls =\n  | PropagateTraceHeaderCorsUrl\n  | PropagateTraceHeaderCorsUrl[];\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  PerformanceEntries,\n  PerformanceResourceTimingInfo,\n  PropagateTraceHeaderCorsUrls,\n} from './types';\nimport { PerformanceTimingNames as PTN } from './enums/PerformanceTimingNames';\nimport * as api from '@opentelemetry/api';\nimport {\n  hrTimeToNanoseconds,\n  timeInputToHrTime,\n  urlMatches,\n} from '@opentelemetry/core';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\n\n// Used to normalize relative URLs\nlet urlNormalizingAnchor: HTMLAnchorElement | undefined;\nfunction getUrlNormalizingAnchor(): HTMLAnchorElement {\n  if (!urlNormalizingAnchor) {\n    urlNormalizingAnchor = document.createElement('a');\n  }\n\n  return urlNormalizingAnchor;\n}\n\n/**\n * Helper function to be able to use enum as typed key in type and in interface when using forEach\n * @param obj\n * @param key\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function hasKey<O>(obj: O, key: keyof any): key is keyof O {\n  return key in obj;\n}\n\n/**\n * Helper function for starting an event on span based on {@link PerformanceEntries}\n * @param span\n * @param performanceName name of performance entry for time start\n * @param entries\n */\nexport function addSpanNetworkEvent(\n  span: api.Span,\n  performanceName: string,\n  entries: PerformanceEntries\n): api.Span | undefined {\n  if (\n    hasKey(entries, performanceName) &&\n    typeof entries[performanceName] === 'number'\n  ) {\n    span.addEvent(performanceName, entries[performanceName]);\n    return span;\n  }\n  return undefined;\n}\n\n/**\n * Helper function for adding network events\n * @param span\n * @param resource\n */\nexport function addSpanNetworkEvents(\n  span: api.Span,\n  resource: PerformanceEntries\n): void {\n  addSpanNetworkEvent(span, PTN.FETCH_START, resource);\n  addSpanNetworkEvent(span, PTN.DOMAIN_LOOKUP_START, resource);\n  addSpanNetworkEvent(span, PTN.DOMAIN_LOOKUP_END, resource);\n  addSpanNetworkEvent(span, PTN.CONNECT_START, resource);\n  addSpanNetworkEvent(span, PTN.SECURE_CONNECTION_START, resource);\n  addSpanNetworkEvent(span, PTN.CONNECT_END, resource);\n  addSpanNetworkEvent(span, PTN.REQUEST_START, resource);\n  addSpanNetworkEvent(span, PTN.RESPONSE_START, resource);\n  addSpanNetworkEvent(span, PTN.RESPONSE_END, resource);\n  const encodedLength = resource[PTN.ENCODED_BODY_SIZE];\n  if (encodedLength !== undefined) {\n    span.setAttribute(\n      SemanticAttributes.HTTP_RESPONSE_CONTENT_LENGTH,\n      encodedLength\n    );\n  }\n  const decodedLength = resource[PTN.DECODED_BODY_SIZE];\n  // Spec: Not set if transport encoding not used (in which case encoded and decoded sizes match)\n  if (decodedLength !== undefined && encodedLength !== decodedLength) {\n    span.setAttribute(\n      SemanticAttributes.HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED,\n      decodedLength\n    );\n  }\n}\n\n/**\n * sort resources by startTime\n * @param filteredResources\n */\nexport function sortResources(filteredResources: PerformanceResourceTiming[]): PerformanceResourceTiming[] {\n  return filteredResources.slice().sort((a, b) => {\n    const valueA = a[PTN.FETCH_START];\n    const valueB = b[PTN.FETCH_START];\n    if (valueA > valueB) {\n      return 1;\n    } else if (valueA < valueB) {\n      return -1;\n    }\n    return 0;\n  });\n}\n\n/**\n * Get closest performance resource ignoring the resources that have been\n * already used.\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n * @param initiatorType\n */\nexport function getResource(\n  spanUrl: string,\n  startTimeHR: api.HrTime,\n  endTimeHR: api.HrTime,\n  resources: PerformanceResourceTiming[],\n  ignoredResources: WeakSet<PerformanceResourceTiming> = new WeakSet<PerformanceResourceTiming>(),\n  initiatorType?: string\n): PerformanceResourceTimingInfo {\n  // de-relativize the URL before usage (does no harm to absolute URLs)\n  const parsedSpanUrl = parseUrl(spanUrl);\n  spanUrl = parsedSpanUrl.toString();\n\n  const filteredResources = filterResourcesForSpan(\n    spanUrl,\n    startTimeHR,\n    endTimeHR,\n    resources,\n    ignoredResources,\n    initiatorType\n  );\n\n  if (filteredResources.length === 0) {\n    return {\n      mainRequest: undefined,\n    };\n  }\n  if (filteredResources.length === 1) {\n    return {\n      mainRequest: filteredResources[0],\n    };\n  }\n  const sorted = sortResources(filteredResources);\n\n  if (parsedSpanUrl.origin !== location.origin && sorted.length > 1) {\n    let corsPreFlightRequest: PerformanceResourceTiming | undefined = sorted[0];\n    let mainRequest: PerformanceResourceTiming = findMainRequest(\n      sorted,\n      corsPreFlightRequest[PTN.RESPONSE_END],\n      endTimeHR\n    );\n\n    const responseEnd = corsPreFlightRequest[PTN.RESPONSE_END];\n    const fetchStart = mainRequest[PTN.FETCH_START];\n\n    // no corsPreFlightRequest\n    if (fetchStart < responseEnd) {\n      mainRequest = corsPreFlightRequest;\n      corsPreFlightRequest = undefined;\n    }\n\n    return {\n      corsPreFlightRequest,\n      mainRequest,\n    };\n  } else {\n    return {\n      mainRequest: filteredResources[0],\n    };\n  }\n}\n\n/**\n * Will find the main request skipping the cors pre flight requests\n * @param resources\n * @param corsPreFlightRequestEndTime\n * @param spanEndTimeHR\n */\nfunction findMainRequest(\n  resources: PerformanceResourceTiming[],\n  corsPreFlightRequestEndTime: number,\n  spanEndTimeHR: api.HrTime\n): PerformanceResourceTiming {\n  const spanEndTime = hrTimeToNanoseconds(spanEndTimeHR);\n  const minTime = hrTimeToNanoseconds(\n    timeInputToHrTime(corsPreFlightRequestEndTime)\n  );\n\n  let mainRequest: PerformanceResourceTiming = resources[1];\n  let bestGap;\n\n  const length = resources.length;\n  for (let i = 1; i < length; i++) {\n    const resource = resources[i];\n    const resourceStartTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.FETCH_START])\n    );\n\n    const resourceEndTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.RESPONSE_END])\n    );\n\n    const currentGap = spanEndTime - resourceEndTime;\n\n    if (resourceStartTime >= minTime && (!bestGap || currentGap < bestGap)) {\n      bestGap = currentGap;\n      mainRequest = resource;\n    }\n  }\n  return mainRequest;\n}\n\n/**\n * Filter all resources that has started and finished according to span start time and end time.\n *     It will return the closest resource to a start time\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n */\nfunction filterResourcesForSpan(\n  spanUrl: string,\n  startTimeHR: api.HrTime,\n  endTimeHR: api.HrTime,\n  resources: PerformanceResourceTiming[],\n  ignoredResources: WeakSet<PerformanceResourceTiming>,\n  initiatorType?: string\n) {\n  const startTime = hrTimeToNanoseconds(startTimeHR);\n  const endTime = hrTimeToNanoseconds(endTimeHR);\n  let filteredResources = resources.filter(resource => {\n    const resourceStartTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.FETCH_START])\n    );\n    const resourceEndTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.RESPONSE_END])\n    );\n\n    return (\n      resource.initiatorType.toLowerCase() ===\n        (initiatorType || 'xmlhttprequest') &&\n      resource.name === spanUrl &&\n      resourceStartTime >= startTime &&\n      resourceEndTime <= endTime\n    );\n  });\n\n  if (filteredResources.length > 0) {\n    filteredResources = filteredResources.filter(resource => {\n      return !ignoredResources.has(resource);\n    });\n  }\n\n  return filteredResources;\n}\n\n/**\n * The URLLike interface represents an URL and HTMLAnchorElement compatible fields.\n */\nexport interface URLLike {\n  hash: string;\n  host: string;\n  hostname: string;\n  href: string;\n  readonly origin: string;\n  password: string;\n  pathname: string;\n  port: string;\n  protocol: string;\n  search: string;\n  username: string;\n}\n\n/**\n * Parses url using URL constructor or fallback to anchor element.\n * @param url\n */\nexport function parseUrl(url: string): URLLike {\n  if (typeof URL === 'function') {\n    return new URL(url, location.href);\n  }\n  const element = getUrlNormalizingAnchor();\n  element.href = url;\n  return element;\n}\n\n/**\n * Parses url using URL constructor or fallback to anchor element and serialize\n * it to a string.\n *\n * Performs the steps described in https://html.spec.whatwg.org/multipage/urls-and-fetching.html#parse-a-url\n *\n * @param url\n */\nexport function normalizeUrl(url: string): string {\n  const urlLike = parseUrl(url);\n  return urlLike.href;\n}\n\n/**\n * Get element XPath\n * @param target - target element\n * @param optimised - when id attribute of element is present the xpath can be\n * simplified to contain id\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function getElementXPath(target: any, optimised?: boolean): string {\n  if (target.nodeType === Node.DOCUMENT_NODE) {\n    return '/';\n  }\n  const targetValue = getNodeValue(target, optimised);\n  if (optimised && targetValue.indexOf('@id') > 0) {\n    return targetValue;\n  }\n  let xpath = '';\n  if (target.parentNode) {\n    xpath += getElementXPath(target.parentNode, false);\n  }\n  xpath += targetValue;\n\n  return xpath;\n}\n\n/**\n * get node index within the siblings\n * @param target\n */\nfunction getNodeIndex(target: HTMLElement): number {\n  if (!target.parentNode) {\n    return 0;\n  }\n  const allowedTypes = [target.nodeType];\n  if (target.nodeType === Node.CDATA_SECTION_NODE) {\n    allowedTypes.push(Node.TEXT_NODE);\n  }\n  let elements = Array.from(target.parentNode.childNodes);\n  elements = elements.filter((element: Node) => {\n    const localName = (element as HTMLElement).localName;\n    return (\n      allowedTypes.indexOf(element.nodeType) >= 0 &&\n      localName === target.localName\n    );\n  });\n  if (elements.length >= 1) {\n    return elements.indexOf(target) + 1; // xpath starts from 1\n  }\n  // if there are no other similar child xpath doesn't need index\n  return 0;\n}\n\n/**\n * get node value for xpath\n * @param target\n * @param optimised\n */\nfunction getNodeValue(target: HTMLElement, optimised?: boolean): string {\n  const nodeType = target.nodeType;\n  const index = getNodeIndex(target);\n  let nodeValue = '';\n  if (nodeType === Node.ELEMENT_NODE) {\n    const id = target.getAttribute('id');\n    if (optimised && id) {\n      return `//*[@id=\"${id}\"]`;\n    }\n    nodeValue = target.localName;\n  } else if (\n    nodeType === Node.TEXT_NODE ||\n    nodeType === Node.CDATA_SECTION_NODE\n  ) {\n    nodeValue = 'text()';\n  } else if (nodeType === Node.COMMENT_NODE) {\n    nodeValue = 'comment()';\n  } else {\n    return '';\n  }\n  // if index is 1 it can be omitted in xpath\n  if (nodeValue && index > 1) {\n    return `/${nodeValue}[${index}]`;\n  }\n  return `/${nodeValue}`;\n}\n\n/**\n * Checks if trace headers should be propagated\n * @param spanUrl\n * @private\n */\nexport function shouldPropagateTraceHeaders(\n  spanUrl: string,\n  propagateTraceHeaderCorsUrls?: PropagateTraceHeaderCorsUrls\n): boolean {\n  let propagateTraceHeaderUrls = propagateTraceHeaderCorsUrls || [];\n  if (\n    typeof propagateTraceHeaderUrls === 'string' ||\n    propagateTraceHeaderUrls instanceof RegExp\n  ) {\n    propagateTraceHeaderUrls = [propagateTraceHeaderUrls];\n  }\n  const parsedSpanUrl = parseUrl(spanUrl);\n\n  if (parsedSpanUrl.origin === location.origin) {\n    return true;\n  } else {\n    return propagateTraceHeaderUrls.some(propagateTraceHeaderUrl =>\n      urlMatches(spanUrl, propagateTraceHeaderUrl)\n    );\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/http.md\n */\nexport enum AttributeNames {\n  COMPONENT = 'component',\n  HTTP_ERROR_NAME = 'http.error_name',\n  HTTP_STATUS_TEXT = 'http.status_text',\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '0.29.2';\n",null,null,null,null,null,null,null,null,null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './xhr';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  isWrapped,\n  InstrumentationBase,\n  InstrumentationConfig,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport { hrTime, isUrlIgnored, otperformance } from '@opentelemetry/core';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport {\n  addSpanNetworkEvents,\n  getResource,\n  PerformanceTimingNames as PTN,\n  shouldPropagateTraceHeaders,\n  parseUrl,\n} from '@opentelemetry/sdk-trace-web';\nimport { EventNames } from './enums/EventNames';\nimport {\n  OpenFunction,\n  PropagateTraceHeaderCorsUrls,\n  SendFunction,\n  XhrMem,\n} from './types';\nimport { VERSION } from './version';\nimport { AttributeNames } from './enums/AttributeNames';\n\n// how long to wait for observer to collect information about resources\n// this is needed as event \"load\" is called before observer\n// hard to say how long it should really wait, seems like 300ms is\n// safe enough\nconst OBSERVER_WAIT_TIME_MS = 300;\n\nexport type XHRCustomAttributeFunction = (\n  span: api.Span,\n  xhr: XMLHttpRequest\n) => void;\n\n/**\n * XMLHttpRequest config\n */\nexport interface XMLHttpRequestInstrumentationConfig\n  extends InstrumentationConfig {\n  /**\n   * The number of timing resources is limited, after the limit\n   * (chrome 250, safari 150) the information is not collected anymore.\n   * The only way to prevent that is to regularly clean the resources\n   * whenever it is possible. This is needed only when PerformanceObserver\n   * is not available\n   */\n  clearTimingResources?: boolean;\n  /** URLs which should include trace headers when origin doesn't match */\n  propagateTraceHeaderCorsUrls?: PropagateTraceHeaderCorsUrls;\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  ignoreUrls?: Array<string | RegExp>;\n  /** Function for adding custom attributes on the span */\n  applyCustomAttributesOnSpan?: XHRCustomAttributeFunction;\n}\n\n/**\n * This class represents a XMLHttpRequest plugin for auto instrumentation\n */\nexport class XMLHttpRequestInstrumentation extends InstrumentationBase<XMLHttpRequest> {\n  readonly component: string = 'xml-http-request';\n  readonly version: string = VERSION;\n  moduleName = this.component;\n\n  private _tasksCount = 0;\n  private _xhrMem = new WeakMap<XMLHttpRequest, XhrMem>();\n  private _usedResources = new WeakSet<PerformanceResourceTiming>();\n\n  constructor(config?: XMLHttpRequestInstrumentationConfig) {\n    super(\n      '@opentelemetry/instrumentation-xml-http-request',\n      VERSION,\n      config\n    );\n  }\n\n  init() {}\n\n  private _getConfig(): XMLHttpRequestInstrumentationConfig {\n    return this._config;\n  }\n\n  /**\n   * Adds custom headers to XMLHttpRequest\n   * @param xhr\n   * @param spanUrl\n   * @private\n   */\n  private _addHeaders(xhr: XMLHttpRequest, spanUrl: string) {\n    const url = parseUrl(spanUrl).href;\n    if (\n      !shouldPropagateTraceHeaders(\n        url,\n        this._getConfig().propagateTraceHeaderCorsUrls\n      )\n    ) {\n      const headers: Partial<Record<string, unknown>> = {};\n      api.propagation.inject(api.context.active(), headers);\n      if (Object.keys(headers).length > 0) {\n        this._diag.debug('headers inject skipped due to CORS policy');\n      }\n      return;\n    }\n    const headers: { [key: string]: unknown } = {};\n    api.propagation.inject(api.context.active(), headers);\n    Object.keys(headers).forEach(key => {\n      xhr.setRequestHeader(key, String(headers[key]));\n    });\n  }\n\n  /**\n   * Add cors pre flight child span\n   * @param span\n   * @param corsPreFlightRequest\n   * @private\n   */\n  private _addChildSpan(\n    span: api.Span,\n    corsPreFlightRequest: PerformanceResourceTiming\n  ): void {\n    api.context.with(api.trace.setSpan(api.context.active(), span), () => {\n      const childSpan = this.tracer.startSpan('CORS Preflight', {\n        startTime: corsPreFlightRequest[PTN.FETCH_START],\n      });\n      addSpanNetworkEvents(childSpan, corsPreFlightRequest);\n      childSpan.end(corsPreFlightRequest[PTN.RESPONSE_END]);\n    });\n  }\n\n  /**\n   * Add attributes when span is going to end\n   * @param span\n   * @param xhr\n   * @param spanUrl\n   * @private\n   */\n  _addFinalSpanAttributes(span: api.Span, xhrMem: XhrMem, spanUrl?: string) {\n    if (typeof spanUrl === 'string') {\n      const parsedUrl = parseUrl(spanUrl);\n      if (xhrMem.status !== undefined) {\n        span.setAttribute(SemanticAttributes.HTTP_STATUS_CODE, xhrMem.status);\n      }\n      if (xhrMem.statusText !== undefined) {\n        span.setAttribute(AttributeNames.HTTP_STATUS_TEXT, xhrMem.statusText);\n      }\n      span.setAttribute(SemanticAttributes.HTTP_HOST, parsedUrl.host);\n      span.setAttribute(\n        SemanticAttributes.HTTP_SCHEME,\n        parsedUrl.protocol.replace(':', '')\n      );\n\n      // @TODO do we want to collect this or it will be collected earlier once only or\n      //    maybe when parent span is not available ?\n      span.setAttribute(\n        SemanticAttributes.HTTP_USER_AGENT,\n        navigator.userAgent\n      );\n    }\n  }\n\n  private _applyAttributesAfterXHR(span: api.Span, xhr: XMLHttpRequest) {\n    const applyCustomAttributesOnSpan = this._getConfig()\n      .applyCustomAttributesOnSpan;\n    if (typeof applyCustomAttributesOnSpan === 'function') {\n      safeExecuteInTheMiddle(\n        () => applyCustomAttributesOnSpan(span, xhr),\n        error => {\n          if (!error) {\n            return;\n          }\n\n          this._diag.error('applyCustomAttributesOnSpan', error);\n        },\n        true\n      );\n    }\n  }\n\n  /**\n   * will collect information about all resources created\n   * between \"send\" and \"end\" with additional waiting for main resource\n   * @param xhr\n   * @param spanUrl\n   * @private\n   */\n  private _addResourceObserver(xhr: XMLHttpRequest, spanUrl: string) {\n    const xhrMem = this._xhrMem.get(xhr);\n    if (\n      !xhrMem ||\n      typeof PerformanceObserver !== 'function' ||\n      typeof PerformanceResourceTiming !== 'function'\n    ) {\n      return;\n    }\n    xhrMem.createdResources = {\n      observer: new PerformanceObserver(list => {\n        const entries = list.getEntries() as PerformanceResourceTiming[];\n        const parsedUrl = parseUrl(spanUrl);\n\n        entries.forEach(entry => {\n          if (\n            entry.initiatorType === 'xmlhttprequest' &&\n            entry.name === parsedUrl.href\n          ) {\n            if (xhrMem.createdResources) {\n              xhrMem.createdResources.entries.push(entry);\n            }\n          }\n        });\n      }),\n      entries: [],\n    };\n    xhrMem.createdResources.observer.observe({\n      entryTypes: ['resource'],\n    });\n  }\n\n  /**\n   * Clears the resource timings and all resources assigned with spans\n   *     when {@link XMLHttpRequestInstrumentationConfig.clearTimingResources} is\n   *     set to true (default false)\n   * @private\n   */\n  private _clearResources() {\n    if (this._tasksCount === 0 && this._getConfig().clearTimingResources) {\n      ((otperformance as unknown) as Performance).clearResourceTimings();\n      this._xhrMem = new WeakMap<XMLHttpRequest, XhrMem>();\n      this._usedResources = new WeakSet<PerformanceResourceTiming>();\n    }\n  }\n\n  /**\n   * Finds appropriate resource and add network events to the span\n   * @param span\n   */\n  private _findResourceAndAddNetworkEvents(\n    xhrMem: XhrMem,\n    span: api.Span,\n    spanUrl?: string,\n    startTime?: api.HrTime,\n    endTime?: api.HrTime\n  ): void {\n    if (!spanUrl || !startTime || !endTime || !xhrMem.createdResources) {\n      return;\n    }\n\n    let resources: PerformanceResourceTiming[] =\n      xhrMem.createdResources.entries;\n\n    if (!resources || !resources.length) {\n      // fallback - either Observer is not available or it took longer\n      // then OBSERVER_WAIT_TIME_MS and observer didn't collect enough\n      // information\n      // ts thinks this is the perf_hooks module, but it is the browser performance api\n      resources = ((otperformance as unknown) as Performance).getEntriesByType(\n        'resource'\n      ) as PerformanceResourceTiming[];\n    }\n\n    const resource = getResource(\n      parseUrl(spanUrl).href,\n      startTime,\n      endTime,\n      resources,\n      this._usedResources\n    );\n\n    if (resource.mainRequest) {\n      const mainRequest = resource.mainRequest;\n      this._markResourceAsUsed(mainRequest);\n\n      const corsPreFlightRequest = resource.corsPreFlightRequest;\n      if (corsPreFlightRequest) {\n        this._addChildSpan(span, corsPreFlightRequest);\n        this._markResourceAsUsed(corsPreFlightRequest);\n      }\n      addSpanNetworkEvents(span, mainRequest);\n    }\n  }\n\n  /**\n   * Removes the previous information about span.\n   * This might happened when the same xhr is used again.\n   * @param xhr\n   * @private\n   */\n  private _cleanPreviousSpanInformation(xhr: XMLHttpRequest) {\n    const xhrMem = this._xhrMem.get(xhr);\n    if (xhrMem) {\n      const callbackToRemoveEvents = xhrMem.callbackToRemoveEvents;\n      if (callbackToRemoveEvents) {\n        callbackToRemoveEvents();\n      }\n      this._xhrMem.delete(xhr);\n    }\n  }\n\n  /**\n   * Creates a new span when method \"open\" is called\n   * @param xhr\n   * @param url\n   * @param method\n   * @private\n   */\n  private _createSpan(\n    xhr: XMLHttpRequest,\n    url: string,\n    method: string\n  ): api.Span | undefined {\n    if (isUrlIgnored(url, this._getConfig().ignoreUrls)) {\n      this._diag.debug('ignoring span as url matches ignored url');\n      return;\n    }\n    const spanName = `HTTP ${method.toUpperCase()}`;\n\n    const currentSpan = this.tracer.startSpan(spanName, {\n      kind: api.SpanKind.CLIENT,\n      attributes: {\n        [SemanticAttributes.HTTP_METHOD]: method,\n        [SemanticAttributes.HTTP_URL]: url,\n      },\n    });\n\n    currentSpan.addEvent(EventNames.METHOD_OPEN);\n\n    this._cleanPreviousSpanInformation(xhr);\n\n    this._xhrMem.set(xhr, {\n      span: currentSpan,\n      spanUrl: url,\n    });\n\n    return currentSpan;\n  }\n\n  /**\n   * Marks certain [resource]{@link PerformanceResourceTiming} when information\n   * from this is used to add events to span.\n   * This is done to avoid reusing the same resource again for next span\n   * @param resource\n   * @private\n   */\n  private _markResourceAsUsed(resource: PerformanceResourceTiming) {\n    this._usedResources.add(resource);\n  }\n\n  /**\n   * Patches the method open\n   * @private\n   */\n  protected _patchOpen() {\n    return (original: OpenFunction): OpenFunction => {\n      const plugin = this;\n      return function patchOpen(this: XMLHttpRequest, ...args): void {\n        const method: string = args[0];\n        const url: string = args[1];\n        plugin._createSpan(this, url, method);\n\n        return original.apply(this, args);\n      };\n    };\n  }\n\n  /**\n   * Patches the method send\n   * @private\n   */\n  protected _patchSend() {\n    const plugin = this;\n\n    function endSpanTimeout(\n      eventName: string,\n      xhrMem: XhrMem,\n      endTime: api.HrTime\n    ) {\n      const callbackToRemoveEvents = xhrMem.callbackToRemoveEvents;\n\n      if (typeof callbackToRemoveEvents === 'function') {\n        callbackToRemoveEvents();\n      }\n\n      const { span, spanUrl, sendStartTime } = xhrMem;\n\n      if (span) {\n        plugin._findResourceAndAddNetworkEvents(\n          xhrMem,\n          span,\n          spanUrl,\n          sendStartTime,\n          endTime\n        );\n        span.addEvent(eventName, endTime);\n        plugin._addFinalSpanAttributes(span, xhrMem, spanUrl);\n        span.end(endTime);\n        plugin._tasksCount--;\n      }\n      plugin._clearResources();\n    }\n\n    function endSpan(eventName: string, xhr: XMLHttpRequest) {\n      const xhrMem = plugin._xhrMem.get(xhr);\n      if (!xhrMem) {\n        return;\n      }\n      xhrMem.status = xhr.status;\n      xhrMem.statusText = xhr.statusText;\n      plugin._xhrMem.delete(xhr);\n\n      if (xhrMem.span) {\n        plugin._applyAttributesAfterXHR(xhrMem.span, xhr);\n      }\n      const endTime = hrTime();\n\n      // the timeout is needed as observer doesn't have yet information\n      // when event \"load\" is called. Also the time may differ depends on\n      // browser and speed of computer\n      setTimeout(() => {\n        endSpanTimeout(eventName, xhrMem, endTime);\n      }, OBSERVER_WAIT_TIME_MS);\n    }\n\n    function onError(this: XMLHttpRequest) {\n      endSpan(EventNames.EVENT_ERROR, this);\n    }\n\n    function onAbort(this: XMLHttpRequest) {\n      endSpan(EventNames.EVENT_ABORT, this);\n    }\n\n    function onTimeout(this: XMLHttpRequest) {\n      endSpan(EventNames.EVENT_TIMEOUT, this);\n    }\n\n    function onLoad(this: XMLHttpRequest) {\n      if (this.status < 299) {\n        endSpan(EventNames.EVENT_LOAD, this);\n      } else {\n        endSpan(EventNames.EVENT_ERROR, this);\n      }\n    }\n\n    function unregister(xhr: XMLHttpRequest) {\n      xhr.removeEventListener('abort', onAbort);\n      xhr.removeEventListener('error', onError);\n      xhr.removeEventListener('load', onLoad);\n      xhr.removeEventListener('timeout', onTimeout);\n      const xhrMem = plugin._xhrMem.get(xhr);\n      if (xhrMem) {\n        xhrMem.callbackToRemoveEvents = undefined;\n      }\n    }\n\n    return (original: SendFunction): SendFunction => {\n      return function patchSend(this: XMLHttpRequest, ...args): void {\n        const xhrMem = plugin._xhrMem.get(this);\n        if (!xhrMem) {\n          return original.apply(this, args);\n        }\n        const currentSpan = xhrMem.span;\n        const spanUrl = xhrMem.spanUrl;\n\n        if (currentSpan && spanUrl) {\n          api.context.with(\n            api.trace.setSpan(api.context.active(), currentSpan),\n            () => {\n              plugin._tasksCount++;\n              xhrMem.sendStartTime = hrTime();\n              currentSpan.addEvent(EventNames.METHOD_SEND);\n\n              this.addEventListener('abort', onAbort);\n              this.addEventListener('error', onError);\n              this.addEventListener('load', onLoad);\n              this.addEventListener('timeout', onTimeout);\n\n              xhrMem.callbackToRemoveEvents = () => {\n                unregister(this);\n                if (xhrMem.createdResources) {\n                  xhrMem.createdResources.observer.disconnect();\n                }\n              };\n              plugin._addHeaders(this, spanUrl);\n              plugin._addResourceObserver(this, spanUrl);\n            }\n          );\n        }\n        return original.apply(this, args);\n      };\n    };\n  }\n\n  /**\n   * implements enable function\n   */\n  override enable() {\n    this._diag.debug('applying patch to', this.moduleName, this.version);\n\n    if (isWrapped(XMLHttpRequest.prototype.open)) {\n      this._unwrap(XMLHttpRequest.prototype, 'open');\n      this._diag.debug('removing previous patch from method open');\n    }\n\n    if (isWrapped(XMLHttpRequest.prototype.send)) {\n      this._unwrap(XMLHttpRequest.prototype, 'send');\n      this._diag.debug('removing previous patch from method send');\n    }\n\n    this._wrap(XMLHttpRequest.prototype, 'open', this._patchOpen());\n    this._wrap(XMLHttpRequest.prototype, 'send', this._patchSend());\n  }\n\n  /**\n   * implements disable function\n   */\n  override disable() {\n    this._diag.debug('removing patch from', this.moduleName, this.version);\n\n    this._unwrap(XMLHttpRequest.prototype, 'open');\n    this._unwrap(XMLHttpRequest.prototype, 'send');\n\n    this._tasksCount = 0;\n    this._xhrMem = new WeakMap<XMLHttpRequest, XhrMem>();\n    this._usedResources = new WeakSet<PerformanceResourceTiming>();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './baggage/propagation/W3CBaggagePropagator';\nexport * from './common/attributes';\nexport * from './common/global-error-handler';\nexport * from './common/logging-error-handler';\nexport * from './common/time';\nexport * from './common/types';\nexport * from './ExportResult';\nexport * from './version';\nexport * as baggageUtils from './baggage/utils';\nexport * from './platform';\nexport * from './propagation/composite';\nexport * from './trace/W3CTraceContextPropagator';\nexport * from './trace/IdGenerator';\nexport * from './trace/rpc-metadata';\nexport * from './trace/sampler/AlwaysOffSampler';\nexport * from './trace/sampler/AlwaysOnSampler';\nexport * from './trace/sampler/ParentBasedSampler';\nexport * from './trace/sampler/TraceIdRatioBasedSampler';\nexport * from './trace/suppress-tracing';\nexport * from './trace/TraceState';\nexport * from './utils/environment';\nexport * from './utils/merge';\nexport * from './utils/sampling';\nexport * from './utils/url';\nexport * from './utils/wrap';\nexport * from './utils/callback';\nexport * from './version';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Baggage, BaggageEntryMetadata, baggageEntryMetadataFromString } from '@opentelemetry/api';\nimport {\n  BAGGAGE_ITEMS_SEPARATOR,\n  BAGGAGE_PROPERTIES_SEPARATOR,\n  BAGGAGE_KEY_PAIR_SEPARATOR,\n  BAGGAGE_MAX_TOTAL_LENGTH,\n} from './constants';\n\ntype ParsedBaggageKeyValue = { key: string, value: string, metadata: BaggageEntryMetadata | undefined };\n\nexport function serializeKeyPairs(keyPairs: string[]): string {\n  return keyPairs.reduce((hValue: string, current: string) => {\n    const value = `${hValue}${hValue !== '' ? BAGGAGE_ITEMS_SEPARATOR : ''\n    }${current}`;\n    return value.length > BAGGAGE_MAX_TOTAL_LENGTH ? hValue : value;\n  }, '');\n}\n\nexport function getKeyPairs(baggage: Baggage): string[] {\n  return baggage.getAllEntries().map(([key, value]) => {\n    let entry = `${encodeURIComponent(key)}=${encodeURIComponent(value.value)}`;\n\n    // include opaque metadata if provided\n    // NOTE: we intentionally don't URI-encode the metadata - that responsibility falls on the metadata implementation\n    if (value.metadata !== undefined) {\n      entry += BAGGAGE_PROPERTIES_SEPARATOR + value.metadata.toString();\n    }\n\n    return entry;\n  });\n}\n\nexport function parsePairKeyValue(entry: string): ParsedBaggageKeyValue | undefined {\n  const valueProps = entry.split(BAGGAGE_PROPERTIES_SEPARATOR);\n  if (valueProps.length <= 0) return;\n  const keyPairPart = valueProps.shift();\n  if (!keyPairPart) return;\n  const keyPair = keyPairPart.split(BAGGAGE_KEY_PAIR_SEPARATOR);\n  if (keyPair.length !== 2) return;\n  const key = decodeURIComponent(keyPair[0].trim());\n  const value = decodeURIComponent(keyPair[1].trim());\n  let metadata;\n  if (valueProps.length > 0) {\n    metadata = baggageEntryMetadataFromString(\n      valueProps.join(BAGGAGE_PROPERTIES_SEPARATOR)\n    );\n  }\n  return { key, value, metadata };\n}\n\n/**\n * Parse a string serialized in the baggage HTTP Format (without metadata):\n * https://github.com/w3c/baggage/blob/master/baggage/HTTP_HEADER_FORMAT.md\n */\nexport function parseKeyPairsIntoRecord(value?: string): Record<string, string> {\n  if (typeof value !== 'string' || value.length === 0) return {};\n  return value\n    .split(BAGGAGE_ITEMS_SEPARATOR)\n    .map(entry => {\n      return parsePairKeyValue(entry);\n    })\n    .filter(keyPair => keyPair !== undefined && keyPair.value.length > 0)\n    .reduce<Record<string, string>>((headers, keyPair) => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      headers[keyPair!.key] = keyPair!.value;\n      return headers;\n    }, {});\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const BAGGAGE_KEY_PAIR_SEPARATOR = '=';\nexport const BAGGAGE_PROPERTIES_SEPARATOR = ';';\nexport const BAGGAGE_ITEMS_SEPARATOR = ',';\n\n// Name of the http header used to propagate the baggage\nexport const BAGGAGE_HEADER = 'baggage';\n// Maximum number of name-value pairs allowed by w3c spec\nexport const BAGGAGE_MAX_NAME_VALUE_PAIRS = 180;\n// Maximum number of bytes per a single name-value pair allowed by w3c spec\nexport const BAGGAGE_MAX_PER_NAME_VALUE_PAIRS = 4096;\n// Maximum total length of all name-value pairs allowed by w3c spec\nexport const BAGGAGE_MAX_TOTAL_LENGTH = 8192;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BaggageEntry,\n  Context,\n  propagation,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n} from '@opentelemetry/api';\n\nimport { isTracingSuppressed } from '../../trace/suppress-tracing';\nimport {\n  BAGGAGE_HEADER,\n  BAGGAGE_ITEMS_SEPARATOR,\n  BAGGAGE_MAX_NAME_VALUE_PAIRS,\n  BAGGAGE_MAX_PER_NAME_VALUE_PAIRS\n} from '../constants';\nimport {\n  getKeyPairs,\n  parsePairKeyValue,\n  serializeKeyPairs\n} from '../utils';\n\n/**\n * Propagates {@link Baggage} through Context format propagation.\n *\n * Based on the Baggage specification:\n * https://w3c.github.io/baggage/\n */\nexport class W3CBaggagePropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const baggage = propagation.getBaggage(context);\n    if (!baggage || isTracingSuppressed(context)) return;\n    const keyPairs = getKeyPairs(baggage)\n      .filter((pair: string) => {\n        return pair.length <= BAGGAGE_MAX_PER_NAME_VALUE_PAIRS;\n      })\n      .slice(0, BAGGAGE_MAX_NAME_VALUE_PAIRS);\n    const headerValue = serializeKeyPairs(keyPairs);\n    if (headerValue.length > 0) {\n      setter.set(carrier, BAGGAGE_HEADER, headerValue);\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const headerValue = getter.get(carrier, BAGGAGE_HEADER);\n    const baggageString = Array.isArray(headerValue) ? headerValue.join(BAGGAGE_ITEMS_SEPARATOR) : headerValue;\n    if (!baggageString) return context;\n    const baggage: Record<string, BaggageEntry> = {};\n    if (baggageString.length === 0) {\n      return context;\n    }\n    const pairs = baggageString.split(BAGGAGE_ITEMS_SEPARATOR);\n    pairs.forEach(entry => {\n      const keyPair = parsePairKeyValue(entry);\n      if (keyPair) {\n        const baggageEntry: BaggageEntry = { value: keyPair.value };\n        if (keyPair.metadata) {\n          baggageEntry.metadata = keyPair.metadata;\n        }\n        baggage[keyPair.key] = baggageEntry;\n      }\n    });\n    if (Object.entries(baggage).length === 0) {\n      return context;\n    }\n    return propagation.setBaggage(context, propagation.createBaggage(baggage));\n  }\n\n  fields(): string[] {\n    return [BAGGAGE_HEADER];\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, createContextKey } from '@opentelemetry/api';\n\nconst SUPPRESS_TRACING_KEY = createContextKey(\n  'OpenTelemetry SDK Context Key SUPPRESS_TRACING'\n);\n\nexport function suppressTracing(context: Context): Context {\n  return context.setValue(SUPPRESS_TRACING_KEY, true);\n}\n\nexport function unsuppressTracing(context: Context): Context {\n  return context.deleteValue(SUPPRESS_TRACING_KEY);\n}\n\nexport function isTracingSuppressed(context: Context): boolean {\n  return context.getValue(SUPPRESS_TRACING_KEY) === true;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, SpanAttributeValue, SpanAttributes } from '@opentelemetry/api';\n\nexport function sanitizeAttributes(attributes: unknown): SpanAttributes {\n  const out: SpanAttributes = {};\n\n  if (typeof attributes !== 'object' || attributes == null) {\n    return out;\n  }\n\n  for (const [key, val] of Object.entries(attributes)) {\n    if (!isAttributeKey(key)) {\n      diag.warn(`Invalid attribute key: ${key}`);\n      continue;\n    }\n    if (!isAttributeValue(val)) {\n      diag.warn(`Invalid attribute value set for key: ${key}`);\n      continue;\n    }\n    if (Array.isArray(val)) {\n      out[key] = val.slice();\n    } else {\n      out[key] = val;\n    }\n  }\n\n  return out;\n}\n\nexport function isAttributeKey(key: unknown): key is string {\n  return typeof key === 'string' && key.length > 0;\n}\n\nexport function isAttributeValue(val: unknown): val is SpanAttributeValue {\n  if (val == null) {\n    return true;\n  }\n\n  if (Array.isArray(val)) {\n    return isHomogeneousAttributeValueArray(val);\n  }\n\n  return isValidPrimitiveAttributeValue(val);\n}\n\nfunction isHomogeneousAttributeValueArray(arr: unknown[]): boolean {\n  let type: string | undefined;\n\n  for (const element of arr) {\n    // null/undefined elements are allowed\n    if (element == null) continue;\n\n    if (!type) {\n      if (isValidPrimitiveAttributeValue(element)) {\n        type = typeof element;\n        continue;\n      }\n      // encountered an invalid primitive\n      return false;\n    }\n\n    if (typeof element === type) {\n      continue;\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction isValidPrimitiveAttributeValue(val: unknown): boolean {\n  switch (typeof val) {\n    case 'number':\n    case 'boolean':\n    case 'string':\n      return true;\n  }\n\n  return false;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Exception } from '@opentelemetry/api';\nimport { loggingErrorHandler } from './logging-error-handler';\nimport { ErrorHandler } from './types';\n\n/** The global error handler delegate */\nlet delegateHandler = loggingErrorHandler();\n\n/**\n * Set the global error handler\n * @param {ErrorHandler} handler\n */\nexport function setGlobalErrorHandler(handler: ErrorHandler): void {\n  delegateHandler = handler;\n}\n\n/**\n * Return the global error handler\n * @param {Exception} ex\n */\nexport function globalErrorHandler(ex: Exception): void {\n  try {\n    delegateHandler(ex);\n  } catch {} // eslint-disable-line no-empty\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, Exception } from '@opentelemetry/api';\nimport { ErrorHandler } from './types';\n\n/**\n * Returns a function that logs an error using the provided logger, or a\n * console logger if one was not provided.\n */\nexport function loggingErrorHandler(): ErrorHandler {\n  return (ex: Exception) => {\n    diag.error(stringifyException(ex));\n  };\n}\n\n/**\n * Converts an exception into a string representation\n * @param {Exception} ex\n */\nfunction stringifyException(ex: Exception | string): string {\n  if (typeof ex === 'string') {\n    return ex;\n  } else {\n    return JSON.stringify(flattenException(ex));\n  }\n}\n\n/**\n * Flattens an exception into key-value pairs by traversing the prototype chain\n * and coercing values to strings. Duplicate properties will not be overwritten;\n * the first insert wins.\n */\nfunction flattenException(ex: Exception): Record<string, string> {\n  const result = {} as Record<string, string>;\n  let current = ex;\n\n  while (current !== null) {\n    Object.getOwnPropertyNames(current).forEach(propertyName => {\n      if (result[propertyName]) return;\n      const value = current[propertyName as keyof typeof current];\n      if (value) {\n        result[propertyName] = String(value);\n      }\n    });\n    current = Object.getPrototypeOf(current);\n  }\n\n  return result;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { otperformance as performance } from '../platform';\nimport { TimeOriginLegacy } from './types';\n\nconst NANOSECOND_DIGITS = 9;\nconst SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n\n/**\n * Converts a number to HrTime, HrTime = [number, number].\n * The first number is UNIX Epoch time in seconds since 00:00:00 UTC on 1 January 1970.\n * The second number represents the partial second elapsed since Unix Epoch time represented by first number in nanoseconds.\n * For example, 2021-01-01T12:30:10.150Z in UNIX Epoch time in milliseconds is represented as 1609504210150.\n * numberToHrtime calculates the first number by converting and truncating the Epoch time in milliseconds to seconds:\n * HrTime[0] = Math.trunc(1609504210150 / 1000) = 1609504210.\n * numberToHrtime calculates the second number by converting the digits after the decimal point of the subtraction, (1609504210150 / 1000) - HrTime[0], to nanoseconds:\n * HrTime[1] = Number((1609504210.150 - HrTime[0]).toFixed(9)) * SECOND_TO_NANOSECONDS = 150000000.\n * This is represented in HrTime format as [1609504210, 150000000].\n * @param epochMillis\n */\nfunction numberToHrtime(epochMillis: number): api.HrTime {\n  const epochSeconds = epochMillis / 1000;\n  // Decimals only.\n  const seconds = Math.trunc(epochSeconds);\n  // Round sub-nanosecond accuracy to nanosecond.\n  const nanos =\n    Number((epochSeconds - seconds).toFixed(NANOSECOND_DIGITS)) *\n    SECOND_TO_NANOSECONDS;\n  return [seconds, nanos];\n}\n\nfunction getTimeOrigin(): number {\n  let timeOrigin = performance.timeOrigin;\n  if (typeof timeOrigin !== 'number') {\n    const perf: TimeOriginLegacy = (performance as unknown) as TimeOriginLegacy;\n    timeOrigin = perf.timing && perf.timing.fetchStart;\n  }\n  return timeOrigin;\n}\n\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow?: number): api.HrTime {\n  const timeOrigin = numberToHrtime(getTimeOrigin());\n  const now = numberToHrtime(\n    typeof performanceNow === 'number' ? performanceNow : performance.now()\n  );\n\n  let seconds = timeOrigin[0] + now[0];\n  let nanos = timeOrigin[1] + now[1];\n\n  // Nanoseconds\n  if (nanos > SECOND_TO_NANOSECONDS) {\n    nanos -= SECOND_TO_NANOSECONDS;\n    seconds += 1;\n  }\n\n  return [seconds, nanos];\n}\n\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time: api.TimeInput): api.HrTime {\n  // process.hrtime\n  if (isTimeInputHrTime(time)) {\n    return time as api.HrTime;\n  } else if (typeof time === 'number') {\n    // Must be a performance.now() if it's smaller than process start time.\n    if (time < getTimeOrigin()) {\n      return hrTime(time);\n    } else {\n      // epoch milliseconds or performance.timeOrigin\n      return numberToHrtime(time);\n    }\n  } else if (time instanceof Date) {\n    return numberToHrtime(time.getTime());\n  } else {\n    throw TypeError('Invalid input type');\n  }\n}\n\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(\n  startTime: api.HrTime,\n  endTime: api.HrTime\n): api.HrTime {\n  let seconds = endTime[0] - startTime[0];\n  let nanos = endTime[1] - startTime[1];\n\n  // overflow\n  if (nanos < 0) {\n    seconds -= 1;\n    // negate\n    nanos += SECOND_TO_NANOSECONDS;\n  }\n\n  return [seconds, nanos];\n}\n\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time: api.HrTime): string {\n  const precision = NANOSECOND_DIGITS;\n  const tmp = `${'0'.repeat(precision)}${time[1]}Z`;\n  const nanoString = tmp.substr(tmp.length - precision - 1);\n  const date = new Date(time[0] * 1000).toISOString();\n  return date.replace('000Z', nanoString);\n}\n\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time: api.HrTime): number {\n  return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time: api.HrTime): number {\n  return Math.round(time[0] * 1e3 + time[1] / 1e6);\n}\n\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time: api.HrTime): number {\n  return Math.round(time[0] * 1e6 + time[1] / 1e3);\n}\n\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value: unknown): value is api.HrTime {\n  return (\n    Array.isArray(value) &&\n    value.length === 2 &&\n    typeof value[0] === 'number' &&\n    typeof value[1] === 'number'\n  );\n}\n\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(value: unknown): value is api.HrTime | number | Date {\n  return (\n    isTimeInputHrTime(value) ||\n    typeof value === 'number' ||\n    value instanceof Date\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './environment';\nexport * from './globalThis';\nexport * from './hex-to-base64';\nexport * from './RandomIdGenerator';\nexport * from './performance';\nexport * from './sdk-info';\nexport * from './timer-util';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_ENVIRONMENT,\n  ENVIRONMENT,\n  RAW_ENVIRONMENT,\n  parseEnvironment,\n} from '../../utils/environment';\nimport { _globalThis } from './globalThis';\n\n/**\n * Gets the environment variables\n */\nexport function getEnv(): Required<ENVIRONMENT> {\n  const globalEnv = parseEnvironment(_globalThis as typeof globalThis & RAW_ENVIRONMENT);\n  return Object.assign({}, DEFAULT_ENVIRONMENT, globalEnv);\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagLogLevel } from '@opentelemetry/api';\nimport { TracesSamplerValues } from './sampling';\n\nconst DEFAULT_LIST_SEPARATOR = ',';\n\n/**\n * Environment interface to define all names\n */\n\nconst ENVIRONMENT_NUMBERS_KEYS = [\n  'OTEL_BSP_EXPORT_TIMEOUT',\n  'OTEL_BSP_MAX_EXPORT_BATCH_SIZE',\n  'OTEL_BSP_MAX_QUEUE_SIZE',\n  'OTEL_BSP_SCHEDULE_DELAY',\n  'OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_SPAN_EVENT_COUNT_LIMIT',\n  'OTEL_SPAN_LINK_COUNT_LIMIT',\n  'OTEL_EXPORTER_OTLP_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_TRACES_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_METRICS_TIMEOUT',\n  'OTEL_EXPORTER_JAEGER_AGENT_PORT',\n] as const;\n\ntype ENVIRONMENT_NUMBERS = {\n  [K in typeof ENVIRONMENT_NUMBERS_KEYS[number]]?: number;\n};\n\nfunction isEnvVarANumber(key: unknown): key is keyof ENVIRONMENT_NUMBERS {\n  return (\n    ENVIRONMENT_NUMBERS_KEYS.indexOf(key as keyof ENVIRONMENT_NUMBERS) > -1\n  );\n}\n\nconst ENVIRONMENT_LISTS_KEYS = [\n  'OTEL_NO_PATCH_MODULES',\n  'OTEL_PROPAGATORS',\n] as const;\n\ntype ENVIRONMENT_LISTS = {\n  [K in typeof ENVIRONMENT_LISTS_KEYS[number]]?: string[];\n};\n\nfunction isEnvVarAList(key: unknown): key is keyof ENVIRONMENT_LISTS {\n  return ENVIRONMENT_LISTS_KEYS.indexOf(key as keyof ENVIRONMENT_LISTS) > -1;\n}\n\nexport type ENVIRONMENT = {\n  CONTAINER_NAME?: string;\n  ECS_CONTAINER_METADATA_URI_V4?: string;\n  ECS_CONTAINER_METADATA_URI?: string;\n  HOSTNAME?: string;\n  KUBERNETES_SERVICE_HOST?: string;\n  NAMESPACE?: string;\n  OTEL_EXPORTER_JAEGER_AGENT_HOST?: string;\n  OTEL_EXPORTER_JAEGER_ENDPOINT?: string;\n  OTEL_EXPORTER_JAEGER_PASSWORD?: string;\n  OTEL_EXPORTER_JAEGER_USER?: string;\n  OTEL_EXPORTER_OTLP_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_TRACES_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_METRICS_HEADERS?: string;\n  OTEL_EXPORTER_ZIPKIN_ENDPOINT?: string;\n  OTEL_LOG_LEVEL?: DiagLogLevel;\n  OTEL_RESOURCE_ATTRIBUTES?: string;\n  OTEL_SERVICE_NAME?: string;\n  OTEL_TRACES_EXPORTER?: string;\n  OTEL_TRACES_SAMPLER_ARG?: string;\n  OTEL_TRACES_SAMPLER?: string;\n  OTEL_EXPORTER_OTLP_INSECURE?: string,\n  OTEL_EXPORTER_OTLP_TRACES_INSECURE?: string,\n  OTEL_EXPORTER_OTLP_METRICS_INSECURE?: string,\n  OTEL_EXPORTER_OTLP_CERTIFICATE?: string,\n  OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE?: string,\n  OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE?: string,\n  OTEL_EXPORTER_OTLP_COMPRESSION?: string,\n  OTEL_EXPORTER_OTLP_TRACES_COMPRESSION?: string,\n  OTEL_EXPORTER_OTLP_METRICS_COMPRESSION?: string\n  OTEL_EXPORTER_OTLP_CLIENT_KEY?: string,\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY?: string,\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY?: string,\n  OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE?: string,\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE?: string,\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE?: string\n} & ENVIRONMENT_NUMBERS &\n  ENVIRONMENT_LISTS;\n\nexport type RAW_ENVIRONMENT = {\n  [key: string]: string | number | undefined | string[];\n};\n\nexport const DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT = Infinity;\n\nexport const DEFAULT_ATTRIBUTE_COUNT_LIMIT = 128;\n\n/**\n * Default environment variables\n */\nexport const DEFAULT_ENVIRONMENT: Required<ENVIRONMENT> = {\n  CONTAINER_NAME: '',\n  ECS_CONTAINER_METADATA_URI_V4: '',\n  ECS_CONTAINER_METADATA_URI: '',\n  HOSTNAME: '',\n  KUBERNETES_SERVICE_HOST: '',\n  NAMESPACE: '',\n  OTEL_BSP_EXPORT_TIMEOUT: 30000,\n  OTEL_BSP_MAX_EXPORT_BATCH_SIZE: 512,\n  OTEL_BSP_MAX_QUEUE_SIZE: 2048,\n  OTEL_BSP_SCHEDULE_DELAY: 5000,\n  OTEL_EXPORTER_JAEGER_AGENT_HOST: '',\n  OTEL_EXPORTER_JAEGER_AGENT_PORT: 6832,\n  OTEL_EXPORTER_JAEGER_ENDPOINT: '',\n  OTEL_EXPORTER_JAEGER_PASSWORD: '',\n  OTEL_EXPORTER_JAEGER_USER: '',\n  OTEL_EXPORTER_OTLP_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_HEADERS: '',\n  OTEL_EXPORTER_OTLP_TRACES_HEADERS: '',\n  OTEL_EXPORTER_OTLP_METRICS_HEADERS: '',\n  OTEL_EXPORTER_OTLP_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_METRICS_TIMEOUT: 10000,\n  OTEL_EXPORTER_ZIPKIN_ENDPOINT: 'http://localhost:9411/api/v2/spans',\n  OTEL_LOG_LEVEL: DiagLogLevel.INFO,\n  OTEL_NO_PATCH_MODULES: [],\n  OTEL_PROPAGATORS: ['tracecontext', 'baggage'],\n  OTEL_RESOURCE_ATTRIBUTES: '',\n  OTEL_SERVICE_NAME: '',\n  OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  OTEL_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT ,\n  OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_SPAN_EVENT_COUNT_LIMIT: 128,\n  OTEL_SPAN_LINK_COUNT_LIMIT: 128,\n  OTEL_TRACES_EXPORTER: 'none',\n  OTEL_TRACES_SAMPLER: TracesSamplerValues.ParentBasedAlwaysOn,\n  OTEL_TRACES_SAMPLER_ARG: '',\n  OTEL_EXPORTER_OTLP_INSECURE: '',\n  OTEL_EXPORTER_OTLP_TRACES_INSECURE: '',\n  OTEL_EXPORTER_OTLP_METRICS_INSECURE: '',\n  OTEL_EXPORTER_OTLP_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_TRACES_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_METRICS_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE: ''\n};\n\n/**\n * Parses a variable as number with number validation\n * @param name\n * @param environment\n * @param values\n * @param min\n * @param max\n */\nfunction parseNumber(\n  name: keyof ENVIRONMENT_NUMBERS,\n  environment: ENVIRONMENT,\n  values: RAW_ENVIRONMENT,\n  min = -Infinity,\n  max = Infinity\n) {\n  if (typeof values[name] !== 'undefined') {\n    const value = Number(values[name] as string);\n    if (!isNaN(value)) {\n      if (value < min) {\n        environment[name] = min;\n      } else if (value > max) {\n        environment[name] = max;\n      } else {\n        environment[name] = value;\n      }\n    }\n  }\n}\n\n/**\n * Parses list-like strings from input into output.\n * @param name\n * @param environment\n * @param values\n * @param separator\n */\nfunction parseStringList(\n  name: keyof ENVIRONMENT_LISTS,\n  output: ENVIRONMENT,\n  input: RAW_ENVIRONMENT,\n  separator = DEFAULT_LIST_SEPARATOR\n) {\n  const givenValue = input[name];\n  if (typeof givenValue === 'string') {\n    output[name] = givenValue.split(separator).map(v => v.trim());\n  }\n}\n\n// The support string -> DiagLogLevel mappings\nconst logLevelMap: { [key: string]: DiagLogLevel } = {\n  ALL: DiagLogLevel.ALL,\n  VERBOSE: DiagLogLevel.VERBOSE,\n  DEBUG: DiagLogLevel.DEBUG,\n  INFO: DiagLogLevel.INFO,\n  WARN: DiagLogLevel.WARN,\n  ERROR: DiagLogLevel.ERROR,\n  NONE: DiagLogLevel.NONE,\n};\n\n/**\n * Environmentally sets log level if valid log level string is provided\n * @param key\n * @param environment\n * @param values\n */\nfunction setLogLevelFromEnv(\n  key: keyof ENVIRONMENT,\n  environment: RAW_ENVIRONMENT | ENVIRONMENT,\n  values: RAW_ENVIRONMENT\n) {\n  const value = values[key];\n  if (typeof value === 'string') {\n    const theLevel = logLevelMap[value.toUpperCase()];\n    if (theLevel != null) {\n      environment[key] = theLevel;\n    }\n  }\n}\n\n/**\n * Parses environment values\n * @param values\n */\nexport function parseEnvironment(values: RAW_ENVIRONMENT): ENVIRONMENT {\n  const environment: ENVIRONMENT = {};\n\n  for (const env in DEFAULT_ENVIRONMENT) {\n    const key = env as keyof ENVIRONMENT;\n\n    switch (key) {\n      case 'OTEL_LOG_LEVEL':\n        setLogLevelFromEnv(key, environment, values);\n        break;\n\n      default:\n        if (isEnvVarANumber(key)) {\n          parseNumber(key, environment, values);\n        } else if (isEnvVarAList(key)) {\n          parseStringList(key, environment, values);\n        } else {\n          const value = values[key];\n          if (typeof value !== 'undefined' && value !== null) {\n            environment[key] = String(value);\n          }\n        }\n    }\n  }\n\n  return environment;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum TracesSamplerValues {\n  AlwaysOff = 'always_off',\n  AlwaysOn = 'always_on',\n  ParentBasedAlwaysOff = 'parentbased_always_off',\n  ParentBasedAlwaysOn = 'parentbased_always_on',\n  ParentBasedTraceIdRatio = 'parentbased_traceidratio',\n  TraceIdRatio = 'traceidratio',\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Updates to this file should also be replicated to @opentelemetry/api and\n// @opentelemetry/api-metrics too.\n\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport const _globalThis: typeof globalThis =\n  typeof globalThis === 'object' ? globalThis :\n    typeof self === 'object' ? self :\n      typeof window === 'object' ? window :\n        typeof global === 'object' ? global :\n  {} as typeof globalThis;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function hexToBase64(hexStr: string): string {\n  const hexStrLen = hexStr.length;\n  let hexAsciiCharsStr = '';\n  for (let i = 0; i < hexStrLen; i += 2) {\n    const hexPair = hexStr.substring(i, i + 2);\n    const hexVal = parseInt(hexPair, 16);\n    hexAsciiCharsStr += String.fromCharCode(hexVal);\n  }\n  return btoa(hexAsciiCharsStr);\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { IdGenerator } from '../../trace/IdGenerator';\n\nconst SPAN_ID_BYTES = 8;\nconst TRACE_ID_BYTES = 16;\n\nexport class RandomIdGenerator implements IdGenerator {\n  /**\n   * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n   * characters corresponding to 128 bits.\n   */\n  generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n\n  /**\n   * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n   * characters corresponding to 64 bits.\n   */\n  generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n}\n\nconst SHARED_CHAR_CODES_ARRAY = Array(32);\nfunction getIdGenerator(bytes: number): () => string {\n  return function generateId() {\n    for (let i = 0; i < bytes * 2; i++) {\n      SHARED_CHAR_CODES_ARRAY[i] = Math.floor(Math.random() * 16) + 48;\n      // valid hex characters in the range 48-57 and 97-102\n      if (SHARED_CHAR_CODES_ARRAY[i] >= 58) {\n        SHARED_CHAR_CODES_ARRAY[i] += 39;\n      }\n    }\n    return String.fromCharCode.apply(\n      null,\n      SHARED_CHAR_CODES_ARRAY.slice(0, bytes * 2)\n    );\n  };\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const otperformance = performance;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VERSION } from '../../version';\nimport {\n  TelemetrySdkLanguageValues,\n  SemanticResourceAttributes,\n} from '@opentelemetry/semantic-conventions';\n\n/** Constants describing the SDK in use */\nexport const SDK_INFO = {\n  [SemanticResourceAttributes.TELEMETRY_SDK_NAME]: 'opentelemetry',\n  [SemanticResourceAttributes.PROCESS_RUNTIME_NAME]: 'browser',\n  [SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE]: TelemetrySdkLanguageValues.WEBJS,\n  [SemanticResourceAttributes.TELEMETRY_SDK_VERSION]: VERSION,\n};\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '1.3.1';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './trace';\nexport * from './resource';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './SemanticAttributes';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexport const SemanticAttributes = {\n\n  /**\n  * The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).\n  *\n  * Note: This may be different from `faas.id` if an alias is involved.\n  */\n  AWS_LAMBDA_INVOKED_ARN: 'aws.lambda.invoked_arn',\n\n  /**\n  * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n  */\n  DB_SYSTEM: 'db.system',\n\n  /**\n  * The connection string used to connect to the database. It is recommended to remove embedded credentials.\n  */\n  DB_CONNECTION_STRING: 'db.connection_string',\n\n  /**\n  * Username for accessing the database.\n  */\n  DB_USER: 'db.user',\n\n  /**\n  * The fully-qualified class name of the [Java Database Connectivity (JDBC)](https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/) driver used to connect.\n  */\n  DB_JDBC_DRIVER_CLASSNAME: 'db.jdbc.driver_classname',\n\n  /**\n  * If no [tech-specific attribute](#call-level-attributes-for-specific-technologies) is defined, this attribute is used to report the name of the database being accessed. For commands that switch the database, this should be set to the target database (even if the command fails).\n  *\n  * Note: In some SQL databases, the database name to be used is called &#34;schema name&#34;.\n  */\n  DB_NAME: 'db.name',\n\n  /**\n  * The database statement being executed.\n  *\n  * Note: The value may be sanitized to exclude sensitive information.\n  */\n  DB_STATEMENT: 'db.statement',\n\n  /**\n  * The name of the operation being executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as `findAndModify`, or the SQL keyword.\n  *\n  * Note: When setting this to an SQL keyword, it is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if the operation name is provided by the library being instrumented. If the SQL statement has an ambiguous operation, or performs more than one operation, this value may be omitted.\n  */\n  DB_OPERATION: 'db.operation',\n\n  /**\n  * The Microsoft SQL Server [instance name](https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15) connecting to. This name is used to determine the port of a named instance.\n  *\n  * Note: If setting a `db.mssql.instance_name`, `net.peer.port` is no longer required (but still recommended if non-standard).\n  */\n  DB_MSSQL_INSTANCE_NAME: 'db.mssql.instance_name',\n\n  /**\n  * The name of the keyspace being accessed. To be used instead of the generic `db.name` attribute.\n  */\n  DB_CASSANDRA_KEYSPACE: 'db.cassandra.keyspace',\n\n  /**\n  * The fetch size used for paging, i.e. how many rows will be returned at once.\n  */\n  DB_CASSANDRA_PAGE_SIZE: 'db.cassandra.page_size',\n\n  /**\n  * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n  */\n  DB_CASSANDRA_CONSISTENCY_LEVEL: 'db.cassandra.consistency_level',\n\n  /**\n  * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n  *\n  * Note: This mirrors the db.sql.table attribute but references cassandra rather than sql. It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n  */\n  DB_CASSANDRA_TABLE: 'db.cassandra.table',\n\n  /**\n  * Whether or not the query is idempotent.\n  */\n  DB_CASSANDRA_IDEMPOTENCE: 'db.cassandra.idempotence',\n\n  /**\n  * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n  */\n  DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT: 'db.cassandra.speculative_execution_count',\n\n  /**\n  * The ID of the coordinating node for a query.\n  */\n  DB_CASSANDRA_COORDINATOR_ID: 'db.cassandra.coordinator.id',\n\n  /**\n  * The data center of the coordinating node for a query.\n  */\n  DB_CASSANDRA_COORDINATOR_DC: 'db.cassandra.coordinator.dc',\n\n  /**\n  * The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed. To be used instead of the generic `db.name` attribute.\n  */\n  DB_HBASE_NAMESPACE: 'db.hbase.namespace',\n\n  /**\n  * The index of the database being accessed as used in the [`SELECT` command](https://redis.io/commands/select), provided as an integer. To be used instead of the generic `db.name` attribute.\n  */\n  DB_REDIS_DATABASE_INDEX: 'db.redis.database_index',\n\n  /**\n  * The collection being accessed within the database stated in `db.name`.\n  */\n  DB_MONGODB_COLLECTION: 'db.mongodb.collection',\n\n  /**\n  * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n  *\n  * Note: It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n  */\n  DB_SQL_TABLE: 'db.sql.table',\n\n  /**\n  * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n  */\n  EXCEPTION_TYPE: 'exception.type',\n\n  /**\n  * The exception message.\n  */\n  EXCEPTION_MESSAGE: 'exception.message',\n\n  /**\n  * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n  */\n  EXCEPTION_STACKTRACE: 'exception.stacktrace',\n\n  /**\n  * SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n  *\n  * Note: An exception is considered to have escaped (or left) the scope of a span,\nif that span is ended while the exception is still logically &#34;in flight&#34;.\nThis may be actually &#34;in flight&#34; in some languages (e.g. if the exception\nis passed to a Context manager&#39;s `__exit__` method in Python) but will\nusually be caught at the point of recording the exception in most languages.\n\nIt is usually not possible to determine at the point where an exception is thrown\nwhether it will escape the scope of a span.\nHowever, it is trivial to know that an exception\nwill escape, if one checks for an active exception just before ending the span,\nas done in the [example above](#exception-end-example).\n\nIt follows that an exception may still escape the scope of the span\neven if the `exception.escaped` attribute was not set or set to false,\nsince the event might have been recorded at a time where it was not\nclear whether the exception will escape.\n  */\n  EXCEPTION_ESCAPED: 'exception.escaped',\n\n  /**\n  * Type of the trigger on which the function is executed.\n  */\n  FAAS_TRIGGER: 'faas.trigger',\n\n  /**\n  * The execution ID of the current function execution.\n  */\n  FAAS_EXECUTION: 'faas.execution',\n\n  /**\n  * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n  */\n  FAAS_DOCUMENT_COLLECTION: 'faas.document.collection',\n\n  /**\n  * Describes the type of the operation that was performed on the data.\n  */\n  FAAS_DOCUMENT_OPERATION: 'faas.document.operation',\n\n  /**\n  * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n  */\n  FAAS_DOCUMENT_TIME: 'faas.document.time',\n\n  /**\n  * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n  */\n  FAAS_DOCUMENT_NAME: 'faas.document.name',\n\n  /**\n  * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n  */\n  FAAS_TIME: 'faas.time',\n\n  /**\n  * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n  */\n  FAAS_CRON: 'faas.cron',\n\n  /**\n  * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n  */\n  FAAS_COLDSTART: 'faas.coldstart',\n\n  /**\n  * The name of the invoked function.\n  *\n  * Note: SHOULD be equal to the `faas.name` resource attribute of the invoked function.\n  */\n  FAAS_INVOKED_NAME: 'faas.invoked_name',\n\n  /**\n  * The cloud provider of the invoked function.\n  *\n  * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n  */\n  FAAS_INVOKED_PROVIDER: 'faas.invoked_provider',\n\n  /**\n  * The cloud region of the invoked function.\n  *\n  * Note: SHOULD be equal to the `cloud.region` resource attribute of the invoked function.\n  */\n  FAAS_INVOKED_REGION: 'faas.invoked_region',\n\n  /**\n  * Transport protocol used. See note below.\n  */\n  NET_TRANSPORT: 'net.transport',\n\n  /**\n  * Remote address of the peer (dotted decimal for IPv4 or [RFC5952](https://tools.ietf.org/html/rfc5952) for IPv6).\n  */\n  NET_PEER_IP: 'net.peer.ip',\n\n  /**\n  * Remote port number.\n  */\n  NET_PEER_PORT: 'net.peer.port',\n\n  /**\n  * Remote hostname or similar, see note below.\n  */\n  NET_PEER_NAME: 'net.peer.name',\n\n  /**\n  * Like `net.peer.ip` but for the host IP. Useful in case of a multi-IP host.\n  */\n  NET_HOST_IP: 'net.host.ip',\n\n  /**\n  * Like `net.peer.port` but for the host port.\n  */\n  NET_HOST_PORT: 'net.host.port',\n\n  /**\n  * Local hostname or similar, see note below.\n  */\n  NET_HOST_NAME: 'net.host.name',\n\n  /**\n  * The internet connection type currently being used by the host.\n  */\n  NET_HOST_CONNECTION_TYPE: 'net.host.connection.type',\n\n  /**\n  * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n  */\n  NET_HOST_CONNECTION_SUBTYPE: 'net.host.connection.subtype',\n\n  /**\n  * The name of the mobile carrier.\n  */\n  NET_HOST_CARRIER_NAME: 'net.host.carrier.name',\n\n  /**\n  * The mobile carrier country code.\n  */\n  NET_HOST_CARRIER_MCC: 'net.host.carrier.mcc',\n\n  /**\n  * The mobile carrier network code.\n  */\n  NET_HOST_CARRIER_MNC: 'net.host.carrier.mnc',\n\n  /**\n  * The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.\n  */\n  NET_HOST_CARRIER_ICC: 'net.host.carrier.icc',\n\n  /**\n  * The [`service.name`](../../resource/semantic_conventions/README.md#service) of the remote service. SHOULD be equal to the actual `service.name` resource attribute of the remote service if any.\n  */\n  PEER_SERVICE: 'peer.service',\n\n  /**\n  * Username or client_id extracted from the access token or [Authorization](https://tools.ietf.org/html/rfc7235#section-4.2) header in the inbound request from outside the system.\n  */\n  ENDUSER_ID: 'enduser.id',\n\n  /**\n  * Actual/assumed role the client is making the request under extracted from token or application security context.\n  */\n  ENDUSER_ROLE: 'enduser.role',\n\n  /**\n  * Scopes or granted authorities the client currently possesses extracted from token or application security context. The value would come from the scope associated with an [OAuth 2.0 Access Token](https://tools.ietf.org/html/rfc6749#section-3.3) or an attribute value in a [SAML 2.0 Assertion](https://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html).\n  */\n  ENDUSER_SCOPE: 'enduser.scope',\n\n  /**\n  * Current &#34;managed&#34; thread ID (as opposed to OS thread ID).\n  */\n  THREAD_ID: 'thread.id',\n\n  /**\n  * Current thread name.\n  */\n  THREAD_NAME: 'thread.name',\n\n  /**\n  * The method or function name, or equivalent (usually rightmost part of the code unit&#39;s name).\n  */\n  CODE_FUNCTION: 'code.function',\n\n  /**\n  * The &#34;namespace&#34; within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.\n  */\n  CODE_NAMESPACE: 'code.namespace',\n\n  /**\n  * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n  */\n  CODE_FILEPATH: 'code.filepath',\n\n  /**\n  * The line number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.\n  */\n  CODE_LINENO: 'code.lineno',\n\n  /**\n  * HTTP request method.\n  */\n  HTTP_METHOD: 'http.method',\n\n  /**\n  * Full HTTP request URL in the form `scheme://host[:port]/path?query[#fragment]`. Usually the fragment is not transmitted over HTTP, but if it is known, it should be included nevertheless.\n  *\n  * Note: `http.url` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case the attribute&#39;s value should be `https://www.example.com/`.\n  */\n  HTTP_URL: 'http.url',\n\n  /**\n  * The full request target as passed in a HTTP request line or equivalent.\n  */\n  HTTP_TARGET: 'http.target',\n\n  /**\n  * The value of the [HTTP host header](https://tools.ietf.org/html/rfc7230#section-5.4). An empty Host header should also be reported, see note.\n  *\n  * Note: When the header is present but empty the attribute SHOULD be set to the empty string. Note that this is a valid situation that is expected in certain cases, according the aforementioned [section of RFC 7230](https://tools.ietf.org/html/rfc7230#section-5.4). When the header is not set the attribute MUST NOT be set.\n  */\n  HTTP_HOST: 'http.host',\n\n  /**\n  * The URI scheme identifying the used protocol.\n  */\n  HTTP_SCHEME: 'http.scheme',\n\n  /**\n  * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n  */\n  HTTP_STATUS_CODE: 'http.status_code',\n\n  /**\n  * Kind of HTTP protocol used.\n  *\n  * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n  */\n  HTTP_FLAVOR: 'http.flavor',\n\n  /**\n  * Value of the [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) header sent by the client.\n  */\n  HTTP_USER_AGENT: 'http.user_agent',\n\n  /**\n  * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n  */\n  HTTP_REQUEST_CONTENT_LENGTH: 'http.request_content_length',\n\n  /**\n  * The size of the uncompressed request payload body after transport decoding. Not set if transport encoding not used.\n  */\n  HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED: 'http.request_content_length_uncompressed',\n\n  /**\n  * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n  */\n  HTTP_RESPONSE_CONTENT_LENGTH: 'http.response_content_length',\n\n  /**\n  * The size of the uncompressed response payload body after transport decoding. Not set if transport encoding not used.\n  */\n  HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED: 'http.response_content_length_uncompressed',\n\n  /**\n  * The primary server name of the matched virtual host. This should be obtained via configuration. If no such configuration can be obtained, this attribute MUST NOT be set ( `net.host.name` should be used instead).\n  *\n  * Note: `http.url` is usually not readily available on the server side but would have to be assembled in a cumbersome and sometimes lossy process from other information (see e.g. open-telemetry/opentelemetry-python/pull/148). It is thus preferred to supply the raw data that is available.\n  */\n  HTTP_SERVER_NAME: 'http.server_name',\n\n  /**\n  * The matched route (path template).\n  */\n  HTTP_ROUTE: 'http.route',\n\n  /**\n  * The IP address of the original client behind all proxies, if known (e.g. from [X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)).\n  *\n  * Note: This is not necessarily the same as `net.peer.ip`, which would\nidentify the network-level peer, which may be a proxy.\n\nThis attribute should be set when a source of information different\nfrom the one used for `net.peer.ip`, is available even if that other\nsource just confirms the same value as `net.peer.ip`.\nRationale: For `net.peer.ip`, one typically does not know if it\ncomes from a proxy, reverse proxy, or the actual client. Setting\n`http.client_ip` when it&#39;s the same as `net.peer.ip` means that\none is at least somewhat confident that the address is not that of\nthe closest proxy.\n  */\n  HTTP_CLIENT_IP: 'http.client_ip',\n\n  /**\n  * The keys in the `RequestItems` object field.\n  */\n  AWS_DYNAMODB_TABLE_NAMES: 'aws.dynamodb.table_names',\n\n  /**\n  * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n  */\n  AWS_DYNAMODB_CONSUMED_CAPACITY: 'aws.dynamodb.consumed_capacity',\n\n  /**\n  * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n  */\n  AWS_DYNAMODB_ITEM_COLLECTION_METRICS: 'aws.dynamodb.item_collection_metrics',\n\n  /**\n  * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n  */\n  AWS_DYNAMODB_PROVISIONED_READ_CAPACITY: 'aws.dynamodb.provisioned_read_capacity',\n\n  /**\n  * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n  */\n  AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY: 'aws.dynamodb.provisioned_write_capacity',\n\n  /**\n  * The value of the `ConsistentRead` request parameter.\n  */\n  AWS_DYNAMODB_CONSISTENT_READ: 'aws.dynamodb.consistent_read',\n\n  /**\n  * The value of the `ProjectionExpression` request parameter.\n  */\n  AWS_DYNAMODB_PROJECTION: 'aws.dynamodb.projection',\n\n  /**\n  * The value of the `Limit` request parameter.\n  */\n  AWS_DYNAMODB_LIMIT: 'aws.dynamodb.limit',\n\n  /**\n  * The value of the `AttributesToGet` request parameter.\n  */\n  AWS_DYNAMODB_ATTRIBUTES_TO_GET: 'aws.dynamodb.attributes_to_get',\n\n  /**\n  * The value of the `IndexName` request parameter.\n  */\n  AWS_DYNAMODB_INDEX_NAME: 'aws.dynamodb.index_name',\n\n  /**\n  * The value of the `Select` request parameter.\n  */\n  AWS_DYNAMODB_SELECT: 'aws.dynamodb.select',\n\n  /**\n  * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field.\n  */\n  AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES: 'aws.dynamodb.global_secondary_indexes',\n\n  /**\n  * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n  */\n  AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES: 'aws.dynamodb.local_secondary_indexes',\n\n  /**\n  * The value of the `ExclusiveStartTableName` request parameter.\n  */\n  AWS_DYNAMODB_EXCLUSIVE_START_TABLE: 'aws.dynamodb.exclusive_start_table',\n\n  /**\n  * The the number of items in the `TableNames` response parameter.\n  */\n  AWS_DYNAMODB_TABLE_COUNT: 'aws.dynamodb.table_count',\n\n  /**\n  * The value of the `ScanIndexForward` request parameter.\n  */\n  AWS_DYNAMODB_SCAN_FORWARD: 'aws.dynamodb.scan_forward',\n\n  /**\n  * The value of the `Segment` request parameter.\n  */\n  AWS_DYNAMODB_SEGMENT: 'aws.dynamodb.segment',\n\n  /**\n  * The value of the `TotalSegments` request parameter.\n  */\n  AWS_DYNAMODB_TOTAL_SEGMENTS: 'aws.dynamodb.total_segments',\n\n  /**\n  * The value of the `Count` response parameter.\n  */\n  AWS_DYNAMODB_COUNT: 'aws.dynamodb.count',\n\n  /**\n  * The value of the `ScannedCount` response parameter.\n  */\n  AWS_DYNAMODB_SCANNED_COUNT: 'aws.dynamodb.scanned_count',\n\n  /**\n  * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n  */\n  AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS: 'aws.dynamodb.attribute_definitions',\n\n  /**\n  * The JSON-serialized value of each item in the the `GlobalSecondaryIndexUpdates` request field.\n  */\n  AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES: 'aws.dynamodb.global_secondary_index_updates',\n\n  /**\n  * A string identifying the messaging system.\n  */\n  MESSAGING_SYSTEM: 'messaging.system',\n\n  /**\n  * The message destination name. This might be equal to the span name but is required nevertheless.\n  */\n  MESSAGING_DESTINATION: 'messaging.destination',\n\n  /**\n  * The kind of message destination.\n  */\n  MESSAGING_DESTINATION_KIND: 'messaging.destination_kind',\n\n  /**\n  * A boolean that is true if the message destination is temporary.\n  */\n  MESSAGING_TEMP_DESTINATION: 'messaging.temp_destination',\n\n  /**\n  * The name of the transport protocol.\n  */\n  MESSAGING_PROTOCOL: 'messaging.protocol',\n\n  /**\n  * The version of the transport protocol.\n  */\n  MESSAGING_PROTOCOL_VERSION: 'messaging.protocol_version',\n\n  /**\n  * Connection string.\n  */\n  MESSAGING_URL: 'messaging.url',\n\n  /**\n  * A value used by the messaging system as an identifier for the message, represented as a string.\n  */\n  MESSAGING_MESSAGE_ID: 'messaging.message_id',\n\n  /**\n  * The [conversation ID](#conversations) identifying the conversation to which the message belongs, represented as a string. Sometimes called &#34;Correlation ID&#34;.\n  */\n  MESSAGING_CONVERSATION_ID: 'messaging.conversation_id',\n\n  /**\n  * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is unknown whether the compressed or uncompressed payload size is reported.\n  */\n  MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES: 'messaging.message_payload_size_bytes',\n\n  /**\n  * The compressed size of the message payload in bytes.\n  */\n  MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES: 'messaging.message_payload_compressed_size_bytes',\n\n  /**\n  * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n  */\n  MESSAGING_OPERATION: 'messaging.operation',\n\n  /**\n  * The identifier for the consumer receiving a message. For Kafka, set it to `{messaging.kafka.consumer_group} - {messaging.kafka.client_id}`, if both are present, or only `messaging.kafka.consumer_group`. For brokers, such as RabbitMQ and Artemis, set it to the `client_id` of the client consuming the message.\n  */\n  MESSAGING_CONSUMER_ID: 'messaging.consumer_id',\n\n  /**\n  * RabbitMQ message routing key.\n  */\n  MESSAGING_RABBITMQ_ROUTING_KEY: 'messaging.rabbitmq.routing_key',\n\n  /**\n  * Message keys in Kafka are used for grouping alike messages to ensure they&#39;re processed on the same partition. They differ from `messaging.message_id` in that they&#39;re not unique. If the key is `null`, the attribute MUST NOT be set.\n  *\n  * Note: If the key type is not string, it&#39;s string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don&#39;t include its value.\n  */\n  MESSAGING_KAFKA_MESSAGE_KEY: 'messaging.kafka.message_key',\n\n  /**\n  * Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.\n  */\n  MESSAGING_KAFKA_CONSUMER_GROUP: 'messaging.kafka.consumer_group',\n\n  /**\n  * Client Id for the Consumer or Producer that is handling the message.\n  */\n  MESSAGING_KAFKA_CLIENT_ID: 'messaging.kafka.client_id',\n\n  /**\n  * Partition the message is sent to.\n  */\n  MESSAGING_KAFKA_PARTITION: 'messaging.kafka.partition',\n\n  /**\n  * A boolean that is true if the message is a tombstone.\n  */\n  MESSAGING_KAFKA_TOMBSTONE: 'messaging.kafka.tombstone',\n\n  /**\n  * A string identifying the remoting system.\n  */\n  RPC_SYSTEM: 'rpc.system',\n\n  /**\n  * The full (logical) name of the service being called, including its package name, if applicable.\n  *\n  * Note: This is the logical name of the service from the RPC interface perspective, which can be different from the name of any implementing class. The `code.namespace` attribute may be used to store the latter (despite the attribute name, it may include a class name; e.g., class with method actually executing the call on the server side, RPC client stub class on the client side).\n  */\n  RPC_SERVICE: 'rpc.service',\n\n  /**\n  * The name of the (logical) method being called, must be equal to the $method part in the span name.\n  *\n  * Note: This is the logical name of the method from the RPC interface perspective, which can be different from the name of any implementing method/function. The `code.function` attribute may be used to store the latter (e.g., method actually executing the call on the server side, RPC client stub method on the client side).\n  */\n  RPC_METHOD: 'rpc.method',\n\n  /**\n  * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n  */\n  RPC_GRPC_STATUS_CODE: 'rpc.grpc.status_code',\n\n  /**\n  * Protocol version as in `jsonrpc` property of request/response. Since JSON-RPC 1.0 does not specify this, the value can be omitted.\n  */\n  RPC_JSONRPC_VERSION: 'rpc.jsonrpc.version',\n\n  /**\n  * `id` property of request or response. Since protocol allows id to be int, string, `null` or missing (for notifications), value is expected to be cast to string for simplicity. Use empty string in case of `null` value. Omit entirely if this is a notification.\n  */\n  RPC_JSONRPC_REQUEST_ID: 'rpc.jsonrpc.request_id',\n\n  /**\n  * `error.code` property of response if it is an error response.\n  */\n  RPC_JSONRPC_ERROR_CODE: 'rpc.jsonrpc.error_code',\n\n  /**\n  * `error.message` property of response if it is an error response.\n  */\n  RPC_JSONRPC_ERROR_MESSAGE: 'rpc.jsonrpc.error_message',\n\n  /**\n  * Whether this is a received or sent message.\n  */\n  MESSAGE_TYPE: 'message.type',\n\n  /**\n  * MUST be calculated as two different counters starting from `1` one for sent messages and one for received message.\n  *\n  * Note: This way we guarantee that the values will be consistent between different implementations.\n  */\n  MESSAGE_ID: 'message.id',\n\n  /**\n  * Compressed size of the message in bytes.\n  */\n  MESSAGE_COMPRESSED_SIZE: 'message.compressed_size',\n\n  /**\n  * Uncompressed size of the message in bytes.\n  */\n  MESSAGE_UNCOMPRESSED_SIZE: 'message.uncompressed_size',\n};\n\n\nexport const DbSystemValues = {\n  /** Some other SQL database. Fallback only. See notes. */\n  OTHER_SQL: 'other_sql',\n  /** Microsoft SQL Server. */\n  MSSQL: 'mssql',\n  /** MySQL. */\n  MYSQL: 'mysql',\n  /** Oracle Database. */\n  ORACLE: 'oracle',\n  /** IBM Db2. */\n  DB2: 'db2',\n  /** PostgreSQL. */\n  POSTGRESQL: 'postgresql',\n  /** Amazon Redshift. */\n  REDSHIFT: 'redshift',\n  /** Apache Hive. */\n  HIVE: 'hive',\n  /** Cloudscape. */\n  CLOUDSCAPE: 'cloudscape',\n  /** HyperSQL DataBase. */\n  HSQLDB: 'hsqldb',\n  /** Progress Database. */\n  PROGRESS: 'progress',\n  /** SAP MaxDB. */\n  MAXDB: 'maxdb',\n  /** SAP HANA. */\n  HANADB: 'hanadb',\n  /** Ingres. */\n  INGRES: 'ingres',\n  /** FirstSQL. */\n  FIRSTSQL: 'firstsql',\n  /** EnterpriseDB. */\n  EDB: 'edb',\n  /** InterSystems Caché. */\n  CACHE: 'cache',\n  /** Adabas (Adaptable Database System). */\n  ADABAS: 'adabas',\n  /** Firebird. */\n  FIREBIRD: 'firebird',\n  /** Apache Derby. */\n  DERBY: 'derby',\n  /** FileMaker. */\n  FILEMAKER: 'filemaker',\n  /** Informix. */\n  INFORMIX: 'informix',\n  /** InstantDB. */\n  INSTANTDB: 'instantdb',\n  /** InterBase. */\n  INTERBASE: 'interbase',\n  /** MariaDB. */\n  MARIADB: 'mariadb',\n  /** Netezza. */\n  NETEZZA: 'netezza',\n  /** Pervasive PSQL. */\n  PERVASIVE: 'pervasive',\n  /** PointBase. */\n  POINTBASE: 'pointbase',\n  /** SQLite. */\n  SQLITE: 'sqlite',\n  /** Sybase. */\n  SYBASE: 'sybase',\n  /** Teradata. */\n  TERADATA: 'teradata',\n  /** Vertica. */\n  VERTICA: 'vertica',\n  /** H2. */\n  H2: 'h2',\n  /** ColdFusion IMQ. */\n  COLDFUSION: 'coldfusion',\n  /** Apache Cassandra. */\n  CASSANDRA: 'cassandra',\n  /** Apache HBase. */\n  HBASE: 'hbase',\n  /** MongoDB. */\n  MONGODB: 'mongodb',\n  /** Redis. */\n  REDIS: 'redis',\n  /** Couchbase. */\n  COUCHBASE: 'couchbase',\n  /** CouchDB. */\n  COUCHDB: 'couchdb',\n  /** Microsoft Azure Cosmos DB. */\n  COSMOSDB: 'cosmosdb',\n  /** Amazon DynamoDB. */\n  DYNAMODB: 'dynamodb',\n  /** Neo4j. */\n  NEO4J: 'neo4j',\n  /** Apache Geode. */\n  GEODE: 'geode',\n  /** Elasticsearch. */\n  ELASTICSEARCH: 'elasticsearch',\n  /** Memcached. */\n  MEMCACHED: 'memcached',\n  /** CockroachDB. */\n  COCKROACHDB: 'cockroachdb',\n} as const;\nexport type DbSystemValues = typeof DbSystemValues[keyof typeof DbSystemValues];\n\n\n\n\nexport const DbCassandraConsistencyLevelValues = {\n  /** all. */\n  ALL: 'all',\n  /** each_quorum. */\n  EACH_QUORUM: 'each_quorum',\n  /** quorum. */\n  QUORUM: 'quorum',\n  /** local_quorum. */\n  LOCAL_QUORUM: 'local_quorum',\n  /** one. */\n  ONE: 'one',\n  /** two. */\n  TWO: 'two',\n  /** three. */\n  THREE: 'three',\n  /** local_one. */\n  LOCAL_ONE: 'local_one',\n  /** any. */\n  ANY: 'any',\n  /** serial. */\n  SERIAL: 'serial',\n  /** local_serial. */\n  LOCAL_SERIAL: 'local_serial',\n} as const;\nexport type DbCassandraConsistencyLevelValues = typeof DbCassandraConsistencyLevelValues[keyof typeof DbCassandraConsistencyLevelValues];\n\n\n\n\nexport const FaasTriggerValues = {\n  /** A response to some data source operation such as a database or filesystem read/write. */\n  DATASOURCE: 'datasource',\n  /** To provide an answer to an inbound HTTP request. */\n  HTTP: 'http',\n  /** A function is set to be executed when messages are sent to a messaging system. */\n  PUBSUB: 'pubsub',\n  /** A function is scheduled to be executed regularly. */\n  TIMER: 'timer',\n  /** If none of the others apply. */\n  OTHER: 'other',\n} as const;\nexport type FaasTriggerValues = typeof FaasTriggerValues[keyof typeof FaasTriggerValues];\n\n\n\n\nexport const FaasDocumentOperationValues = {\n  /** When a new object is created. */\n  INSERT: 'insert',\n  /** When an object is modified. */\n  EDIT: 'edit',\n  /** When an object is deleted. */\n  DELETE: 'delete',\n} as const;\nexport type FaasDocumentOperationValues = typeof FaasDocumentOperationValues[keyof typeof FaasDocumentOperationValues];\n\n\n\n\nexport const FaasInvokedProviderValues = {\n  /** Alibaba Cloud. */\n  ALIBABA_CLOUD: 'alibaba_cloud',\n  /** Amazon Web Services. */\n  AWS: 'aws',\n  /** Microsoft Azure. */\n  AZURE: 'azure',\n  /** Google Cloud Platform. */\n  GCP: 'gcp',\n} as const;\nexport type FaasInvokedProviderValues = typeof FaasInvokedProviderValues[keyof typeof FaasInvokedProviderValues];\n\n\n\n\nexport const NetTransportValues = {\n  /** ip_tcp. */\n  IP_TCP: 'ip_tcp',\n  /** ip_udp. */\n  IP_UDP: 'ip_udp',\n  /** Another IP-based protocol. */\n  IP: 'ip',\n  /** Unix Domain socket. See below. */\n  UNIX: 'unix',\n  /** Named or anonymous pipe. See note below. */\n  PIPE: 'pipe',\n  /** In-process communication. */\n  INPROC: 'inproc',\n  /** Something else (non IP-based). */\n  OTHER: 'other',\n} as const;\nexport type NetTransportValues = typeof NetTransportValues[keyof typeof NetTransportValues];\n\n\n\n\nexport const NetHostConnectionTypeValues = {\n  /** wifi. */\n  WIFI: 'wifi',\n  /** wired. */\n  WIRED: 'wired',\n  /** cell. */\n  CELL: 'cell',\n  /** unavailable. */\n  UNAVAILABLE: 'unavailable',\n  /** unknown. */\n  UNKNOWN: 'unknown',\n} as const;\nexport type NetHostConnectionTypeValues = typeof NetHostConnectionTypeValues[keyof typeof NetHostConnectionTypeValues];\n\n\n\n\nexport const NetHostConnectionSubtypeValues = {\n  /** GPRS. */\n  GPRS: 'gprs',\n  /** EDGE. */\n  EDGE: 'edge',\n  /** UMTS. */\n  UMTS: 'umts',\n  /** CDMA. */\n  CDMA: 'cdma',\n  /** EVDO Rel. 0. */\n  EVDO_0: 'evdo_0',\n  /** EVDO Rev. A. */\n  EVDO_A: 'evdo_a',\n  /** CDMA2000 1XRTT. */\n  CDMA2000_1XRTT: 'cdma2000_1xrtt',\n  /** HSDPA. */\n  HSDPA: 'hsdpa',\n  /** HSUPA. */\n  HSUPA: 'hsupa',\n  /** HSPA. */\n  HSPA: 'hspa',\n  /** IDEN. */\n  IDEN: 'iden',\n  /** EVDO Rev. B. */\n  EVDO_B: 'evdo_b',\n  /** LTE. */\n  LTE: 'lte',\n  /** EHRPD. */\n  EHRPD: 'ehrpd',\n  /** HSPAP. */\n  HSPAP: 'hspap',\n  /** GSM. */\n  GSM: 'gsm',\n  /** TD-SCDMA. */\n  TD_SCDMA: 'td_scdma',\n  /** IWLAN. */\n  IWLAN: 'iwlan',\n  /** 5G NR (New Radio). */\n  NR: 'nr',\n  /** 5G NRNSA (New Radio Non-Standalone). */\n  NRNSA: 'nrnsa',\n  /** LTE CA. */\n  LTE_CA: 'lte_ca',\n} as const;\nexport type NetHostConnectionSubtypeValues = typeof NetHostConnectionSubtypeValues[keyof typeof NetHostConnectionSubtypeValues];\n\n\n\n\nexport const HttpFlavorValues = {\n  /** HTTP 1.0. */\n  HTTP_1_0: '1.0',\n  /** HTTP 1.1. */\n  HTTP_1_1: '1.1',\n  /** HTTP 2. */\n  HTTP_2_0: '2.0',\n  /** SPDY protocol. */\n  SPDY: 'SPDY',\n  /** QUIC protocol. */\n  QUIC: 'QUIC',\n} as const;\nexport type HttpFlavorValues = typeof HttpFlavorValues[keyof typeof HttpFlavorValues];\n\n\n\n\nexport const MessagingDestinationKindValues = {\n  /** A message sent to a queue. */\n  QUEUE: 'queue',\n  /** A message sent to a topic. */\n  TOPIC: 'topic',\n} as const;\nexport type MessagingDestinationKindValues = typeof MessagingDestinationKindValues[keyof typeof MessagingDestinationKindValues];\n\n\n\n\nexport const MessagingOperationValues = {\n  /** receive. */\n  RECEIVE: 'receive',\n  /** process. */\n  PROCESS: 'process',\n} as const;\nexport type MessagingOperationValues = typeof MessagingOperationValues[keyof typeof MessagingOperationValues];\n\n\n\n\nexport const RpcGrpcStatusCodeValues = {\n  /** OK. */\n  OK: 0,\n  /** CANCELLED. */\n  CANCELLED: 1,\n  /** UNKNOWN. */\n  UNKNOWN: 2,\n  /** INVALID_ARGUMENT. */\n  INVALID_ARGUMENT: 3,\n  /** DEADLINE_EXCEEDED. */\n  DEADLINE_EXCEEDED: 4,\n  /** NOT_FOUND. */\n  NOT_FOUND: 5,\n  /** ALREADY_EXISTS. */\n  ALREADY_EXISTS: 6,\n  /** PERMISSION_DENIED. */\n  PERMISSION_DENIED: 7,\n  /** RESOURCE_EXHAUSTED. */\n  RESOURCE_EXHAUSTED: 8,\n  /** FAILED_PRECONDITION. */\n  FAILED_PRECONDITION: 9,\n  /** ABORTED. */\n  ABORTED: 10,\n  /** OUT_OF_RANGE. */\n  OUT_OF_RANGE: 11,\n  /** UNIMPLEMENTED. */\n  UNIMPLEMENTED: 12,\n  /** INTERNAL. */\n  INTERNAL: 13,\n  /** UNAVAILABLE. */\n  UNAVAILABLE: 14,\n  /** DATA_LOSS. */\n  DATA_LOSS: 15,\n  /** UNAUTHENTICATED. */\n  UNAUTHENTICATED: 16,\n} as const;\nexport type RpcGrpcStatusCodeValues = typeof RpcGrpcStatusCodeValues[keyof typeof RpcGrpcStatusCodeValues];\n\n\n\n\nexport const MessageTypeValues = {\n  /** sent. */\n  SENT: 'SENT',\n  /** received. */\n  RECEIVED: 'RECEIVED',\n} as const;\nexport type MessageTypeValues = typeof MessageTypeValues[keyof typeof MessageTypeValues];\n\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './SemanticResourceAttributes';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexport const SemanticResourceAttributes = {\n\n  /**\n  * Name of the cloud provider.\n  */\n  CLOUD_PROVIDER: 'cloud.provider',\n\n  /**\n  * The cloud account ID the resource is assigned to.\n  */\n  CLOUD_ACCOUNT_ID: 'cloud.account.id',\n\n  /**\n  * The geographical region the resource is running. Refer to your provider&#39;s docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/en-us/global-infrastructure/geographies/), or [Google Cloud regions](https://cloud.google.com/about/locations).\n  */\n  CLOUD_REGION: 'cloud.region',\n\n  /**\n  * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n  *\n  * Note: Availability zones are called &#34;zones&#34; on Alibaba Cloud and Google Cloud.\n  */\n  CLOUD_AVAILABILITY_ZONE: 'cloud.availability_zone',\n\n  /**\n  * The cloud platform in use.\n  *\n  * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n  */\n  CLOUD_PLATFORM: 'cloud.platform',\n\n  /**\n  * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n  */\n  AWS_ECS_CONTAINER_ARN: 'aws.ecs.container.arn',\n\n  /**\n  * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n  */\n  AWS_ECS_CLUSTER_ARN: 'aws.ecs.cluster.arn',\n\n  /**\n  * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n  */\n  AWS_ECS_LAUNCHTYPE: 'aws.ecs.launchtype',\n\n  /**\n  * The ARN of an [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html).\n  */\n  AWS_ECS_TASK_ARN: 'aws.ecs.task.arn',\n\n  /**\n  * The task definition family this task definition is a member of.\n  */\n  AWS_ECS_TASK_FAMILY: 'aws.ecs.task.family',\n\n  /**\n  * The revision for this task definition.\n  */\n  AWS_ECS_TASK_REVISION: 'aws.ecs.task.revision',\n\n  /**\n  * The ARN of an EKS cluster.\n  */\n  AWS_EKS_CLUSTER_ARN: 'aws.eks.cluster.arn',\n\n  /**\n  * The name(s) of the AWS log group(s) an application is writing to.\n  *\n  * Note: Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n  */\n  AWS_LOG_GROUP_NAMES: 'aws.log.group.names',\n\n  /**\n  * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n  *\n  * Note: See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n  */\n  AWS_LOG_GROUP_ARNS: 'aws.log.group.arns',\n\n  /**\n  * The name(s) of the AWS log stream(s) an application is writing to.\n  */\n  AWS_LOG_STREAM_NAMES: 'aws.log.stream.names',\n\n  /**\n  * The ARN(s) of the AWS log stream(s).\n  *\n  * Note: See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n  */\n  AWS_LOG_STREAM_ARNS: 'aws.log.stream.arns',\n\n  /**\n  * Container name.\n  */\n  CONTAINER_NAME: 'container.name',\n\n  /**\n  * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/reference/run/#container-identification). The UUID might be abbreviated.\n  */\n  CONTAINER_ID: 'container.id',\n\n  /**\n  * The container runtime managing this container.\n  */\n  CONTAINER_RUNTIME: 'container.runtime',\n\n  /**\n  * Name of the image the container was built on.\n  */\n  CONTAINER_IMAGE_NAME: 'container.image.name',\n\n  /**\n  * Container image tag.\n  */\n  CONTAINER_IMAGE_TAG: 'container.image.tag',\n\n  /**\n  * Name of the [deployment environment](https://en.wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n  */\n  DEPLOYMENT_ENVIRONMENT: 'deployment.environment',\n\n  /**\n  * A unique identifier representing the device.\n  *\n  * Note: The device identifier MUST only be defined using the values outlined below. This value is not an advertising identifier and MUST NOT be used as such. On iOS (Swift or Objective-C), this value MUST be equal to the [vendor identifier](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android (Java or Kotlin), this value MUST be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application. More information can be found [here](https://developer.android.com/training/articles/user-data-ids) on best practices and exact implementation details. Caution should be taken when storing personal data or anything which can identify a user. GDPR and data protection laws may apply, ensure you do your own due diligence.\n  */\n  DEVICE_ID: 'device.id',\n\n  /**\n  * The model identifier for the device.\n  *\n  * Note: It&#39;s recommended this value represents a machine readable version of the model identifier rather than the market or consumer-friendly name of the device.\n  */\n  DEVICE_MODEL_IDENTIFIER: 'device.model.identifier',\n\n  /**\n  * The marketing name for the device model.\n  *\n  * Note: It&#39;s recommended this value represents a human readable version of the device model rather than a machine readable alternative.\n  */\n  DEVICE_MODEL_NAME: 'device.model.name',\n\n  /**\n  * The name of the single function that this runtime instance executes.\n  *\n  * Note: This is the name of the function as configured/deployed on the FaaS platform and is usually different from the name of the callback function (which may be stored in the [`code.namespace`/`code.function`](../../trace/semantic_conventions/span-general.md#source-code-attributes) span attributes).\n  */\n  FAAS_NAME: 'faas.name',\n\n  /**\n  * The unique ID of the single function that this runtime instance executes.\n  *\n  * Note: Depending on the cloud provider, use:\n\n* **AWS Lambda:** The function [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).\nTake care not to use the &#34;invoked ARN&#34; directly but replace any\n[alias suffix](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html) with the resolved function version, as the same runtime instance may be invokable with multiple\ndifferent aliases.\n* **GCP:** The [URI of the resource](https://cloud.google.com/iam/docs/full-resource-names)\n* **Azure:** The [Fully Qualified Resource ID](https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id).\n\nOn some providers, it may not be possible to determine the full ID at startup,\nwhich is why this field cannot be made required. For example, on AWS the account ID\npart of the ARN is not available without calling another AWS API\nwhich may be deemed too slow for a short-running lambda function.\nAs an alternative, consider setting `faas.id` as a span attribute instead.\n  */\n  FAAS_ID: 'faas.id',\n\n  /**\n  * The immutable version of the function being executed.\n  *\n  * Note: Depending on the cloud provider and platform, use:\n\n* **AWS Lambda:** The [function version](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)\n  (an integer represented as a decimal string).\n* **Google Cloud Run:** The [revision](https://cloud.google.com/run/docs/managing/revisions)\n  (i.e., the function name plus the revision suffix).\n* **Google Cloud Functions:** The value of the\n  [`K_REVISION` environment variable](https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically).\n* **Azure Functions:** Not applicable. Do not set this attribute.\n  */\n  FAAS_VERSION: 'faas.version',\n\n  /**\n  * The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.\n  *\n  * Note: * **AWS Lambda:** Use the (full) log stream name.\n  */\n  FAAS_INSTANCE: 'faas.instance',\n\n  /**\n  * The amount of memory available to the serverless function in MiB.\n  *\n  * Note: It&#39;s recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information.\n  */\n  FAAS_MAX_MEMORY: 'faas.max_memory',\n\n  /**\n  * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider.\n  */\n  HOST_ID: 'host.id',\n\n  /**\n  * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n  */\n  HOST_NAME: 'host.name',\n\n  /**\n  * Type of host. For Cloud, this must be the machine type.\n  */\n  HOST_TYPE: 'host.type',\n\n  /**\n  * The CPU architecture the host system is running on.\n  */\n  HOST_ARCH: 'host.arch',\n\n  /**\n  * Name of the VM image or OS install the host was instantiated from.\n  */\n  HOST_IMAGE_NAME: 'host.image.name',\n\n  /**\n  * VM image ID. For Cloud, this value is from the provider.\n  */\n  HOST_IMAGE_ID: 'host.image.id',\n\n  /**\n  * The version string of the VM image as defined in [Version SpanAttributes](README.md#version-attributes).\n  */\n  HOST_IMAGE_VERSION: 'host.image.version',\n\n  /**\n  * The name of the cluster.\n  */\n  K8S_CLUSTER_NAME: 'k8s.cluster.name',\n\n  /**\n  * The name of the Node.\n  */\n  K8S_NODE_NAME: 'k8s.node.name',\n\n  /**\n  * The UID of the Node.\n  */\n  K8S_NODE_UID: 'k8s.node.uid',\n\n  /**\n  * The name of the namespace that the pod is running in.\n  */\n  K8S_NAMESPACE_NAME: 'k8s.namespace.name',\n\n  /**\n  * The UID of the Pod.\n  */\n  K8S_POD_UID: 'k8s.pod.uid',\n\n  /**\n  * The name of the Pod.\n  */\n  K8S_POD_NAME: 'k8s.pod.name',\n\n  /**\n  * The name of the Container in a Pod template.\n  */\n  K8S_CONTAINER_NAME: 'k8s.container.name',\n\n  /**\n  * The UID of the ReplicaSet.\n  */\n  K8S_REPLICASET_UID: 'k8s.replicaset.uid',\n\n  /**\n  * The name of the ReplicaSet.\n  */\n  K8S_REPLICASET_NAME: 'k8s.replicaset.name',\n\n  /**\n  * The UID of the Deployment.\n  */\n  K8S_DEPLOYMENT_UID: 'k8s.deployment.uid',\n\n  /**\n  * The name of the Deployment.\n  */\n  K8S_DEPLOYMENT_NAME: 'k8s.deployment.name',\n\n  /**\n  * The UID of the StatefulSet.\n  */\n  K8S_STATEFULSET_UID: 'k8s.statefulset.uid',\n\n  /**\n  * The name of the StatefulSet.\n  */\n  K8S_STATEFULSET_NAME: 'k8s.statefulset.name',\n\n  /**\n  * The UID of the DaemonSet.\n  */\n  K8S_DAEMONSET_UID: 'k8s.daemonset.uid',\n\n  /**\n  * The name of the DaemonSet.\n  */\n  K8S_DAEMONSET_NAME: 'k8s.daemonset.name',\n\n  /**\n  * The UID of the Job.\n  */\n  K8S_JOB_UID: 'k8s.job.uid',\n\n  /**\n  * The name of the Job.\n  */\n  K8S_JOB_NAME: 'k8s.job.name',\n\n  /**\n  * The UID of the CronJob.\n  */\n  K8S_CRONJOB_UID: 'k8s.cronjob.uid',\n\n  /**\n  * The name of the CronJob.\n  */\n  K8S_CRONJOB_NAME: 'k8s.cronjob.name',\n\n  /**\n  * The operating system type.\n  */\n  OS_TYPE: 'os.type',\n\n  /**\n  * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n  */\n  OS_DESCRIPTION: 'os.description',\n\n  /**\n  * Human readable operating system name.\n  */\n  OS_NAME: 'os.name',\n\n  /**\n  * The version string of the operating system as defined in [Version SpanAttributes](../../resource/semantic_conventions/README.md#version-attributes).\n  */\n  OS_VERSION: 'os.version',\n\n  /**\n  * Process identifier (PID).\n  */\n  PROCESS_PID: 'process.pid',\n\n  /**\n  * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n  */\n  PROCESS_EXECUTABLE_NAME: 'process.executable.name',\n\n  /**\n  * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n  */\n  PROCESS_EXECUTABLE_PATH: 'process.executable.path',\n\n  /**\n  * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n  */\n  PROCESS_COMMAND: 'process.command',\n\n  /**\n  * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n  */\n  PROCESS_COMMAND_LINE: 'process.command_line',\n\n  /**\n  * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n  */\n  PROCESS_COMMAND_ARGS: 'process.command_args',\n\n  /**\n  * The username of the user that owns the process.\n  */\n  PROCESS_OWNER: 'process.owner',\n\n  /**\n  * The name of the runtime of this process. For compiled native binaries, this SHOULD be the name of the compiler.\n  */\n  PROCESS_RUNTIME_NAME: 'process.runtime.name',\n\n  /**\n  * The version of the runtime of this process, as returned by the runtime without modification.\n  */\n  PROCESS_RUNTIME_VERSION: 'process.runtime.version',\n\n  /**\n  * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n  */\n  PROCESS_RUNTIME_DESCRIPTION: 'process.runtime.description',\n\n  /**\n  * Logical name of the service.\n  *\n  * Note: MUST be the same for all instances of horizontally scaled services. If the value was not specified, SDKs MUST fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md#process), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value MUST be set to `unknown_service`.\n  */\n  SERVICE_NAME: 'service.name',\n\n  /**\n  * A namespace for `service.name`.\n  *\n  * Note: A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n  */\n  SERVICE_NAMESPACE: 'service.namespace',\n\n  /**\n  * The string ID of the service instance.\n  *\n  * Note: MUST be unique for each instance of the same `service.namespace,service.name` pair (in other words `service.namespace,service.name,service.instance.id` triplet MUST be globally unique). The ID helps to distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled service). It is preferable for the ID to be persistent and stay the same for the lifetime of the service instance, however it is acceptable that the ID is ephemeral and changes during important lifetime events for the service (e.g. service restarts). If the service has no inherent unique ID that can be used as the value of this attribute it is recommended to generate a random Version 1 or Version 4 RFC 4122 UUID (services aiming for reproducible UUIDs may also use Version 5, see RFC 4122 for more recommendations).\n  */\n  SERVICE_INSTANCE_ID: 'service.instance.id',\n\n  /**\n  * The version string of the service API or implementation.\n  */\n  SERVICE_VERSION: 'service.version',\n\n  /**\n  * The name of the telemetry SDK as defined above.\n  */\n  TELEMETRY_SDK_NAME: 'telemetry.sdk.name',\n\n  /**\n  * The language of the telemetry SDK.\n  */\n  TELEMETRY_SDK_LANGUAGE: 'telemetry.sdk.language',\n\n  /**\n  * The version string of the telemetry SDK.\n  */\n  TELEMETRY_SDK_VERSION: 'telemetry.sdk.version',\n\n  /**\n  * The version string of the auto instrumentation agent, if used.\n  */\n  TELEMETRY_AUTO_VERSION: 'telemetry.auto.version',\n\n  /**\n  * The name of the web engine.\n  */\n  WEBENGINE_NAME: 'webengine.name',\n\n  /**\n  * The version of the web engine.\n  */\n  WEBENGINE_VERSION: 'webengine.version',\n\n  /**\n  * Additional description of the web engine (e.g. detailed version and edition information).\n  */\n  WEBENGINE_DESCRIPTION: 'webengine.description',\n};\n\n\nexport const CloudProviderValues = {\n  /** Alibaba Cloud. */\n  ALIBABA_CLOUD: 'alibaba_cloud',\n  /** Amazon Web Services. */\n  AWS: 'aws',\n  /** Microsoft Azure. */\n  AZURE: 'azure',\n  /** Google Cloud Platform. */\n  GCP: 'gcp',\n} as const;\nexport type CloudProviderValues = typeof CloudProviderValues[keyof typeof CloudProviderValues];\n\n\n\n\nexport const CloudPlatformValues = {\n  /** Alibaba Cloud Elastic Compute Service. */\n  ALIBABA_CLOUD_ECS: 'alibaba_cloud_ecs',\n  /** Alibaba Cloud Function Compute. */\n  ALIBABA_CLOUD_FC: 'alibaba_cloud_fc',\n  /** AWS Elastic Compute Cloud. */\n  AWS_EC2: 'aws_ec2',\n  /** AWS Elastic Container Service. */\n  AWS_ECS: 'aws_ecs',\n  /** AWS Elastic Kubernetes Service. */\n  AWS_EKS: 'aws_eks',\n  /** AWS Lambda. */\n  AWS_LAMBDA: 'aws_lambda',\n  /** AWS Elastic Beanstalk. */\n  AWS_ELASTIC_BEANSTALK: 'aws_elastic_beanstalk',\n  /** Azure Virtual Machines. */\n  AZURE_VM: 'azure_vm',\n  /** Azure Container Instances. */\n  AZURE_CONTAINER_INSTANCES: 'azure_container_instances',\n  /** Azure Kubernetes Service. */\n  AZURE_AKS: 'azure_aks',\n  /** Azure Functions. */\n  AZURE_FUNCTIONS: 'azure_functions',\n  /** Azure App Service. */\n  AZURE_APP_SERVICE: 'azure_app_service',\n  /** Google Cloud Compute Engine (GCE). */\n  GCP_COMPUTE_ENGINE: 'gcp_compute_engine',\n  /** Google Cloud Run. */\n  GCP_CLOUD_RUN: 'gcp_cloud_run',\n  /** Google Cloud Kubernetes Engine (GKE). */\n  GCP_KUBERNETES_ENGINE: 'gcp_kubernetes_engine',\n  /** Google Cloud Functions (GCF). */\n  GCP_CLOUD_FUNCTIONS: 'gcp_cloud_functions',\n  /** Google Cloud App Engine (GAE). */\n  GCP_APP_ENGINE: 'gcp_app_engine',\n} as const;\nexport type CloudPlatformValues = typeof CloudPlatformValues[keyof typeof CloudPlatformValues];\n\n\n\n\nexport const AwsEcsLaunchtypeValues = {\n  /** ec2. */\n  EC2: 'ec2',\n  /** fargate. */\n  FARGATE: 'fargate',\n} as const;\nexport type AwsEcsLaunchtypeValues = typeof AwsEcsLaunchtypeValues[keyof typeof AwsEcsLaunchtypeValues];\n\n\n\n\nexport const HostArchValues = {\n  /** AMD64. */\n  AMD64: 'amd64',\n  /** ARM32. */\n  ARM32: 'arm32',\n  /** ARM64. */\n  ARM64: 'arm64',\n  /** Itanium. */\n  IA64: 'ia64',\n  /** 32-bit PowerPC. */\n  PPC32: 'ppc32',\n  /** 64-bit PowerPC. */\n  PPC64: 'ppc64',\n  /** 32-bit x86. */\n  X86: 'x86',\n} as const;\nexport type HostArchValues = typeof HostArchValues[keyof typeof HostArchValues];\n\n\n\n\nexport const OsTypeValues = {\n  /** Microsoft Windows. */\n  WINDOWS: 'windows',\n  /** Linux. */\n  LINUX: 'linux',\n  /** Apple Darwin. */\n  DARWIN: 'darwin',\n  /** FreeBSD. */\n  FREEBSD: 'freebsd',\n  /** NetBSD. */\n  NETBSD: 'netbsd',\n  /** OpenBSD. */\n  OPENBSD: 'openbsd',\n  /** DragonFly BSD. */\n  DRAGONFLYBSD: 'dragonflybsd',\n  /** HP-UX (Hewlett Packard Unix). */\n  HPUX: 'hpux',\n  /** AIX (Advanced Interactive eXecutive). */\n  AIX: 'aix',\n  /** Oracle Solaris. */\n  SOLARIS: 'solaris',\n  /** IBM z/OS. */\n  Z_OS: 'z_os',\n} as const;\nexport type OsTypeValues = typeof OsTypeValues[keyof typeof OsTypeValues];\n\n\n\n\nexport const TelemetrySdkLanguageValues = {\n  /** cpp. */\n  CPP: 'cpp',\n  /** dotnet. */\n  DOTNET: 'dotnet',\n  /** erlang. */\n  ERLANG: 'erlang',\n  /** go. */\n  GO: 'go',\n  /** java. */\n  JAVA: 'java',\n  /** nodejs. */\n  NODEJS: 'nodejs',\n  /** php. */\n  PHP: 'php',\n  /** python. */\n  PYTHON: 'python',\n  /** ruby. */\n  RUBY: 'ruby',\n  /** webjs. */\n  WEBJS: 'webjs',\n} as const;\nexport type TelemetrySdkLanguageValues = typeof TelemetrySdkLanguageValues[keyof typeof TelemetrySdkLanguageValues];\n\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function unrefTimer(_timer: number): void {}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Exception } from '@opentelemetry/api';\n\n/**\n * This interface defines a fallback to read a timeOrigin when it is not available on performance.timeOrigin,\n * this happens for example on Safari Mac\n * then the timeOrigin is taken from fetchStart - which is the closest to timeOrigin\n */\nexport interface TimeOriginLegacy {\n  timing: {\n    fetchStart: number;\n  };\n}\n\n/**\n * This interface defines the params that are be added to the wrapped function\n * using the \"shimmer.wrap\"\n */\nexport interface ShimWrapped extends Function {\n  __wrapped: boolean;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  __unwrap: Function;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  __original: Function;\n}\n\n/**\n * An instrumentation library consists of the name and optional version\n * used to obtain a tracer or meter from a provider. This metadata is made\n * available on ReadableSpan and MetricRecord for use by the export pipeline.\n * @deprecated Use {@link InstrumentationScope} instead.\n */\nexport interface InstrumentationLibrary {\n  readonly name: string;\n  readonly version?: string;\n  readonly schemaUrl?: string;\n}\n\n/**\n * An instrumentation scope consists of the name and optional version\n * used to obtain a tracer or meter from a provider. This metadata is made\n * available on ReadableSpan and MetricRecord for use by the export pipeline.\n */\nexport interface InstrumentationScope {\n  readonly name: string;\n  readonly version?: string;\n  readonly schemaUrl?: string;\n}\n\n/** Defines an error handler function */\nexport type ErrorHandler = (ex: Exception) => void;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface ExportResult {\n  code: ExportResultCode;\n  error?: Error;\n}\n\nexport enum ExportResultCode {\n  SUCCESS,\n  FAILED,\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  TextMapGetter,\n  TextMapPropagator,\n  diag,\n  TextMapSetter,\n} from '@opentelemetry/api';\n\n/** Configuration object for composite propagator */\nexport interface CompositePropagatorConfig {\n  /**\n   * List of propagators to run. Propagators run in the\n   * list order. If a propagator later in the list writes the same context\n   * key as a propagator earlier in the list, the later on will \"win\".\n   */\n  propagators?: TextMapPropagator[];\n}\n\n/** Combines multiple propagators into a single propagator. */\nexport class CompositePropagator implements TextMapPropagator {\n  private readonly _propagators: TextMapPropagator[];\n  private readonly _fields: string[];\n\n  /**\n   * Construct a composite propagator from a list of propagators.\n   *\n   * @param [config] Configuration object for composite propagator\n   */\n  constructor(config: CompositePropagatorConfig = {}) {\n    this._propagators = config.propagators ?? [];\n\n    this._fields = Array.from(\n      new Set(\n        this._propagators\n          // older propagators may not have fields function, null check to be sure\n          .map(p => (typeof p.fields === 'function' ? p.fields() : []))\n          .reduce((x, y) => x.concat(y), [])\n      )\n    );\n  }\n\n  /**\n   * Run each of the configured propagators with the given context and carrier.\n   * Propagators are run in the order they are configured, so if multiple\n   * propagators write the same carrier key, the propagator later in the list\n   * will \"win\".\n   *\n   * @param context Context to inject\n   * @param carrier Carrier into which context will be injected\n   */\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    for (const propagator of this._propagators) {\n      try {\n        propagator.inject(context, carrier, setter);\n      } catch (err) {\n        diag.warn(\n          `Failed to inject with ${propagator.constructor.name}. Err: ${err.message}`\n        );\n      }\n    }\n  }\n\n  /**\n   * Run each of the configured propagators with the given context and carrier.\n   * Propagators are run in the order they are configured, so if multiple\n   * propagators write the same context key, the propagator later in the list\n   * will \"win\".\n   *\n   * @param context Context to add values to\n   * @param carrier Carrier from which to extract context\n   */\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    return this._propagators.reduce((ctx, propagator) => {\n      try {\n        return propagator.extract(ctx, carrier, getter);\n      } catch (err) {\n        diag.warn(\n          `Failed to inject with ${propagator.constructor.name}. Err: ${err.message}`\n        );\n      }\n      return ctx;\n    }, context);\n  }\n\n  fields(): string[] {\n    // return a new array so our fields cannot be modified\n    return this._fields.slice();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  SpanContext,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter, trace,\n  TraceFlags,\n} from '@opentelemetry/api';\nimport { isTracingSuppressed } from './suppress-tracing';\nimport { TraceState } from './TraceState';\n\nexport const TRACE_PARENT_HEADER = 'traceparent';\nexport const TRACE_STATE_HEADER = 'tracestate';\n\nconst VERSION = '00';\nconst VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nconst TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nconst PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nconst FLAGS_PART = '[\\\\da-f]{2}';\nconst TRACE_PARENT_REGEX = new RegExp(\n  `^\\\\s?(${VERSION_PART})-(${TRACE_ID_PART})-(${PARENT_ID_PART})-(${FLAGS_PART})(-.*)?\\\\s?$`\n);\n\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nexport function parseTraceParent(traceParent: string): SpanContext | null {\n  const match = TRACE_PARENT_REGEX.exec(traceParent);\n  if (!match) return null;\n\n  // According to the specification the implementation should be compatible\n  // with future versions. If there are more parts, we only reject it if it's using version 00\n  // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n  if (match[1] === '00' && match[5]) return null;\n\n  return {\n    traceId: match[2],\n    spanId: match[3],\n    traceFlags: parseInt(match[4], 16),\n  };\n}\n\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nexport class W3CTraceContextPropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const spanContext = trace.getSpanContext(context);\n    if (\n      !spanContext ||\n      isTracingSuppressed(context) ||\n      !isSpanContextValid(spanContext)\n    )\n      return;\n\n    const traceParent = `${VERSION}-${spanContext.traceId}-${\n      spanContext.spanId\n    }-0${Number(spanContext.traceFlags || TraceFlags.NONE).toString(16)}`;\n\n    setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n    if (spanContext.traceState) {\n      setter.set(\n        carrier,\n        TRACE_STATE_HEADER,\n        spanContext.traceState.serialize()\n      );\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n    if (!traceParentHeader) return context;\n    const traceParent = Array.isArray(traceParentHeader)\n      ? traceParentHeader[0]\n      : traceParentHeader;\n    if (typeof traceParent !== 'string') return context;\n    const spanContext = parseTraceParent(traceParent);\n    if (!spanContext) return context;\n\n    spanContext.isRemote = true;\n\n    const traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n    if (traceStateHeader) {\n      // If more than one `tracestate` header is found, we merge them into a\n      // single header.\n      const state = Array.isArray(traceStateHeader)\n        ? traceStateHeader.join(',')\n        : traceStateHeader;\n      spanContext.traceState = new TraceState(\n        typeof state === 'string' ? state : undefined\n      );\n    }\n    return trace.setSpanContext(context, spanContext);\n  }\n\n  fields(): string[] {\n    return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { validateKey, validateValue } from '../internal/validators';\n\nconst MAX_TRACE_STATE_ITEMS = 32;\nconst MAX_TRACE_STATE_LEN = 512;\nconst LIST_MEMBERS_SEPARATOR = ',';\nconst LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nexport class TraceState implements api.TraceState {\n  private _internalState: Map<string, string> = new Map();\n\n  constructor(rawTraceState?: string) {\n    if (rawTraceState) this._parse(rawTraceState);\n  }\n\n  set(key: string, value: string): TraceState {\n    // TODO: Benchmark the different approaches(map vs list) and\n    // use the faster one.\n    const traceState = this._clone();\n    if (traceState._internalState.has(key)) {\n      traceState._internalState.delete(key);\n    }\n    traceState._internalState.set(key, value);\n    return traceState;\n  }\n\n  unset(key: string): TraceState {\n    const traceState = this._clone();\n    traceState._internalState.delete(key);\n    return traceState;\n  }\n\n  get(key: string): string | undefined {\n    return this._internalState.get(key);\n  }\n\n  serialize(): string {\n    return this._keys()\n      .reduce((agg: string[], key) => {\n        agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + this.get(key));\n        return agg;\n      }, [])\n      .join(LIST_MEMBERS_SEPARATOR);\n  }\n\n  private _parse(rawTraceState: string) {\n    if (rawTraceState.length > MAX_TRACE_STATE_LEN) return;\n    this._internalState = rawTraceState\n      .split(LIST_MEMBERS_SEPARATOR)\n      .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n      .reduce((agg: Map<string, string>, part: string) => {\n        const listMember = part.trim(); // Optional Whitespace (OWS) handling\n        const i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n        if (i !== -1) {\n          const key = listMember.slice(0, i);\n          const value = listMember.slice(i + 1, part.length);\n          if (validateKey(key) && validateValue(value)) {\n            agg.set(key, value);\n          } else {\n            // TODO: Consider to add warning log\n          }\n        }\n        return agg;\n      }, new Map());\n\n    // Because of the reverse() requirement, trunc must be done after map is created\n    if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n      this._internalState = new Map(\n        Array.from(this._internalState.entries())\n          .reverse() // Use reverse same as original tracestate parse chain\n          .slice(0, MAX_TRACE_STATE_ITEMS)\n      );\n    }\n  }\n\n  private _keys(): string[] {\n    return Array.from(this._internalState.keys()).reverse();\n  }\n\n  private _clone(): TraceState {\n    const traceState = new TraceState();\n    traceState._internalState = new Map(this._internalState);\n    return traceState;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nconst VALID_KEY = `[a-z]${VALID_KEY_CHAR_RANGE}{0,255}`;\nconst VALID_VENDOR_KEY = `[a-z0-9]${VALID_KEY_CHAR_RANGE}{0,240}@[a-z]${VALID_KEY_CHAR_RANGE}{0,13}`;\nconst VALID_KEY_REGEX = new RegExp(`^(?:${VALID_KEY}|${VALID_VENDOR_KEY})$`);\nconst VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nconst INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key: string): boolean {\n  return VALID_KEY_REGEX.test(key);\n}\n\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value: string): boolean {\n  return (\n    VALID_VALUE_BASE_REGEX.test(value) &&\n    !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value)\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** IdGenerator provides an interface for generating Trace Id and Span Id */\nexport interface IdGenerator {\n  /** Returns a trace ID composed of 32 lowercase hex characters. */\n  generateTraceId(): string;\n  /** Returns a span ID composed of 16 lowercase hex characters. */\n  generateSpanId(): string;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, createContextKey, Span } from '@opentelemetry/api';\n\nconst RPC_METADATA_KEY = createContextKey(\n  'OpenTelemetry SDK Context Key RPC_METADATA'\n);\n\nexport enum RPCType {\n  HTTP = 'http',\n}\n\ntype HTTPMetadata = {\n  type: RPCType.HTTP;\n  route?: string;\n  span: Span;\n};\n\n/**\n * Allows for future rpc metadata to be used with this mechanism\n */\nexport type RPCMetadata = HTTPMetadata;\n\nexport function setRPCMetadata(context: Context, meta: RPCMetadata): Context {\n  return context.setValue(RPC_METADATA_KEY, meta);\n}\n\nexport function deleteRPCMetadata(context: Context): Context {\n  return context.deleteValue(RPC_METADATA_KEY);\n}\n\nexport function getRPCMetadata(context: Context): RPCMetadata | undefined {\n  return context.getValue(RPC_METADATA_KEY) as RPCMetadata | undefined;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler, SamplingDecision, SamplingResult } from '@opentelemetry/api';\n\n/** Sampler that samples no traces. */\nexport class AlwaysOffSampler implements Sampler {\n  shouldSample(): SamplingResult {\n    return {\n      decision: SamplingDecision.NOT_RECORD,\n    };\n  }\n\n  toString(): string {\n    return 'AlwaysOffSampler';\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler, SamplingDecision, SamplingResult } from '@opentelemetry/api';\n\n/** Sampler that samples all traces. */\nexport class AlwaysOnSampler implements Sampler {\n  shouldSample(): SamplingResult {\n    return {\n      decision: SamplingDecision.RECORD_AND_SAMPLED,\n    };\n  }\n\n  toString(): string {\n    return 'AlwaysOnSampler';\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  Link,\n  Sampler,\n  SamplingResult,\n  SpanAttributes,\n  SpanKind,\n  TraceFlags, trace,\n} from '@opentelemetry/api';\nimport { globalErrorHandler } from '../../common/global-error-handler';\nimport { AlwaysOffSampler } from './AlwaysOffSampler';\nimport { AlwaysOnSampler } from './AlwaysOnSampler';\n\n/**\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nexport class ParentBasedSampler implements Sampler {\n  private _root: Sampler;\n  private _remoteParentSampled: Sampler;\n  private _remoteParentNotSampled: Sampler;\n  private _localParentSampled: Sampler;\n  private _localParentNotSampled: Sampler;\n\n  constructor(config: ParentBasedSamplerConfig) {\n    this._root = config.root;\n\n    if (!this._root) {\n      globalErrorHandler(\n        new Error('ParentBasedSampler must have a root sampler configured')\n      );\n      this._root = new AlwaysOnSampler();\n    }\n\n    this._remoteParentSampled =\n      config.remoteParentSampled ?? new AlwaysOnSampler();\n    this._remoteParentNotSampled =\n      config.remoteParentNotSampled ?? new AlwaysOffSampler();\n    this._localParentSampled =\n      config.localParentSampled ?? new AlwaysOnSampler();\n    this._localParentNotSampled =\n      config.localParentNotSampled ?? new AlwaysOffSampler();\n  }\n\n  shouldSample(\n    context: Context,\n    traceId: string,\n    spanName: string,\n    spanKind: SpanKind,\n    attributes: SpanAttributes,\n    links: Link[]\n  ): SamplingResult {\n    const parentContext = trace.getSpanContext(context);\n\n    if (!parentContext || !isSpanContextValid(parentContext)) {\n      return this._root.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    if (parentContext.isRemote) {\n      if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n        return this._remoteParentSampled.shouldSample(\n          context,\n          traceId,\n          spanName,\n          spanKind,\n          attributes,\n          links\n        );\n      }\n      return this._remoteParentNotSampled.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n      return this._localParentSampled.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    return this._localParentNotSampled.shouldSample(\n      context,\n      traceId,\n      spanName,\n      spanKind,\n      attributes,\n      links\n    );\n  }\n\n  toString(): string {\n    return `ParentBased{root=${this._root.toString()}, remoteParentSampled=${this._remoteParentSampled.toString()}, remoteParentNotSampled=${this._remoteParentNotSampled.toString()}, localParentSampled=${this._localParentSampled.toString()}, localParentNotSampled=${this._localParentNotSampled.toString()}}`;\n  }\n}\n\ninterface ParentBasedSamplerConfig {\n  /** Sampler called for spans with no parent */\n  root: Sampler;\n  /** Sampler called for spans with a remote parent which was sampled. Default AlwaysOn */\n  remoteParentSampled?: Sampler;\n  /** Sampler called for spans with a remote parent which was not sampled. Default AlwaysOff */\n  remoteParentNotSampled?: Sampler;\n  /** Sampler called for spans with a local parent which was sampled. Default AlwaysOn */\n  localParentSampled?: Sampler;\n  /** Sampler called for spans with a local parent which was not sampled. Default AlwaysOff */\n  localParentNotSampled?: Sampler;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Sampler,\n  SamplingDecision,\n  SamplingResult,\n  isValidTraceId,\n} from '@opentelemetry/api';\n\n/** Sampler that samples a given fraction of traces based of trace id deterministically. */\nexport class TraceIdRatioBasedSampler implements Sampler {\n  private _upperBound: number;\n\n  constructor(private readonly _ratio: number = 0) {\n    this._ratio = this._normalize(_ratio);\n    this._upperBound = Math.floor(this._ratio * 0xffffffff);\n  }\n\n  shouldSample(context: unknown, traceId: string): SamplingResult {\n    return {\n      decision:\n        isValidTraceId(traceId) && this._accumulate(traceId) < this._upperBound\n          ? SamplingDecision.RECORD_AND_SAMPLED\n          : SamplingDecision.NOT_RECORD,\n    };\n  }\n\n  toString(): string {\n    return `TraceIdRatioBased{${this._ratio}}`;\n  }\n\n  private _normalize(ratio: number): number {\n    if (typeof ratio !== 'number' || isNaN(ratio)) return 0;\n    return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n  }\n\n  private _accumulate(traceId: string): number {\n    let accumulation = 0;\n    for (let i = 0; i < traceId.length / 8; i++) {\n      const pos = i * 8;\n      const part = parseInt(traceId.slice(pos, pos + 8), 16);\n      accumulation = (accumulation ^ part) >>> 0;\n    }\n    return accumulation;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { isPlainObject } from './lodash.merge';\n\nconst MAX_LEVEL = 20;\n\ninterface ObjectInto {\n  obj: any;\n  key: string;\n}\n\n/**\n * Merges objects together\n * @param args - objects / values to be merged\n */\nexport function merge(...args: any[]): any {\n  let result: any = args.shift();\n  const objects: WeakMap<any, ObjectInto[]> | undefined = new WeakMap<any, ObjectInto[]>();\n  while (args.length > 0) {\n    result = mergeTwoObjects(result, args.shift(), 0, objects);\n  }\n\n  return result;\n}\n\nfunction takeValue(value: any): any {\n  if (isArray(value)) {\n    return value.slice();\n  }\n  return value;\n}\n\n/**\n * Merges two objects\n * @param one - first object\n * @param two - second object\n * @param level - current deep level\n * @param objects - objects holder that has been already referenced - to prevent\n * cyclic dependency\n */\nfunction mergeTwoObjects(\n  one: any,\n  two: any,\n  level = 0,\n  objects: WeakMap<any, ObjectInto[]>,\n): any {\n  let result: any;\n  if (level > MAX_LEVEL) {\n    return undefined;\n  }\n  level++;\n  if (isPrimitive(one) || isPrimitive(two) || isFunction(two)) {\n    result = takeValue(two);\n  } else if (isArray(one)) {\n    result = one.slice();\n    if (isArray(two)) {\n      for (let i = 0, j = two.length; i < j; i++) {\n        result.push(takeValue(two[i]));\n      }\n    } else if (isObject(two)) {\n      const keys = Object.keys(two);\n      for (let i = 0, j = keys.length; i < j; i++) {\n        const key = keys[i];\n        result[key] = takeValue(two[key]);\n      }\n    }\n  } else if (isObject(one)) {\n    if (isObject(two)) {\n      if (!shouldMerge(one, two)) {\n        return two;\n      }\n      result = Object.assign({}, one);\n      const keys = Object.keys(two);\n\n      for (let i = 0, j = keys.length; i < j; i++) {\n        const key = keys[i];\n        const twoValue = two[key];\n\n        if (isPrimitive(twoValue)) {\n          if (typeof twoValue === 'undefined') {\n            delete result[key];\n          } else {\n            // result[key] = takeValue(twoValue);\n            result[key] = twoValue;\n          }\n        } else {\n          const obj1 = result[key];\n          const obj2 = twoValue;\n\n          if (\n            wasObjectReferenced(one, key, objects) ||\n            wasObjectReferenced(two, key, objects)\n          ) {\n            delete result[key];\n          } else {\n\n            if (isObject(obj1) && isObject(obj2)) {\n              const arr1 = objects.get(obj1) || [];\n              const arr2 = objects.get(obj2) || [];\n              arr1.push({ obj: one, key });\n              arr2.push({ obj: two, key });\n              objects.set(obj1, arr1);\n              objects.set(obj2, arr2);\n            }\n\n            result[key] = mergeTwoObjects(\n              result[key],\n              twoValue,\n              level,\n              objects\n            );\n          }\n        }\n      }\n    } else {\n      result = two;\n    }\n  }\n\n  return result;\n}\n\n/**\n * Function to check if object has been already reference\n * @param obj\n * @param key\n * @param objects\n */\nfunction wasObjectReferenced(\n  obj: any,\n  key: string,\n  objects: WeakMap<any, ObjectInto[]>,\n): boolean {\n  const arr = objects.get(obj[key]) || [];\n  for (let i = 0, j = arr.length; i < j; i++) {\n    const info = arr[i];\n    if (info.key === key && info.obj === obj) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isArray(value: any): boolean {\n  return Array.isArray(value);\n}\n\nfunction isFunction(value: any): boolean {\n  return typeof value === 'function';\n}\n\nfunction isObject(value: any): boolean {\n  return !isPrimitive(value) && !isArray(value) && !isFunction(value) && typeof value === 'object';\n}\n\nfunction isPrimitive(value: any): boolean {\n  return typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean' ||\n    typeof value === 'undefined' ||\n    value instanceof Date ||\n    value instanceof RegExp ||\n    value === null;\n}\n\nfunction shouldMerge(one: any, two: any): boolean {\n  if (!isPlainObject(one) || !isPlainObject(two)) {\n    return false;\n  }\n\n  return true;\n}\n\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * based on lodash in order to support esm builds without esModuleInterop.\n * lodash is using MIT License.\n **/\n\nconst objectTag = '[object Object]';\nconst nullTag = '[object Null]';\nconst undefinedTag = '[object Undefined]';\nconst funcProto = Function.prototype;\nconst funcToString = funcProto.toString;\nconst objectCtorString = funcToString.call(Object);\nconst getPrototype = overArg(Object.getPrototypeOf, Object);\nconst objectProto = Object.prototype;\nconst hasOwnProperty = objectProto.hasOwnProperty;\nconst symToStringTag = Symbol ? Symbol.toStringTag : undefined;\nconst nativeObjectToString = objectProto.toString;\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func: Function, transform: any): any {\n  return function(arg: any) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nexport function isPlainObject(value: any) {\n  if (!isObjectLike(value) || baseGetTag(value) !== objectTag) {\n    return false;\n  }\n  const proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  const Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) === objectCtorString;\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value: any) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value: any) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value: any) {\n  const isOwn = hasOwnProperty.call(value, symToStringTag as any),\n    tag = value[symToStringTag as any];\n  let unmasked = false;\n\n  try {\n    value[symToStringTag as any] = undefined;\n    unmasked = true;\n  } catch (e) {\n    // silence\n  }\n\n  const result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag as any] = tag;\n    } else {\n      delete value[symToStringTag as any];\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value: any) {\n  return nativeObjectToString.call(value);\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function urlMatches(url: string, urlToMatch: string | RegExp): boolean {\n  if (typeof urlToMatch === 'string') {\n    return url === urlToMatch;\n  } else {\n    return !!url.match(urlToMatch);\n  }\n}\n/**\n * Check if {@param url} should be ignored when comparing against {@param ignoredUrls}\n * @param url\n * @param ignoredUrls\n */\nexport function isUrlIgnored(\n  url: string,\n  ignoredUrls?: Array<string | RegExp>\n): boolean {\n  if (!ignoredUrls) {\n    return false;\n  }\n\n  for (const ignoreUrl of ignoredUrls) {\n    if (urlMatches(url, ignoreUrl)) {\n      return true;\n    }\n  }\n  return false;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ShimWrapped } from '../common/types';\n\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nexport function isWrapped(func: unknown): func is ShimWrapped {\n  return (\n    typeof func === 'function' &&\n    typeof (func as ShimWrapped).__original === 'function' &&\n    typeof (func as ShimWrapped).__unwrap === 'function' &&\n    (func as ShimWrapped).__wrapped === true\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './promise';\n\n/**\n * Bind the callback and only invoke the callback once regardless how many times `BindOnceFuture.call` is invoked.\n */\nexport class BindOnceFuture<\n  R,\n  This = unknown,\n  T extends (this: This, ...args: unknown[]) => R = () => R\n> {\n  private _isCalled = false;\n  private _deferred = new Deferred<R>();\n  constructor(private _callback: T, private _that: This) {}\n\n  get isCalled() {\n    return this._isCalled;\n  }\n\n  get promise() {\n    return this._deferred.promise;\n  }\n\n  call(...args: Parameters<T>): Promise<R> {\n    if (!this._isCalled) {\n      this._isCalled = true;\n      try {\n        Promise.resolve(this._callback.call(this._that, ...args))\n          .then(\n            val => this._deferred.resolve(val),\n            err => this._deferred.reject(err)\n          );\n      } catch (err) {\n        this._deferred.reject(err);\n      }\n    }\n    return this._deferred.promise;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<T> {\n  private _promise: Promise<T>;\n  private _resolve!: (val: T) => void;\n  private _reject!: (error: unknown) => void;\n  constructor() {\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  get promise() {\n    return this._promise;\n  }\n\n  resolve(val: T) {\n    this._resolve(val);\n  }\n\n  reject(err: unknown) {\n    this._reject(err);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './WebTracerProvider';\nexport * from './StackContextManager';\nexport * from './enums/PerformanceTimingNames';\nexport * from './types';\nexport * from './utils';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BasicTracerProvider,\n  SDKRegistrationConfig,\n  TracerConfig,\n} from '@opentelemetry/sdk-trace-base';\nimport { StackContextManager } from './StackContextManager';\n\n/**\n * WebTracerConfig provides an interface for configuring a Web Tracer.\n */\nexport type WebTracerConfig = TracerConfig;\n\n/**\n * This class represents a web tracer with {@link StackContextManager}\n */\nexport class WebTracerProvider extends BasicTracerProvider {\n  /**\n   * Constructs a new Tracer instance.\n   * @param config Web Tracer config\n   */\n  constructor(config: WebTracerConfig = {}) {\n    super(config);\n\n    if ((config as SDKRegistrationConfig).contextManager) {\n      throw (\n        'contextManager should be defined in register method not in' +\n        ' constructor'\n      );\n    }\n    if ((config as SDKRegistrationConfig).propagator) {\n      throw 'propagator should be defined in register method not in constructor';\n    }\n  }\n\n  /**\n   * Register this TracerProvider for use with the OpenTelemetry API.\n   * Undefined values may be replaced with defaults, and\n   * null values will be skipped.\n   *\n   * @param config Configuration object for SDK registration\n   */\n  override register(config: SDKRegistrationConfig = {}): void {\n    if (config.contextManager === undefined) {\n      config.contextManager = new StackContextManager();\n    }\n    if (config.contextManager) {\n      config.contextManager.enable();\n    }\n\n    super.register(config);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './Tracer';\nexport * from './BasicTracerProvider';\nexport * from './platform';\nexport * from './export/ConsoleSpanExporter';\nexport * from './export/InMemorySpanExporter';\nexport * from './export/ReadableSpan';\nexport * from './export/SimpleSpanProcessor';\nexport * from './export/SpanExporter';\nexport * from './export/NoopSpanProcessor';\nexport * from './Span';\nexport * from './SpanProcessor';\nexport * from './TimedEvent';\nexport * from './types';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  IdGenerator,\n  InstrumentationLibrary,\n  RandomIdGenerator,\n  sanitizeAttributes,\n  isTracingSuppressed,\n} from '@opentelemetry/core';\nimport { Resource } from '@opentelemetry/resources';\nimport { BasicTracerProvider } from './BasicTracerProvider';\nimport { Span } from './Span';\nimport { GeneralLimits, SpanLimits, TracerConfig } from './types';\nimport { mergeConfig } from './utility';\nimport { SpanProcessor } from './SpanProcessor';\n\n/**\n * This class represents a basic tracer.\n */\nexport class Tracer implements api.Tracer {\n  private readonly _sampler: api.Sampler;\n  private readonly _generalLimits: GeneralLimits;\n  private readonly _spanLimits: SpanLimits;\n  private readonly _idGenerator: IdGenerator;\n  readonly resource: Resource;\n  readonly instrumentationLibrary: InstrumentationLibrary;\n\n  /**\n   * Constructs a new Tracer instance.\n   */\n  constructor(\n    instrumentationLibrary: InstrumentationLibrary,\n    config: TracerConfig,\n    private _tracerProvider: BasicTracerProvider\n  ) {\n    const localConfig = mergeConfig(config);\n    this._sampler = localConfig.sampler;\n    this._generalLimits = localConfig.generalLimits;\n    this._spanLimits = localConfig.spanLimits;\n    this._idGenerator = config.idGenerator || new RandomIdGenerator();\n    this.resource = _tracerProvider.resource;\n    this.instrumentationLibrary = instrumentationLibrary;\n  }\n\n  /**\n   * Starts a new Span or returns the default NoopSpan based on the sampling\n   * decision.\n   */\n  startSpan(\n    name: string,\n    options: api.SpanOptions = {},\n    context = api.context.active()\n  ): api.Span {\n    if (isTracingSuppressed(context)) {\n      api.diag.debug('Instrumentation suppressed, returning Noop Span');\n      return api.trace.wrapSpanContext(api.INVALID_SPAN_CONTEXT);\n    }\n\n    // remove span from context in case a root span is requested via options\n    if (options.root) {\n      context = api.trace.deleteSpan(context);\n    }\n\n    const parentSpanContext = api.trace.getSpanContext(context);\n    const spanId = this._idGenerator.generateSpanId();\n    let traceId;\n    let traceState;\n    let parentSpanId;\n    if (!parentSpanContext || !api.trace.isSpanContextValid(parentSpanContext)) {\n      // New root span.\n      traceId = this._idGenerator.generateTraceId();\n    } else {\n      // New child span.\n      traceId = parentSpanContext.traceId;\n      traceState = parentSpanContext.traceState;\n      parentSpanId = parentSpanContext.spanId;\n    }\n\n    const spanKind = options.kind ?? api.SpanKind.INTERNAL;\n    const links = (options.links ?? []).map(link => {\n      return {\n        context: link.context,\n        attributes: sanitizeAttributes(link.attributes),\n      };\n    });\n    const attributes = sanitizeAttributes(options.attributes);\n    // make sampling decision\n    const samplingResult = this._sampler.shouldSample(\n      context,\n      traceId,\n      name,\n      spanKind,\n      attributes,\n      links\n    );\n\n    const traceFlags =\n      samplingResult.decision === api.SamplingDecision.RECORD_AND_SAMPLED\n        ? api.TraceFlags.SAMPLED\n        : api.TraceFlags.NONE;\n    const spanContext = { traceId, spanId, traceFlags, traceState };\n    if (samplingResult.decision === api.SamplingDecision.NOT_RECORD) {\n      api.diag.debug('Recording is off, propagating context in a non-recording span');\n      return api.trace.wrapSpanContext(spanContext);\n    }\n\n    const span = new Span(\n      this,\n      context,\n      name,\n      spanContext,\n      spanKind,\n      parentSpanId,\n      links,\n      options.startTime\n    );\n    // Set initial span attributes. The attributes object may have been mutated\n    // by the sampler, so we sanitize the merged attributes before setting them.\n    const initAttributes = sanitizeAttributes(Object.assign(attributes, samplingResult.attributes));\n    span.setAttributes(initAttributes);\n    return span;\n  }\n\n  /**\n   * Starts a new {@link Span} and calls the given function passing it the\n   * created span as first argument.\n   * Additionally the new span gets set in context and this context is activated\n   * for the duration of the function call.\n   *\n   * @param name The name of the span\n   * @param [options] SpanOptions used for span creation\n   * @param [context] Context to use to extract parent\n   * @param fn function called in the context of the span and receives the newly created span as an argument\n   * @returns return value of fn\n   * @example\n   *   const something = tracer.startActiveSpan('op', span => {\n   *     try {\n   *       do some work\n   *       span.setStatus({code: SpanStatusCode.OK});\n   *       return something;\n   *     } catch (err) {\n   *       span.setStatus({\n   *         code: SpanStatusCode.ERROR,\n   *         message: err.message,\n   *       });\n   *       throw err;\n   *     } finally {\n   *       span.end();\n   *     }\n   *   });\n   * @example\n   *   const span = tracer.startActiveSpan('op', span => {\n   *     try {\n   *       do some work\n   *       return span;\n   *     } catch (err) {\n   *       span.setStatus({\n   *         code: SpanStatusCode.ERROR,\n   *         message: err.message,\n   *       });\n   *       throw err;\n   *     }\n   *   });\n   *   do some more work\n   *   span.end();\n   */\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    opts: api.SpanOptions,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    opts: api.SpanOptions,\n    ctx: api.Context,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    arg2?: F | api.SpanOptions,\n    arg3?: F | api.Context,\n    arg4?: F\n  ): ReturnType<F> | undefined {\n    let opts: api.SpanOptions | undefined;\n    let ctx: api.Context | undefined;\n    let fn: F;\n\n    if (arguments.length < 2) {\n      return;\n    } else if (arguments.length === 2) {\n      fn = arg2 as F;\n    } else if (arguments.length === 3) {\n      opts = arg2 as api.SpanOptions | undefined;\n      fn = arg3 as F;\n    } else {\n      opts = arg2 as api.SpanOptions | undefined;\n      ctx = arg3 as api.Context | undefined;\n      fn = arg4 as F;\n    }\n\n    const parentContext = ctx ?? api.context.active();\n    const span = this.startSpan(name, opts, parentContext);\n    const contextWithSpanSet = api.trace.setSpan(parentContext, span);\n\n    return api.context.with(contextWithSpanSet, fn, undefined, span);\n  }\n\n  /** Returns the active {@link GeneralLimits}. */\n  getGeneralLimits(): GeneralLimits {\n    return this._generalLimits;\n  }\n\n  /** Returns the active {@link SpanLimits}. */\n  getSpanLimits(): SpanLimits {\n    return this._spanLimits;\n  }\n\n  getActiveSpanProcessor(): SpanProcessor {\n    return this._tracerProvider.getActiveSpanProcessor();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  isAttributeValue,\n  hrTime,\n  hrTimeDuration,\n  InstrumentationLibrary,\n  isTimeInput,\n  timeInputToHrTime,\n  sanitizeAttributes,\n} from '@opentelemetry/core';\nimport { Resource } from '@opentelemetry/resources';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { ReadableSpan } from './export/ReadableSpan';\nimport { TimedEvent } from './TimedEvent';\nimport { Tracer } from './Tracer';\nimport { SpanProcessor } from './SpanProcessor';\nimport { SpanLimits } from './types';\nimport { SpanAttributeValue, Context } from '@opentelemetry/api';\nimport { ExceptionEventName } from './enums';\n\n/**\n * This class represents a span.\n */\nexport class Span implements api.Span, ReadableSpan {\n  // Below properties are included to implement ReadableSpan for export\n  // purposes but are not intended to be written-to directly.\n  private readonly _spanContext: api.SpanContext;\n  readonly kind: api.SpanKind;\n  readonly parentSpanId?: string;\n  readonly attributes: api.SpanAttributes = {};\n  readonly links: api.Link[] = [];\n  readonly events: TimedEvent[] = [];\n  readonly startTime: api.HrTime;\n  readonly resource: Resource;\n  readonly instrumentationLibrary: InstrumentationLibrary;\n  name: string;\n  status: api.SpanStatus = {\n    code: api.SpanStatusCode.UNSET,\n  };\n  endTime: api.HrTime = [0, 0];\n  private _ended = false;\n  private _duration: api.HrTime = [-1, -1];\n  private readonly _spanProcessor: SpanProcessor;\n  private readonly _spanLimits: SpanLimits;\n  private readonly _attributeValueLengthLimit: number;\n\n  /** Constructs a new Span instance. */\n  constructor(\n    parentTracer: Tracer,\n    context: Context,\n    spanName: string,\n    spanContext: api.SpanContext,\n    kind: api.SpanKind,\n    parentSpanId?: string,\n    links: api.Link[] = [],\n    startTime: api.TimeInput = hrTime()\n  ) {\n    this.name = spanName;\n    this._spanContext = spanContext;\n    this.parentSpanId = parentSpanId;\n    this.kind = kind;\n    this.links = links;\n    this.startTime = timeInputToHrTime(startTime);\n    this.resource = parentTracer.resource;\n    this.instrumentationLibrary = parentTracer.instrumentationLibrary;\n    this._spanLimits = parentTracer.getSpanLimits();\n    this._spanProcessor = parentTracer.getActiveSpanProcessor();\n    this._spanProcessor.onStart(this, context);\n    this._attributeValueLengthLimit = this._spanLimits.attributeValueLengthLimit || 0;\n  }\n\n  spanContext(): api.SpanContext {\n    return this._spanContext;\n  }\n\n  setAttribute(key: string, value?: SpanAttributeValue): this;\n  setAttribute(key: string, value: unknown): this {\n    if (value == null || this._isSpanEnded()) return this;\n    if (key.length === 0) {\n      api.diag.warn(`Invalid attribute key: ${key}`);\n      return this;\n    }\n    if (!isAttributeValue(value)) {\n      api.diag.warn(`Invalid attribute value set for key: ${key}`);\n      return this;\n    }\n\n    if (\n      Object.keys(this.attributes).length >=\n        this._spanLimits.attributeCountLimit! &&\n      !Object.prototype.hasOwnProperty.call(this.attributes, key)\n    ) {\n      return this;\n    }\n    this.attributes[key] = this._truncateToSize(value);\n    return this;\n  }\n\n  setAttributes(attributes: api.SpanAttributes): this {\n    for (const [k, v] of Object.entries(attributes)) {\n      this.setAttribute(k, v);\n    }\n    return this;\n  }\n\n  /**\n   *\n   * @param name Span Name\n   * @param [attributesOrStartTime] Span attributes or start time\n   *     if type is {@type TimeInput} and 3rd param is undefined\n   * @param [startTime] Specified start time for the event\n   */\n  addEvent(\n    name: string,\n    attributesOrStartTime?: api.SpanAttributes | api.TimeInput,\n    startTime?: api.TimeInput\n  ): this {\n    if (this._isSpanEnded()) return this;\n    if (this._spanLimits.eventCountLimit === 0) {\n      api.diag.warn('No events allowed.');\n      return this;\n    }\n    if (this.events.length >= this._spanLimits.eventCountLimit!) {\n      api.diag.warn('Dropping extra events.');\n      this.events.shift();\n    }\n    if (isTimeInput(attributesOrStartTime)) {\n      if (typeof startTime === 'undefined') {\n        startTime = attributesOrStartTime as api.TimeInput;\n      }\n      attributesOrStartTime = undefined;\n    }\n    if (typeof startTime === 'undefined') {\n      startTime = hrTime();\n    }\n\n    const attributes = sanitizeAttributes(attributesOrStartTime);\n    this.events.push({\n      name,\n      attributes,\n      time: timeInputToHrTime(startTime),\n    });\n    return this;\n  }\n\n  setStatus(status: api.SpanStatus): this {\n    if (this._isSpanEnded()) return this;\n    this.status = status;\n    return this;\n  }\n\n  updateName(name: string): this {\n    if (this._isSpanEnded()) return this;\n    this.name = name;\n    return this;\n  }\n\n  end(endTime: api.TimeInput = hrTime()): void {\n    if (this._isSpanEnded()) {\n      api.diag.error('You can only call end() on a span once.');\n      return;\n    }\n    this._ended = true;\n    this.endTime = timeInputToHrTime(endTime);\n\n    this._duration = hrTimeDuration(this.startTime, this.endTime);\n    if (this._duration[0] < 0) {\n      api.diag.warn(\n        'Inconsistent start and end time, startTime > endTime',\n        this.startTime,\n        this.endTime\n      );\n    }\n\n    this._spanProcessor.onEnd(this);\n  }\n\n  isRecording(): boolean {\n    return this._ended === false;\n  }\n\n  recordException(exception: api.Exception, time: api.TimeInput = hrTime()): void {\n    const attributes: api.SpanAttributes = {};\n    if (typeof exception === 'string') {\n      attributes[SemanticAttributes.EXCEPTION_MESSAGE] = exception;\n    } else if (exception) {\n      if (exception.code) {\n        attributes[\n          SemanticAttributes.EXCEPTION_TYPE\n        ] = exception.code.toString();\n      } else if (exception.name) {\n        attributes[SemanticAttributes.EXCEPTION_TYPE] = exception.name;\n      }\n      if (exception.message) {\n        attributes[SemanticAttributes.EXCEPTION_MESSAGE] = exception.message;\n      }\n      if (exception.stack) {\n        attributes[SemanticAttributes.EXCEPTION_STACKTRACE] = exception.stack;\n      }\n    }\n\n    // these are minimum requirements from spec\n    if (\n      attributes[SemanticAttributes.EXCEPTION_TYPE] ||\n      attributes[SemanticAttributes.EXCEPTION_MESSAGE]\n    ) {\n      this.addEvent(ExceptionEventName, attributes, time);\n    } else {\n      api.diag.warn(`Failed to record an exception ${exception}`);\n    }\n  }\n\n  get duration(): api.HrTime {\n    return this._duration;\n  }\n\n  get ended(): boolean {\n    return this._ended;\n  }\n\n  private _isSpanEnded(): boolean {\n    if (this._ended) {\n      api.diag.warn(`Can not execute the operation on ended Span {traceId: ${this._spanContext.traceId}, spanId: ${this._spanContext.spanId}}`);\n    }\n    return this._ended;\n  }\n\n  // Utility function to truncate given value within size\n  // for value type of string, will truncate to given limit\n  // for type of non-string, will return same value\n  private _truncateToLimitUtil(value: string, limit: number): string {\n    if (value.length <= limit) {\n      return value;\n    }\n    return value.substr(0, limit);\n  }\n\n  /**\n   * If the given attribute value is of type string and has more characters than given {@code attributeValueLengthLimit} then\n   * return string with trucated to {@code attributeValueLengthLimit} characters\n   *\n   * If the given attribute value is array of strings then\n   * return new array of strings with each element truncated to {@code attributeValueLengthLimit} characters\n   *\n   * Otherwise return same Attribute {@code value}\n   *\n   * @param value Attribute value\n   * @returns truncated attribute value if required, otherwise same value\n   */\n  private _truncateToSize(value: SpanAttributeValue): SpanAttributeValue {\n    const limit = this._attributeValueLengthLimit;\n    // Check limit\n    if (limit <= 0) {\n      // Negative values are invalid, so do not truncate\n      api.diag.warn(`Attribute value limit must be positive, got ${limit}`);\n      return value;\n    }\n\n    // String\n    if (typeof value === 'string') {\n      return this._truncateToLimitUtil(value, limit);\n    }\n\n    // Array of strings\n    if (Array.isArray(value)) {\n      return (value as []).map(val => typeof val === 'string' ? this._truncateToLimitUtil(val, limit) : val);\n    }\n\n    // Other types, no need to apply value length limit\n    return value;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Event name definitions\nexport const ExceptionEventName = 'exception';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler } from '@opentelemetry/api';\nimport { buildSamplerFromEnv, DEFAULT_CONFIG } from './config';\nimport { SpanLimits, TracerConfig, GeneralLimits } from './types';\n\n/**\n * Function to merge Default configuration (as specified in './config') with\n * user provided configurations.\n */\nexport function mergeConfig(userConfig: TracerConfig): TracerConfig & {\n  sampler: Sampler;\n  spanLimits: SpanLimits;\n  generalLimits: GeneralLimits;\n} {\n  const perInstanceDefaults: Partial<TracerConfig> = {\n    sampler: buildSamplerFromEnv(),\n  };\n\n  const target = Object.assign(\n    {},\n    DEFAULT_CONFIG,\n    perInstanceDefaults,\n    userConfig\n  );\n\n  target.generalLimits = Object.assign(\n    {},\n    DEFAULT_CONFIG.generalLimits,\n    userConfig.generalLimits || {}\n  );\n\n  target.spanLimits = Object.assign(\n    {},\n    DEFAULT_CONFIG.spanLimits,\n    userConfig.spanLimits || {}\n  );\n\n  return target;\n}\n\n/**\n * When general limits are provided and model specific limits are not,\n * configures the model specific limits by using the values from the general ones.\n * @param userConfig User provided tracer configuration\n */\nexport function reconfigureLimits(userConfig: TracerConfig): TracerConfig {\n  const spanLimits = Object.assign({}, userConfig.spanLimits);\n\n  /**\n   * When span attribute count limit is not defined, but general attribute count limit is defined\n   * Then, span attribute count limit will be same as general one\n   */\n  if (spanLimits.attributeCountLimit == null && userConfig.generalLimits?.attributeCountLimit != null) {\n    spanLimits.attributeCountLimit = userConfig.generalLimits.attributeCountLimit;\n  }\n\n  /**\n   * When span attribute value length limit is not defined, but general attribute value length limit is defined\n   * Then, span attribute value length limit will be same as general one\n   */\n  if (spanLimits.attributeValueLengthLimit == null && userConfig.generalLimits?.attributeValueLengthLimit != null) {\n    spanLimits.attributeValueLengthLimit = userConfig.generalLimits.attributeValueLengthLimit;\n  }\n\n  return Object.assign({}, userConfig, { spanLimits });\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, Sampler } from '@opentelemetry/api';\nimport {\n  AlwaysOffSampler,\n  AlwaysOnSampler,\n  getEnv,\n  TracesSamplerValues,\n  ParentBasedSampler,\n  ENVIRONMENT,\n  TraceIdRatioBasedSampler,\n} from '@opentelemetry/core';\n\nconst env = getEnv();\nconst FALLBACK_OTEL_TRACES_SAMPLER = TracesSamplerValues.AlwaysOn;\nconst DEFAULT_RATIO = 1;\n\n/**\n * Default configuration. For fields with primitive values, any user-provided\n * value will override the corresponding default value. For fields with\n * non-primitive values (like `spanLimits`), the user-provided value will be\n * used to extend the default value.\n */\nexport const DEFAULT_CONFIG = {\n  sampler: buildSamplerFromEnv(env),\n  forceFlushTimeoutMillis: 30000,\n  generalLimits: {\n    attributeValueLengthLimit: getEnv().OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n    attributeCountLimit: getEnv().OTEL_ATTRIBUTE_COUNT_LIMIT,\n  },\n  spanLimits: {\n    attributeValueLengthLimit: getEnv().OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n    attributeCountLimit: getEnv().OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT,\n    linkCountLimit: getEnv().OTEL_SPAN_LINK_COUNT_LIMIT,\n    eventCountLimit: getEnv().OTEL_SPAN_EVENT_COUNT_LIMIT,\n  },\n};\n\n/**\n * Based on environment, builds a sampler, complies with specification.\n * @param environment optional, by default uses getEnv(), but allows passing a value to reuse parsed environment\n */\nexport function buildSamplerFromEnv(\n  environment: Required<ENVIRONMENT> = getEnv()\n): Sampler {\n  switch (environment.OTEL_TRACES_SAMPLER) {\n    case TracesSamplerValues.AlwaysOn:\n      return new AlwaysOnSampler();\n    case TracesSamplerValues.AlwaysOff:\n      return new AlwaysOffSampler();\n    case TracesSamplerValues.ParentBasedAlwaysOn:\n      return new ParentBasedSampler({\n        root: new AlwaysOnSampler(),\n      });\n    case TracesSamplerValues.ParentBasedAlwaysOff:\n      return new ParentBasedSampler({\n        root: new AlwaysOffSampler(),\n      });\n    case TracesSamplerValues.TraceIdRatio:\n      return new TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv(environment));\n    case TracesSamplerValues.ParentBasedTraceIdRatio:\n      return new ParentBasedSampler({\n        root: new TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv(environment)),\n      });\n    default:\n      diag.error(\n        `OTEL_TRACES_SAMPLER value \"${environment.OTEL_TRACES_SAMPLER} invalid, defaulting to ${FALLBACK_OTEL_TRACES_SAMPLER}\".`\n      );\n      return new AlwaysOnSampler();\n  }\n}\n\nfunction getSamplerProbabilityFromEnv(\n  environment: Required<ENVIRONMENT>\n): number | undefined {\n  if (\n    environment.OTEL_TRACES_SAMPLER_ARG === undefined ||\n    environment.OTEL_TRACES_SAMPLER_ARG === ''\n  ) {\n    diag.error(\n      `OTEL_TRACES_SAMPLER_ARG is blank, defaulting to ${DEFAULT_RATIO}.`\n    );\n    return DEFAULT_RATIO;\n  }\n\n  const probability = Number(environment.OTEL_TRACES_SAMPLER_ARG);\n\n  if (isNaN(probability)) {\n    diag.error(\n      `OTEL_TRACES_SAMPLER_ARG=${environment.OTEL_TRACES_SAMPLER_ARG} was given, but it is invalid, defaulting to ${DEFAULT_RATIO}.`\n    );\n    return DEFAULT_RATIO;\n  }\n\n  if (probability < 0 || probability > 1) {\n    diag.error(\n      `OTEL_TRACES_SAMPLER_ARG=${environment.OTEL_TRACES_SAMPLER_ARG} was given, but it is out of range ([0..1]), defaulting to ${DEFAULT_RATIO}.`\n    );\n    return DEFAULT_RATIO;\n  }\n\n  return probability;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  context,\n  diag,\n  propagation,\n  TextMapPropagator,\n  trace,\n  TracerProvider,\n} from '@opentelemetry/api';\nimport {\n  CompositePropagator,\n  W3CBaggagePropagator,\n  W3CTraceContextPropagator,\n  getEnv,\n  merge,\n} from '@opentelemetry/core';\nimport { Resource } from '@opentelemetry/resources';\nimport { SpanProcessor, Tracer } from '.';\nimport { DEFAULT_CONFIG } from './config';\nimport { MultiSpanProcessor } from './MultiSpanProcessor';\nimport { NoopSpanProcessor } from './export/NoopSpanProcessor';\nimport { SDKRegistrationConfig, TracerConfig } from './types';\nimport { SpanExporter } from './export/SpanExporter';\nimport { BatchSpanProcessor } from './platform';\nimport { reconfigureLimits } from './utility';\n\nexport type PROPAGATOR_FACTORY = () => TextMapPropagator;\nexport type EXPORTER_FACTORY = () => SpanExporter;\n\nexport enum ForceFlushState {\n  'resolved',\n  'timeout',\n  'error',\n  'unresolved',\n}\n\n/**\n * This class represents a basic tracer provider which platform libraries can extend\n */\nexport class BasicTracerProvider implements TracerProvider {\n  protected static readonly _registeredPropagators = new Map<\n    string,\n    PROPAGATOR_FACTORY\n  >([\n    ['tracecontext', () => new W3CTraceContextPropagator()],\n    ['baggage', () => new W3CBaggagePropagator()],\n  ]);\n\n  protected static readonly _registeredExporters = new Map<\n    string,\n    EXPORTER_FACTORY\n  >();\n\n  private readonly _config: TracerConfig;\n  private readonly _registeredSpanProcessors: SpanProcessor[] = [];\n  private readonly _tracers: Map<string, Tracer> = new Map();\n\n  activeSpanProcessor: SpanProcessor;\n  readonly resource: Resource;\n\n  constructor(config: TracerConfig = {}) {\n    const mergedConfig = merge({}, DEFAULT_CONFIG, reconfigureLimits(config));\n    this.resource = mergedConfig.resource ?? Resource.empty();\n    this.resource = Resource.default().merge(this.resource);\n    this._config = Object.assign({}, mergedConfig, {\n      resource: this.resource,\n    });\n\n    const defaultExporter = this._buildExporterFromEnv();\n    if (defaultExporter !== undefined) {\n      const batchProcessor = new BatchSpanProcessor(defaultExporter);\n      this.activeSpanProcessor = batchProcessor;\n    } else {\n      this.activeSpanProcessor = new NoopSpanProcessor();\n    }\n  }\n\n  getTracer(name: string, version?: string, options?: { schemaUrl?: string }): Tracer {\n    const key = `${name}@${version || ''}:${options?.schemaUrl || ''}`;\n    if (!this._tracers.has(key)) {\n      this._tracers.set(key, new Tracer({ name, version, schemaUrl: options?.schemaUrl }, this._config, this));\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this._tracers.get(key)!;\n  }\n\n  /**\n   * Adds a new {@link SpanProcessor} to this tracer.\n   * @param spanProcessor the new SpanProcessor to be added.\n   */\n  addSpanProcessor(spanProcessor: SpanProcessor): void {\n    if (this._registeredSpanProcessors.length === 0) {\n      // since we might have enabled by default a batchProcessor, we disable it\n      // before adding the new one\n      this.activeSpanProcessor\n        .shutdown()\n        .catch(err =>\n          diag.error(\n            'Error while trying to shutdown current span processor',\n            err\n          )\n        );\n    }\n    this._registeredSpanProcessors.push(spanProcessor);\n    this.activeSpanProcessor = new MultiSpanProcessor(\n      this._registeredSpanProcessors\n    );\n  }\n\n  getActiveSpanProcessor(): SpanProcessor {\n    return this.activeSpanProcessor;\n  }\n\n  /**\n   * Register this TracerProvider for use with the OpenTelemetry API.\n   * Undefined values may be replaced with defaults, and\n   * null values will be skipped.\n   *\n   * @param config Configuration object for SDK registration\n   */\n  register(config: SDKRegistrationConfig = {}): void {\n    trace.setGlobalTracerProvider(this);\n    if (config.propagator === undefined) {\n      config.propagator = this._buildPropagatorFromEnv();\n    }\n\n    if (config.contextManager) {\n      context.setGlobalContextManager(config.contextManager);\n    }\n\n    if (config.propagator) {\n      propagation.setGlobalPropagator(config.propagator);\n    }\n  }\n\n  forceFlush(): Promise<void> {\n    const timeout = this._config.forceFlushTimeoutMillis;\n    const promises = this._registeredSpanProcessors.map(\n      (spanProcessor: SpanProcessor) => {\n        return new Promise(resolve => {\n          let state: ForceFlushState;\n          const timeoutInterval = setTimeout(() => {\n            resolve(\n              new Error(\n                `Span processor did not completed within timeout period of ${timeout} ms`\n              )\n            );\n            state = ForceFlushState.timeout;\n          }, timeout);\n\n          spanProcessor\n            .forceFlush()\n            .then(() => {\n              clearTimeout(timeoutInterval);\n              if (state !== ForceFlushState.timeout) {\n                state = ForceFlushState.resolved;\n                resolve(state);\n              }\n            })\n            .catch(error => {\n              clearTimeout(timeoutInterval);\n              state = ForceFlushState.error;\n              resolve(error);\n            });\n        });\n      }\n    );\n\n    return new Promise<void>((resolve, reject) => {\n      Promise.all(promises)\n        .then(results => {\n          const errors = results.filter(\n            result => result !== ForceFlushState.resolved\n          );\n          if (errors.length > 0) {\n            reject(errors);\n          } else {\n            resolve();\n          }\n        })\n        .catch(error => reject([error]));\n    });\n  }\n\n  shutdown(): Promise<void> {\n    return this.activeSpanProcessor.shutdown();\n  }\n\n  protected _getPropagator(name: string): TextMapPropagator | undefined {\n    return BasicTracerProvider._registeredPropagators.get(name)?.();\n  }\n\n  protected _getSpanExporter(name: string): SpanExporter | undefined {\n    return BasicTracerProvider._registeredExporters.get(name)?.();\n  }\n\n  protected _buildPropagatorFromEnv(): TextMapPropagator | undefined {\n    // per spec, propagators from env must be deduplicated\n    const uniquePropagatorNames = Array.from(\n      new Set(getEnv().OTEL_PROPAGATORS)\n    );\n\n    const propagators = uniquePropagatorNames.map(name => {\n      const propagator = this._getPropagator(name);\n      if (!propagator) {\n        diag.warn(\n          `Propagator \"${name}\" requested through environment variable is unavailable.`\n        );\n      }\n\n      return propagator;\n    });\n    const validPropagators = propagators.reduce<TextMapPropagator[]>(\n      (list, item) => {\n        if (item) {\n          list.push(item);\n        }\n        return list;\n      },\n      []\n    );\n\n    if (validPropagators.length === 0) {\n      return;\n    } else if (uniquePropagatorNames.length === 1) {\n      return validPropagators[0];\n    } else {\n      return new CompositePropagator({\n        propagators: validPropagators,\n      });\n    }\n  }\n\n  protected _buildExporterFromEnv(): SpanExporter | undefined {\n    const exporterName = getEnv().OTEL_TRACES_EXPORTER;\n    if (exporterName === 'none') return;\n    const exporter = this._getSpanExporter(exporterName);\n    if (!exporter) {\n      diag.error(\n        `Exporter \"${exporterName}\" requested through environment variable is unavailable.`\n      );\n    }\n    return exporter;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './Resource';\nexport * from './platform';\nexport * from './types';\nexport * from './config';\nexport * from './detectors';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { SDK_INFO } from '@opentelemetry/core';\nimport { ResourceAttributes } from './types';\nimport { defaultServiceName } from './platform';\n\n/**\n * A Resource describes the entity for which a signals (metrics or trace) are\n * collected.\n */\nexport class Resource {\n  static readonly EMPTY = new Resource({});\n\n  /**\n   * Returns an empty Resource\n   */\n  static empty(): Resource {\n    return Resource.EMPTY;\n  }\n\n  /**\n   * Returns a Resource that indentifies the SDK in use.\n   */\n  static default(): Resource {\n    return new Resource({\n      [SemanticResourceAttributes.SERVICE_NAME]: defaultServiceName(),\n      [SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE]:\n        SDK_INFO[SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE],\n      [SemanticResourceAttributes.TELEMETRY_SDK_NAME]:\n        SDK_INFO[SemanticResourceAttributes.TELEMETRY_SDK_NAME],\n      [SemanticResourceAttributes.TELEMETRY_SDK_VERSION]:\n        SDK_INFO[SemanticResourceAttributes.TELEMETRY_SDK_VERSION],\n    });\n  }\n\n  constructor(\n    /**\n     * A dictionary of attributes with string keys and values that provide\n     * information about the entity as numbers, strings or booleans\n     * TODO: Consider to add check/validation on attributes.\n     */\n    readonly attributes: ResourceAttributes\n  ) {}\n\n  /**\n   * Returns a new, merged {@link Resource} by merging the current Resource\n   * with the other Resource. In case of a collision, other Resource takes\n   * precedence.\n   *\n   * @param other the Resource that will be merged with this.\n   * @returns the newly merged Resource.\n   */\n  merge(other: Resource | null): Resource {\n    if (!other || !Object.keys(other.attributes).length) return this;\n\n    // SpanAttributes from resource overwrite attributes from other resource.\n    const mergedAttributes = Object.assign(\n      {},\n      this.attributes,\n      other.attributes\n    );\n    return new Resource(mergedAttributes);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './default-service-name';\nexport * from './detect-resources';\nexport * from './HostDetector';\nexport * from './OSDetector';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function defaultServiceName(): string {\n  return 'unknown_service';\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Resource } from '../../Resource';\nimport { ResourceDetectionConfig } from '../../config';\nimport { diag } from '@opentelemetry/api';\n\n/**\n * Runs all resource detectors and returns the results merged into a single\n * Resource.\n *\n * @param config Configuration for resource detection\n */\nexport const detectResources = async (\n  config: ResourceDetectionConfig = {}\n): Promise<Resource> => {\n  const internalConfig: ResourceDetectionConfig = Object.assign(config);\n\n  const resources: Resource[] = await Promise.all(\n    (internalConfig.detectors || []).map(async d => {\n      try {\n        const resource = await d.detect(internalConfig);\n        diag.debug(`${d.constructor.name} found resource.`, resource);\n        return resource;\n      } catch (e) {\n        diag.debug(`${d.constructor.name} failed: ${e.message}`);\n        return Resource.empty();\n      }\n    })\n  );\n\n  return resources.reduce(\n    (acc, resource) => acc.merge(resource),\n    Resource.empty()\n  );\n};\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { noopDetector } from '../../detectors/NoopDetector';\n\nexport const hostDetector = noopDetector;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Resource } from '../Resource';\nimport { Detector } from '../types';\n\nexport class NoopDetector implements Detector {\n  async detect(): Promise<Resource> {\n    return new Resource({});\n  }\n}\n\nexport const noopDetector = new NoopDetector();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { noopDetector } from '../../detectors/NoopDetector';\n\nexport const osDetector = noopDetector;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Resource } from './Resource';\nimport { ResourceDetectionConfig } from './config';\nimport { SpanAttributes } from '@opentelemetry/api';\n\n/**\n * Interface for Resource attributes.\n * General `Attributes` interface is added in api v1.1.0.\n * To backward support older api (1.0.x), the deprecated `SpanAttributes` is used here.\n */\nexport type ResourceAttributes = SpanAttributes;\n\n/**\n * Interface for a Resource Detector. In order to detect resources in parallel\n * a detector returns a Promise containing a Resource.\n */\nexport interface Detector {\n  detect(config?: ResourceDetectionConfig): Promise<Resource>;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Detector } from './types';\n\n/**\n * ResourceDetectionConfig provides an interface for configuring resource auto-detection.\n */\nexport interface ResourceDetectionConfig {\n  detectors?: Array<Detector>;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './BrowserDetector';\nexport * from './EnvDetector';\nexport * from './ProcessDetector';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { Detector, Resource, ResourceDetectionConfig } from '..';\nimport { ResourceAttributes } from '../types';\n\n/**\n * BrowserDetector will be used to detect the resources related to browser.\n */\nclass BrowserDetector implements Detector {\n  async detect(config?: ResourceDetectionConfig): Promise<Resource> {\n    const isBrowser = typeof navigator !== 'undefined';\n    if (!isBrowser) {\n      return Resource.empty();\n    }\n    const browserResource: ResourceAttributes = {\n      [SemanticResourceAttributes.PROCESS_RUNTIME_NAME]: 'browser',\n      [SemanticResourceAttributes.PROCESS_RUNTIME_DESCRIPTION]: 'Web Browser',\n      [SemanticResourceAttributes.PROCESS_RUNTIME_VERSION]: navigator.userAgent\n    };\n    return this._getResourceAttributes(browserResource, config);\n  }\n  /**\n   * Validates process resource attribute map from process variables\n   *\n   * @param browserResource The un-sanitized resource attributes from process as key/value pairs.\n   * @param config: Config\n   * @returns The sanitized resource attributes.\n   */\n  private _getResourceAttributes(\n    browserResource: ResourceAttributes,\n    _config?: ResourceDetectionConfig\n  ) {\n    if (\n      browserResource[SemanticResourceAttributes.PROCESS_RUNTIME_VERSION] === ''\n    ) {\n      diag.debug(\n        'BrowserDetector failed: Unable to find required browser resources. '\n      );\n      return Resource.empty();\n    } else {\n      return new Resource({\n        ...browserResource,\n      });\n    }\n  }\n}\n\n\nexport const browserDetector = new BrowserDetector();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport { getEnv } from '@opentelemetry/core';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { Resource } from '../Resource';\nimport { Detector, ResourceAttributes } from '../types';\nimport { ResourceDetectionConfig } from '../config';\n\n/**\n * EnvDetector can be used to detect the presence of and create a Resource\n * from the OTEL_RESOURCE_ATTRIBUTES environment variable.\n */\nclass EnvDetector implements Detector {\n  // Type, attribute keys, and attribute values should not exceed 256 characters.\n  private readonly _MAX_LENGTH = 255;\n\n  // OTEL_RESOURCE_ATTRIBUTES is a comma-separated list of attributes.\n  private readonly _COMMA_SEPARATOR = ',';\n\n  // OTEL_RESOURCE_ATTRIBUTES contains key value pair separated by '='.\n  private readonly _LABEL_KEY_VALUE_SPLITTER = '=';\n\n  private readonly _ERROR_MESSAGE_INVALID_CHARS =\n    'should be a ASCII string with a length greater than 0 and not exceed ' +\n    this._MAX_LENGTH +\n    ' characters.';\n\n  private readonly _ERROR_MESSAGE_INVALID_VALUE =\n    'should be a ASCII string with a length not exceed ' +\n    this._MAX_LENGTH +\n    ' characters.';\n\n  /**\n   * Returns a {@link Resource} populated with attributes from the\n   * OTEL_RESOURCE_ATTRIBUTES environment variable. Note this is an async\n   * function to conform to the Detector interface.\n   *\n   * @param config The resource detection config\n   */\n  async detect(_config?: ResourceDetectionConfig): Promise<Resource> {\n    const attributes: ResourceAttributes = {};\n    const env = getEnv();\n\n    const rawAttributes = env.OTEL_RESOURCE_ATTRIBUTES;\n    const serviceName = env.OTEL_SERVICE_NAME;\n\n    if (rawAttributes) {\n      try {\n        const parsedAttributes = this._parseResourceAttributes(rawAttributes);\n        Object.assign(attributes, parsedAttributes);\n      } catch (e) {\n        diag.debug(`EnvDetector failed: ${e.message}`);\n      }\n    }\n\n    if (serviceName) {\n      attributes[SemanticResourceAttributes.SERVICE_NAME] = serviceName;\n    }\n\n    return new Resource(attributes);\n  }\n\n  /**\n   * Creates an attribute map from the OTEL_RESOURCE_ATTRIBUTES environment\n   * variable.\n   *\n   * OTEL_RESOURCE_ATTRIBUTES: A comma-separated list of attributes describing\n   * the source in more detail, e.g. “key1=val1,key2=val2”. Domain names and\n   * paths are accepted as attribute keys. Values may be quoted or unquoted in\n   * general. If a value contains whitespaces, =, or \" characters, it must\n   * always be quoted.\n   *\n   * @param rawEnvAttributes The resource attributes as a comma-seperated list\n   * of key/value pairs.\n   * @returns The sanitized resource attributes.\n   */\n  private _parseResourceAttributes(\n    rawEnvAttributes?: string\n  ): ResourceAttributes {\n    if (!rawEnvAttributes) return {};\n\n    const attributes: ResourceAttributes = {};\n    const rawAttributes: string[] = rawEnvAttributes.split(\n      this._COMMA_SEPARATOR,\n      -1\n    );\n    for (const rawAttribute of rawAttributes) {\n      const keyValuePair: string[] = rawAttribute.split(\n        this._LABEL_KEY_VALUE_SPLITTER,\n        -1\n      );\n      if (keyValuePair.length !== 2) {\n        continue;\n      }\n      let [key, value] = keyValuePair;\n      // Leading and trailing whitespaces are trimmed.\n      key = key.trim();\n      value = value.trim().split('^\"|\"$').join('');\n      if (!this._isValidAndNotEmpty(key)) {\n        throw new Error(`Attribute key ${this._ERROR_MESSAGE_INVALID_CHARS}`);\n      }\n      if (!this._isValid(value)) {\n        throw new Error(`Attribute value ${this._ERROR_MESSAGE_INVALID_VALUE}`);\n      }\n      attributes[key] = value;\n    }\n    return attributes;\n  }\n\n  /**\n   * Determines whether the given String is a valid printable ASCII string with\n   * a length not exceed _MAX_LENGTH characters.\n   *\n   * @param str The String to be validated.\n   * @returns Whether the String is valid.\n   */\n  private _isValid(name: string): boolean {\n    return name.length <= this._MAX_LENGTH && this._isPrintableString(name);\n  }\n\n  private _isPrintableString(str: string): boolean {\n    for (let i = 0; i < str.length; i++) {\n      const ch: string = str.charAt(i);\n      if (ch <= ' ' || ch >= '~') {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determines whether the given String is a valid printable ASCII string with\n   * a length greater than 0 and not exceed _MAX_LENGTH characters.\n   *\n   * @param str The String to be validated.\n   * @returns Whether the String is valid and not empty.\n   */\n  private _isValidAndNotEmpty(str: string): boolean {\n    return str.length > 0 && this._isValid(str);\n  }\n}\n\nexport const envDetector = new EnvDetector();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { Resource } from '../Resource';\nimport { Detector, ResourceAttributes } from '../types';\nimport { ResourceDetectionConfig } from '../config';\n\n/**\n * ProcessDetector will be used to detect the resources related current process running\n * and being instrumented from the NodeJS Process module.\n */\nclass ProcessDetector implements Detector {\n  async detect(config?: ResourceDetectionConfig): Promise<Resource> {\n    // Skip if not in Node.js environment.\n    if (typeof process !== 'object') {\n      return Resource.empty();\n    }\n    const processResource: ResourceAttributes = {\n      [SemanticResourceAttributes.PROCESS_PID]: process.pid,\n      [SemanticResourceAttributes.PROCESS_EXECUTABLE_NAME]: process.title || '',\n      [SemanticResourceAttributes.PROCESS_COMMAND]: process.argv[1] || '',\n      [SemanticResourceAttributes.PROCESS_COMMAND_LINE]:\n        process.argv.join(' ') || '',\n      [SemanticResourceAttributes.PROCESS_RUNTIME_VERSION]: process.versions.node,\n      [SemanticResourceAttributes.PROCESS_RUNTIME_NAME]: 'nodejs',\n      [SemanticResourceAttributes.PROCESS_RUNTIME_DESCRIPTION]: 'Node.js',\n    };\n    return this._getResourceAttributes(processResource, config);\n  }\n  /**\n   * Validates process resource attribute map from process varaibls\n   *\n   * @param processResource The unsantized resource attributes from process as key/value pairs.\n   * @param config: Config\n   * @returns The sanitized resource attributes.\n   */\n  private _getResourceAttributes(\n    processResource: ResourceAttributes,\n    _config?: ResourceDetectionConfig\n  ) {\n    if (\n      processResource[SemanticResourceAttributes.PROCESS_EXECUTABLE_NAME] ===\n        '' ||\n      processResource[SemanticResourceAttributes.PROCESS_EXECUTABLE_PATH] ===\n        '' ||\n      processResource[SemanticResourceAttributes.PROCESS_COMMAND] === '' ||\n      processResource[SemanticResourceAttributes.PROCESS_COMMAND_LINE] === '' ||\n      processResource[SemanticResourceAttributes.PROCESS_RUNTIME_VERSION] === ''\n    ) {\n      diag.debug(\n        'ProcessDetector failed: Unable to find required process resources. '\n      );\n      return Resource.empty();\n    } else {\n      return new Resource({\n        ...processResource,\n      });\n    }\n  }\n}\n\nexport const processDetector = new ProcessDetector();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '@opentelemetry/api';\nimport { globalErrorHandler } from '@opentelemetry/core';\nimport { ReadableSpan } from './export/ReadableSpan';\nimport { Span } from './Span';\nimport { SpanProcessor } from './SpanProcessor';\n\n/**\n * Implementation of the {@link SpanProcessor} that simply forwards all\n * received events to a list of {@link SpanProcessor}s.\n */\nexport class MultiSpanProcessor implements SpanProcessor {\n  constructor(private readonly _spanProcessors: SpanProcessor[]) {}\n\n  forceFlush(): Promise<void> {\n    const promises: Promise<void>[] = [];\n\n    for (const spanProcessor of this._spanProcessors) {\n      promises.push(spanProcessor.forceFlush());\n    }\n    return new Promise(resolve => {\n      Promise.all(promises)\n        .then(() => {\n          resolve();\n        })\n        .catch(error => {\n          globalErrorHandler(\n            error || new Error('MultiSpanProcessor: forceFlush failed')\n          );\n          resolve();\n        });\n    });\n  }\n\n  onStart(span: Span, context: Context): void {\n    for (const spanProcessor of this._spanProcessors) {\n      spanProcessor.onStart(span, context);\n    }\n  }\n\n  onEnd(span: ReadableSpan): void {\n    for (const spanProcessor of this._spanProcessors) {\n      spanProcessor.onEnd(span);\n    }\n  }\n\n  shutdown(): Promise<void> {\n    const promises: Promise<void>[] = [];\n\n    for (const spanProcessor of this._spanProcessors) {\n      promises.push(spanProcessor.shutdown());\n    }\n    return new Promise((resolve, reject) => {\n      Promise.all(promises).then(() => {\n        resolve();\n      }, reject);\n    });\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '@opentelemetry/api';\nimport { ReadableSpan } from './ReadableSpan';\nimport { Span } from '../Span';\nimport { SpanProcessor } from '../SpanProcessor';\n\n/** No-op implementation of SpanProcessor */\nexport class NoopSpanProcessor implements SpanProcessor {\n  onStart(_span: Span, _context: Context): void {}\n  onEnd(_span: ReadableSpan): void {}\n  shutdown(): Promise<void> {\n    return Promise.resolve();\n  }\n  forceFlush(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './export/BatchSpanProcessor';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BatchSpanProcessorBase } from '../../../export/BatchSpanProcessorBase';\nimport { SpanExporter } from '../../../export/SpanExporter';\nimport { BatchSpanProcessorBrowserConfig } from '../../../types';\n\nexport class BatchSpanProcessor extends BatchSpanProcessorBase<BatchSpanProcessorBrowserConfig> {\n  private _visibilityChangeListener?: () => void;\n  private _pageHideListener?: () => void;\n\n  constructor(_exporter: SpanExporter, config?: BatchSpanProcessorBrowserConfig) {\n    super(_exporter, config);\n    this.onInit(config);\n  }\n\n  private onInit(config?: BatchSpanProcessorBrowserConfig): void {\n    if (config?.disableAutoFlushOnDocumentHide !== true && document != null) {\n      this._visibilityChangeListener = () => {\n        if (document.visibilityState === 'hidden') {\n          void this.forceFlush();\n        }\n      };\n      this._pageHideListener = () => {\n        void this.forceFlush();\n      };\n      document.addEventListener('visibilitychange', this._visibilityChangeListener);\n\n      // use 'pagehide' event as a fallback for Safari; see https://bugs.webkit.org/show_bug.cgi?id=116769\n      document.addEventListener('pagehide', this._pageHideListener);\n    }\n  }\n\n  protected onShutdown(): void {\n    if (this._visibilityChangeListener) {\n      document.removeEventListener('visibilitychange', this._visibilityChangeListener);\n    }\n    if (this._pageHideListener) {\n      document.removeEventListener('pagehide', this._pageHideListener);\n    }\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context, Context, TraceFlags } from '@opentelemetry/api';\nimport {\n  BindOnceFuture,\n  ExportResultCode,\n  getEnv,\n  globalErrorHandler,\n  suppressTracing,\n  unrefTimer,\n} from '@opentelemetry/core';\nimport { Span } from '../Span';\nimport { SpanProcessor } from '../SpanProcessor';\nimport { BufferConfig } from '../types';\nimport { ReadableSpan } from './ReadableSpan';\nimport { SpanExporter } from './SpanExporter';\n\n/**\n * Implementation of the {@link SpanProcessor} that batches spans exported by\n * the SDK then pushes them to the exporter pipeline.\n */\nexport abstract class BatchSpanProcessorBase<T extends BufferConfig> implements SpanProcessor {\n  private readonly _maxExportBatchSize: number;\n  private readonly _maxQueueSize: number;\n  private readonly _scheduledDelayMillis: number;\n  private readonly _exportTimeoutMillis: number;\n\n  private _finishedSpans: ReadableSpan[] = [];\n  private _timer: NodeJS.Timeout | undefined;\n  private _shutdownOnce: BindOnceFuture<void>;\n\n  constructor(private readonly _exporter: SpanExporter, config?: T) {\n    const env = getEnv();\n    this._maxExportBatchSize =\n      typeof config?.maxExportBatchSize === 'number'\n        ? config.maxExportBatchSize\n        : env.OTEL_BSP_MAX_EXPORT_BATCH_SIZE;\n    this._maxQueueSize =\n      typeof config?.maxQueueSize === 'number'\n        ? config.maxQueueSize\n        : env.OTEL_BSP_MAX_QUEUE_SIZE;\n    this._scheduledDelayMillis =\n      typeof config?.scheduledDelayMillis === 'number'\n        ? config.scheduledDelayMillis\n        : env.OTEL_BSP_SCHEDULE_DELAY;\n    this._exportTimeoutMillis =\n      typeof config?.exportTimeoutMillis === 'number'\n        ? config.exportTimeoutMillis\n        : env.OTEL_BSP_EXPORT_TIMEOUT;\n\n    this._shutdownOnce = new BindOnceFuture(this._shutdown, this);\n  }\n\n  forceFlush(): Promise<void> {\n    if (this._shutdownOnce.isCalled) {\n      return this._shutdownOnce.promise;\n    }\n    return this._flushAll();\n  }\n\n  // does nothing.\n  onStart(_span: Span, _parentContext: Context): void {}\n\n  onEnd(span: ReadableSpan): void {\n    if (this._shutdownOnce.isCalled) {\n      return;\n    }\n\n    if ((span.spanContext().traceFlags & TraceFlags.SAMPLED) === 0) {\n      return;\n    }\n\n    this._addToBuffer(span);\n  }\n\n  shutdown(): Promise<void> {\n    return this._shutdownOnce.call();\n  }\n\n  private _shutdown() {\n    return Promise.resolve()\n      .then(() => {\n        return this.onShutdown();\n      })\n      .then(() => {\n        return this._flushAll();\n      })\n      .then(() => {\n        return this._exporter.shutdown();\n      });\n  }\n\n  /** Add a span in the buffer. */\n  private _addToBuffer(span: ReadableSpan) {\n    if (this._finishedSpans.length >= this._maxQueueSize) {\n      // limit reached, drop span\n      return;\n    }\n    this._finishedSpans.push(span);\n    this._maybeStartTimer();\n  }\n\n  /**\n   * Send all spans to the exporter respecting the batch size limit\n   * This function is used only on forceFlush or shutdown,\n   * for all other cases _flush should be used\n   * */\n  private _flushAll(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const promises = [];\n      // calculate number of batches\n      const count = Math.ceil(\n        this._finishedSpans.length / this._maxExportBatchSize\n      );\n      for (let i = 0, j = count; i < j; i++) {\n        promises.push(this._flushOneBatch());\n      }\n      Promise.all(promises)\n        .then(() => {\n          resolve();\n        })\n        .catch(reject);\n    });\n  }\n\n  private _flushOneBatch(): Promise<void> {\n    this._clearTimer();\n    if (this._finishedSpans.length === 0) {\n      return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n      const timer = setTimeout(() => {\n        // don't wait anymore for export, this way the next batch can start\n        reject(new Error('Timeout'));\n      }, this._exportTimeoutMillis);\n      // prevent downstream exporter calls from generating spans\n      context.with(suppressTracing(context.active()), () => {\n        // Reset the finished spans buffer here because the next invocations of the _flush method\n        // could pass the same finished spans to the exporter if the buffer is cleared\n        // outside of the execution of this callback.\n        this._exporter.export(\n          this._finishedSpans.splice(0, this._maxExportBatchSize),\n          result => {\n            clearTimeout(timer);\n            if (result.code === ExportResultCode.SUCCESS) {\n              resolve();\n            } else {\n              reject(\n                result.error ??\n                  new Error('BatchSpanProcessor: span export failed')\n              );\n            }\n          }\n        );\n      });\n    });\n  }\n\n  private _maybeStartTimer() {\n    if (this._timer !== undefined) return;\n    this._timer = setTimeout(() => {\n      this._flushOneBatch()\n        .then(() => {\n          if (this._finishedSpans.length > 0) {\n            this._clearTimer();\n            this._maybeStartTimer();\n          }\n        })\n        .catch(e => {\n          globalErrorHandler(e);\n        });\n    }, this._scheduledDelayMillis);\n    unrefTimer(this._timer);\n  }\n\n  private _clearTimer() {\n    if (this._timer !== undefined) {\n      clearTimeout(this._timer);\n      this._timer = undefined;\n    }\n  }\n\n  protected abstract onShutdown(): void;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpanExporter } from './SpanExporter';\nimport { ReadableSpan } from './ReadableSpan';\nimport {\n  ExportResult,\n  ExportResultCode,\n  hrTimeToMicroseconds,\n} from '@opentelemetry/core';\n\n/**\n * This is implementation of {@link SpanExporter} that prints spans to the\n * console. This class can be used for diagnostic purposes.\n */\n\n/* eslint-disable no-console */\nexport class ConsoleSpanExporter implements SpanExporter {\n  /**\n   * Export spans.\n   * @param spans\n   * @param resultCallback\n   */\n  export(\n    spans: ReadableSpan[],\n    resultCallback: (result: ExportResult) => void\n  ): void {\n    return this._sendSpans(spans, resultCallback);\n  }\n\n  /**\n   * Shutdown the exporter.\n   */\n  shutdown(): Promise<void> {\n    this._sendSpans([]);\n    return Promise.resolve();\n  }\n\n  /**\n   * converts span info into more readable format\n   * @param span\n   */\n  private _exportInfo(span: ReadableSpan) {\n    return {\n      traceId: span.spanContext().traceId,\n      parentId: span.parentSpanId,\n      name: span.name,\n      id: span.spanContext().spanId,\n      kind: span.kind,\n      timestamp: hrTimeToMicroseconds(span.startTime),\n      duration: hrTimeToMicroseconds(span.duration),\n      attributes: span.attributes,\n      status: span.status,\n      events: span.events,\n      links: span.links\n    };\n  }\n\n  /**\n   * Showing spans in console\n   * @param spans\n   * @param done\n   */\n  private _sendSpans(\n    spans: ReadableSpan[],\n    done?: (result: ExportResult) => void\n  ): void {\n    for (const span of spans) {\n      console.dir(this._exportInfo(span), { depth: 3 });\n    }\n    if (done) {\n      return done({ code: ExportResultCode.SUCCESS });\n    }\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpanExporter } from './SpanExporter';\nimport { ReadableSpan } from './ReadableSpan';\nimport { ExportResult, ExportResultCode } from '@opentelemetry/core';\n\n/**\n * This class can be used for testing purposes. It stores the exported spans\n * in a list in memory that can be retrieved using the `getFinishedSpans()`\n * method.\n */\nexport class InMemorySpanExporter implements SpanExporter {\n  private _finishedSpans: ReadableSpan[] = [];\n  /**\n   * Indicates if the exporter has been \"shutdown.\"\n   * When false, exported spans will not be stored in-memory.\n   */\n  protected _stopped = false;\n\n  export(\n    spans: ReadableSpan[],\n    resultCallback: (result: ExportResult) => void\n  ): void {\n    if (this._stopped)\n      return resultCallback({\n        code: ExportResultCode.FAILED,\n        error: new Error('Exporter has been stopped'),\n      });\n    this._finishedSpans.push(...spans);\n\n    setTimeout(() => resultCallback({ code: ExportResultCode.SUCCESS }), 0);\n  }\n\n  shutdown(): Promise<void> {\n    this._stopped = true;\n    this._finishedSpans = [];\n    return Promise.resolve();\n  }\n\n  reset(): void {\n    this._finishedSpans = [];\n  }\n\n  getFinishedSpans(): ReadableSpan[] {\n    return this._finishedSpans;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  SpanKind,\n  SpanStatus,\n  SpanAttributes,\n  HrTime,\n  Link,\n  SpanContext,\n} from '@opentelemetry/api';\nimport { Resource } from '@opentelemetry/resources';\nimport { InstrumentationLibrary } from '@opentelemetry/core';\nimport { TimedEvent } from '../TimedEvent';\n\nexport interface ReadableSpan {\n  readonly name: string;\n  readonly kind: SpanKind;\n  readonly spanContext: () => SpanContext;\n  readonly parentSpanId?: string;\n  readonly startTime: HrTime;\n  readonly endTime: HrTime;\n  readonly status: SpanStatus;\n  readonly attributes: SpanAttributes;\n  readonly links: Link[];\n  readonly events: TimedEvent[];\n  readonly duration: HrTime;\n  readonly ended: boolean;\n  readonly resource: Resource;\n  readonly instrumentationLibrary: InstrumentationLibrary;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context, Context, TraceFlags } from '@opentelemetry/api';\nimport {\n  ExportResultCode,\n  globalErrorHandler,\n  suppressTracing,\n  BindOnceFuture,\n} from '@opentelemetry/core';\nimport { Span } from '../Span';\nimport { SpanProcessor } from '../SpanProcessor';\nimport { ReadableSpan } from './ReadableSpan';\nimport { SpanExporter } from './SpanExporter';\n\n/**\n * An implementation of the {@link SpanProcessor} that converts the {@link Span}\n * to {@link ReadableSpan} and passes it to the configured exporter.\n *\n * Only spans that are sampled are converted.\n */\nexport class SimpleSpanProcessor implements SpanProcessor {\n  private _shutdownOnce: BindOnceFuture<void>;\n\n  constructor(private readonly _exporter: SpanExporter) {\n    this._shutdownOnce = new BindOnceFuture(this._shutdown, this);\n  }\n\n  forceFlush(): Promise<void> {\n    // do nothing as all spans are being exported without waiting\n    return Promise.resolve();\n  }\n\n  // does nothing.\n  onStart(_span: Span, _parentContext: Context): void {}\n\n  onEnd(span: ReadableSpan): void {\n    if (this._shutdownOnce.isCalled) {\n      return;\n    }\n\n    if ((span.spanContext().traceFlags & TraceFlags.SAMPLED) === 0) {\n      return;\n    }\n\n    // prevent downstream exporter calls from generating spans\n    context.with(suppressTracing(context.active()), () => {\n      this._exporter.export([span], result => {\n        if (result.code !== ExportResultCode.SUCCESS) {\n          globalErrorHandler(\n            result.error ??\n              new Error(\n                `SimpleSpanProcessor: span export failed (status ${result})`\n              )\n          );\n        }\n      });\n    });\n  }\n\n  shutdown(): Promise<void> {\n    return this._shutdownOnce.call();\n  }\n\n  private _shutdown(): Promise<void> {\n    return this._exporter.shutdown();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExportResult } from '@opentelemetry/core';\nimport { ReadableSpan } from './ReadableSpan';\n\n/**\n * An interface that allows different tracing services to export recorded data\n * for sampled spans in their own format.\n *\n * To export data this MUST be register to the Tracer SDK using a optional\n * config.\n */\nexport interface SpanExporter {\n  /**\n   * Called to export sampled {@link ReadableSpan}s.\n   * @param spans the list of sampled Spans to be exported.\n   */\n  export(\n    spans: ReadableSpan[],\n    resultCallback: (result: ExportResult) => void\n  ): void;\n\n  /** Stops the exporter. */\n  shutdown(): Promise<void>;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '@opentelemetry/api';\nimport { ReadableSpan } from './export/ReadableSpan';\nimport { Span } from './Span';\n\n/**\n * SpanProcessor is the interface Tracer SDK uses to allow synchronous hooks\n * for when a {@link Span} is started or when a {@link Span} is ended.\n */\nexport interface SpanProcessor {\n  /**\n   * Forces to export all finished spans\n   */\n  forceFlush(): Promise<void>;\n\n  /**\n   * Called when a {@link Span} is started, if the `span.isRecording()`\n   * returns true.\n   * @param span the Span that just started.\n   */\n  onStart(span: Span, parentContext: Context): void;\n\n  /**\n   * Called when a {@link ReadableSpan} is ended, if the `span.isRecording()`\n   * returns true.\n   * @param span the Span that just ended.\n   */\n  onEnd(span: ReadableSpan): void;\n\n  /**\n   * Shuts down the processor. Called when SDK is shut down. This is an\n   * opportunity for processor to do any cleanup required.\n   */\n  shutdown(): Promise<void>;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HrTime, SpanAttributes } from '@opentelemetry/api';\n\n/**\n * Represents a timed event.\n * A timed event is an event with a timestamp.\n */\nexport interface TimedEvent {\n  time: HrTime;\n  /** The name of the event. */\n  name: string;\n  /** The attributes of the event. */\n  attributes?: SpanAttributes;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TextMapPropagator, Sampler } from '@opentelemetry/api';\nimport { IdGenerator } from '@opentelemetry/core';\n\nimport { ContextManager } from '@opentelemetry/api';\nimport { Resource } from '@opentelemetry/resources';\n\n/**\n * TracerConfig provides an interface for configuring a Basic Tracer.\n */\nexport interface TracerConfig {\n  /**\n   * Sampler determines if a span should be recorded or should be a NoopSpan.\n   */\n  sampler?: Sampler;\n\n  /** General Limits */\n  generalLimits?: GeneralLimits;\n\n  /** Span Limits */\n  spanLimits?: SpanLimits;\n\n  /** Resource associated with trace telemetry  */\n  resource?: Resource;\n\n  /**\n   * Generator of trace and span IDs\n   * The default idGenerator generates random ids\n   */\n  idGenerator?: IdGenerator;\n\n  /**\n   * How long the forceFlush can run before it is cancelled.\n   * The default value is 30000ms\n   */\n  forceFlushTimeoutMillis?: number;\n}\n\n/**\n * Configuration options for registering the API with the SDK.\n * Undefined values may be substituted for defaults, and null\n * values will not be registered.\n */\nexport interface SDKRegistrationConfig {\n  /** Propagator to register as the global propagator */\n  propagator?: TextMapPropagator | null;\n\n  /** Context manager to register as the global context manager */\n  contextManager?: ContextManager | null;\n}\n\n/** Global configuration limits of trace service */\nexport interface GeneralLimits {\n  /** attributeValueLengthLimit is maximum allowed attribute value size */\n  attributeValueLengthLimit?: number;\n  /** attributeCountLimit is number of attributes per trace */\n  attributeCountLimit?: number;\n}\n\n/** Global configuration of trace service */\nexport interface SpanLimits {\n  /** attributeValueLengthLimit is maximum allowed attribute value size */\n  attributeValueLengthLimit?: number;\n  /** attributeCountLimit is number of attributes per span */\n  attributeCountLimit?: number;\n  /** linkCountLimit is number of links per span */\n  linkCountLimit?: number;\n  /** eventCountLimit is number of message events per span */\n  eventCountLimit?: number;\n}\n\n/** Interface configuration for a buffer. */\nexport interface BufferConfig {\n  /** The maximum batch size of every export. It must be smaller or equal to\n   * maxQueueSize. The default value is 512. */\n  maxExportBatchSize?: number;\n\n  /** The delay interval in milliseconds between two consecutive exports.\n   *  The default value is 5000ms. */\n  scheduledDelayMillis?: number;\n\n  /** How long the export can run before it is cancelled.\n   * The default value is 30000ms */\n  exportTimeoutMillis?: number;\n\n  /** The maximum queue size. After the size is reached spans are dropped.\n   * The default value is 2048. */\n  maxQueueSize?: number;\n}\n\n/** Interface configuration for BatchSpanProcessor on browser */\nexport interface BatchSpanProcessorBrowserConfig extends BufferConfig {\n  /** Disable flush when a user navigates to a new page, closes the tab or the browser, or,\n   * on mobile, switches to a different app. Auto flush is enabled by default. */\n  disableAutoFlushOnDocumentHide?: boolean;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, ContextManager, ROOT_CONTEXT } from '@opentelemetry/api';\n\n/**\n * Stack Context Manager for managing the state in web\n * it doesn't fully support the async calls though\n */\nexport class StackContextManager implements ContextManager {\n  /**\n   * whether the context manager is enabled or not\n   */\n  private _enabled = false;\n\n  /**\n   * Keeps the reference to current context\n   */\n  public _currentContext = ROOT_CONTEXT;\n\n  /**\n   *\n   * @param context\n   * @param target Function to be executed within the context\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _bindFunction<T extends Function>(\n    context = ROOT_CONTEXT,\n    target: T\n  ): T {\n    const manager = this;\n    const contextWrapper = function (this: unknown, ...args: unknown[]) {\n      return manager.with(context, () => target.apply(this, args));\n    };\n    Object.defineProperty(contextWrapper, 'length', {\n      enumerable: false,\n      configurable: true,\n      writable: false,\n      value: target.length,\n    });\n    return (contextWrapper as unknown) as T;\n  }\n\n  /**\n   * Returns the active context\n   */\n  active(): Context {\n    return this._currentContext;\n  }\n\n  /**\n   * Binds a the certain context or the active one to the target function and then returns the target\n   * @param context A context (span) to be bind to target\n   * @param target a function or event emitter. When target or one of its callbacks is called,\n   *  the provided context will be used as the active context for the duration of the call.\n   */\n  bind<T>(context: Context, target: T): T {\n    // if no specific context to propagate is given, we use the current one\n    if (context === undefined) {\n      context = this.active();\n    }\n    if (typeof target === 'function') {\n      return this._bindFunction(context, target);\n    }\n    return target;\n  }\n\n  /**\n   * Disable the context manager (clears the current context)\n   */\n  disable(): this {\n    this._currentContext = ROOT_CONTEXT;\n    this._enabled = false;\n    return this;\n  }\n\n  /**\n   * Enables the context manager and creates a default(root) context\n   */\n  enable(): this {\n    if (this._enabled) {\n      return this;\n    }\n    this._enabled = true;\n    this._currentContext = ROOT_CONTEXT;\n    return this;\n  }\n\n  /**\n   * Calls the callback function [fn] with the provided [context]. If [context] is undefined then it will use the window.\n   * The context will be set as active\n   * @param context\n   * @param fn Callback function\n   * @param thisArg optional receiver to be used for calling fn\n   * @param args optional arguments forwarded to fn\n   */\n  with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    context: Context | null,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    const previousContext = this._currentContext;\n    this._currentContext = context || ROOT_CONTEXT;\n\n    try {\n      return fn.call(thisArg, ...args);\n    } finally {\n      this._currentContext = previousContext;\n    }\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum PerformanceTimingNames {\n  CONNECT_END = 'connectEnd',\n  CONNECT_START = 'connectStart',\n  DECODED_BODY_SIZE = 'decodedBodySize',\n  DOM_COMPLETE = 'domComplete',\n  DOM_CONTENT_LOADED_EVENT_END = 'domContentLoadedEventEnd',\n  DOM_CONTENT_LOADED_EVENT_START = 'domContentLoadedEventStart',\n  DOM_INTERACTIVE = 'domInteractive',\n  DOMAIN_LOOKUP_END = 'domainLookupEnd',\n  DOMAIN_LOOKUP_START = 'domainLookupStart',\n  ENCODED_BODY_SIZE = 'encodedBodySize',\n  FETCH_START = 'fetchStart',\n  LOAD_EVENT_END = 'loadEventEnd',\n  LOAD_EVENT_START = 'loadEventStart',\n  NAVIGATION_START = 'navigationStart',\n  REDIRECT_END = 'redirectEnd',\n  REDIRECT_START = 'redirectStart',\n  REQUEST_START = 'requestStart',\n  RESPONSE_END = 'responseEnd',\n  RESPONSE_START = 'responseStart',\n  SECURE_CONNECTION_START = 'secureConnectionStart',\n  UNLOAD_EVENT_END = 'unloadEventEnd',\n  UNLOAD_EVENT_START = 'unloadEventStart',\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PerformanceTimingNames } from './enums/PerformanceTimingNames';\n\nexport type PerformanceEntries = {\n  [PerformanceTimingNames.CONNECT_END]?: number;\n  [PerformanceTimingNames.CONNECT_START]?: number;\n  [PerformanceTimingNames.DECODED_BODY_SIZE]?: number;\n  [PerformanceTimingNames.DOM_COMPLETE]?: number;\n  [PerformanceTimingNames.DOM_CONTENT_LOADED_EVENT_END]?: number;\n  [PerformanceTimingNames.DOM_CONTENT_LOADED_EVENT_START]?: number;\n  [PerformanceTimingNames.DOM_INTERACTIVE]?: number;\n  [PerformanceTimingNames.DOMAIN_LOOKUP_END]?: number;\n  [PerformanceTimingNames.DOMAIN_LOOKUP_START]?: number;\n  [PerformanceTimingNames.ENCODED_BODY_SIZE]?: number;\n  [PerformanceTimingNames.FETCH_START]?: number;\n  [PerformanceTimingNames.LOAD_EVENT_END]?: number;\n  [PerformanceTimingNames.LOAD_EVENT_START]?: number;\n  [PerformanceTimingNames.REDIRECT_END]?: number;\n  [PerformanceTimingNames.REDIRECT_START]?: number;\n  [PerformanceTimingNames.REQUEST_START]?: number;\n  [PerformanceTimingNames.RESPONSE_END]?: number;\n  [PerformanceTimingNames.RESPONSE_START]?: number;\n  [PerformanceTimingNames.SECURE_CONNECTION_START]?: number;\n  [PerformanceTimingNames.UNLOAD_EVENT_END]?: number;\n  [PerformanceTimingNames.UNLOAD_EVENT_START]?: number;\n};\n\n/**\n * This interface defines a fallback to read performance metrics,\n * this happens for example on Safari Mac\n */\nexport interface PerformanceLegacy {\n  timing?: PerformanceEntries;\n}\n\n/**\n * This interface is used in {@link getResource} function to return\n *     main request and it's corresponding PreFlight request\n */\nexport interface PerformanceResourceTimingInfo {\n  corsPreFlightRequest?: PerformanceResourceTiming;\n  mainRequest?: PerformanceResourceTiming;\n}\n\ntype PropagateTraceHeaderCorsUrl = string | RegExp;\n\n/**\n * urls which should include trace headers when origin doesn't match\n */\nexport type PropagateTraceHeaderCorsUrls =\n  | PropagateTraceHeaderCorsUrl\n  | PropagateTraceHeaderCorsUrl[];\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  PerformanceEntries,\n  PerformanceResourceTimingInfo,\n  PropagateTraceHeaderCorsUrls,\n} from './types';\nimport { PerformanceTimingNames as PTN } from './enums/PerformanceTimingNames';\nimport * as api from '@opentelemetry/api';\nimport {\n  hrTimeToNanoseconds,\n  timeInputToHrTime,\n  urlMatches,\n} from '@opentelemetry/core';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\n\n// Used to normalize relative URLs\nlet urlNormalizingAnchor: HTMLAnchorElement | undefined;\nfunction getUrlNormalizingAnchor(): HTMLAnchorElement {\n  if (!urlNormalizingAnchor) {\n    urlNormalizingAnchor = document.createElement('a');\n  }\n\n  return urlNormalizingAnchor;\n}\n\n/**\n * Helper function to be able to use enum as typed key in type and in interface when using forEach\n * @param obj\n * @param key\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function hasKey<O>(obj: O, key: keyof any): key is keyof O {\n  return key in obj;\n}\n\n/**\n * Helper function for starting an event on span based on {@link PerformanceEntries}\n * @param span\n * @param performanceName name of performance entry for time start\n * @param entries\n */\nexport function addSpanNetworkEvent(\n  span: api.Span,\n  performanceName: string,\n  entries: PerformanceEntries\n): api.Span | undefined {\n  if (\n    hasKey(entries, performanceName) &&\n    typeof entries[performanceName] === 'number'\n  ) {\n    span.addEvent(performanceName, entries[performanceName]);\n    return span;\n  }\n  return undefined;\n}\n\n/**\n * Helper function for adding network events\n * @param span\n * @param resource\n */\nexport function addSpanNetworkEvents(\n  span: api.Span,\n  resource: PerformanceEntries\n): void {\n  addSpanNetworkEvent(span, PTN.FETCH_START, resource);\n  addSpanNetworkEvent(span, PTN.DOMAIN_LOOKUP_START, resource);\n  addSpanNetworkEvent(span, PTN.DOMAIN_LOOKUP_END, resource);\n  addSpanNetworkEvent(span, PTN.CONNECT_START, resource);\n  addSpanNetworkEvent(span, PTN.SECURE_CONNECTION_START, resource);\n  addSpanNetworkEvent(span, PTN.CONNECT_END, resource);\n  addSpanNetworkEvent(span, PTN.REQUEST_START, resource);\n  addSpanNetworkEvent(span, PTN.RESPONSE_START, resource);\n  addSpanNetworkEvent(span, PTN.RESPONSE_END, resource);\n  const encodedLength = resource[PTN.ENCODED_BODY_SIZE];\n  if (encodedLength !== undefined) {\n    span.setAttribute(\n      SemanticAttributes.HTTP_RESPONSE_CONTENT_LENGTH,\n      encodedLength\n    );\n  }\n  const decodedLength = resource[PTN.DECODED_BODY_SIZE];\n  // Spec: Not set if transport encoding not used (in which case encoded and decoded sizes match)\n  if (decodedLength !== undefined && encodedLength !== decodedLength) {\n    span.setAttribute(\n      SemanticAttributes.HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED,\n      decodedLength\n    );\n  }\n}\n\n/**\n * sort resources by startTime\n * @param filteredResources\n */\nexport function sortResources(filteredResources: PerformanceResourceTiming[]): PerformanceResourceTiming[] {\n  return filteredResources.slice().sort((a, b) => {\n    const valueA = a[PTN.FETCH_START];\n    const valueB = b[PTN.FETCH_START];\n    if (valueA > valueB) {\n      return 1;\n    } else if (valueA < valueB) {\n      return -1;\n    }\n    return 0;\n  });\n}\n\n/**\n * Get closest performance resource ignoring the resources that have been\n * already used.\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n * @param initiatorType\n */\nexport function getResource(\n  spanUrl: string,\n  startTimeHR: api.HrTime,\n  endTimeHR: api.HrTime,\n  resources: PerformanceResourceTiming[],\n  ignoredResources: WeakSet<PerformanceResourceTiming> = new WeakSet<PerformanceResourceTiming>(),\n  initiatorType?: string\n): PerformanceResourceTimingInfo {\n  // de-relativize the URL before usage (does no harm to absolute URLs)\n  const parsedSpanUrl = parseUrl(spanUrl);\n  spanUrl = parsedSpanUrl.toString();\n\n  const filteredResources = filterResourcesForSpan(\n    spanUrl,\n    startTimeHR,\n    endTimeHR,\n    resources,\n    ignoredResources,\n    initiatorType\n  );\n\n  if (filteredResources.length === 0) {\n    return {\n      mainRequest: undefined,\n    };\n  }\n  if (filteredResources.length === 1) {\n    return {\n      mainRequest: filteredResources[0],\n    };\n  }\n  const sorted = sortResources(filteredResources);\n\n  if (parsedSpanUrl.origin !== location.origin && sorted.length > 1) {\n    let corsPreFlightRequest: PerformanceResourceTiming | undefined = sorted[0];\n    let mainRequest: PerformanceResourceTiming = findMainRequest(\n      sorted,\n      corsPreFlightRequest[PTN.RESPONSE_END],\n      endTimeHR\n    );\n\n    const responseEnd = corsPreFlightRequest[PTN.RESPONSE_END];\n    const fetchStart = mainRequest[PTN.FETCH_START];\n\n    // no corsPreFlightRequest\n    if (fetchStart < responseEnd) {\n      mainRequest = corsPreFlightRequest;\n      corsPreFlightRequest = undefined;\n    }\n\n    return {\n      corsPreFlightRequest,\n      mainRequest,\n    };\n  } else {\n    return {\n      mainRequest: filteredResources[0],\n    };\n  }\n}\n\n/**\n * Will find the main request skipping the cors pre flight requests\n * @param resources\n * @param corsPreFlightRequestEndTime\n * @param spanEndTimeHR\n */\nfunction findMainRequest(\n  resources: PerformanceResourceTiming[],\n  corsPreFlightRequestEndTime: number,\n  spanEndTimeHR: api.HrTime\n): PerformanceResourceTiming {\n  const spanEndTime = hrTimeToNanoseconds(spanEndTimeHR);\n  const minTime = hrTimeToNanoseconds(\n    timeInputToHrTime(corsPreFlightRequestEndTime)\n  );\n\n  let mainRequest: PerformanceResourceTiming = resources[1];\n  let bestGap;\n\n  const length = resources.length;\n  for (let i = 1; i < length; i++) {\n    const resource = resources[i];\n    const resourceStartTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.FETCH_START])\n    );\n\n    const resourceEndTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.RESPONSE_END])\n    );\n\n    const currentGap = spanEndTime - resourceEndTime;\n\n    if (resourceStartTime >= minTime && (!bestGap || currentGap < bestGap)) {\n      bestGap = currentGap;\n      mainRequest = resource;\n    }\n  }\n  return mainRequest;\n}\n\n/**\n * Filter all resources that has started and finished according to span start time and end time.\n *     It will return the closest resource to a start time\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n */\nfunction filterResourcesForSpan(\n  spanUrl: string,\n  startTimeHR: api.HrTime,\n  endTimeHR: api.HrTime,\n  resources: PerformanceResourceTiming[],\n  ignoredResources: WeakSet<PerformanceResourceTiming>,\n  initiatorType?: string\n) {\n  const startTime = hrTimeToNanoseconds(startTimeHR);\n  const endTime = hrTimeToNanoseconds(endTimeHR);\n  let filteredResources = resources.filter(resource => {\n    const resourceStartTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.FETCH_START])\n    );\n    const resourceEndTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.RESPONSE_END])\n    );\n\n    return (\n      resource.initiatorType.toLowerCase() ===\n        (initiatorType || 'xmlhttprequest') &&\n      resource.name === spanUrl &&\n      resourceStartTime >= startTime &&\n      resourceEndTime <= endTime\n    );\n  });\n\n  if (filteredResources.length > 0) {\n    filteredResources = filteredResources.filter(resource => {\n      return !ignoredResources.has(resource);\n    });\n  }\n\n  return filteredResources;\n}\n\n/**\n * The URLLike interface represents an URL and HTMLAnchorElement compatible fields.\n */\nexport interface URLLike {\n  hash: string;\n  host: string;\n  hostname: string;\n  href: string;\n  readonly origin: string;\n  password: string;\n  pathname: string;\n  port: string;\n  protocol: string;\n  search: string;\n  username: string;\n}\n\n/**\n * Parses url using URL constructor or fallback to anchor element.\n * @param url\n */\nexport function parseUrl(url: string): URLLike {\n  if (typeof URL === 'function') {\n    return new URL(url, location.href);\n  }\n  const element = getUrlNormalizingAnchor();\n  element.href = url;\n  return element;\n}\n\n/**\n * Parses url using URL constructor or fallback to anchor element and serialize\n * it to a string.\n *\n * Performs the steps described in https://html.spec.whatwg.org/multipage/urls-and-fetching.html#parse-a-url\n *\n * @param url\n */\nexport function normalizeUrl(url: string): string {\n  const urlLike = parseUrl(url);\n  return urlLike.href;\n}\n\n/**\n * Get element XPath\n * @param target - target element\n * @param optimised - when id attribute of element is present the xpath can be\n * simplified to contain id\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function getElementXPath(target: any, optimised?: boolean): string {\n  if (target.nodeType === Node.DOCUMENT_NODE) {\n    return '/';\n  }\n  const targetValue = getNodeValue(target, optimised);\n  if (optimised && targetValue.indexOf('@id') > 0) {\n    return targetValue;\n  }\n  let xpath = '';\n  if (target.parentNode) {\n    xpath += getElementXPath(target.parentNode, false);\n  }\n  xpath += targetValue;\n\n  return xpath;\n}\n\n/**\n * get node index within the siblings\n * @param target\n */\nfunction getNodeIndex(target: HTMLElement): number {\n  if (!target.parentNode) {\n    return 0;\n  }\n  const allowedTypes = [target.nodeType];\n  if (target.nodeType === Node.CDATA_SECTION_NODE) {\n    allowedTypes.push(Node.TEXT_NODE);\n  }\n  let elements = Array.from(target.parentNode.childNodes);\n  elements = elements.filter((element: Node) => {\n    const localName = (element as HTMLElement).localName;\n    return (\n      allowedTypes.indexOf(element.nodeType) >= 0 &&\n      localName === target.localName\n    );\n  });\n  if (elements.length >= 1) {\n    return elements.indexOf(target) + 1; // xpath starts from 1\n  }\n  // if there are no other similar child xpath doesn't need index\n  return 0;\n}\n\n/**\n * get node value for xpath\n * @param target\n * @param optimised\n */\nfunction getNodeValue(target: HTMLElement, optimised?: boolean): string {\n  const nodeType = target.nodeType;\n  const index = getNodeIndex(target);\n  let nodeValue = '';\n  if (nodeType === Node.ELEMENT_NODE) {\n    const id = target.getAttribute('id');\n    if (optimised && id) {\n      return `//*[@id=\"${id}\"]`;\n    }\n    nodeValue = target.localName;\n  } else if (\n    nodeType === Node.TEXT_NODE ||\n    nodeType === Node.CDATA_SECTION_NODE\n  ) {\n    nodeValue = 'text()';\n  } else if (nodeType === Node.COMMENT_NODE) {\n    nodeValue = 'comment()';\n  } else {\n    return '';\n  }\n  // if index is 1 it can be omitted in xpath\n  if (nodeValue && index > 1) {\n    return `/${nodeValue}[${index}]`;\n  }\n  return `/${nodeValue}`;\n}\n\n/**\n * Checks if trace headers should be propagated\n * @param spanUrl\n * @private\n */\nexport function shouldPropagateTraceHeaders(\n  spanUrl: string,\n  propagateTraceHeaderCorsUrls?: PropagateTraceHeaderCorsUrls\n): boolean {\n  let propagateTraceHeaderUrls = propagateTraceHeaderCorsUrls || [];\n  if (\n    typeof propagateTraceHeaderUrls === 'string' ||\n    propagateTraceHeaderUrls instanceof RegExp\n  ) {\n    propagateTraceHeaderUrls = [propagateTraceHeaderUrls];\n  }\n  const parsedSpanUrl = parseUrl(spanUrl);\n\n  if (parsedSpanUrl.origin === location.origin) {\n    return true;\n  } else {\n    return propagateTraceHeaderUrls.some(propagateTraceHeaderUrl =>\n      urlMatches(spanUrl, propagateTraceHeaderUrl)\n    );\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum EventNames {\n  METHOD_OPEN = 'open',\n  METHOD_SEND = 'send',\n  EVENT_ABORT = 'abort',\n  EVENT_ERROR = 'error',\n  EVENT_LOAD = 'loaded',\n  EVENT_TIMEOUT = 'timeout',\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '0.29.2';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/http.md\n */\nexport enum AttributeNames {\n  HTTP_STATUS_TEXT = 'http.status_text',\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './platform';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './OTLPTraceExporter';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ReadableSpan, SpanExporter } from '@opentelemetry/sdk-trace-base';\nimport { getEnv, baggageUtils } from '@opentelemetry/core';\nimport {\n  OTLPExporterConfigBase,\n  appendResourcePathToUrl,\n  appendRootPathToUrlIfNeeded,\n  OTLPExporterBrowserBase\n} from '@opentelemetry/otlp-exporter-base';\nimport { createExportTraceServiceRequest, IExportTraceServiceRequest } from '@opentelemetry/otlp-transformer';\n\nconst DEFAULT_COLLECTOR_RESOURCE_PATH = 'v1/traces';\nconst DEFAULT_COLLECTOR_URL = `http://localhost:4318/${DEFAULT_COLLECTOR_RESOURCE_PATH}`;\n\n/**\n * Collector Trace Exporter for Web\n */\nexport class OTLPTraceExporter\n  extends OTLPExporterBrowserBase<\n    ReadableSpan,\n    IExportTraceServiceRequest\n  >\n  implements SpanExporter {\n  constructor(config: OTLPExporterConfigBase = {}) {\n    super(config);\n    this._headers = Object.assign(\n      this._headers,\n      baggageUtils.parseKeyPairsIntoRecord(\n        getEnv().OTEL_EXPORTER_OTLP_TRACES_HEADERS\n      )\n    );\n  }\n  convert(spans: ReadableSpan[]): IExportTraceServiceRequest {\n    return createExportTraceServiceRequest(spans, true);\n  }\n\n  getDefaultUrl(config: OTLPExporterConfigBase): string {\n    return typeof config.url === 'string'\n      ? config.url\n      : getEnv().OTEL_EXPORTER_OTLP_TRACES_ENDPOINT.length > 0\n        ? appendRootPathToUrlIfNeeded(getEnv().OTEL_EXPORTER_OTLP_TRACES_ENDPOINT, DEFAULT_COLLECTOR_RESOURCE_PATH)\n        : getEnv().OTEL_EXPORTER_OTLP_ENDPOINT.length > 0\n          ? appendResourcePathToUrl(getEnv().OTEL_EXPORTER_OTLP_ENDPOINT, DEFAULT_COLLECTOR_RESOURCE_PATH)\n          : DEFAULT_COLLECTOR_URL;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './OTLPExporterBase';\nexport * from './platform';\nexport * from './types';\nexport * from './util';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport { ExportResult, ExportResultCode, BindOnceFuture } from '@opentelemetry/core';\nimport {\n  OTLPExporterError,\n  OTLPExporterConfigBase,\n  ExportServiceError,\n} from './types';\nimport { configureExporterTimeout } from './util';\n\n/**\n * Collector Exporter abstract base class\n */\nexport abstract class OTLPExporterBase<\n  T extends OTLPExporterConfigBase,\n  ExportItem,\n  ServiceRequest\n  > {\n  public readonly url: string;\n  public readonly hostname: string | undefined;\n  public readonly timeoutMillis: number;\n  protected _concurrencyLimit: number;\n  protected _sendingPromises: Promise<unknown>[] = [];\n  protected _shutdownOnce: BindOnceFuture<void>;\n\n  /**\n   * @param config\n   */\n  constructor(config: T = {} as T) {\n    this.url = this.getDefaultUrl(config);\n    if (typeof config.hostname === 'string') {\n      this.hostname = config.hostname;\n    }\n\n    this.shutdown = this.shutdown.bind(this);\n    this._shutdownOnce = new BindOnceFuture(this._shutdown, this);\n\n    this._concurrencyLimit =\n      typeof config.concurrencyLimit === 'number'\n        ? config.concurrencyLimit\n        : Infinity;\n\n    this.timeoutMillis = configureExporterTimeout(config.timeoutMillis);\n\n    // platform dependent\n    this.onInit(config);\n  }\n\n  /**\n   * Export items.\n   * @param items\n   * @param resultCallback\n   */\n  export(items: ExportItem[], resultCallback: (result: ExportResult) => void): void {\n    if (this._shutdownOnce.isCalled) {\n      resultCallback({\n        code: ExportResultCode.FAILED,\n        error: new Error('Exporter has been shutdown'),\n      });\n      return;\n    }\n\n    if (this._sendingPromises.length >= this._concurrencyLimit) {\n      resultCallback({\n        code: ExportResultCode.FAILED,\n        error: new Error('Concurrent export limit reached'),\n      });\n      return;\n    }\n\n    this._export(items)\n      .then(() => {\n        resultCallback({ code: ExportResultCode.SUCCESS });\n      })\n      .catch((error: ExportServiceError) => {\n        resultCallback({ code: ExportResultCode.FAILED, error });\n      });\n  }\n\n  private _export(items: ExportItem[]): Promise<unknown> {\n    return new Promise<void>((resolve, reject) => {\n      try {\n        diag.debug('items to be sent', items);\n        this.send(items, resolve, reject);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  /**\n   * Shutdown the exporter.\n   */\n  shutdown(): Promise<void> {\n    return this._shutdownOnce.call();\n  }\n\n  /**\n   * Called by _shutdownOnce with BindOnceFuture\n   */\n  private _shutdown(): Promise<void> {\n    diag.debug('shutdown started');\n    this.onShutdown();\n    return Promise.all(this._sendingPromises)\n      .then(() => {\n        /** ignore resolved values */\n      });\n  }\n\n  abstract onShutdown(): void;\n  abstract onInit(config: T): void;\n  abstract send(\n    items: ExportItem[],\n    onSuccess: () => void,\n    onError: (error: OTLPExporterError) => void\n  ): void;\n  abstract getDefaultUrl(config: T): string;\n  abstract convert(objects: ExportItem[]): ServiceRequest;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport { getEnv } from '@opentelemetry/core';\n\nconst DEFAULT_TRACE_TIMEOUT = 10000;\n\n/**\n * Parses headers from config leaving only those that have defined values\n * @param partialHeaders\n */\nexport function parseHeaders(\n  partialHeaders: Partial<Record<string, unknown>> = {}\n): Record<string, string> {\n  const headers: Record<string, string> = {};\n  Object.entries(partialHeaders).forEach(([key, value]) => {\n    if (typeof value !== 'undefined') {\n      headers[key] = String(value);\n    } else {\n      diag.warn(`Header \"${key}\" has wrong value and will be ignored`);\n    }\n  });\n  return headers;\n}\n\n/**\n * Adds path (version + signal) to a no per-signal endpoint\n * @param url\n * @param path\n * @returns url + path\n */\nexport function appendResourcePathToUrl(url: string, path: string): string {\n  if (!url.endsWith('/')) {\n    url = url + '/';\n  }\n  return url + path;\n}\n\n/**\n * Adds root path to signal specific endpoint when endpoint contains no path part and no root path\n * @param url\n * @param path\n * @returns url\n */\nexport function appendRootPathToUrlIfNeeded(url: string, path: string): string {\n  if (!url.includes(path) && !url.endsWith('/')) {\n    url = url + '/';\n  }\n  return url;\n}\n\n/**\n * Configure exporter trace timeout value from passed in value or environment variables\n * @param timeoutMillis\n * @returns timeout value in milliseconds\n */\nexport function configureExporterTimeout(timeoutMillis: number | undefined): number {\n  if (typeof timeoutMillis === 'number') {\n    if (timeoutMillis <= 0) {\n      // OTLP exporter configured timeout - using default value of 10000ms\n      return invalidTimeout(timeoutMillis, DEFAULT_TRACE_TIMEOUT);\n    }\n    return timeoutMillis;\n  } else {\n    return getExporterTimeoutFromEnv();\n  }\n}\n\nfunction getExporterTimeoutFromEnv(): number {\n  const definedTimeout =\n    Number(getEnv().OTEL_EXPORTER_OTLP_TRACES_TIMEOUT ??\n    getEnv().OTEL_EXPORTER_OTLP_TIMEOUT);\n\n  if (definedTimeout <= 0) {\n    // OTLP exporter configured timeout - using default value of 10000ms\n    return invalidTimeout(definedTimeout, DEFAULT_TRACE_TIMEOUT);\n  } else {\n    return definedTimeout;\n  }\n}\n\n// OTLP exporter configured timeout - using default value of 10000ms\nexport function invalidTimeout(timeout: number, defaultTimeout: number): number {\n  diag.warn('Timeout must be greater than 0', timeout);\n\n  return defaultTimeout;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './OTLPExporterBrowserBase';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OTLPExporterBase } from '../../OTLPExporterBase';\nimport { OTLPExporterConfigBase } from '../../types';\nimport * as otlpTypes from '../../types';\nimport { parseHeaders } from '../../util';\nimport { sendWithBeacon, sendWithXhr } from './util';\nimport { diag } from '@opentelemetry/api';\nimport { getEnv, baggageUtils } from '@opentelemetry/core';\n\n/**\n * Collector Metric Exporter abstract base class\n */\nexport abstract class OTLPExporterBrowserBase<\n  ExportItem,\n  ServiceRequest\n  > extends OTLPExporterBase<\n  OTLPExporterConfigBase,\n  ExportItem,\n  ServiceRequest\n  > {\n  protected _headers: Record<string, string>;\n  private _useXHR: boolean = false;\n\n  /**\n   * @param config\n   */\n  constructor(config: OTLPExporterConfigBase = {}) {\n    super(config);\n    this._useXHR =\n      !!config.headers || typeof navigator.sendBeacon !== 'function';\n    if (this._useXHR) {\n      this._headers = Object.assign(\n        {},\n        parseHeaders(config.headers),\n        baggageUtils.parseKeyPairsIntoRecord(\n          getEnv().OTEL_EXPORTER_OTLP_HEADERS\n        )\n      );\n    } else {\n      this._headers = {};\n    }\n  }\n\n  onInit(): void {\n    window.addEventListener('unload', this.shutdown);\n  }\n\n  onShutdown(): void {\n    window.removeEventListener('unload', this.shutdown);\n  }\n\n  send(\n    items: ExportItem[],\n    onSuccess: () => void,\n    onError: (error: otlpTypes.OTLPExporterError) => void\n  ): void {\n    if (this._shutdownOnce.isCalled) {\n      diag.debug('Shutdown already started. Cannot send objects');\n      return;\n    }\n    const serviceRequest = this.convert(items);\n    const body = JSON.stringify(serviceRequest);\n\n    const promise = new Promise<void>((resolve, reject) => {\n      if (this._useXHR) {\n        sendWithXhr(body, this.url, this._headers, this.timeoutMillis, resolve, reject);\n      } else {\n        sendWithBeacon(body, this.url, { type: 'application/json' }, resolve, reject);\n      }\n    })\n      .then(onSuccess, onError);\n\n    this._sendingPromises.push(promise);\n    const popPromise = () => {\n      const index = this._sendingPromises.indexOf(promise);\n      this._sendingPromises.splice(index, 1);\n    };\n    promise.then(popPromise, popPromise);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\nimport { OTLPExporterError } from '../../types';\n\n/**\n * Send metrics/spans using browser navigator.sendBeacon\n * @param body\n * @param url\n * @param blobPropertyBag\n * @param onSuccess\n * @param onError\n */\nexport function sendWithBeacon(\n  body: string,\n  url: string,\n  blobPropertyBag: BlobPropertyBag,\n  onSuccess: () => void,\n  onError: (error: OTLPExporterError) => void\n): void {\n  if (navigator.sendBeacon(url, new Blob([body], blobPropertyBag))) {\n    diag.debug('sendBeacon - can send', body);\n    onSuccess();\n  } else {\n    const error = new OTLPExporterError(\n      `sendBeacon - cannot send ${body}`\n    );\n    onError(error);\n  }\n}\n\n/**\n * function to send metrics/spans using browser XMLHttpRequest\n *     used when navigator.sendBeacon is not available\n * @param body\n * @param url\n * @param headers\n * @param onSuccess\n * @param onError\n */\nexport function sendWithXhr(\n  body: string,\n  url: string,\n  headers: Record<string, string>,\n  exporterTimeout: number,\n  onSuccess: () => void,\n  onError: (error: OTLPExporterError) => void\n): void {\n  let reqIsDestroyed: boolean;\n\n  const exporterTimer = setTimeout(() => {\n    reqIsDestroyed = true;\n    xhr.abort();\n  }, exporterTimeout);\n\n  const xhr = new XMLHttpRequest();\n  xhr.open('POST', url);\n\n  const defaultHeaders = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  };\n\n  Object.entries({\n    ...defaultHeaders,\n    ...headers,\n  }).forEach(([k, v]) => {\n    xhr.setRequestHeader(k, v);\n  });\n\n  xhr.send(body);\n\n  xhr.onreadystatechange = () => {\n    if (xhr.readyState === XMLHttpRequest.DONE) {\n      if (xhr.status >= 200 && xhr.status <= 299) {\n        clearTimeout(exporterTimer);\n        diag.debug('xhr success', body);\n        onSuccess();\n      } else if (reqIsDestroyed) {\n        const error = new OTLPExporterError(\n          'Request Timeout', xhr.status\n        );\n        onError(error);\n      } else {\n        const error = new OTLPExporterError(\n          `Failed to export with XHR (status: ${xhr.status})`,\n          xhr.status\n        );\n        clearTimeout(exporterTimer);\n        onError(error);\n      }\n    }\n  };\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Interface for handling error\n */\nexport class OTLPExporterError extends Error {\n  readonly code?: number;\n  override readonly name: string = 'OTLPExporterError';\n  readonly data?: string;\n\n  constructor(message?: string, code?: number, data?: string) {\n    super(message);\n    this.data = data;\n    this.code = code;\n  }\n}\n\n/**\n * Interface for handling export service errors\n */\nexport interface ExportServiceError {\n  name: string;\n  code: number;\n  details: string;\n  metadata: { [key: string]: unknown };\n  message: string;\n  stack: string;\n}\n\n/**\n * Collector Exporter base config\n */\nexport interface OTLPExporterConfigBase {\n  headers?: Partial<Record<string, unknown>>;\n  hostname?: string;\n  url?: string;\n  concurrencyLimit?: number;\n  /** Maximum time the OTLP exporter will wait for each batch export.\n   * The default value is 10000ms. */\n  timeoutMillis?: number;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './common/types';\nexport * from './metrics/types';\nexport * from './resource/types';\nexport * from './trace/types';\n\nexport { createExportTraceServiceRequest } from './trace';\nexport { createExportMetricsServiceRequest } from './metrics';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Properties of an InstrumentationScope. */\nexport interface IInstrumentationScope {\n  /** InstrumentationScope name */\n  name: string\n\n  /** InstrumentationScope version */\n  version?: string;\n}\n\n/** Properties of a KeyValue. */\nexport interface IKeyValue {\n  /** KeyValue key */\n  key: string;\n\n  /** KeyValue value */\n  value: IAnyValue;\n}\n\n/** Properties of an AnyValue. */\nexport interface IAnyValue {\n  /** AnyValue stringValue */\n  stringValue?: (string | null);\n\n  /** AnyValue boolValue */\n  boolValue?: (boolean | null);\n\n  /** AnyValue intValue */\n  intValue?: (number | null);\n\n  /** AnyValue doubleValue */\n  doubleValue?: (number | null);\n\n  /** AnyValue arrayValue */\n  arrayValue?: IArrayValue;\n\n  /** AnyValue kvlistValue */\n  kvlistValue?: IKeyValueList;\n\n  /** AnyValue bytesValue */\n  bytesValue?: Uint8Array;\n}\n\n/** Properties of an ArrayValue. */\nexport interface IArrayValue {\n  /** ArrayValue values */\n  values: IAnyValue[];\n}\n\n/** Properties of a KeyValueList. */\nexport interface IKeyValueList {\n  /** KeyValueList values */\n  values: IKeyValue[];\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { IInstrumentationScope, IKeyValue } from '../common/types';\nimport { IResource } from '../resource/types';\n\n/** Properties of an ExportMetricsServiceRequest. */\nexport interface IExportMetricsServiceRequest {\n\n  /** ExportMetricsServiceRequest resourceMetrics */\n  resourceMetrics: IResourceMetrics[]\n}\n\n/** Properties of a ResourceMetrics. */\nexport interface IResourceMetrics {\n\n  /** ResourceMetrics resource */\n  resource?: IResource;\n\n  /** ResourceMetrics scopeMetrics */\n  scopeMetrics: IScopeMetrics[]\n\n  /** ResourceMetrics schemaUrl */\n  schemaUrl?: string;\n}\n\n/** Properties of an IScopeMetrics. */\nexport interface IScopeMetrics {\n\n  /** ScopeMetrics scope */\n  scope?: IInstrumentationScope;\n\n  /** ScopeMetrics metrics */\n  metrics: IMetric[];\n\n  /** ScopeMetrics schemaUrl */\n  schemaUrl?: string;\n}\n\n/** Properties of a Metric. */\nexport interface IMetric {\n\n  /** Metric name */\n  name: string;\n\n  /** Metric description */\n  description?: string;\n\n  /** Metric unit */\n  unit?: string;\n\n  /** Metric gauge */\n  gauge?: IGauge;\n\n  /** Metric sum */\n  sum?: ISum;\n\n  /** Metric histogram */\n  histogram?: IHistogram;\n\n  /** Metric exponentialHistogram */\n  exponentialHistogram?: IExponentialHistogram;\n\n  /** Metric summary */\n  summary?: ISummary;\n}\n\n/** Properties of a Gauge. */\nexport interface IGauge {\n  /** Gauge dataPoints */\n  dataPoints: INumberDataPoint[]\n}\n\n/** Properties of a Sum. */\nexport interface ISum {\n\n  /** Sum dataPoints */\n  dataPoints: INumberDataPoint[];\n\n  /** Sum aggregationTemporality */\n  aggregationTemporality: EAggregationTemporality\n\n  /** Sum isMonotonic */\n  isMonotonic?: (boolean | null);\n}\n\n/** Properties of a Histogram. */\nexport interface IHistogram {\n  /** Histogram dataPoints */\n  dataPoints: IHistogramDataPoint[]\n\n  /** Histogram aggregationTemporality */\n  aggregationTemporality?: EAggregationTemporality\n}\n\n/** Properties of an ExponentialHistogram. */\nexport interface IExponentialHistogram {\n  /** ExponentialHistogram dataPoints */\n  dataPoints: IExponentialHistogramDataPoint[];\n\n  /** ExponentialHistogram aggregationTemporality */\n  aggregationTemporality?: EAggregationTemporality;\n}\n\n/** Properties of a Summary. */\nexport interface ISummary {\n  /** Summary dataPoints */\n  dataPoints: ISummaryDataPoint[];\n}\n\n/** Properties of a NumberDataPoint. */\nexport interface INumberDataPoint {\n\n  /** NumberDataPoint attributes */\n  attributes: IKeyValue[]\n\n  /** NumberDataPoint startTimeUnixNano */\n  startTimeUnixNano?: number;\n\n  /** NumberDataPoint timeUnixNano */\n  timeUnixNano?: number;\n\n  /** NumberDataPoint asDouble */\n  asDouble?: (number | null);\n\n  /** NumberDataPoint asInt */\n  asInt?: number;\n\n  /** NumberDataPoint exemplars */\n  exemplars?: IExemplar[];\n\n  /** NumberDataPoint flags */\n  flags?: number;\n}\n\n\n/** Properties of a HistogramDataPoint. */\nexport interface IHistogramDataPoint {\n  /** HistogramDataPoint attributes */\n  attributes?: IKeyValue[];\n\n  /** HistogramDataPoint startTimeUnixNano */\n  startTimeUnixNano?: number;\n\n  /** HistogramDataPoint timeUnixNano */\n  timeUnixNano?: number;\n\n  /** HistogramDataPoint count */\n  count?: number;\n\n  /** HistogramDataPoint sum */\n  sum?: number;\n\n  /** HistogramDataPoint bucketCounts */\n  bucketCounts?: number[]\n\n  /** HistogramDataPoint explicitBounds */\n  explicitBounds?: number[]\n\n  /** HistogramDataPoint exemplars */\n  exemplars?: IExemplar[];\n\n  /** HistogramDataPoint flags */\n  flags?: number;\n\n  /** HistogramDataPoint min */\n  min?: number;\n\n  /** HistogramDataPoint max */\n  max?: number;\n}\n\n/** Properties of an ExponentialHistogramDataPoint. */\nexport interface IExponentialHistogramDataPoint {\n\n  /** ExponentialHistogramDataPoint attributes */\n  attributes?: IKeyValue[];\n\n  /** ExponentialHistogramDataPoint startTimeUnixNano */\n  startTimeUnixNano?: number;\n\n  /** ExponentialHistogramDataPoint timeUnixNano */\n  timeUnixNano?: string;\n\n  /** ExponentialHistogramDataPoint count */\n  count?: number;\n\n  /** ExponentialHistogramDataPoint sum */\n  sum?: number;\n\n  /** ExponentialHistogramDataPoint scale */\n  scale?: number;\n\n  /** ExponentialHistogramDataPoint zeroCount */\n  zeroCount?: number;\n\n  /** ExponentialHistogramDataPoint positive */\n  positive?: IBuckets;\n\n  /** ExponentialHistogramDataPoint negative */\n  negative?: IBuckets;\n\n  /** ExponentialHistogramDataPoint flags */\n  flags?: number;\n\n  /** ExponentialHistogramDataPoint exemplars */\n  exemplars?: IExemplar[]\n}\n\n\n/** Properties of a SummaryDataPoint. */\nexport interface ISummaryDataPoint {\n  /** SummaryDataPoint attributes */\n  attributes?: IKeyValue[];\n\n  /** SummaryDataPoint startTimeUnixNano */\n  startTimeUnixNano?: number;\n\n  /** SummaryDataPoint timeUnixNano */\n  timeUnixNano?: string;\n\n  /** SummaryDataPoint count */\n  count?: number;\n\n  /** SummaryDataPoint sum */\n  sum?: number;\n\n  /** SummaryDataPoint quantileValues */\n  quantileValues?: IValueAtQuantile[];\n\n  /** SummaryDataPoint flags */\n  flags?: number;\n}\n\n/** Properties of a ValueAtQuantile. */\nexport interface IValueAtQuantile {\n  /** ValueAtQuantile quantile */\n  quantile?: number;\n\n  /** ValueAtQuantile value */\n  value?: number;\n}\n\n/** Properties of a Buckets. */\nexport interface IBuckets {\n  /** Buckets offset */\n  offset?: number;\n\n  /** Buckets bucketCounts */\n  bucketCounts?: number[];\n}\n\n/** Properties of an Exemplar. */\nexport interface IExemplar {\n  /** Exemplar filteredAttributes */\n  filteredAttributes?: IKeyValue[];\n\n  /** Exemplar timeUnixNano */\n  timeUnixNano?: string;\n\n  /** Exemplar asDouble */\n  asDouble?: number;\n\n  /** Exemplar asInt */\n  asInt?: number;\n\n  /** Exemplar spanId */\n  spanId?: string;\n\n  /** Exemplar traceId */\n  traceId?: string;\n}\n\n/**\n * AggregationTemporality defines how a metric aggregator reports aggregated\n * values. It describes how those values relate to the time interval over\n * which they are aggregated.\n */\nexport const enum EAggregationTemporality {\n  /* UNSPECIFIED is the default AggregationTemporality, it MUST not be used. */\n  AGGREGATION_TEMPORALITY_UNSPECIFIED = 0,\n\n  /** DELTA is an AggregationTemporality for a metric aggregator which reports\n  changes since last report time. Successive metrics contain aggregation of\n  values from continuous and non-overlapping intervals.\n\n  The values for a DELTA metric are based only on the time interval\n  associated with one measurement cycle. There is no dependency on\n  previous measurements like is the case for CUMULATIVE metrics.\n\n  For example, consider a system measuring the number of requests that\n  it receives and reports the sum of these requests every second as a\n  DELTA metric:\n\n  1. The system starts receiving at time=t_0.\n  2. A request is received, the system measures 1 request.\n  3. A request is received, the system measures 1 request.\n  4. A request is received, the system measures 1 request.\n  5. The 1 second collection cycle ends. A metric is exported for the\n      number of requests received over the interval of time t_0 to\n      t_0+1 with a value of 3.\n  6. A request is received, the system measures 1 request.\n  7. A request is received, the system measures 1 request.\n  8. The 1 second collection cycle ends. A metric is exported for the\n      number of requests received over the interval of time t_0+1 to\n      t_0+2 with a value of 2. */\n  AGGREGATION_TEMPORALITY_DELTA = 1,\n\n  /** CUMULATIVE is an AggregationTemporality for a metric aggregator which\n  reports changes since a fixed start time. This means that current values\n  of a CUMULATIVE metric depend on all previous measurements since the\n  start time. Because of this, the sender is required to retain this state\n  in some form. If this state is lost or invalidated, the CUMULATIVE metric\n  values MUST be reset and a new fixed start time following the last\n  reported measurement time sent MUST be used.\n\n  For example, consider a system measuring the number of requests that\n  it receives and reports the sum of these requests every second as a\n  CUMULATIVE metric:\n\n  1. The system starts receiving at time=t_0.\n  2. A request is received, the system measures 1 request.\n  3. A request is received, the system measures 1 request.\n  4. A request is received, the system measures 1 request.\n  5. The 1 second collection cycle ends. A metric is exported for the\n      number of requests received over the interval of time t_0 to\n      t_0+1 with a value of 3.\n  6. A request is received, the system measures 1 request.\n  7. A request is received, the system measures 1 request.\n  8. The 1 second collection cycle ends. A metric is exported for the\n      number of requests received over the interval of time t_0 to\n      t_0+2 with a value of 5.\n  9. The system experiences a fault and loses state.\n  10. The system recovers and resumes receiving at time=t_1.\n  11. A request is received, the system measures 1 request.\n  12. The 1 second collection cycle ends. A metric is exported for the\n      number of requests received over the interval of time t_1 to\n      t_0+1 with a value of 1.\n\n  Note: Even though, when reporting changes since last report time, using\n  CUMULATIVE is valid, it is not recommended. This may cause problems for\n  systems that do not use start_time to determine when the aggregation\n  value was reset (e.g. Prometheus). */\n  AGGREGATION_TEMPORALITY_CUMULATIVE = 2\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IKeyValue } from '../common/types';\n\n/** Properties of a Resource. */\nexport interface IResource {\n  /** Resource attributes */\n  attributes: IKeyValue[];\n\n  /** Resource droppedAttributesCount */\n  droppedAttributesCount: number;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IInstrumentationScope, IKeyValue } from '../common/types';\nimport { IResource } from '../resource/types';\n\n/** Properties of an ExportTraceServiceRequest. */\nexport interface IExportTraceServiceRequest {\n\n  /** ExportTraceServiceRequest resourceSpans */\n  resourceSpans?: IResourceSpans[];\n}\n\n/** Properties of a ResourceSpans. */\nexport interface IResourceSpans {\n\n  /** ResourceSpans resource */\n  resource?: IResource;\n\n  /** ResourceSpans scopeSpans */\n  scopeSpans: IScopeSpans[];\n\n  /** ResourceSpans schemaUrl */\n  schemaUrl?: string;\n}\n\n/** Properties of an ScopeSpans. */\nexport interface IScopeSpans {\n\n  /** IScopeSpans scope */\n  scope?: IInstrumentationScope;\n\n  /** IScopeSpans spans */\n  spans?: ISpan[]\n\n  /** IScopeSpans schemaUrl */\n  schemaUrl?: (string | null);\n}\n\n/** Properties of a Span. */\nexport interface ISpan {\n  /** Span traceId */\n  traceId: string;\n\n  /** Span spanId */\n  spanId: string;\n\n  /** Span traceState */\n  traceState?: (string | null);\n\n  /** Span parentSpanId */\n  parentSpanId?: string;\n\n  /** Span name */\n  name: string;\n\n  /** Span kind */\n  kind: ESpanKind;\n\n  /** Span startTimeUnixNano */\n  startTimeUnixNano: number;\n\n  /** Span endTimeUnixNano */\n  endTimeUnixNano: number;\n\n  /** Span attributes */\n  attributes: IKeyValue[];\n\n  /** Span droppedAttributesCount */\n  droppedAttributesCount: number\n\n  /** Span events */\n  events: IEvent[];\n\n  /** Span droppedEventsCount */\n  droppedEventsCount: number\n\n  /** Span links */\n  links: ILink[];\n\n  /** Span droppedLinksCount */\n  droppedLinksCount: number\n\n  /** Span status */\n  status: IStatus;\n}\n\n/**\n * SpanKind is the type of span. Can be used to specify additional relationships between spans\n * in addition to a parent/child relationship.\n */\nexport enum ESpanKind {\n  /** Unspecified. Do NOT use as default. Implementations MAY assume SpanKind to be INTERNAL when receiving UNSPECIFIED. */\n  SPAN_KIND_UNSPECIFIED = 0,\n\n  /** Indicates that the span represents an internal operation within an application,\n    * as opposed to an operation happening at the boundaries. Default value.\n    */\n  SPAN_KIND_INTERNAL = 1,\n\n  /** Indicates that the span covers server-side handling of an RPC or other\n    * remote network request.\n    */\n  SPAN_KIND_SERVER = 2,\n\n  /** Indicates that the span describes a request to some remote service.\n    */\n  SPAN_KIND_CLIENT = 3,\n\n  /** Indicates that the span describes a producer sending a message to a broker.\n    * Unlike CLIENT and SERVER, there is often no direct critical path latency relationship\n    * between producer and consumer spans. A PRODUCER span ends when the message was accepted\n    * by the broker while the logical processing of the message might span a much longer time.\n    */\n  SPAN_KIND_PRODUCER = 4,\n\n  /** Indicates that the span describes consumer receiving a message from a broker.\n    * Like the PRODUCER kind, there is often no direct critical path latency relationship\n    * between producer and consumer spans.\n    */\n  SPAN_KIND_CONSUMER = 5,\n}\n\n/** Properties of a Status. */\nexport interface IStatus {\n  /** Status message */\n  message?: string;\n\n  /** Status code */\n  code: EStatusCode;\n}\n\n/** StatusCode enum. */\nexport const enum EStatusCode {\n  /** The default status. */\n  STATUS_CODE_UNSET = 0,\n  /** The Span has been evaluated by an Application developers or Operator to have completed successfully. */\n  STATUS_CODE_OK = 1,\n  /** The Span contains an error. */\n  STATUS_CODE_ERROR = 2,\n}\n\n/** Properties of an Event. */\nexport interface IEvent {\n  /** Event timeUnixNano */\n  timeUnixNano: number;\n\n  /** Event name */\n  name: string;\n\n  /** Event attributes */\n  attributes: IKeyValue[];\n\n  /** Event droppedAttributesCount */\n  droppedAttributesCount: number;\n}\n\n/** Properties of a Link. */\nexport interface ILink {\n  /** Link traceId */\n  traceId: string;\n\n  /** Link spanId */\n  spanId: string;\n\n  /** Link traceState */\n  traceState?: string;\n\n  /** Link attributes */\n  attributes: IKeyValue[];\n\n  /** Link droppedAttributesCount */\n  droppedAttributesCount: number;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { Resource } from '@opentelemetry/resources';\nimport type { ReadableSpan } from '@opentelemetry/sdk-trace-base';\nimport { toAttributes } from '../common/internal';\nimport { sdkSpanToOtlpSpan } from './internal';\nimport { IExportTraceServiceRequest, IResourceSpans, IScopeSpans } from './types';\n\nexport function createExportTraceServiceRequest(spans: ReadableSpan[], useHex?: boolean): IExportTraceServiceRequest {\n  return {\n    resourceSpans: spanRecordsToResourceSpans(spans, useHex)\n  };\n}\n\nfunction createResourceMap(readableSpans: ReadableSpan[]) {\n  const resourceMap: Map<Resource, Map<string, ReadableSpan[]>> = new Map();\n  for (const record of readableSpans) {\n    let ilmMap = resourceMap.get(record.resource);\n\n    if (!ilmMap) {\n      ilmMap = new Map();\n      resourceMap.set(record.resource, ilmMap);\n    }\n\n    // TODO this is duplicated in basic tracer. Consolidate on a common helper in core\n    const instrumentationLibraryKey = `${record.instrumentationLibrary.name}@${record.instrumentationLibrary.version || ''}:${record.instrumentationLibrary.schemaUrl || ''}`;\n    let records = ilmMap.get(instrumentationLibraryKey);\n\n    if (!records) {\n      records = [];\n      ilmMap.set(instrumentationLibraryKey, records);\n    }\n\n    records.push(record);\n  }\n\n  return resourceMap;\n}\n\nfunction spanRecordsToResourceSpans(readableSpans: ReadableSpan[], useHex?: boolean): IResourceSpans[] {\n  const resourceMap = createResourceMap(readableSpans);\n  const out: IResourceSpans[] = [];\n\n  const entryIterator = resourceMap.entries();\n  let entry = entryIterator.next();\n  while (!entry.done) {\n    const [resource, ilmMap] = entry.value;\n    const scopeResourceSpans: IScopeSpans[] = [];\n    const ilmIterator = ilmMap.values();\n    let ilmEntry = ilmIterator.next();\n    while (!ilmEntry.done) {\n      const scopeSpans = ilmEntry.value;\n      if (scopeSpans.length > 0) {\n        const { name, version, schemaUrl } = scopeSpans[0].instrumentationLibrary;\n        const spans = scopeSpans.map(readableSpan => sdkSpanToOtlpSpan(readableSpan, useHex));\n\n        scopeResourceSpans.push({\n          scope: { name, version },\n          spans: spans,\n          schemaUrl: schemaUrl\n        });\n      }\n      ilmEntry = ilmIterator.next();\n    }\n    // TODO SDK types don't provide resource schema URL at this time\n    const transformedSpans: IResourceSpans = {\n      resource: {\n        attributes: toAttributes(resource.attributes),\n        droppedAttributesCount: 0,\n      },\n      scopeSpans: scopeResourceSpans,\n      schemaUrl: undefined\n    };\n\n    out.push(transformedSpans);\n    entry = entryIterator.next();\n  }\n\n  return out;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { SpanAttributes } from '@opentelemetry/api';\nimport { IAnyValue, IKeyValue } from './types';\n\nexport function toAttributes(\n  attributes: SpanAttributes\n): IKeyValue[] {\n  return Object.keys(attributes).map(key => toKeyValue(key, attributes[key]));\n}\n\nexport function toKeyValue(\n  key: string,\n  value: unknown\n): IKeyValue {\n  return {\n    key: key,\n    value: toAnyValue(value),\n  };\n}\n\nexport function toAnyValue(value: unknown): IAnyValue {\n  const t = typeof value;\n  if (t === 'string') return { stringValue: value as string };\n  if (t === 'number') {\n    if (!Number.isInteger(value)) return { doubleValue: value as number };\n    return { intValue: value as number };\n  }\n  if (t === 'boolean') return { boolValue: value as boolean };\n  if (value instanceof Uint8Array) return { bytesValue: value };\n  if (Array.isArray(value)) return { arrayValue: { values: value.map(toAnyValue) } };\n  if (t === 'object' && value != null) return { kvlistValue: { values: Object.entries(value as object).map(([k, v]) => toKeyValue(k, v)) } };\n\n  return {};\n}\n\nexport function hexToBuf(hex: string): Uint8Array | undefined {\n  const ints = hex.match(/[\\da-f]{2}/gi)?.map(h => parseInt(h, 16));\n  return ints && new Uint8Array(ints);\n}\n\nfunction i2hex(i: number): string {\n  return ('0' + i.toString(16)).slice(-2);\n}\n\nexport function bufToHex(buf?: Uint8Array | null): string | undefined {\n  if (buf == null || buf.length === 0) return undefined;\n  return Array.from(buf).map(i2hex).join('');\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { Link } from '@opentelemetry/api';\nimport { hrTimeToNanoseconds } from '@opentelemetry/core';\nimport type { ReadableSpan, TimedEvent } from '@opentelemetry/sdk-trace-base';\nimport { toAttributes } from '../common/internal';\nimport { EStatusCode, IEvent, ILink, ISpan } from './types';\nimport * as core from '@opentelemetry/core';\n\nexport function sdkSpanToOtlpSpan(\n  span: ReadableSpan,\n  useHex?: boolean\n): ISpan {\n  const ctx = span.spanContext();\n  const status = span.status;\n  const parentSpanId = useHex? span.parentSpanId : span.parentSpanId != null? core.hexToBase64(span.parentSpanId): undefined;\n  return {\n    traceId: useHex? ctx.traceId : core.hexToBase64(ctx.traceId),\n    spanId: useHex? ctx.spanId : core.hexToBase64(ctx.spanId),\n    parentSpanId: parentSpanId,\n    name: span.name,\n    // Span kind is offset by 1 because the API does not define a value for unset\n    kind: span.kind == null ? 0 : span.kind + 1,\n    startTimeUnixNano: hrTimeToNanoseconds(span.startTime),\n    endTimeUnixNano: hrTimeToNanoseconds(span.endTime),\n    attributes: toAttributes(span.attributes),\n    droppedAttributesCount: 0,\n    events: span.events.map(toOtlpSpanEvent),\n    droppedEventsCount: 0,\n    status: {\n      // API and proto enums share the same values\n      code: status.code as unknown as EStatusCode,\n      message: status.message,\n    },\n    links: span.links.map(link => toOtlpLink(link, useHex)),\n    droppedLinksCount: 0,\n  };\n}\n\nexport function toOtlpLink(link: Link, useHex?: boolean): ILink {\n  return {\n    attributes: link.attributes ? toAttributes(link.attributes) : [],\n    spanId: useHex? link.context.spanId : core.hexToBase64(link.context.spanId),\n    traceId: useHex? link.context.traceId : core.hexToBase64(link.context.traceId),\n    droppedAttributesCount: 0,\n  };\n}\n\nexport function toOtlpSpanEvent(\n  timedEvent: TimedEvent\n): IEvent {\n  return {\n    attributes: timedEvent.attributes ? toAttributes(timedEvent.attributes) : [],\n    name: timedEvent.name,\n    timeUnixNano: hrTimeToNanoseconds(timedEvent.time),\n    droppedAttributesCount: 0,\n  };\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { ResourceMetrics } from '@opentelemetry/sdk-metrics';\nimport type { IExportMetricsServiceRequest } from './types';\nimport { toResourceMetrics } from './internal';\n\nexport function createExportMetricsServiceRequest(resourceMetrics: ResourceMetrics[]): IExportMetricsServiceRequest {\n  return {\n    resourceMetrics: resourceMetrics.map(metrics => toResourceMetrics(metrics))\n  };\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ValueType } from '@opentelemetry/api-metrics';\nimport { hrTimeToNanoseconds } from '@opentelemetry/core';\nimport {\n  AggregationTemporality,\n  DataPoint,\n  DataPointType,\n  Histogram,\n  MetricData,\n  ResourceMetrics,\n  ScopeMetrics\n} from '@opentelemetry/sdk-metrics';\nimport { toAttributes } from '../common/internal';\nimport {\n  EAggregationTemporality,\n  IHistogramDataPoint,\n  IMetric,\n  INumberDataPoint,\n  IResourceMetrics,\n  IScopeMetrics\n} from './types';\n\nexport function toResourceMetrics(resourceMetrics: ResourceMetrics): IResourceMetrics {\n  return {\n    resource: {\n      attributes: toAttributes(resourceMetrics.resource.attributes),\n      droppedAttributesCount: 0\n    },\n    schemaUrl: undefined, // TODO: Schema Url does not exist yet in the SDK.\n    scopeMetrics: toScopeMetrics(resourceMetrics.scopeMetrics)\n  };\n}\n\nexport function toScopeMetrics(scopeMetrics: ScopeMetrics[]): IScopeMetrics[] {\n  return Array.from(scopeMetrics.map(metrics => {\n    const scopeMetrics: IScopeMetrics = {\n      scope: {\n        name: metrics.scope.name,\n        version: metrics.scope.version,\n      },\n      metrics: metrics.metrics.map(metricData => toMetric(metricData)),\n      schemaUrl: metrics.scope.schemaUrl\n    };\n    return scopeMetrics;\n  }));\n}\n\nexport function toMetric(metricData: MetricData): IMetric {\n  const out: IMetric = {\n    name: metricData.descriptor.name,\n    description: metricData.descriptor.description,\n    unit: metricData.descriptor.unit,\n  };\n\n  const aggregationTemporality = toAggregationTemporality(metricData.aggregationTemporality);\n\n  if (metricData.dataPointType === DataPointType.SUM) {\n    out.sum = {\n      aggregationTemporality,\n      isMonotonic: metricData.isMonotonic,\n      dataPoints: toSingularDataPoints(metricData)\n    };\n  } else if (metricData.dataPointType === DataPointType.GAUGE) {\n    // Instrument is a gauge.\n    out.gauge = {\n      dataPoints: toSingularDataPoints(metricData)\n    };\n  } else if (metricData.dataPointType === DataPointType.HISTOGRAM) {\n    out.histogram = {\n      aggregationTemporality,\n      dataPoints: toHistogramDataPoints(metricData)\n    };\n  }\n\n  return out;\n}\n\nfunction toSingularDataPoint(dataPoint: DataPoint<number> | DataPoint<Histogram>, valueType: ValueType) {\n  const out: INumberDataPoint = {\n    attributes: toAttributes(dataPoint.attributes),\n    startTimeUnixNano: hrTimeToNanoseconds(\n      dataPoint.startTime\n    ),\n    timeUnixNano: hrTimeToNanoseconds(\n      dataPoint.endTime\n    ),\n  };\n\n  if (valueType === ValueType.INT) {\n    out.asInt = dataPoint.value as number;\n  } else if (valueType === ValueType.DOUBLE) {\n    out.asDouble = dataPoint.value as number;\n  }\n\n  return out;\n}\n\nfunction toSingularDataPoints(\n  metricData: MetricData\n): INumberDataPoint[] {\n  return metricData.dataPoints.map(dataPoint => {\n    return toSingularDataPoint(dataPoint, metricData.descriptor.valueType);\n  });\n}\n\nfunction toHistogramDataPoints(\n  metricData: MetricData\n): IHistogramDataPoint[] {\n  return metricData.dataPoints.map(dataPoint => {\n    const histogram = dataPoint.value as Histogram;\n    return {\n      attributes: toAttributes(dataPoint.attributes),\n      bucketCounts: histogram.buckets.counts,\n      explicitBounds: histogram.buckets.boundaries,\n      count: histogram.count,\n      sum: histogram.sum,\n      min: histogram.min,\n      max: histogram.max,\n      startTimeUnixNano: hrTimeToNanoseconds(dataPoint.startTime),\n      timeUnixNano: hrTimeToNanoseconds(\n        dataPoint.endTime\n      ),\n    };\n  });\n}\n\nfunction toAggregationTemporality(\n  temporality: AggregationTemporality,\n): EAggregationTemporality {\n  if (temporality === AggregationTemporality.DELTA) {\n    return EAggregationTemporality.AGGREGATION_TEMPORALITY_DELTA;\n  }\n\n  if (temporality === AggregationTemporality.CUMULATIVE) {\n    return EAggregationTemporality.AGGREGATION_TEMPORALITY_CUMULATIVE;\n  }\n\n  return EAggregationTemporality.AGGREGATION_TEMPORALITY_UNSPECIFIED;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './NoopMeter';\nexport * from './NoopMeterProvider';\nexport * from './types/Meter';\nexport * from './types/MeterProvider';\nexport * from './types/Metric';\nexport * from './types/ObservableResult';\n\nimport { MetricsAPI } from './api/metrics';\n/** Entrypoint for metrics API */\nexport const metrics = MetricsAPI.getInstance();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Meter, MeterOptions } from '../types/Meter';\nimport { MeterProvider } from '../types/MeterProvider';\nimport { NOOP_METER_PROVIDER } from '../NoopMeterProvider';\nimport {\n  API_BACKWARDS_COMPATIBILITY_VERSION,\n  GLOBAL_METRICS_API_KEY,\n  makeGetter,\n  _global,\n} from './global-utils';\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Metrics API\n */\nexport class MetricsAPI {\n  private static _instance?: MetricsAPI;\n\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  private constructor() {}\n\n  /** Get the singleton instance of the Metrics API */\n  public static getInstance(): MetricsAPI {\n    if (!this._instance) {\n      this._instance = new MetricsAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Set the current global meter. Returns the initialized global meter provider.\n   */\n  public setGlobalMeterProvider(provider: MeterProvider): MeterProvider {\n    if (_global[GLOBAL_METRICS_API_KEY]) {\n      // global meter provider has already been set\n      return this.getMeterProvider();\n    }\n\n    _global[GLOBAL_METRICS_API_KEY] = makeGetter(\n      API_BACKWARDS_COMPATIBILITY_VERSION,\n      provider,\n      NOOP_METER_PROVIDER\n    );\n\n    return provider;\n  }\n\n  /**\n   * Returns the global meter provider.\n   */\n  public getMeterProvider(): MeterProvider {\n    return (\n      _global[GLOBAL_METRICS_API_KEY]?.(API_BACKWARDS_COMPATIBILITY_VERSION) ??\n      NOOP_METER_PROVIDER\n    );\n  }\n\n  /**\n   * Returns a meter from the global meter provider.\n   */\n  public getMeter(name: string, version?: string, options?: MeterOptions): Meter {\n    return this.getMeterProvider().getMeter(name, version, options);\n  }\n\n  /** Remove the global meter provider */\n  public disable(): void {\n    delete _global[GLOBAL_METRICS_API_KEY];\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Meter, MeterOptions } from './types/Meter';\nimport { MeterProvider } from './types/MeterProvider';\nimport { NOOP_METER } from './NoopMeter';\n\n/**\n * An implementation of the {@link MeterProvider} which returns an impotent Meter\n * for all calls to `getMeter`\n */\nexport class NoopMeterProvider implements MeterProvider {\n  getMeter(_name: string, _version?: string, _options?: MeterOptions): Meter {\n    return NOOP_METER;\n  }\n}\n\nexport const NOOP_METER_PROVIDER = new NoopMeterProvider();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Meter } from './types/Meter';\nimport {\n  BatchObservableCallback,\n  Counter,\n  Histogram,\n  MetricOptions,\n  ObservableCallback,\n  ObservableCounter,\n  ObservableGauge,\n  ObservableUpDownCounter,\n  UpDownCounter,\n  MetricAttributes,\n  Observable,\n} from './types/Metric';\n\n/**\n * NoopMeter is a noop implementation of the {@link Meter} interface. It reuses\n * constant NoopMetrics for all of its methods.\n */\nexport class NoopMeter implements Meter {\n  constructor() {}\n\n  /**\n   * @see {@link Meter.createHistogram}\n   */\n  createHistogram(_name: string, _options?: MetricOptions): Histogram {\n    return NOOP_HISTOGRAM_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createCounter}\n   */\n  createCounter(_name: string, _options?: MetricOptions): Counter {\n    return NOOP_COUNTER_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createUpDownCounter}\n   */\n  createUpDownCounter(_name: string, _options?: MetricOptions): UpDownCounter {\n    return NOOP_UP_DOWN_COUNTER_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createObservableGauge}\n   */\n  createObservableGauge(\n    _name: string,\n    _options?: MetricOptions,\n  ): ObservableGauge {\n    return NOOP_OBSERVABLE_GAUGE_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createObservableCounter}\n   */\n  createObservableCounter(\n    _name: string,\n    _options?: MetricOptions,\n  ): ObservableCounter {\n    return NOOP_OBSERVABLE_COUNTER_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createObservableUpDownCounter}\n   */\n  createObservableUpDownCounter(\n    _name: string,\n    _options?: MetricOptions,\n  ): ObservableUpDownCounter {\n    return NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.addBatchObservableCallback}\n   */\n  addBatchObservableCallback(_callback: BatchObservableCallback, _observables: Observable[]): void {}\n\n  /**\n   * @see {@link Meter.removeBatchObservableCallback}\n   */\n  removeBatchObservableCallback(_callback: BatchObservableCallback): void {}\n}\n\nexport class NoopMetric {}\n\nexport class NoopCounterMetric extends NoopMetric implements Counter {\n  add(_value: number, _attributes: MetricAttributes): void {}\n}\n\nexport class NoopUpDownCounterMetric extends NoopMetric implements UpDownCounter {\n  add(_value: number, _attributes: MetricAttributes): void {}\n}\n\nexport class NoopHistogramMetric extends NoopMetric implements Histogram {\n  record(_value: number, _attributes: MetricAttributes): void {}\n}\n\nexport class NoopObservableMetric {\n  addCallback(_callback: ObservableCallback) {}\n  removeCallback(_callback: ObservableCallback) {}\n}\n\nexport class NoopObservableCounterMetric extends NoopObservableMetric implements ObservableCounter {}\nexport class NoopObservableGaugeMetric extends NoopObservableMetric implements ObservableGauge {}\nexport class NoopObservableUpDownCounterMetric extends NoopObservableMetric implements ObservableUpDownCounter {}\n\nexport const NOOP_METER = new NoopMeter();\n\n// Synchronous instruments\nexport const NOOP_COUNTER_METRIC = new NoopCounterMetric();\nexport const NOOP_HISTOGRAM_METRIC = new NoopHistogramMetric();\nexport const NOOP_UP_DOWN_COUNTER_METRIC = new NoopUpDownCounterMetric();\n\n// Asynchronous instruments\nexport const NOOP_OBSERVABLE_COUNTER_METRIC = new NoopObservableCounterMetric();\nexport const NOOP_OBSERVABLE_GAUGE_METRIC = new NoopObservableGaugeMetric();\nexport const NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC = new NoopObservableUpDownCounterMetric();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MeterProvider } from '../types/MeterProvider';\nimport { _globalThis } from '../platform';\n\nexport const GLOBAL_METRICS_API_KEY = Symbol.for(\n  'io.opentelemetry.js.api.metrics'\n);\n\ntype Get<T> = (version: number) => T;\ntype OtelGlobal = Partial<{\n  [GLOBAL_METRICS_API_KEY]: Get<MeterProvider>;\n}>;\n\nexport const _global = _globalThis as OtelGlobal;\n\n/**\n * Make a function which accepts a version integer and returns the instance of an API if the version\n * is compatible, or a fallback version (usually NOOP) if it is not.\n *\n * @param requiredVersion Backwards compatibility version which is required to return the instance\n * @param instance Instance which should be returned if the required version is compatible\n * @param fallback Fallback instance, usually NOOP, which will be returned if the required version is not compatible\n */\nexport function makeGetter<T>(\n  requiredVersion: number,\n  instance: T,\n  fallback: T\n): Get<T> {\n  return (version: number): T =>\n    version === requiredVersion ? instance : fallback;\n}\n\n/**\n * A number which should be incremented each time a backwards incompatible\n * change is made to the API. This number is used when an API package\n * attempts to access the global API to ensure it is getting a compatible\n * version. If the global API is not compatible with the API package\n * attempting to get it, a NOOP API implementation will be returned.\n */\nexport const API_BACKWARDS_COMPATIBILITY_VERSION = 4;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './globalThis';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Updates to this file should also be replicated to @opentelemetry/api and\n// @opentelemetry/core too.\n\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport const _globalThis: typeof globalThis =\n  typeof globalThis === 'object' ? globalThis :\n    typeof self === 'object' ? self :\n      typeof window === 'object' ? window :\n        typeof global === 'object' ? global :\n  {} as typeof globalThis;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BatchObservableCallback,\n  Counter,\n  Histogram,\n  MetricOptions,\n  Observable,\n  ObservableCounter,\n  ObservableGauge,\n  ObservableUpDownCounter,\n  UpDownCounter,\n} from './Metric';\n\n/**\n * An interface describes additional metadata of a meter.\n */\nexport interface MeterOptions {\n  /**\n   * The schemaUrl of the meter or instrumentation library\n   */\n  schemaUrl?: string;\n}\n\n/**\n * An interface to allow the recording metrics.\n *\n * {@link Metric}s are used for recording pre-defined aggregation (`Counter`),\n * or raw values (`Histogram`) in which the aggregation and attributes\n * for the exported metric are deferred.\n */\nexport interface Meter {\n  /**\n   * Creates and returns a new `Histogram`.\n   * @param name the name of the metric.\n   * @param [options] the metric options.\n   */\n  createHistogram(name: string, options?: MetricOptions): Histogram;\n\n  /**\n   * Creates a new `Counter` metric. Generally, this kind of metric when the\n   * value is a quantity, the sum is of primary interest, and the event count\n   * and value distribution are not of primary interest.\n   * @param name the name of the metric.\n   * @param [options] the metric options.\n   */\n  createCounter(name: string, options?: MetricOptions): Counter;\n\n  /**\n   * Creates a new `UpDownCounter` metric. UpDownCounter is a synchronous\n   * instrument and very similar to Counter except that Add(increment)\n   * supports negative increments. It is generally useful for capturing changes\n   * in an amount of resources used, or any quantity that rises and falls\n   * during a request.\n   * Example uses for UpDownCounter:\n   * <ol>\n   *   <li> count the number of active requests. </li>\n   *   <li> count memory in use by instrumenting new and delete. </li>\n   *   <li> count queue size by instrumenting enqueue and dequeue. </li>\n   *   <li> count semaphore up and down operations. </li>\n   * </ol>\n   *\n   * @param name the name of the metric.\n   * @param [options] the metric options.\n   */\n  createUpDownCounter(name: string, options?: MetricOptions): UpDownCounter;\n\n  /**\n   * Creates a new `ObservableGauge` metric.\n   *\n   * The callback SHOULD be safe to be invoked concurrently.\n   *\n   * @param name the name of the metric.\n   * @param [options] the metric options.\n   */\n  createObservableGauge(\n    name: string,\n    options?: MetricOptions\n  ): ObservableGauge;\n\n  /**\n   * Creates a new `ObservableCounter` metric.\n   *\n   * The callback SHOULD be safe to be invoked concurrently.\n   *\n   * @param name the name of the metric.\n   * @param [options] the metric options.\n   */\n  createObservableCounter(\n    name: string,\n    options?: MetricOptions\n  ): ObservableCounter;\n\n  /**\n   * Creates a new `ObservableUpDownCounter` metric.\n   *\n   * The callback SHOULD be safe to be invoked concurrently.\n   *\n   * @param name the name of the metric.\n   * @param [options] the metric options.\n   */\n  createObservableUpDownCounter(\n    name: string,\n    options?: MetricOptions\n  ): ObservableUpDownCounter;\n\n  /**\n   * Sets up a function that will be called whenever a metric collection is\n   * initiated.\n   *\n   * If the function is already in the list of callbacks for this Observable,\n   * the function is not added a second time.\n   *\n   * Only the associated observables can be observed in the callback.\n   * Measurements of observables that are not associated observed in the\n   * callback are dropped.\n   *\n   * @param callback the batch observable callback\n   * @param observables the observables associated with this batch observable callback\n   */\n  addBatchObservableCallback(callback: BatchObservableCallback, observables: Observable[]): void;\n\n  /**\n   * Removes a callback previously registered with {@link Meter.addBatchObservableCallback}.\n   *\n   * The callback to be removed is identified using a combination of the callback itself,\n   * and the set of the observables associated with it.\n   *\n   * @param callback the batch observable callback\n   * @param observables the observables associated with this batch observable callback\n   */\n  removeBatchObservableCallback(callback: BatchObservableCallback, observables: Observable[]): void;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Meter, MeterOptions } from './Meter';\n\n/**\n * A registry for creating named {@link Meter}s.\n */\nexport interface MeterProvider {\n  /**\n   * Returns a Meter, creating one if one with the given name, version, and\n   * schemaUrl pair is not already created.\n   *\n   * @param name The name of the meter or instrumentation library.\n   * @param version The version of the meter or instrumentation library.\n   * @param options The options of the meter or instrumentation library.\n   * @returns Meter A Meter with the given name and version\n   */\n  getMeter(name: string, version?: string, options?: MeterOptions): Meter;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, SpanAttributes, SpanAttributeValue } from '@opentelemetry/api';\nimport { BatchObservableResult, ObservableResult } from './ObservableResult';\n\n/**\n * Options needed for metric creation\n */\nexport interface MetricOptions {\n  /**\n   * The description of the Metric.\n   * @default ''\n   */\n  description?: string;\n\n  /**\n   * The unit of the Metric values.\n   * @default ''\n   */\n  unit?: string;\n\n  /**\n   * Indicates the type of the recorded value.\n   * @default {@link ValueType.DOUBLE}\n   */\n  valueType?: ValueType;\n}\n\n/** The Type of value. It describes how the data is reported. */\nexport enum ValueType {\n  INT,\n  DOUBLE,\n}\n\n/**\n * Counter is the most common synchronous instrument. This instrument supports\n * an `Add(increment)` function for reporting a sum, and is restricted to\n * non-negative increments. The default aggregation is Sum, as for any additive\n * instrument.\n *\n * Example uses for Counter:\n * <ol>\n *   <li> count the number of bytes received. </li>\n *   <li> count the number of requests completed. </li>\n *   <li> count the number of accounts created. </li>\n *   <li> count the number of checkpoints run. </li>\n *   <li> count the number of 5xx errors. </li>\n * <ol>\n */\nexport interface Counter {\n  /**\n   * Increment value of counter by the input. Inputs may not be negative.\n   */\n  add(value: number, attributes?: MetricAttributes, context?: Context): void;\n}\n\nexport interface UpDownCounter {\n  /**\n   * Increment value of counter by the input. Inputs may be negative.\n   */\n  add(value: number, attributes?: MetricAttributes, context?: Context): void;\n}\n\nexport interface Histogram {\n  /**\n   * Records a measurement. Value of the measurement must not be negative.\n   */\n  record(value: number, attributes?: MetricAttributes, context?: Context): void;\n}\n\n// api.SpanAttributes instead of api.Attributes is used here for api package backward compatibility.\n/**\n * Attributes is a map from string to attribute values.\n *\n * Note: only the own enumerable keys are counted as valid attribute keys.\n */\nexport type MetricAttributes = SpanAttributes;\n\n// api.SpanAttributeValue instead of api.AttributeValue is used here for api package backward compatibility.\n/**\n * Attribute values may be any non-nullish primitive value except an object.\n *\n * null or undefined attribute values are invalid and will result in undefined behavior.\n */\nexport type MetricAttributeValue = SpanAttributeValue;\n\n/**\n * The observable callback for Observable instruments.\n */\nexport type ObservableCallback = (observableResult: ObservableResult) => void | Promise<void>;\n\n/**\n * The observable callback for a batch of Observable instruments.\n */\nexport type BatchObservableCallback = (observableResult: BatchObservableResult) => void | Promise<void>;\n\nexport interface Observable {\n  /**\n   * Sets up a function that will be called whenever a metric collection is initiated.\n   *\n   * If the function is already in the list of callbacks for this Observable, the function is not added a second time.\n   */\n  addCallback(callback: ObservableCallback): void;\n\n  /**\n   * Removes a callback previously registered with {@link Observable.addCallback}.\n   */\n  removeCallback(callback: ObservableCallback): void;\n}\n\nexport type ObservableCounter = Observable;\nexport type ObservableUpDownCounter = Observable;\nexport type ObservableGauge = Observable;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MetricAttributes, Observable } from './Metric';\n\n/**\n * Interface that is being used in callback function for Observable Metric.\n */\nexport interface ObservableResult {\n  /**\n   * Observe a measurement of the value associated with the given attributes.\n   *\n   * @param value The value to be observed.\n   * @param attributes The attributes associated with the value. If more than\n   * one values associated with the same attributes values, SDK may pick the\n   * last one or simply drop the entire observable result.\n   */\n  observe(value: number, attributes?: MetricAttributes): void;\n}\n\n/**\n * Interface that is being used in batch observable callback function.\n */\nexport interface BatchObservableResult {\n  /**\n   * Observe a measurement of the value associated with the given attributes.\n   *\n   * @param metric The observable metric to be observed.\n   * @param value The value to be observed.\n   * @param attributes The attributes associated with the value. If more than\n   * one values associated with the same attributes values, SDK may pick the\n   * last one or simply drop the entire observable result.\n   */\n  observe(metric: Observable, value: number, attributes?: MetricAttributes): void;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { Sum, LastValue, Histogram } from './aggregator/types';\nexport * from './export/AggregationTemporality';\nexport * from './export/MetricData';\nexport * from './export/MetricExporter';\nexport * from './export/MetricProducer';\nexport * from './export/MetricReader';\nexport * from './export/PeriodicExportingMetricReader';\nexport * from './export/InMemoryMetricExporter';\nexport * from './export/ConsoleMetricExporter';\nexport { InstrumentDescriptor, InstrumentType } from './InstrumentDescriptor';\nexport * from './Meter';\nexport * from './MeterProvider';\nexport * from './ObservableResult';\nexport { TimeoutError } from './utils';\nexport * from './view/Aggregation';\nexport * from './view/View';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentType } from '../InstrumentDescriptor';\n\n/**\n * AggregationTemporality indicates the way additive quantities are expressed.\n */\nexport enum AggregationTemporality {\n  DELTA,\n  CUMULATIVE,\n}\n\nexport type AggregationTemporalitySelector = (instrumentType: InstrumentType) => AggregationTemporality;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HrTime } from '@opentelemetry/api';\nimport { MetricAttributes } from '@opentelemetry/api-metrics';\nimport { InstrumentationScope } from '@opentelemetry/core';\nimport { Resource } from '@opentelemetry/resources';\nimport { InstrumentDescriptor } from '../InstrumentDescriptor';\nimport { AggregationTemporality } from './AggregationTemporality';\nimport { Histogram } from '../aggregator/types';\n\n/**\n * Basic metric data fields.\n */\nexport interface BaseMetricData {\n  readonly descriptor: InstrumentDescriptor;\n  readonly aggregationTemporality: AggregationTemporality;\n  /**\n   * DataPointType of the metric instrument.\n   */\n  readonly dataPointType: DataPointType;\n}\n\n/**\n * Represents a metric data aggregated by either a LastValueAggregation or\n * SumAggregation.\n */\nexport interface SumMetricData extends BaseMetricData {\n  readonly dataPointType: DataPointType.SUM;\n  readonly dataPoints: DataPoint<number>[];\n  readonly isMonotonic: boolean;\n}\n\nexport interface GaugeMetricData extends BaseMetricData {\n  readonly dataPointType: DataPointType.GAUGE;\n  readonly dataPoints: DataPoint<number>[];\n}\n\n/**\n * Represents a metric data aggregated by a HistogramAggregation.\n */\nexport interface HistogramMetricData extends BaseMetricData {\n  readonly dataPointType: DataPointType.HISTOGRAM;\n  readonly dataPoints: DataPoint<Histogram>[];\n}\n\n/**\n * Represents an aggregated metric data.\n */\nexport type MetricData = SumMetricData | GaugeMetricData | HistogramMetricData;\n\nexport interface ScopeMetrics {\n  scope: InstrumentationScope;\n  metrics: MetricData[];\n}\n\nexport interface ResourceMetrics {\n  resource: Resource;\n  scopeMetrics: ScopeMetrics[];\n}\n\n/**\n * Represents the collection result of the metrics. If there are any\n * non-critical errors in the collection, like throwing in a single observable\n * callback, these errors are aggregated in the {@link CollectionResult.errors}\n * array and other successfully collected metrics are returned.\n */\nexport interface CollectionResult {\n  /**\n   * Collected metrics.\n   */\n  resourceMetrics: ResourceMetrics;\n  /**\n   * Arbitrary JavaScript exception values.\n   */\n  errors: unknown[];\n}\n\n/**\n * The aggregated point data type.\n */\nexport enum DataPointType {\n  /**\n   * A histogram data point contains a histogram statistics of collected\n   * values with a list of explicit bucket boundaries and statistics such\n   * as min, max, count, and sum of all collected values.\n   */\n  HISTOGRAM,\n  /**\n   * An exponential histogram data point contains a histogram statistics of\n   * collected values where bucket boundaries are automatically calculated\n   * using an exponential function, and statistics such as min, max, count,\n   * and sum of all collected values.\n   */\n  EXPONENTIAL_HISTOGRAM,\n  /**\n   * A gauge metric data point has only a single numeric value.\n   */\n  GAUGE,\n  /**\n   * A sum metric data point has a single numeric value and a\n   * monotonicity-indicator.\n   */\n  SUM\n}\n\n/**\n * Represents an aggregated point data with start time, end time and their\n * associated attributes and points.\n */\nexport interface DataPoint<T> {\n  /**\n   * The start epoch timestamp of the DataPoint, usually the time when\n   * the metric was created when the preferred AggregationTemporality is\n   * CUMULATIVE, or last collection time otherwise.\n   */\n  readonly startTime: HrTime;\n  /**\n   * The end epoch timestamp when data were collected, usually it represents\n   * the moment when `MetricReader.collect` was called.\n   */\n  readonly endTime: HrTime;\n  /**\n   * The attributes associated with this DataPoint.\n   */\n  readonly attributes: MetricAttributes;\n  /**\n   * The value for this DataPoint. The type of the value is indicated by the\n   * {@link DataPointType}.\n   */\n  readonly value: T;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AggregationTemporality } from './AggregationTemporality';\nimport { ResourceMetrics } from './MetricData';\nimport {\n  ExportResult,\n} from '@opentelemetry/core';\nimport { InstrumentType } from '../InstrumentDescriptor';\n\n/**\n * An interface that allows different metric services to export recorded data\n * in their own format.\n *\n * To export data this MUST be registered to the Metrics SDK with a MetricReader.\n */\nexport interface PushMetricExporter {\n  /**\n   * Called to export sampled {@link ResourceMetrics}.\n   * @param metrics the metric data to be exported.\n   */\n  export(metrics: ResourceMetrics, resultCallback: (result: ExportResult) => void): void;\n\n  /**\n   * Ensure that the export of any metrics the exporter has received is\n   * completed before the returned promise is settled.\n   */\n  forceFlush(): Promise<void>;\n\n  /**\n   * Select the {@link AggregationTemporality} for the given\n   * {@link InstrumentType} for this exporter.\n   */\n  selectAggregationTemporality(instrumentType: InstrumentType): AggregationTemporality;\n\n  /**\n   * Returns a promise which resolves when the last exportation is completed.\n   * Further calls to {@link PushMetricExporter.export} may not export the\n   * data.\n   */\n  shutdown(): Promise<void>;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CollectionResult } from './MetricData';\n\nexport interface MetricCollectOptions {\n  /**\n   * Timeout for the SDK to perform the involved asynchronous callback\n   * functions.\n   *\n   * If the callback functions failed to finish the observation in time,\n   * their results are discarded and an error is appended in the\n   * {@link CollectionResult.errors}.\n   */\n  timeoutMillis?: number;\n}\n\n/**\n * This is a public interface that represent an export state of a MetricReader.\n */\nexport interface MetricProducer {\n  /**\n   * Collects the metrics from the SDK. If there are asynchronous Instruments\n   * involved, their callback functions will be triggered.\n   */\n  collect(options?: MetricCollectOptions): Promise<CollectionResult>;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { AggregationTemporality } from './AggregationTemporality';\nimport { MetricProducer } from './MetricProducer';\nimport { CollectionResult } from './MetricData';\nimport { callWithTimeout } from '../utils';\nimport { InstrumentType } from '../InstrumentDescriptor';\nimport { CollectionOptions, ForceFlushOptions, ShutdownOptions } from '../types';\n\n/**\n * A registered reader of metrics that, when linked to a {@link MetricProducer}, offers global\n * control over metrics.\n */\nexport abstract class MetricReader {\n  // Tracks the shutdown state.\n  // TODO: use BindOncePromise here once a new version of @opentelemetry/core is available.\n  private _shutdown = false;\n  // MetricProducer used by this instance.\n  private _metricProducer?: MetricProducer;\n\n  /**\n   * Set the {@link MetricProducer} used by this instance.\n   *\n   * @param metricProducer\n   */\n  setMetricProducer(metricProducer: MetricProducer) {\n    if (this._metricProducer) {\n      throw new Error('MetricReader can not be bound to a MeterProvider again.');\n    }\n    this._metricProducer = metricProducer;\n    this.onInitialized();\n  }\n\n  /**\n   * Select the {@link AggregationTemporality} for the given\n   * {@link InstrumentType} for this reader.\n   */\n  abstract selectAggregationTemporality(instrumentType: InstrumentType): AggregationTemporality;\n\n  /**\n   * Handle once the SDK has initialized this {@link MetricReader}\n   * Overriding this method is optional.\n   */\n  protected onInitialized(): void {\n    // Default implementation is empty.\n  }\n\n  /**\n   * Handle a shutdown signal by the SDK.\n   *\n   * <p> For push exporters, this should shut down any intervals and close any open connections.\n   * @protected\n   */\n  protected abstract onShutdown(): Promise<void>;\n\n  /**\n   * Handle a force flush signal by the SDK.\n   *\n   * <p> In all scenarios metrics should be collected via {@link collect()}.\n   * <p> For push exporters, this should collect and report metrics.\n   * @protected\n   */\n  protected abstract onForceFlush(): Promise<void>;\n\n  /**\n   * Collect all metrics from the associated {@link MetricProducer}\n   */\n  async collect(options?: CollectionOptions): Promise<CollectionResult> {\n    if (this._metricProducer === undefined) {\n      throw new Error('MetricReader is not bound to a MetricProducer');\n    }\n\n    // Subsequent invocations to collect are not allowed. SDKs SHOULD return some failure for these calls.\n    if (this._shutdown) {\n      throw new Error('MetricReader is shutdown');\n    }\n\n    return this._metricProducer.collect({\n      timeoutMillis: options?.timeoutMillis,\n    });\n  }\n\n  /**\n   * Shuts down the metric reader, the promise will reject after the optional timeout or resolve after completion.\n   *\n   * <p> NOTE: this operation will continue even after the promise rejects due to a timeout.\n   * @param options options with timeout.\n   */\n  async shutdown(options?: ShutdownOptions): Promise<void> {\n    // Do not call shutdown again if it has already been called.\n    if (this._shutdown) {\n      api.diag.error('Cannot call shutdown twice.');\n      return;\n    }\n\n    // No timeout if timeoutMillis is undefined or null.\n    if (options?.timeoutMillis == null) {\n      await this.onShutdown();\n    } else {\n      await callWithTimeout(this.onShutdown(), options.timeoutMillis);\n    }\n\n    this._shutdown = true;\n  }\n\n  /**\n   * Flushes metrics read by this reader, the promise will reject after the optional timeout or resolve after completion.\n   *\n   * <p> NOTE: this operation will continue even after the promise rejects due to a timeout.\n   * @param options options with timeout.\n   */\n  async forceFlush(options?: ForceFlushOptions): Promise<void> {\n    if (this._shutdown) {\n      api.diag.warn('Cannot forceFlush on already shutdown MetricReader.');\n      return;\n    }\n\n    // No timeout if timeoutMillis is undefined or null.\n    if (options?.timeoutMillis == null) {\n      await this.onForceFlush();\n      return;\n    }\n\n    await callWithTimeout(this.onForceFlush(), options.timeoutMillis);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MetricAttributes } from '@opentelemetry/api-metrics';\nimport { InstrumentationScope } from '@opentelemetry/core';\n\nexport type Maybe<T> = T | undefined;\n\nexport function isNotNullish<T>(item: Maybe<T>): item is T {\n  return item !== undefined && item !== null;\n}\n\n/**\n * Converting the unordered attributes into unique identifier string.\n * @param attributes user provided unordered MetricAttributes.\n */\nexport function hashAttributes(attributes: MetricAttributes): string {\n  let keys = Object.keys(attributes);\n  if (keys.length === 0) return '';\n\n  // Return a string that is stable on key orders.\n  keys = keys.sort();\n  return JSON.stringify(keys.map(key => [key, attributes[key]]));\n}\n\n/**\n * Converting the instrumentation scope object to a unique identifier string.\n * @param instrumentationScope\n */\nexport function instrumentationScopeId(instrumentationScope: InstrumentationScope): string {\n  return `${instrumentationScope.name}:${instrumentationScope.version ?? ''}:${instrumentationScope.schemaUrl ?? ''}`;\n}\n\n/**\n * Error that is thrown on timeouts.\n */\nexport class TimeoutError extends Error {\n  constructor(message?: string) {\n    super(message);\n\n    // manually adjust prototype to retain `instanceof` functionality when targeting ES5, see:\n    // https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, TimeoutError.prototype);\n  }\n}\n\n/**\n * Adds a timeout to a promise and rejects if the specified timeout has elapsed. Also rejects if the specified promise\n * rejects, and resolves if the specified promise resolves.\n *\n * <p> NOTE: this operation will continue even after it throws a {@link TimeoutError}.\n *\n * @param promise promise to use with timeout.\n * @param timeout the timeout in milliseconds until the returned promise is rejected.\n */\nexport function callWithTimeout<T>(promise: Promise<T>, timeout: number): Promise<T> {\n  let timeoutHandle: ReturnType<typeof setTimeout>;\n\n  const timeoutPromise = new Promise<never>(function timeoutFunction(_resolve, reject) {\n    timeoutHandle = setTimeout(\n      function timeoutHandler() {\n        reject(new TimeoutError('Operation timed out.'));\n      },\n      timeout\n    );\n  });\n\n  return Promise.race([promise, timeoutPromise]).then(result => {\n    clearTimeout(timeoutHandle);\n    return result;\n  },\n  reason => {\n    clearTimeout(timeoutHandle);\n    throw reason;\n  });\n}\n\nexport interface PromiseAllSettledFulfillResult<T> {\n  status: 'fulfilled';\n  value: T;\n}\n\nexport interface PromiseAllSettledRejectionResult {\n  status: 'rejected';\n  reason: unknown;\n}\n\nexport type PromiseAllSettledResult<T> = PromiseAllSettledFulfillResult<T> | PromiseAllSettledRejectionResult;\n\n/**\n * Node.js v12.9 lower and browser compatible `Promise.allSettled`.\n */\nexport async function PromiseAllSettled<T>(promises: Promise<T>[]): Promise<PromiseAllSettledResult<T>[]> {\n  return Promise.all(promises.map<Promise<PromiseAllSettledResult<T>>>(async p => {\n    try {\n      const ret = await p;\n      return {\n        status: 'fulfilled',\n        value: ret,\n      };\n    } catch (e) {\n      return {\n        status: 'rejected',\n        reason: e,\n      };\n    }\n  }));\n}\n\nexport function isPromiseAllSettledRejectionResult(it: PromiseAllSettledResult<unknown>): it is PromiseAllSettledRejectionResult {\n  return it.status === 'rejected';\n}\n\n/**\n * Node.js v11.0 lower and browser compatible `Array.prototype.flatMap`.\n */\nexport function FlatMap<T, R>(arr: T[], fn: (it: T) => R[]): R[] {\n  const result: R[] = [];\n  arr.forEach(it => {\n    result.push(...fn(it));\n  });\n  return result;\n}\n\nexport function setEquals(lhs: Set<unknown>, rhs: Set<unknown>): boolean {\n  if (lhs.size !== rhs.size) {\n    return false;\n  }\n  for (const item of lhs) {\n    if (!rhs.has(item)) {\n      return false;\n    }\n  }\n  return true;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  ExportResultCode,\n  globalErrorHandler,\n  unrefTimer\n} from '@opentelemetry/core';\nimport { MetricReader } from './MetricReader';\nimport { AggregationTemporality } from './AggregationTemporality';\nimport { InstrumentType } from '../InstrumentDescriptor';\nimport { PushMetricExporter } from './MetricExporter';\nimport { callWithTimeout, TimeoutError } from '../utils';\n\nexport type PeriodicExportingMetricReaderOptions = {\n  exporter: PushMetricExporter\n  exportIntervalMillis?: number,\n  exportTimeoutMillis?: number\n};\n\n/**\n * {@link MetricReader} which collects metrics based on a user-configurable time interval, and passes the metrics to\n * the configured {@link MetricExporter}\n */\nexport class PeriodicExportingMetricReader extends MetricReader {\n  private _interval?: ReturnType<typeof setInterval>;\n\n  private _exporter: PushMetricExporter;\n\n  private readonly _exportInterval: number;\n\n  private readonly _exportTimeout: number;\n\n  constructor(options: PeriodicExportingMetricReaderOptions) {\n    super();\n\n    if (options.exportIntervalMillis !== undefined && options.exportIntervalMillis <= 0) {\n      throw Error('exportIntervalMillis must be greater than 0');\n    }\n\n    if (options.exportTimeoutMillis !== undefined && options.exportTimeoutMillis <= 0) {\n      throw Error('exportTimeoutMillis must be greater than 0');\n    }\n\n    if (options.exportTimeoutMillis !== undefined &&\n      options.exportIntervalMillis !== undefined &&\n      options.exportIntervalMillis < options.exportTimeoutMillis) {\n      throw Error('exportIntervalMillis must be greater than or equal to exportTimeoutMillis');\n    }\n\n    this._exportInterval = options.exportIntervalMillis ?? 60000;\n    this._exportTimeout = options.exportTimeoutMillis ?? 30000;\n    this._exporter = options.exporter;\n  }\n\n  private async _runOnce(): Promise<void> {\n    const { resourceMetrics, errors } = await this.collect({});\n\n    if (errors.length > 0) {\n      api.diag.error('PeriodicExportingMetricReader: metrics collection errors', ...errors);\n    }\n\n    return new Promise((resolve, reject) => {\n      this._exporter.export(resourceMetrics, result => {\n        if (result.code !== ExportResultCode.SUCCESS) {\n          reject(\n            result.error ??\n              new Error(\n                `PeriodicExportingMetricReader: metrics export failed (error ${result.error})`\n              )\n          );\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n\n  protected override onInitialized(): void {\n    // start running the interval as soon as this reader is initialized and keep handle for shutdown.\n    this._interval = setInterval(async () => {\n      try {\n        await callWithTimeout(this._runOnce(), this._exportTimeout);\n      } catch (err) {\n        if (err instanceof TimeoutError) {\n          api.diag.error('Export took longer than %s milliseconds and timed out.', this._exportTimeout);\n          return;\n        }\n\n        globalErrorHandler(err);\n      }\n    }, this._exportInterval);\n    unrefTimer(this._interval);\n  }\n\n  protected async onForceFlush(): Promise<void> {\n    await this._exporter.forceFlush();\n  }\n\n  protected async onShutdown(): Promise<void> {\n    if (this._interval) {\n      clearInterval(this._interval);\n    }\n\n    await this._exporter.shutdown();\n  }\n\n  /**\n   * @inheritdoc\n   */\n  selectAggregationTemporality(instrumentType: InstrumentType): AggregationTemporality {\n    return this._exporter.selectAggregationTemporality(instrumentType);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExportResultCode } from '@opentelemetry/core';\nimport { ExportResult } from '@opentelemetry/core';\nimport { InstrumentType } from '../InstrumentDescriptor';\nimport { AggregationTemporality } from './AggregationTemporality';\nimport { ResourceMetrics } from './MetricData';\nimport { PushMetricExporter } from './MetricExporter';\n\n/**\n * In-memory Metrics Exporter is a Push Metric Exporter\n * which accumulates metrics data in the local memory and\n * allows to inspect it (useful for e.g. unit tests).\n */\nexport class InMemoryMetricExporter implements PushMetricExporter {\n  protected _shutdown = false;\n  protected _aggregationTemporality: AggregationTemporality;\n  private _metrics: ResourceMetrics[] = [];\n\n  constructor(aggregationTemporality: AggregationTemporality) {\n    this._aggregationTemporality = aggregationTemporality;\n  }\n\n  /**\n   * @inheritedDoc\n   */\n  export(metrics: ResourceMetrics, resultCallback: (result: ExportResult) => void): void {\n    // Avoid storing metrics when exporter is shutdown\n    if (this. _shutdown) {\n      setTimeout(() => resultCallback({ code: ExportResultCode.FAILED }), 0);\n      return;\n    }\n\n    this._metrics.push(metrics);\n    setTimeout(() => resultCallback({ code: ExportResultCode.SUCCESS }), 0);\n  }\n\n  /**\n   * Returns all the collected resource metrics\n   * @returns ResourceMetrics[]\n   */\n  public getMetrics(): ResourceMetrics[] {\n    return this._metrics;\n  }\n\n  forceFlush(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  reset() {\n    this._metrics = [];\n  }\n\n  selectAggregationTemporality(_instrumentType: InstrumentType): AggregationTemporality {\n    return this._aggregationTemporality;\n  }\n\n  shutdown(): Promise<void> {\n    this._shutdown = true;\n    return Promise.resolve();\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ExportResult, ExportResultCode } from '@opentelemetry/core';\nimport { InstrumentType } from '../InstrumentDescriptor';\nimport { AggregationTemporality } from './AggregationTemporality';\nimport { ResourceMetrics } from './MetricData';\nimport { PushMetricExporter } from './MetricExporter';\n\n/* eslint-disable no-console */\nexport class ConsoleMetricExporter implements PushMetricExporter {\n  protected _shutdown = false;\n\n  export(metrics: ResourceMetrics, resultCallback: (result: ExportResult) => void): void {\n    if (this._shutdown) {\n      // If the exporter is shutting down, by spec, we need to return FAILED as export result\n      setImmediate(resultCallback, { code: ExportResultCode.FAILED });\n      return;\n    }\n\n    return ConsoleMetricExporter._sendMetrics(metrics, resultCallback);\n  }\n\n  forceFlush(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  selectAggregationTemporality(_instrumentType: InstrumentType): AggregationTemporality {\n    return AggregationTemporality.CUMULATIVE;\n  }\n\n  shutdown(): Promise<void> {\n    this._shutdown = true;\n    return Promise.resolve();\n  }\n\n  private static _sendMetrics(metrics: ResourceMetrics, done: (result: ExportResult) => void): void {\n    for (const scopeMetrics of metrics.scopeMetrics) {\n      for (const metric of scopeMetrics.metrics) {\n        console.dir({\n          descriptor: metric.descriptor,\n          dataPointType: metric.dataPointType,\n          dataPoints: metric.dataPoints\n        });\n      }\n    }\n\n    done({ code: ExportResultCode.SUCCESS });\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MetricOptions, ValueType } from '@opentelemetry/api-metrics';\nimport { View } from './view/View';\n\n/**\n * Supported types of metric instruments.\n */\nexport enum InstrumentType {\n  COUNTER = 'COUNTER',\n  HISTOGRAM = 'HISTOGRAM',\n  UP_DOWN_COUNTER = 'UP_DOWN_COUNTER',\n  OBSERVABLE_COUNTER = 'OBSERVABLE_COUNTER',\n  OBSERVABLE_GAUGE = 'OBSERVABLE_GAUGE',\n  OBSERVABLE_UP_DOWN_COUNTER = 'OBSERVABLE_UP_DOWN_COUNTER',\n}\n\n/**\n * An interface describing the instrument.\n */\nexport interface InstrumentDescriptor {\n  readonly name: string;\n  readonly description: string;\n  readonly unit: string;\n  readonly type: InstrumentType;\n  readonly valueType: ValueType;\n}\n\nexport function createInstrumentDescriptor(name: string, type: InstrumentType, options?: MetricOptions): InstrumentDescriptor {\n  return {\n    name,\n    type,\n    description: options?.description ?? '',\n    unit: options?.unit ?? '',\n    valueType: options?.valueType ?? ValueType.DOUBLE,\n  };\n}\n\nexport function createInstrumentDescriptorWithView(view: View, instrument: InstrumentDescriptor): InstrumentDescriptor {\n  return {\n    name: view.name ?? instrument.name,\n    description: view.description ?? instrument.description,\n    type: instrument.type,\n    unit: instrument.unit,\n    valueType: instrument.valueType,\n  };\n}\n\nexport function isDescriptorCompatibleWith(descriptor: InstrumentDescriptor, otherDescriptor: InstrumentDescriptor) {\n  return descriptor.name === otherDescriptor.name\n    && descriptor.unit === otherDescriptor.unit\n    && descriptor.type === otherDescriptor.type\n    && descriptor.valueType === otherDescriptor.valueType;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as metrics from '@opentelemetry/api-metrics';\nimport { createInstrumentDescriptor, InstrumentType } from './InstrumentDescriptor';\nimport {\n  CounterInstrument,\n  HistogramInstrument,\n  ObservableCounterInstrument,\n  ObservableGaugeInstrument,\n  ObservableUpDownCounterInstrument,\n  UpDownCounterInstrument,\n} from './Instruments';\nimport { MeterSharedState } from './state/MeterSharedState';\n\n/**\n * This class implements the {@link metrics.Meter} interface.\n */\nexport class Meter implements metrics.Meter {\n  constructor(private _meterSharedState: MeterSharedState) {}\n\n  /**\n   * Create a {@link metrics.Histogram} instrument.\n   */\n  createHistogram(name: string, options?: metrics.MetricOptions): metrics.Histogram {\n    const descriptor = createInstrumentDescriptor(name, InstrumentType.HISTOGRAM, options);\n    const storage = this._meterSharedState.registerMetricStorage(descriptor);\n    return new HistogramInstrument(storage, descriptor);\n  }\n\n  /**\n   * Create a {@link metrics.Counter} instrument.\n   */\n  createCounter(name: string, options?: metrics.MetricOptions): metrics.Counter {\n    const descriptor = createInstrumentDescriptor(name, InstrumentType.COUNTER, options);\n    const storage = this._meterSharedState.registerMetricStorage(descriptor);\n    return new CounterInstrument(storage, descriptor);\n  }\n\n  /**\n   * Create a {@link metrics.UpDownCounter} instrument.\n   */\n  createUpDownCounter(name: string, options?: metrics.MetricOptions): metrics.UpDownCounter {\n    const descriptor = createInstrumentDescriptor(name, InstrumentType.UP_DOWN_COUNTER, options);\n    const storage = this._meterSharedState.registerMetricStorage(descriptor);\n    return new UpDownCounterInstrument(storage, descriptor);\n  }\n\n  /**\n   * Create a {@link metrics.ObservableGauge} instrument.\n   */\n  createObservableGauge(\n    name: string,\n    options?: metrics.MetricOptions,\n  ): metrics.ObservableGauge {\n    const descriptor = createInstrumentDescriptor(name, InstrumentType.OBSERVABLE_GAUGE, options);\n    const storages = this._meterSharedState.registerAsyncMetricStorage(descriptor);\n    return new ObservableGaugeInstrument(descriptor, storages, this._meterSharedState.observableRegistry);\n  }\n\n  /**\n   * Create a {@link metrics.ObservableCounter} instrument.\n   */\n  createObservableCounter(\n    name: string,\n    options?: metrics.MetricOptions,\n  ): metrics.ObservableCounter {\n    const descriptor = createInstrumentDescriptor(name, InstrumentType.OBSERVABLE_COUNTER, options);\n    const storages = this._meterSharedState.registerAsyncMetricStorage(descriptor);\n    return new ObservableCounterInstrument(descriptor, storages, this._meterSharedState.observableRegistry);\n  }\n\n  /**\n   * Create a {@link metrics.ObservableUpDownCounter} instrument.\n   */\n  createObservableUpDownCounter(\n    name: string,\n    options?: metrics.MetricOptions,\n  ): metrics.ObservableUpDownCounter {\n    const descriptor = createInstrumentDescriptor(name, InstrumentType.OBSERVABLE_UP_DOWN_COUNTER, options);\n    const storages = this._meterSharedState.registerAsyncMetricStorage(descriptor);\n    return new ObservableUpDownCounterInstrument(descriptor, storages, this._meterSharedState.observableRegistry);\n  }\n\n  /**\n   * @see {@link metrics.Meter.addBatchObservableCallback}\n   */\n  addBatchObservableCallback(callback: metrics.BatchObservableCallback, observables: metrics.Observable[]) {\n    this._meterSharedState.observableRegistry.addBatchCallback(callback, observables);\n  }\n\n  /**\n   * @see {@link metrics.Meter.removeBatchObservableCallback}\n   */\n  removeBatchObservableCallback(callback: metrics.BatchObservableCallback, observables: metrics.Observable[]) {\n    this._meterSharedState.observableRegistry.removeBatchCallback(callback, observables);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport * as metrics from '@opentelemetry/api-metrics';\nimport { ObservableCallback } from '@opentelemetry/api-metrics';\nimport { hrTime } from '@opentelemetry/core';\nimport { InstrumentDescriptor } from './InstrumentDescriptor';\nimport { ObservableRegistry } from './state/ObservableRegistry';\nimport { AsyncWritableMetricStorage, WritableMetricStorage } from './state/WritableMetricStorage';\n\nexport class SyncInstrument {\n  constructor(private _writableMetricStorage: WritableMetricStorage, protected _descriptor: InstrumentDescriptor) {}\n\n  protected _record(value: number, attributes: metrics.MetricAttributes = {}, context: api.Context = api.context.active()) {\n    if (this._descriptor.valueType === metrics.ValueType.INT && !Number.isInteger(value)) {\n      api.diag.warn(\n        `INT value type cannot accept a floating-point value for ${this._descriptor.name}, ignoring the fractional digits.`\n      );\n      value = Math.trunc(value);\n    }\n    this._writableMetricStorage.record(value, attributes, context, hrTime());\n  }\n}\n\n/**\n * The class implements {@link metrics.UpDownCounter} interface.\n */\nexport class UpDownCounterInstrument extends SyncInstrument implements metrics.UpDownCounter {\n  /**\n   * Increment value of counter by the input. Inputs may be negative.\n   */\n  add(value: number, attributes?: metrics.MetricAttributes, ctx?: api.Context): void {\n    this._record(value, attributes, ctx);\n  }\n}\n\n/**\n * The class implements {@link metrics.Counter} interface.\n */\nexport class CounterInstrument extends SyncInstrument implements metrics.Counter {\n  /**\n   * Increment value of counter by the input. Inputs may not be negative.\n   */\n  add(value: number, attributes?: metrics.MetricAttributes, ctx?: api.Context): void {\n    if (value < 0) {\n      api.diag.warn(`negative value provided to counter ${this._descriptor.name}: ${value}`);\n      return;\n    }\n\n    this._record(value, attributes, ctx);\n  }\n}\n\n/**\n * The class implements {@link metrics.Histogram} interface.\n */\nexport class HistogramInstrument extends SyncInstrument implements metrics.Histogram {\n  /**\n   * Records a measurement. Value of the measurement must not be negative.\n   */\n  record(value: number, attributes?: metrics.MetricAttributes, ctx?: api.Context): void {\n    if (value < 0) {\n      api.diag.warn(`negative value provided to histogram ${this._descriptor.name}: ${value}`);\n      return;\n    }\n    this._record(value, attributes, ctx);\n  }\n}\n\nexport class ObservableInstrument implements metrics.Observable {\n  /** @internal */\n  _metricStorages: AsyncWritableMetricStorage[];\n  /** @internal */\n  _descriptor: InstrumentDescriptor;\n\n  constructor(descriptor: InstrumentDescriptor, metricStorages: AsyncWritableMetricStorage[], private _observableRegistry: ObservableRegistry) {\n    this._descriptor = descriptor;\n    this._metricStorages = metricStorages;\n  }\n\n  /**\n   * @see {metrics.Observable.addCallback}\n   */\n  addCallback(callback: ObservableCallback) {\n    this._observableRegistry.addCallback(callback, this);\n  }\n\n  /**\n   * @see {metrics.Observable.removeCallback}\n   */\n  removeCallback(callback: ObservableCallback) {\n    this._observableRegistry.removeCallback(callback, this);\n  }\n}\n\nexport class ObservableCounterInstrument extends ObservableInstrument implements metrics.ObservableCounter {}\nexport class ObservableGaugeInstrument extends ObservableInstrument implements metrics.ObservableGauge {}\nexport class ObservableUpDownCounterInstrument extends ObservableInstrument implements metrics.ObservableUpDownCounter {}\n\nexport function isObservableInstrument(it: unknown): it is ObservableInstrument {\n  return it instanceof ObservableInstrument;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport * as metrics from '@opentelemetry/api-metrics';\nimport { Resource } from '@opentelemetry/resources';\nimport { MetricReader } from './export/MetricReader';\nimport { MeterProviderSharedState } from './state/MeterProviderSharedState';\nimport { MetricCollector } from './state/MetricCollector';\nimport { ForceFlushOptions, ShutdownOptions } from './types';\nimport { View } from './view/View';\n\n/**\n * MeterProviderOptions provides an interface for configuring a MeterProvider.\n */\nexport interface MeterProviderOptions {\n  /** Resource associated with metric telemetry  */\n  resource?: Resource;\n  views?: View[];\n}\n\n/**\n * This class implements the {@link metrics.MeterProvider} interface.\n */\nexport class MeterProvider implements metrics.MeterProvider {\n  private _sharedState: MeterProviderSharedState;\n  private _shutdown = false;\n\n  constructor(options?: MeterProviderOptions) {\n    this._sharedState = new MeterProviderSharedState(options?.resource ?? Resource.empty());\n    if(options?.views != null && options.views.length > 0){\n      for(const view of options.views){\n        this._sharedState.viewRegistry.addView(view);\n      }\n    }\n  }\n\n  /**\n   * Get a meter with the configuration of the MeterProvider.\n   */\n  getMeter(name: string, version = '', options: metrics.MeterOptions = {}): metrics.Meter {\n    // https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/metrics/sdk.md#meter-creation\n    if (this._shutdown) {\n      api.diag.warn('A shutdown MeterProvider cannot provide a Meter');\n      return metrics.NOOP_METER;\n    }\n\n    return this._sharedState\n      .getMeterSharedState({ name, version, schemaUrl: options.schemaUrl })\n      .meter;\n  }\n\n  /**\n   * Register a {@link MetricReader} to the meter provider. After the\n   * registration, the MetricReader can start metrics collection.\n   *\n   * @param metricReader the metric reader to be registered.\n   */\n  addMetricReader(metricReader: MetricReader) {\n    const collector = new MetricCollector(this._sharedState, metricReader);\n    metricReader.setMetricProducer(collector);\n    this._sharedState.metricCollectors.push(collector);\n  }\n\n  /**\n   * Flush all buffered data and shut down the MeterProvider and all registered\n   * MetricReaders.\n   *\n   * Returns a promise which is resolved when all flushes are complete.\n   */\n  async shutdown(options?: ShutdownOptions): Promise<void> {\n    if (this._shutdown) {\n      api.diag.warn('shutdown may only be called once per MeterProvider');\n      return;\n    }\n\n    this._shutdown = true;\n\n    await Promise.all(this._sharedState.metricCollectors.map(collector => {\n      return collector.shutdown(options);\n    }));\n  }\n\n  /**\n   * Notifies all registered MetricReaders to flush any buffered data.\n   *\n   * Returns a promise which is resolved when all flushes are complete.\n   */\n  async forceFlush(options?: ForceFlushOptions): Promise<void> {\n    // do not flush after shutdown\n    if (this._shutdown) {\n      api.diag.warn('invalid attempt to force flush after MeterProvider shutdown');\n      return;\n    }\n\n    await Promise.all(this._sharedState.metricCollectors.map(collector => {\n      return collector.forceFlush(options);\n    }));\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationScope } from '@opentelemetry/core';\nimport { Resource } from '@opentelemetry/resources';\nimport { instrumentationScopeId } from '../utils';\nimport { ViewRegistry } from '../view/ViewRegistry';\nimport { MeterSharedState } from './MeterSharedState';\nimport { MetricCollector } from './MetricCollector';\n\n/**\n * An internal record for shared meter provider states.\n */\nexport class MeterProviderSharedState {\n  viewRegistry = new ViewRegistry();\n\n  metricCollectors: MetricCollector[] = [];\n\n  meterSharedStates: Map<string, MeterSharedState> = new Map();\n\n  constructor(public resource: Resource) {}\n\n  getMeterSharedState(instrumentationScope: InstrumentationScope) {\n    const id = instrumentationScopeId(instrumentationScope);\n    let meterSharedState = this.meterSharedStates.get(id);\n    if (meterSharedState == null) {\n      meterSharedState = new MeterSharedState(this, instrumentationScope);\n      this.meterSharedStates.set(id, meterSharedState);\n    }\n    return meterSharedState;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationScope } from '@opentelemetry/core';\nimport { InstrumentDescriptor } from '../InstrumentDescriptor';\nimport { InstrumentSelector } from './InstrumentSelector';\nimport { MeterSelector } from './MeterSelector';\nimport { View } from './View';\n\nexport class ViewRegistry {\n  private static DEFAULT_VIEW = new View({\n    instrumentName: '*'\n  });\n  private _registeredViews: View[] = [];\n\n  addView(view: View) {\n    this._registeredViews.push(view);\n  }\n\n  findViews(instrument: InstrumentDescriptor, meter: InstrumentationScope): View[] {\n    const views = this._registeredViews\n      .filter(registeredView => {\n        return this._matchInstrument(registeredView.instrumentSelector, instrument) &&\n          this._matchMeter(registeredView.meterSelector, meter);\n      });\n\n    if (views.length === 0) {\n      return [ViewRegistry.DEFAULT_VIEW];\n    }\n    return views;\n  }\n\n  private _matchInstrument(selector: InstrumentSelector, instrument: InstrumentDescriptor): boolean {\n    return (selector.getType() === undefined || instrument.type === selector.getType()) &&\n      selector.getNameFilter().match(instrument.name);\n  }\n\n  private _matchMeter(selector: MeterSelector, meter: InstrumentationScope): boolean {\n    return selector.getNameFilter().match(meter.name) &&\n      (meter.version === undefined || selector.getVersionFilter().match(meter.version)) &&\n      (meter.schemaUrl === undefined || selector.getSchemaUrlFilter().match(meter.schemaUrl));\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PatternPredicate } from './Predicate';\nimport { AttributesProcessor, FilteringAttributesProcessor } from './AttributesProcessor';\nimport { InstrumentSelector } from './InstrumentSelector';\nimport { MeterSelector } from './MeterSelector';\nimport { Aggregation } from './Aggregation';\nimport { InstrumentType } from '../InstrumentDescriptor';\n\nexport type ViewOptions = {\n  /**\n   *  Alters the metric stream:\n   *  This will be used as the name of the metrics stream.\n   *  If not provided, the original Instrument name will be used.\n   */\n  name?: string;\n  /**\n   * Alters the metric stream:\n   * This will be used as the description of the metrics stream.\n   * If not provided, the original Instrument description will be used by default.\n   *\n   * @example <caption>changes the description of all selected instruments to 'sample description'</caption>\n   * description: 'sample description'\n   */\n  description?: string;\n  /**\n   * Alters the metric stream:\n   * If provided, the attributes that are not in the list will be ignored.\n   * If not provided, all attribute keys will be used by default.\n   *\n   * @example <caption>drops all attributes with top-level keys except for 'myAttr' and 'myOtherAttr'</caption>\n   * attributeKeys: ['myAttr', 'myOtherAttr']\n   * @example <caption>drops all attributes</caption>\n   * attributeKeys: []\n   */\n  attributeKeys?: string[];\n  /**\n   * Alters the metric stream:\n   * Alters the {@link Aggregation} of the metric stream.\n   *\n   * @example <caption>changes the aggregation of the selected instrument(s) to ExplicitBucketHistogramAggregation</caption>\n   * aggregation: new ExplicitBucketHistogramAggregation([1, 10, 100])\n   * @example <caption>changes the aggregation of the selected instrument(s) to LastValueAggregation</caption>\n   * aggregation: new LastValueAggregation()\n   */\n  aggregation?: Aggregation;\n  /**\n   * Instrument selection criteria:\n   * The original type of the Instrument(s).\n   *\n   * @example <caption>selects all counters</caption>\n   * instrumentType: InstrumentType.COUNTER\n   * @example <caption>selects all histograms</caption>\n   * instrumentType: InstrumentType.HISTOGRAM\n   */\n  instrumentType?: InstrumentType;\n  /**\n   * Instrument selection criteria:\n   * Original name of the Instrument(s) with wildcard support.\n   *\n   * @example <caption>select all instruments</caption>\n   * instrumentName: '*'\n   * @example <caption>select all instruments starting with 'my.instruments.'</caption>\n   * instrumentName: 'my.instruments.*'\n   * @example <caption>select all instruments named 'my.instrument.requests' exactly</caption>\n   * instrumentName: 'my.instruments.requests'\n   */\n  instrumentName?: string;\n  /**\n   * Instrument selection criteria:\n   * The name of the Meter. No wildcard support, name must match the meter exactly.\n   *\n   * @example <caption>select all meters named 'example.component.app' exactly</caption>\n   * meterName: 'example.component.app'\n   */\n  meterName?: string;\n  /**\n   * Instrument selection criteria:\n   * The version of the Meter. No wildcard support, version must match exactly.\n   *\n   * @example\n   * meterVersion: '1.0.1'\n   */\n  meterVersion?: string;\n  /**\n   * Instrument selection criteria:\n   * The schema URL of the Meter. No wildcard support, schema URL must match exactly.\n   *\n   * @example <caption>Select all meters with schema URL 'https://example.com/schema' exactly.</caption>\n   * meterSchemaUrl: 'https://example.com/schema'\n   */\n  meterSchemaUrl?: string;\n};\n\nfunction isSelectorNotProvided(options: ViewOptions): boolean {\n  return (options.instrumentName == null &&\n    options.instrumentType == null &&\n    options.meterName == null &&\n    options.meterVersion == null &&\n    options.meterSchemaUrl == null);\n}\n\n/**\n * Can be passed to a {@link MeterProvider} to select instruments and alter their metric stream.\n */\nexport class View {\n  readonly name?: string;\n  readonly description?: string;\n  readonly aggregation: Aggregation;\n  readonly attributesProcessor: AttributesProcessor;\n  readonly instrumentSelector: InstrumentSelector;\n  readonly meterSelector: MeterSelector;\n\n  /**\n   * Create a new {@link View} instance.\n   *\n   * Parameters can be categorized as two types:\n   *  Instrument selection criteria: Used to describe the instrument(s) this view will be applied to.\n   *  Will be treated as additive (the Instrument has to meet all the provided criteria to be selected).\n   *\n   *  Metric stream altering: Alter the metric stream of instruments selected by instrument selection criteria.\n   *\n   * @param viewOptions {@link ViewOptions} for altering the metric stream and instrument selection.\n   * @param viewOptions.name\n   * Alters the metric stream:\n   *  This will be used as the name of the metrics stream.\n   *  If not provided, the original Instrument name will be used.\n   * @param viewOptions.description\n   * Alters the metric stream:\n   *  This will be used as the description of the metrics stream.\n   *  If not provided, the original Instrument description will be used by default.\n   * @param viewOptions.attributeKeys\n   * Alters the metric stream:\n   *  If provided, the attributes that are not in the list will be ignored.\n   *  If not provided, all attribute keys will be used by default.\n   * @param viewOptions.aggregation\n   * Alters the metric stream:\n   *  Alters the {@link Aggregation} of the metric stream.\n   * @param viewOptions.instrumentName\n   * Instrument selection criteria:\n   *  Original name of the Instrument(s) with wildcard support.\n   * @param viewOptions.instrumentType\n   * Instrument selection criteria:\n   *  The original type of the Instrument(s).\n   * @param viewOptions.meterName\n   * Instrument selection criteria:\n   *  The name of the Meter. No wildcard support, name must match the meter exactly.\n   * @param viewOptions.meterVersion\n   * Instrument selection criteria:\n   *  The version of the Meter. No wildcard support, version must match exactly.\n   * @param viewOptions.meterSchemaUrl\n   * Instrument selection criteria:\n   *  The schema URL of the Meter. No wildcard support, schema URL must match exactly.\n   *\n   * @example\n   * // Create a view that changes the Instrument 'my.instrument' to use to an\n   * // ExplicitBucketHistogramAggregation with the boundaries [20, 30, 40]\n   * new View({\n   *   aggregation: new ExplicitBucketHistogramAggregation([20, 30, 40]),\n   *   instrumentName: 'my.instrument'\n   * })\n   */\n  constructor(viewOptions: ViewOptions) {\n    // If no criteria is provided, the SDK SHOULD treat it as an error.\n    // It is recommended that the SDK implementations fail fast.\n    if (isSelectorNotProvided(viewOptions)) {\n      throw new Error('Cannot create view with no selector arguments supplied');\n    }\n\n    // the SDK SHOULD NOT allow Views with a specified name to be declared with instrument selectors that\n    // may select more than one instrument (e.g. wild card instrument name) in the same Meter.\n    if (viewOptions.name != null &&\n      (viewOptions?.instrumentName == null ||\n        PatternPredicate.hasWildcard(viewOptions.instrumentName))) {\n      throw new Error('Views with a specified name must be declared with an instrument selector that selects at most one instrument per meter.');\n    }\n\n    // Create AttributesProcessor if attributeKeys are defined set.\n    if (viewOptions.attributeKeys != null) {\n      this.attributesProcessor = new FilteringAttributesProcessor(viewOptions.attributeKeys);\n    } else {\n      this.attributesProcessor = AttributesProcessor.Noop();\n    }\n\n    this.name = viewOptions.name;\n    this.description = viewOptions.description;\n    this.aggregation = viewOptions.aggregation ?? Aggregation.Default();\n    this.instrumentSelector = new InstrumentSelector({\n      name: viewOptions.instrumentName,\n      type: viewOptions.instrumentType,\n    });\n    this.meterSelector = new MeterSelector({\n      name: viewOptions.meterName,\n      version: viewOptions.meterVersion,\n      schemaUrl: viewOptions.meterSchemaUrl\n    });\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// https://tc39.es/proposal-regex-escaping\n// escape ^ $ \\ .  + ? ( ) [ ] { } |\n// do not need to escape * as we are interpret it as wildcard\nconst ESCAPE = /[\\^$\\\\.+?()[\\]{}|]/g;\n\nexport interface Predicate {\n  match(str: string): boolean;\n}\n\n/**\n * Wildcard pattern predicate, support patterns like `*`, `foo*`, `*bar`.\n */\nexport class PatternPredicate implements Predicate {\n  private _matchAll: boolean;\n  private _regexp: RegExp;\n\n  constructor(pattern: string) {\n    if (pattern === '*') {\n      this._matchAll = true;\n      this._regexp = /.*/;\n    } else {\n      this._matchAll = false;\n      this._regexp = new RegExp(PatternPredicate.escapePattern(pattern));\n    }\n  }\n\n  match(str: string): boolean {\n    if (this._matchAll) {\n      return true;\n    }\n\n    return this._regexp.test(str);\n  }\n\n  static escapePattern(pattern: string): string {\n    return `^${pattern.replace(ESCAPE, '\\\\$&').replace('*', '.*')}$`;\n  }\n\n  static hasWildcard(pattern: string): boolean{\n    return pattern.includes('*');\n  }\n}\n\nexport class ExactPredicate implements Predicate {\n  private _matchAll: boolean;\n  private _pattern?: string;\n\n  constructor(pattern?: string) {\n    this._matchAll = pattern === undefined;\n    this._pattern = pattern;\n  }\n\n  match(str: string): boolean {\n    if (this._matchAll) {\n      return true;\n    }\n    if (str === this._pattern) {\n      return true;\n    }\n    return false;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '@opentelemetry/api';\nimport { MetricAttributes } from '@opentelemetry/api-metrics';\n\n/**\n * The {@link AttributesProcessor} is responsible for customizing which\n * attribute(s) are to be reported as metrics dimension(s) and adding\n * additional dimension(s) from the {@link Context}.\n */\nexport abstract class AttributesProcessor {\n  /**\n   * Process the metric instrument attributes.\n   *\n   * @param incoming The metric instrument attributes.\n   * @param context The active context when the instrument is synchronous.\n   * `undefined` otherwise.\n   */\n  abstract process(incoming: MetricAttributes, context?: Context): MetricAttributes;\n\n  static Noop() {\n    return NOOP;\n  }\n}\n\nexport class NoopAttributesProcessor extends AttributesProcessor {\n  process(incoming: MetricAttributes, _context?: Context) {\n    return incoming;\n  }\n}\n\n/**\n * {@link AttributesProcessor} that filters by allowed attribute names and drops any names that are not in the\n * allow list.\n */\nexport class FilteringAttributesProcessor extends AttributesProcessor {\n  constructor(private _allowedAttributeNames: string[]) {\n    super();\n  }\n\n  process(incoming: MetricAttributes, _context: Context): MetricAttributes {\n    const filteredAttributes: MetricAttributes = {};\n    Object.keys(incoming)\n      .filter(attributeName => this._allowedAttributeNames.includes(attributeName))\n      .forEach(attributeName => filteredAttributes[attributeName] = incoming[attributeName]);\n    return filteredAttributes;\n  }\n}\n\nconst NOOP = new NoopAttributesProcessor;\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentType } from '../InstrumentDescriptor';\nimport { PatternPredicate, Predicate } from './Predicate';\n\nexport interface InstrumentSelectorCriteria {\n  name?: string;\n  type?: InstrumentType;\n}\n\nexport class InstrumentSelector {\n  private _nameFilter: Predicate;\n  private _type?: InstrumentType;\n\n  constructor(criteria?: InstrumentSelectorCriteria) {\n    this._nameFilter = new PatternPredicate(criteria?.name ?? '*');\n    this._type = criteria?.type;\n  }\n\n  getType() {\n    return this._type;\n  }\n\n  getNameFilter() {\n    return this._nameFilter;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExactPredicate, Predicate } from './Predicate';\n\nexport interface MeterSelectorCriteria {\n  name?: string;\n  version?: string;\n  schemaUrl?: string;\n}\n\nexport class MeterSelector {\n  private _nameFilter: Predicate;\n  private _versionFilter: Predicate;\n  private _schemaUrlFilter: Predicate;\n\n  constructor(criteria?: MeterSelectorCriteria) {\n    this._nameFilter = new ExactPredicate(criteria?.name);\n    this._versionFilter = new ExactPredicate(criteria?.version);\n    this._schemaUrlFilter = new ExactPredicate(criteria?.schemaUrl);\n  }\n\n  getNameFilter() {\n    return this._nameFilter;\n  }\n\n  /**\n   * TODO: semver filter? no spec yet.\n   */\n  getVersionFilter() {\n    return this._versionFilter;\n  }\n\n  getSchemaUrlFilter() {\n    return this._schemaUrlFilter;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { Aggregator, SumAggregator, DropAggregator, LastValueAggregator, HistogramAggregator } from '../aggregator';\nimport { Accumulation } from '../aggregator/types';\nimport { InstrumentDescriptor, InstrumentType } from '../InstrumentDescriptor';\nimport { Maybe } from '../utils';\n\n/**\n * Configures how measurements are combined into metrics for views.\n *\n * Aggregation provides a set of built-in aggregations via static methods.\n */\nexport abstract class Aggregation {\n  abstract createAggregator(instrument: InstrumentDescriptor): Aggregator<Maybe<Accumulation>>;\n\n  static Drop(): Aggregation {\n    return DROP_AGGREGATION;\n  }\n\n  static Sum(): Aggregation {\n    return SUM_AGGREGATION;\n  }\n\n  static LastValue(): Aggregation {\n    return LAST_VALUE_AGGREGATION;\n  }\n\n  static Histogram(): Aggregation {\n    return HISTOGRAM_AGGREGATION;\n  }\n\n  static Default(): Aggregation {\n    return DEFAULT_AGGREGATION;\n  }\n}\n\n/**\n * The default drop aggregation.\n */\nexport class DropAggregation extends Aggregation {\n  private static DEFAULT_INSTANCE = new DropAggregator();\n  createAggregator(_instrument: InstrumentDescriptor) {\n    return DropAggregation.DEFAULT_INSTANCE;\n  }\n}\n\n/**\n * The default sum aggregation.\n */\nexport class SumAggregation extends Aggregation {\n  private static MONOTONIC_INSTANCE = new SumAggregator(true);\n  private static NON_MONOTONIC_INSTANCE = new SumAggregator(false);\n  createAggregator(instrument: InstrumentDescriptor) {\n    switch (instrument.type) {\n      case InstrumentType.COUNTER:\n      case InstrumentType.OBSERVABLE_COUNTER:\n      case InstrumentType.HISTOGRAM: {\n        return SumAggregation.MONOTONIC_INSTANCE;\n      }\n      default: {\n        return SumAggregation.NON_MONOTONIC_INSTANCE;\n      }\n    }\n  }\n}\n\n/**\n * The default last value aggregation.\n */\nexport class LastValueAggregation extends Aggregation {\n  private static DEFAULT_INSTANCE = new LastValueAggregator();\n  createAggregator(_instrument: InstrumentDescriptor) {\n    return LastValueAggregation.DEFAULT_INSTANCE;\n  }\n}\n\n/**\n * The default histogram aggregation.\n */\nexport class HistogramAggregation extends Aggregation {\n  private static DEFAULT_INSTANCE = new HistogramAggregator([0, 5, 10, 25, 50, 75, 100, 250, 500, 1000], true);\n  createAggregator(_instrument: InstrumentDescriptor) {\n    return HistogramAggregation.DEFAULT_INSTANCE;\n  }\n}\n\n/**\n * The explicit bucket histogram aggregation.\n */\nexport class ExplicitBucketHistogramAggregation extends Aggregation {\n  private _boundaries: number[];\n\n  /**\n   * @param boundaries the bucket boundaries of the histogram aggregation\n   * @param _recordMinMax If set to true, min and max will be recorded. Otherwise, min and max will not be recorded.\n   */\n  constructor(boundaries: number[], private readonly _recordMinMax = true) {\n    super();\n    if (boundaries === undefined || boundaries.length === 0) {\n      throw new Error('HistogramAggregator should be created with boundaries.');\n    }\n    // Copy the boundaries array for modification.\n    boundaries = boundaries.concat();\n    // We need to an ordered set to be able to correctly compute count for each\n    // boundary since we'll iterate on each in order.\n    boundaries = boundaries.sort((a, b) => a - b);\n    // Remove all Infinity from the boundaries.\n    const minusInfinityIndex = boundaries.lastIndexOf(-Infinity);\n    let infinityIndex: number | undefined = boundaries.indexOf(Infinity);\n    if (infinityIndex === -1) {\n      infinityIndex = undefined;\n    }\n    this._boundaries = boundaries.slice(minusInfinityIndex + 1, infinityIndex);\n  }\n\n  createAggregator(_instrument: InstrumentDescriptor) {\n    return new HistogramAggregator(this._boundaries, this._recordMinMax);\n  }\n}\n\n/**\n * The default aggregation.\n */\nexport class DefaultAggregation extends Aggregation {\n  private _resolve(instrument: InstrumentDescriptor): Aggregation {\n    // cast to unknown to disable complaints on the (unreachable) fallback.\n    switch (instrument.type as unknown) {\n      case InstrumentType.COUNTER:\n      case InstrumentType.UP_DOWN_COUNTER:\n      case InstrumentType.OBSERVABLE_COUNTER:\n      case InstrumentType.OBSERVABLE_UP_DOWN_COUNTER: {\n        return SUM_AGGREGATION;\n      }\n      case InstrumentType.OBSERVABLE_GAUGE: {\n        return LAST_VALUE_AGGREGATION;\n      }\n      case InstrumentType.HISTOGRAM: {\n        return HISTOGRAM_AGGREGATION;\n      }\n    }\n    api.diag.warn(`Unable to recognize instrument type: ${instrument.type}`);\n    return DROP_AGGREGATION;\n  }\n\n  createAggregator(instrument: InstrumentDescriptor): Aggregator<Maybe<Accumulation>> {\n    return this._resolve(instrument).createAggregator(instrument);\n  }\n}\n\nconst DROP_AGGREGATION = new DropAggregation();\nconst SUM_AGGREGATION = new SumAggregation();\nconst LAST_VALUE_AGGREGATION = new LastValueAggregation();\nconst HISTOGRAM_AGGREGATION = new HistogramAggregation();\nconst DEFAULT_AGGREGATION = new DefaultAggregation();\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './Drop';\nexport * from './Histogram';\nexport * from './LastValue';\nexport * from './Sum';\nexport { Aggregator } from './types';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HrTime } from '@opentelemetry/api';\nimport { AggregationTemporality } from '../export/AggregationTemporality';\nimport { MetricData } from '../export/MetricData';\nimport { InstrumentDescriptor } from '../InstrumentDescriptor';\nimport { Maybe } from '../utils';\nimport {\n  AggregatorKind,\n  Aggregator,\n  AccumulationRecord,\n} from './types';\n\n/** Basic aggregator for None which keeps no recorded value. */\nexport class DropAggregator implements Aggregator<undefined> {\n  kind: AggregatorKind.DROP = AggregatorKind.DROP;\n\n  createAccumulation() {\n    return undefined;\n  }\n\n  merge(_previous: undefined, _delta: undefined) {\n    return undefined;\n  }\n\n  diff(_previous: undefined, _current: undefined) {\n    return undefined;\n  }\n\n  toMetricData(\n    _descriptor: InstrumentDescriptor,\n    _aggregationTemporality: AggregationTemporality,\n    _accumulationByAttributes: AccumulationRecord<undefined>[],\n    _endTime: HrTime): Maybe<MetricData> {\n    return undefined;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HrTime } from '@opentelemetry/api';\nimport { MetricAttributes } from '@opentelemetry/api-metrics';\nimport { AggregationTemporality } from '../export/AggregationTemporality';\nimport { MetricData } from '../export/MetricData';\nimport { InstrumentDescriptor } from '../InstrumentDescriptor';\nimport { Maybe } from '../utils';\n\n/** The kind of aggregator. */\nexport enum AggregatorKind {\n  DROP,\n  SUM,\n  LAST_VALUE,\n  HISTOGRAM,\n}\n\n/** DataPoint value type for SumAggregation. */\nexport type Sum = number;\n\n/** DataPoint value type for LastValueAggregation. */\nexport type LastValue = number;\n\n/** DataPoint value type for HistogramAggregation. */\nexport interface Histogram {\n  /**\n   * Buckets are implemented using two different arrays:\n   *  - boundaries: contains every finite bucket boundary, which are inclusive lower bounds\n   *  - counts: contains event counts for each bucket\n   *\n   * Note that we'll always have n+1 buckets, where n is the number of boundaries.\n   * This is because we need to count events that are below the lowest boundary.\n   *\n   * Example: if we measure the values: [5, 30, 5, 40, 5, 15, 15, 15, 25]\n   *  with the boundaries [ 10, 20, 30 ], we will have the following state:\n   *\n   * buckets: {\n   *\tboundaries: [10, 20, 30],\n   *\tcounts: [3, 3, 1, 2],\n   * }\n   */\n  buckets: {\n    boundaries: number[];\n    counts: number[];\n  };\n  sum?: number;\n  count: number;\n  min?: number;\n  max?: number;\n}\n\n/**\n * An Aggregator accumulation state.\n */\nexport interface Accumulation {\n  setStartTime(startTime: HrTime): void;\n  record(value: number): void;\n}\n\nexport type AccumulationRecord<T> = [MetricAttributes, T];\n\n/**\n * Base interface for aggregators. Aggregators are responsible for holding\n * aggregated values and taking a snapshot of these values upon export.\n */\nexport interface Aggregator<T> {\n  /** The kind of the aggregator. */\n  kind: AggregatorKind;\n\n  /**\n   * Create a clean state of accumulation.\n   */\n  createAccumulation(startTime: HrTime): T;\n\n  /**\n   * Returns the result of the merge of the given accumulations.\n   *\n   * This should always assume that the accumulations do not overlap and merge together for a new\n   * cumulative report.\n   *\n   * @param previous the previously captured accumulation\n   * @param delta the newly captured (delta) accumulation\n   * @returns the result of the merge of the given accumulations\n   */\n  merge(previous: T, delta: T): T;\n\n  /**\n   * Returns a new DELTA aggregation by comparing two cumulative measurements.\n   *\n   * @param previous the previously captured accumulation\n   * @param current the newly captured (cumulative) accumulation\n   * @returns The resulting delta accumulation\n   */\n  diff(previous: T, current: T): T;\n\n  /**\n   * Returns the {@link MetricData} that this {@link Aggregator} will produce.\n   *\n   * @param descriptor the metric instrument descriptor.\n   * @param accumulationByAttributes the array of attributes and accumulation pairs.\n   * @param endTime the end time of the metric data.\n   * @return the {@link MetricData} that this {@link Aggregator} will produce.\n   */\n  toMetricData(descriptor: InstrumentDescriptor,\n    aggregationTemporality: AggregationTemporality,\n    accumulationByAttributes: AccumulationRecord<T>[],\n    endTime: HrTime): Maybe<MetricData>;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Accumulation,\n  AccumulationRecord,\n  Aggregator,\n  AggregatorKind\n} from './types';\nimport {\n  DataPointType,\n  HistogramMetricData\n} from '../export/MetricData';\nimport { HrTime } from '@opentelemetry/api';\nimport {\n  InstrumentDescriptor,\n  InstrumentType\n} from '../InstrumentDescriptor';\nimport { Maybe } from '../utils';\nimport { AggregationTemporality } from '../export/AggregationTemporality';\n\n/**\n * Internal value type for HistogramAggregation.\n * Differs from the exported type as undefined sum/min/max complicate arithmetic\n * performed by this aggregation, but are required to be undefined in the exported types.\n */\ninterface InternalHistogram {\n  buckets: {\n    boundaries: number[];\n    counts: number[];\n  };\n  sum: number;\n  count: number;\n  hasMinMax: boolean;\n  min: number;\n  max: number;\n}\n\nfunction createNewEmptyCheckpoint(boundaries: number[]): InternalHistogram {\n  const counts = boundaries.map(() => 0);\n  counts.push(0);\n  return {\n    buckets: {\n      boundaries,\n      counts,\n    },\n    sum: 0,\n    count: 0,\n    hasMinMax: false,\n    min: Infinity,\n    max: -Infinity\n  };\n}\n\nexport class HistogramAccumulation implements Accumulation {\n  constructor(\n    public startTime: HrTime,\n    private readonly _boundaries: number[],\n    private _recordMinMax = true,\n    private _current: InternalHistogram = createNewEmptyCheckpoint(_boundaries)\n  ) {}\n\n  record(value: number): void {\n    this._current.count += 1;\n    this._current.sum += value;\n\n    if (this._recordMinMax) {\n      this._current.min = Math.min(value, this._current.min);\n      this._current.max = Math.max(value, this._current.max);\n      this._current.hasMinMax = true;\n    }\n\n    for (let i = 0; i < this._boundaries.length; i++) {\n      if (value < this._boundaries[i]) {\n        this._current.buckets.counts[i] += 1;\n        return;\n      }\n    }\n    // value is above all observed boundaries\n    this._current.buckets.counts[this._boundaries.length] += 1;\n  }\n\n  setStartTime(startTime: HrTime): void {\n    this.startTime = startTime;\n  }\n\n  toPointValue(): InternalHistogram {\n    return this._current;\n  }\n}\n\n/**\n * Basic aggregator which observes events and counts them in pre-defined buckets\n * and provides the total sum and count of all observations.\n */\nexport class HistogramAggregator implements Aggregator<HistogramAccumulation> {\n  public kind: AggregatorKind.HISTOGRAM = AggregatorKind.HISTOGRAM;\n\n  /**\n   * @param _boundaries upper bounds of recorded values.\n   * @param _recordMinMax If set to true, min and max will be recorded. Otherwise, min and max will not be recorded.\n   */\n  constructor(private readonly _boundaries: number[], private readonly _recordMinMax: boolean) {}\n\n  createAccumulation(startTime: HrTime) {\n    return new HistogramAccumulation(startTime, this._boundaries, this._recordMinMax);\n  }\n\n  /**\n   * Return the result of the merge of two histogram accumulations. As long as one Aggregator\n   * instance produces all Accumulations with constant boundaries we don't need to worry about\n   * merging accumulations with different boundaries.\n   */\n  merge(previous: HistogramAccumulation, delta: HistogramAccumulation): HistogramAccumulation {\n    const previousValue = previous.toPointValue();\n    const deltaValue = delta.toPointValue();\n\n    const previousCounts = previousValue.buckets.counts;\n    const deltaCounts = deltaValue.buckets.counts;\n\n    const mergedCounts = new Array(previousCounts.length);\n    for (let idx = 0; idx < previousCounts.length; idx++) {\n      mergedCounts[idx] = previousCounts[idx] + deltaCounts[idx];\n    }\n\n    let min = Infinity;\n    let max = -Infinity;\n\n    if (this._recordMinMax) {\n      if (previousValue.hasMinMax && deltaValue.hasMinMax) {\n        min = Math.min(previousValue.min, deltaValue.min);\n        max = Math.max(previousValue.max, deltaValue.max);\n      } else if (previousValue.hasMinMax) {\n        min = previousValue.min;\n        max = previousValue.max;\n      } else if (deltaValue.hasMinMax) {\n        min = deltaValue.min;\n        max = deltaValue.max;\n      }\n    }\n\n    return new HistogramAccumulation(previous.startTime, previousValue.buckets.boundaries, this._recordMinMax, {\n      buckets: {\n        boundaries: previousValue.buckets.boundaries,\n        counts: mergedCounts,\n      },\n      count: previousValue.count + deltaValue.count,\n      sum: previousValue.sum + deltaValue.sum,\n      hasMinMax: this._recordMinMax && (previousValue.hasMinMax || deltaValue.hasMinMax),\n      min: min,\n      max: max\n    });\n  }\n\n  /**\n   * Returns a new DELTA aggregation by comparing two cumulative measurements.\n   */\n  diff(previous: HistogramAccumulation, current: HistogramAccumulation): HistogramAccumulation {\n    const previousValue = previous.toPointValue();\n    const currentValue = current.toPointValue();\n\n    const previousCounts = previousValue.buckets.counts;\n    const currentCounts = currentValue.buckets.counts;\n\n    const diffedCounts = new Array(previousCounts.length);\n    for (let idx = 0; idx < previousCounts.length; idx++) {\n      diffedCounts[idx] = currentCounts[idx] - previousCounts[idx];\n    }\n\n    return new HistogramAccumulation(current.startTime, previousValue.buckets.boundaries, this._recordMinMax, {\n      buckets: {\n        boundaries: previousValue.buckets.boundaries,\n        counts: diffedCounts,\n      },\n      count: currentValue.count - previousValue.count,\n      sum: currentValue.sum - previousValue.sum,\n      hasMinMax: false,\n      min: Infinity,\n      max: -Infinity\n    });\n  }\n\n  toMetricData(\n    descriptor: InstrumentDescriptor,\n    aggregationTemporality: AggregationTemporality,\n    accumulationByAttributes: AccumulationRecord<HistogramAccumulation>[],\n    endTime: HrTime): Maybe<HistogramMetricData> {\n    return {\n      descriptor,\n      aggregationTemporality,\n      dataPointType: DataPointType.HISTOGRAM,\n      dataPoints: accumulationByAttributes.map(([attributes, accumulation]) => {\n        const pointValue = accumulation.toPointValue();\n\n        // determine if instrument allows negative values.\n        const allowsNegativeValues =\n          (descriptor.type === InstrumentType.UP_DOWN_COUNTER) ||\n          (descriptor.type === InstrumentType.OBSERVABLE_GAUGE) ||\n          (descriptor.type === InstrumentType.OBSERVABLE_UP_DOWN_COUNTER);\n\n        return {\n          attributes,\n          startTime: accumulation.startTime,\n          endTime,\n          value: {\n            min: pointValue.hasMinMax ? pointValue.min : undefined,\n            max: pointValue.hasMinMax ? pointValue.max : undefined,\n            sum: !allowsNegativeValues ? pointValue.sum : undefined,\n            buckets: pointValue.buckets,\n            count: pointValue.count\n          },\n        };\n      })\n    };\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Accumulation, AccumulationRecord, Aggregator, AggregatorKind, LastValue } from './types';\nimport { HrTime } from '@opentelemetry/api';\nimport { hrTime, hrTimeToMicroseconds } from '@opentelemetry/core';\nimport { DataPointType, GaugeMetricData } from '../export/MetricData';\nimport { InstrumentDescriptor } from '../InstrumentDescriptor';\nimport { Maybe } from '../utils';\nimport { AggregationTemporality } from '../export/AggregationTemporality';\n\nexport class LastValueAccumulation implements Accumulation {\n  constructor(public startTime: HrTime, private _current: number = 0, public sampleTime: HrTime = [0, 0]) {}\n\n  record(value: number): void {\n    this._current = value;\n    this.sampleTime = hrTime();\n  }\n\n  setStartTime(startTime: HrTime): void {\n    this.startTime = startTime;\n  }\n\n  toPointValue(): LastValue {\n    return this._current;\n  }\n}\n\n/** Basic aggregator which calculates a LastValue from individual measurements. */\nexport class LastValueAggregator implements Aggregator<LastValueAccumulation> {\n  public kind: AggregatorKind.LAST_VALUE = AggregatorKind.LAST_VALUE;\n\n  createAccumulation(startTime: HrTime) {\n    return new LastValueAccumulation(startTime);\n  }\n\n  /**\n   * Returns the result of the merge of the given accumulations.\n   *\n   * Return the newly captured (delta) accumulation for LastValueAggregator.\n   */\n  merge(previous: LastValueAccumulation, delta: LastValueAccumulation): LastValueAccumulation {\n    // nanoseconds may lose precisions.\n    const latestAccumulation = hrTimeToMicroseconds(delta.sampleTime) >= hrTimeToMicroseconds(previous.sampleTime) ? delta : previous;\n    return new LastValueAccumulation(previous.startTime, latestAccumulation.toPointValue(), latestAccumulation.sampleTime);\n  }\n\n  /**\n   * Returns a new DELTA aggregation by comparing two cumulative measurements.\n   *\n   * A delta aggregation is not meaningful to LastValueAggregator, just return\n   * the newly captured (delta) accumulation for LastValueAggregator.\n   */\n  diff(previous: LastValueAccumulation, current: LastValueAccumulation): LastValueAccumulation {\n    // nanoseconds may lose precisions.\n    const latestAccumulation = hrTimeToMicroseconds(current.sampleTime) >= hrTimeToMicroseconds(previous.sampleTime) ? current : previous;\n    return new LastValueAccumulation(current.startTime, latestAccumulation.toPointValue(), latestAccumulation.sampleTime);\n  }\n\n  toMetricData(\n    descriptor: InstrumentDescriptor,\n    aggregationTemporality: AggregationTemporality,\n    accumulationByAttributes: AccumulationRecord<LastValueAccumulation>[],\n    endTime: HrTime): Maybe<GaugeMetricData> {\n    return {\n      descriptor,\n      aggregationTemporality,\n      dataPointType: DataPointType.GAUGE,\n      dataPoints: accumulationByAttributes.map(([attributes, accumulation]) => {\n        return {\n          attributes,\n          startTime: accumulation.startTime,\n          endTime,\n          value: accumulation.toPointValue(),\n        };\n      })\n    };\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sum, AggregatorKind, Aggregator, Accumulation, AccumulationRecord } from './types';\nimport { HrTime } from '@opentelemetry/api';\nimport { DataPointType, SumMetricData } from '../export/MetricData';\nimport { InstrumentDescriptor } from '../InstrumentDescriptor';\nimport { Maybe } from '../utils';\nimport { AggregationTemporality } from '../export/AggregationTemporality';\n\nexport class SumAccumulation implements Accumulation {\n  constructor(public startTime: HrTime, public monotonic: boolean, private _current: number = 0, public reset = false) {}\n\n  record(value: number): void {\n    if (this.monotonic && value < 0) {\n      return;\n    }\n    this._current += value;\n  }\n\n  setStartTime(startTime: HrTime): void {\n    this.startTime = startTime;\n  }\n\n  toPointValue(): Sum {\n    return this._current;\n  }\n}\n\n/** Basic aggregator which calculates a Sum from individual measurements. */\nexport class SumAggregator implements Aggregator<SumAccumulation> {\n  public kind: AggregatorKind.SUM = AggregatorKind.SUM;\n\n  constructor (public monotonic: boolean) {}\n\n  createAccumulation(startTime: HrTime) {\n    return new SumAccumulation(startTime, this.monotonic);\n  }\n\n  /**\n   * Returns the result of the merge of the given accumulations.\n   */\n  merge(previous: SumAccumulation, delta: SumAccumulation): SumAccumulation {\n    const prevPv = previous.toPointValue();\n    const deltaPv = delta.toPointValue();\n    if (delta.reset) {\n      return new SumAccumulation(delta.startTime, this.monotonic, deltaPv, delta.reset);\n    }\n    return new SumAccumulation(previous.startTime, this.monotonic, prevPv + deltaPv);\n  }\n\n  /**\n   * Returns a new DELTA aggregation by comparing two cumulative measurements.\n   */\n  diff(previous: SumAccumulation, current: SumAccumulation): SumAccumulation {\n    const prevPv = previous.toPointValue();\n    const currPv = current.toPointValue();\n    /**\n     * If the SumAggregator is a monotonic one and the previous point value is\n     * greater than the current one, a reset is deemed to be happened.\n     * Return the current point value to prevent the value from been reset.\n     */\n    if (this.monotonic && (prevPv > currPv)) {\n      return new SumAccumulation(current.startTime, this.monotonic, currPv, true);\n    }\n    return new SumAccumulation(current.startTime, this.monotonic, currPv - prevPv);\n  }\n\n  toMetricData(\n    descriptor: InstrumentDescriptor,\n    aggregationTemporality: AggregationTemporality,\n    accumulationByAttributes: AccumulationRecord<SumAccumulation>[],\n    endTime: HrTime): Maybe<SumMetricData> {\n    return {\n      descriptor,\n      aggregationTemporality,\n      dataPointType: DataPointType.SUM,\n      dataPoints: accumulationByAttributes.map(([attributes, accumulation]) => {\n        return {\n          attributes,\n          startTime: accumulation.startTime,\n          endTime,\n          value: accumulation.toPointValue(),\n        };\n      }),\n      isMonotonic: this.monotonic\n    };\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HrTime } from '@opentelemetry/api';\nimport { InstrumentationScope } from '@opentelemetry/core';\nimport { MetricCollectOptions } from '../export/MetricProducer';\nimport { ScopeMetrics } from '../export/MetricData';\nimport { createInstrumentDescriptorWithView, InstrumentDescriptor } from '../InstrumentDescriptor';\nimport { Meter } from '../Meter';\nimport { isNotNullish } from '../utils';\nimport { AsyncMetricStorage } from './AsyncMetricStorage';\nimport { MeterProviderSharedState } from './MeterProviderSharedState';\nimport { MetricCollectorHandle } from './MetricCollector';\nimport { MetricStorageRegistry } from './MetricStorageRegistry';\nimport { MultiMetricStorage } from './MultiWritableMetricStorage';\nimport { ObservableRegistry } from './ObservableRegistry';\nimport { SyncMetricStorage } from './SyncMetricStorage';\n\n/**\n * An internal record for shared meter provider states.\n */\nexport class MeterSharedState {\n  private _metricStorageRegistry = new MetricStorageRegistry();\n  observableRegistry = new ObservableRegistry();\n  meter: Meter;\n\n  constructor(private _meterProviderSharedState: MeterProviderSharedState, private _instrumentationScope: InstrumentationScope) {\n    this.meter = new Meter(this);\n  }\n\n  registerMetricStorage(descriptor: InstrumentDescriptor) {\n    const views = this._meterProviderSharedState.viewRegistry.findViews(descriptor, this._instrumentationScope);\n    const storages = views\n      .map(view => {\n        const viewDescriptor = createInstrumentDescriptorWithView(view, descriptor);\n        const aggregator = view.aggregation.createAggregator(viewDescriptor);\n        const storage = new SyncMetricStorage(viewDescriptor, aggregator, view.attributesProcessor);\n        return this._metricStorageRegistry.register(storage);\n      })\n      .filter(isNotNullish);\n    if (storages.length === 1)  {\n      return storages[0];\n    }\n    return new MultiMetricStorage(storages);\n  }\n\n  registerAsyncMetricStorage(descriptor: InstrumentDescriptor) {\n    const views = this._meterProviderSharedState.viewRegistry.findViews(descriptor, this._instrumentationScope);\n    const storages = views\n      .map(view => {\n        const viewDescriptor = createInstrumentDescriptorWithView(view, descriptor);\n        const aggregator = view.aggregation.createAggregator(viewDescriptor);\n        const viewStorage = new AsyncMetricStorage(viewDescriptor, aggregator, view.attributesProcessor);\n        return this._metricStorageRegistry.register(viewStorage);\n      })\n      .filter(isNotNullish);\n    return storages;\n  }\n\n  /**\n   * @param collector opaque handle of {@link MetricCollector} which initiated the collection.\n   * @param collectionTime the HrTime at which the collection was initiated.\n   * @returns the list of metric data collected.\n   */\n  async collect(collector: MetricCollectorHandle, collectionTime: HrTime, options?: MetricCollectOptions): Promise<ScopeMetricsResult> {\n    /**\n     * 1. Call all observable callbacks first.\n     * 2. Collect metric result for the collector.\n     */\n    const errors = await this.observableRegistry.observe(collectionTime, options?.timeoutMillis);\n    const metricDataList = Array.from(this._metricStorageRegistry.getStorages())\n      .map(metricStorage => {\n        return metricStorage.collect(\n          collector,\n          this._meterProviderSharedState.metricCollectors,\n          collectionTime);\n      })\n      .filter(isNotNullish);\n\n    return {\n      scopeMetrics: {\n        scope: this._instrumentationScope,\n        metrics: metricDataList.filter(isNotNullish),\n      },\n      errors,\n    };\n  }\n}\n\ninterface ScopeMetricsResult {\n  scopeMetrics: ScopeMetrics;\n  errors: unknown[];\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HrTime } from '@opentelemetry/api';\nimport { Accumulation, Aggregator } from '../aggregator/types';\nimport { InstrumentDescriptor } from '../InstrumentDescriptor';\nimport { AttributesProcessor } from '../view/AttributesProcessor';\nimport { MetricStorage } from './MetricStorage';\nimport { MetricData } from '../export/MetricData';\nimport { DeltaMetricProcessor } from './DeltaMetricProcessor';\nimport { TemporalMetricProcessor } from './TemporalMetricProcessor';\nimport { Maybe } from '../utils';\nimport { MetricCollectorHandle } from './MetricCollector';\nimport { AttributeHashMap } from './HashMap';\nimport { AsyncWritableMetricStorage } from './WritableMetricStorage';\n\n/**\n * Internal interface.\n *\n * Stores and aggregates {@link MetricData} for asynchronous instruments.\n */\nexport class AsyncMetricStorage<T extends Maybe<Accumulation>> extends MetricStorage implements AsyncWritableMetricStorage {\n  private _deltaMetricStorage: DeltaMetricProcessor<T>;\n  private _temporalMetricStorage: TemporalMetricProcessor<T>;\n\n  constructor(\n    _instrumentDescriptor: InstrumentDescriptor,\n    aggregator: Aggregator<T>,\n    private _attributesProcessor: AttributesProcessor,\n  ) {\n    super(_instrumentDescriptor);\n    this._deltaMetricStorage = new DeltaMetricProcessor(aggregator);\n    this._temporalMetricStorage = new TemporalMetricProcessor(aggregator);\n  }\n\n  record(measurements: AttributeHashMap<number>, observationTime: HrTime) {\n    const processed = new AttributeHashMap<number>();\n    Array.from(measurements.entries()).forEach(([attributes, value]) => {\n      processed.set(this._attributesProcessor.process(attributes), value);\n    });\n    this._deltaMetricStorage.batchCumulate(processed, observationTime);\n  }\n\n  /**\n   * Collects the metrics from this storage. The ObservableCallback is invoked\n   * during the collection.\n   *\n   * Note: This is a stateful operation and may reset any interval-related\n   * state for the MetricCollector.\n   */\n  collect(\n    collector: MetricCollectorHandle,\n    collectors: MetricCollectorHandle[],\n    collectionTime: HrTime,\n  ): Maybe<MetricData> {\n    const accumulations = this._deltaMetricStorage.collect();\n\n    return this._temporalMetricStorage.buildMetrics(\n      collector,\n      collectors,\n      this._instrumentDescriptor,\n      accumulations,\n      collectionTime\n    );\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HrTime } from '@opentelemetry/api';\nimport { MetricData } from '../export/MetricData';\nimport { Maybe } from '../utils';\nimport { MetricCollectorHandle } from './MetricCollector';\nimport { createInstrumentDescriptor, InstrumentDescriptor } from '../InstrumentDescriptor';\n\n/**\n * Internal interface.\n *\n * Represents a storage from which we can collect metrics.\n */\nexport abstract class MetricStorage {\n  constructor(protected _instrumentDescriptor: InstrumentDescriptor) {\n  }\n\n  /**\n   * Collects the metrics from this storage.\n   *\n   * Note: This is a stateful operation and may reset any interval-related\n   * state for the MetricCollector.\n   */\n  abstract collect(\n    collector: MetricCollectorHandle,\n    collectors: MetricCollectorHandle[],\n    collectionTime: HrTime,\n  ): Maybe<MetricData>;\n\n  getInstrumentDescriptor(): InstrumentDescriptor{\n    return this._instrumentDescriptor;\n  }\n\n  updateDescription(description: string): void{\n    this._instrumentDescriptor = createInstrumentDescriptor(\n      this._instrumentDescriptor.name,\n      this._instrumentDescriptor.type,\n      {\n        description: description,\n        valueType: this._instrumentDescriptor.valueType,\n        unit: this._instrumentDescriptor.unit\n      });\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, HrTime } from '@opentelemetry/api';\nimport { MetricAttributes } from '@opentelemetry/api-metrics';\nimport { Maybe } from '../utils';\nimport { Accumulation, Aggregator } from '../aggregator/types';\nimport { AttributeHashMap } from './HashMap';\n\n/**\n * Internal interface.\n *\n * Allows synchronous collection of metrics. This processor should allow\n * allocation of new aggregation cells for metrics and convert cumulative\n * recording to delta data points.\n */\nexport class DeltaMetricProcessor<T extends Maybe<Accumulation>> {\n  private _activeCollectionStorage = new AttributeHashMap<T>();\n  // TODO: find a reasonable mean to clean the memo;\n  // https://github.com/open-telemetry/opentelemetry-specification/pull/2208\n  private _cumulativeMemoStorage = new AttributeHashMap<T>();\n\n  constructor(private _aggregator: Aggregator<T>) {}\n\n  record(value: number, attributes: MetricAttributes, _context: Context, collectionTime: HrTime) {\n    const accumulation = this._activeCollectionStorage.getOrDefault(\n      attributes,\n      () => this._aggregator.createAccumulation(collectionTime)\n    );\n    accumulation?.record(value);\n  }\n\n  batchCumulate(measurements: AttributeHashMap<number>, collectionTime: HrTime) {\n    Array.from(measurements.entries()).forEach(([attributes, value, hashCode]) => {\n      const accumulation = this._aggregator.createAccumulation(collectionTime);\n      accumulation?.record(value);\n      let delta = accumulation;\n      if (this._cumulativeMemoStorage.has(attributes, hashCode)) {\n        // has() returned true, previous is present.\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const previous = this._cumulativeMemoStorage.get(attributes, hashCode)!;\n        delta = this._aggregator.diff(previous, accumulation);\n      }\n\n      // Save the current record and the delta record.\n      this._cumulativeMemoStorage.set(attributes, accumulation, hashCode);\n      this._activeCollectionStorage.set(attributes, delta, hashCode);\n    });\n  }\n\n  /**\n   * Returns a collection of delta metrics. Start time is the when first\n   * time event collected.\n   */\n  collect() {\n    const unreportedDelta = this._activeCollectionStorage;\n    this._activeCollectionStorage = new AttributeHashMap();\n    return unreportedDelta;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MetricAttributes } from '@opentelemetry/api-metrics';\nimport { hashAttributes } from '../utils';\n\nexport interface Hash<ValueType, HashCodeType> {\n  (value: ValueType): HashCodeType;\n}\n\nexport class HashMap<KeyType, ValueType, HashCodeType> {\n  private _valueMap = new Map<HashCodeType, ValueType>();\n  private _keyMap = new Map<HashCodeType, KeyType>();\n\n  constructor(private _hash: Hash<KeyType, HashCodeType>) {}\n\n  get(key: KeyType, hashCode?: HashCodeType) {\n    hashCode ??= this._hash(key);\n    return this._valueMap.get(hashCode);\n  }\n\n  getOrDefault(key: KeyType, defaultFactory: () => ValueType) {\n    const hash = this._hash(key);\n    if (this._valueMap.has(hash)) {\n      return this._valueMap.get(hash);\n    }\n    const val = defaultFactory();\n    if (!this._keyMap.has(hash)) {\n      this._keyMap.set(hash, key);\n    }\n    this._valueMap.set(hash, val);\n    return val;\n  }\n\n  set(key: KeyType, value: ValueType, hashCode?: HashCodeType) {\n    hashCode ??= this._hash(key);\n    if (!this._keyMap.has(hashCode)) {\n      this._keyMap.set(hashCode, key);\n    }\n    this._valueMap.set(hashCode, value);\n  }\n\n  has(key: KeyType, hashCode?: HashCodeType) {\n    hashCode ??= this._hash(key);\n    return this._valueMap.has(hashCode);\n  }\n\n  *keys(): IterableIterator<[KeyType, HashCodeType]> {\n    const keyIterator = this._keyMap.entries();\n    let next = keyIterator.next();\n    while (next.done !== true) {\n      yield [ next.value[1], next.value[0]];\n      next = keyIterator.next();\n    }\n  }\n\n  *entries(): IterableIterator<[KeyType, ValueType, HashCodeType]> {\n    const valueIterator = this._valueMap.entries();\n    let next = valueIterator.next();\n    while (next.done !== true) {\n      // next.value[0] here can not be undefined\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      yield [ this._keyMap.get(next.value[0])!, next.value[1], next.value[0]];\n      next = valueIterator.next();\n    }\n  }\n\n  get size() {\n    return this._valueMap.size;\n  }\n}\n\nexport class AttributeHashMap<ValueType> extends HashMap<MetricAttributes, ValueType, string> {\n  constructor() {\n    super(hashAttributes);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HrTime } from '@opentelemetry/api';\nimport { Accumulation, AccumulationRecord, Aggregator } from '../aggregator/types';\nimport { MetricData } from '../export/MetricData';\nimport { InstrumentDescriptor } from '../InstrumentDescriptor';\nimport { AggregationTemporality } from '../export/AggregationTemporality';\nimport { Maybe } from '../utils';\nimport { MetricCollectorHandle } from './MetricCollector';\nimport { AttributeHashMap } from './HashMap';\n\n/**\n * Remembers what was presented to a specific exporter.\n */\ninterface LastReportedHistory<T extends Maybe<Accumulation>> {\n  /**\n   * The last accumulation of metric data.\n   */\n  accumulations: AttributeHashMap<T>;\n  /**\n   * The timestamp the data was reported.\n   */\n  collectionTime: HrTime;\n  /**\n   * The AggregationTemporality used to aggregate reports.\n   */\n  aggregationTemporality: AggregationTemporality;\n}\n\n/**\n * Internal interface.\n *\n * Provides unique reporting for each collectors. Allows synchronous collection\n * of metrics and reports given temporality values.\n */\nexport class TemporalMetricProcessor<T extends Maybe<Accumulation>> {\n  private _unreportedAccumulations = new Map<MetricCollectorHandle, AttributeHashMap<T>[]>();\n  private _reportHistory = new Map<MetricCollectorHandle, LastReportedHistory<T>>();\n\n  constructor(private _aggregator: Aggregator<T>) {}\n\n  /**\n   * Builds the {@link MetricData} streams to report against a specific MetricCollector.\n   * @param collector The information of the MetricCollector.\n   * @param collectors The registered collectors.\n   * @param resource The resource to attach these metrics against.\n   * @param instrumentationScope The instrumentation scope that generated these metrics.\n   * @param instrumentDescriptor The instrumentation descriptor that these metrics generated with.\n   * @param currentAccumulations The current accumulation of metric data from instruments.\n   * @param collectionTime The current collection timestamp.\n   * @returns The {@link MetricData} points or `null`.\n   */\n  buildMetrics(\n    collector: MetricCollectorHandle,\n    collectors: MetricCollectorHandle[],\n    instrumentDescriptor: InstrumentDescriptor,\n    currentAccumulations: AttributeHashMap<T>,\n    collectionTime: HrTime,\n  ): Maybe<MetricData> {\n    this._stashAccumulations(collectors, currentAccumulations);\n    const unreportedAccumulations = this._getMergedUnreportedAccumulations(collector);\n\n    let result = unreportedAccumulations;\n    let aggregationTemporality: AggregationTemporality;\n    // Check our last report time.\n    if (this._reportHistory.has(collector)) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const last = this._reportHistory.get(collector)!;\n      const lastCollectionTime = last.collectionTime;\n      aggregationTemporality = last.aggregationTemporality;\n\n      // Use aggregation temporality + instrument to determine if we do a merge or a diff of\n      // previous. We have the following four scenarios:\n      // 1. Cumulative Aggregation (temporality) + Delta recording (sync instrument).\n      //    Here we merge with our last record to get a cumulative aggregation.\n      // 2. Cumulative Aggregation + Cumulative recording (async instrument).\n      //    Cumulative records are converted to delta recording with DeltaMetricProcessor.\n      //    Here we merge with our last record to get a cumulative aggregation.\n      // 3. Delta Aggregation + Delta recording\n      //    Calibrate the startTime of metric streams to be the reader's lastCollectionTime.\n      // 4. Delta Aggregation + Cumulative recording.\n      //    Cumulative records are converted to delta recording with DeltaMetricProcessor.\n      //    Calibrate the startTime of metric streams to be the reader's lastCollectionTime.\n      if (aggregationTemporality === AggregationTemporality.CUMULATIVE) {\n        // We need to make sure the current delta recording gets merged into the previous cumulative\n        // for the next cumulative recording.\n        result = TemporalMetricProcessor.merge(last.accumulations, unreportedAccumulations, this._aggregator);\n      } else {\n        result = TemporalMetricProcessor.calibrateStartTime(last.accumulations, unreportedAccumulations, lastCollectionTime);\n      }\n    } else {\n      // Call into user code to select aggregation temporality for the instrument.\n      aggregationTemporality = collector.selectAggregationTemporality(instrumentDescriptor.type);\n    }\n\n    // Update last reported (cumulative) accumulation.\n    this._reportHistory.set(collector, {\n      accumulations: result,\n      collectionTime,\n      aggregationTemporality,\n    });\n\n    return this._aggregator.toMetricData(\n      instrumentDescriptor,\n      aggregationTemporality,\n      AttributesMapToAccumulationRecords(result),\n      /* endTime */ collectionTime);\n  }\n\n  private _stashAccumulations(collectors: MetricCollectorHandle[], currentAccumulation: AttributeHashMap<T>) {\n    collectors.forEach(it => {\n      let stash = this._unreportedAccumulations.get(it);\n      if (stash === undefined) {\n        stash = [];\n        this._unreportedAccumulations.set(it, stash);\n      }\n      stash.push(currentAccumulation);\n    });\n  }\n\n  private _getMergedUnreportedAccumulations(collector: MetricCollectorHandle) {\n    let result = new AttributeHashMap<T>();\n    const unreportedList = this._unreportedAccumulations.get(collector);\n    this._unreportedAccumulations.set(collector, []);\n    if (unreportedList === undefined) {\n      return result;\n    }\n    for (const it of unreportedList) {\n      result = TemporalMetricProcessor.merge(result, it, this._aggregator);\n    }\n    return result;\n  }\n\n  static merge<T extends Maybe<Accumulation>>(last: AttributeHashMap<T>, current: AttributeHashMap<T>, aggregator: Aggregator<T>) {\n    const result = last;\n    const iterator = current.entries();\n    let next = iterator.next();\n    while (next.done !== true) {\n      const [key, record, hash] = next.value;\n      if (last.has(key, hash)) {\n        const lastAccumulation = last.get(key, hash);\n        // last.has() returned true, lastAccumulation is present.\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const accumulation = aggregator.merge(lastAccumulation!, record);\n        result.set(key, accumulation, hash);\n      } else {\n        result.set(key, record, hash);\n      }\n\n      next = iterator.next();\n    }\n    return result;\n  }\n\n  /**\n   * Calibrate the reported metric streams' startTime to lastCollectionTime. Leaves\n   * the new stream to be the initial observation time unchanged.\n   */\n  static calibrateStartTime<T extends Maybe<Accumulation>>(last: AttributeHashMap<T>, current: AttributeHashMap<T>, lastCollectionTime: HrTime) {\n    for (const [key, hash] of last.keys()) {\n      const currentAccumulation = current.get(key, hash);\n      currentAccumulation?.setStartTime(lastCollectionTime);\n    }\n    return current;\n  }\n}\n\n// TypeScript complains about converting 3 elements tuple to AccumulationRecord<T>.\nfunction AttributesMapToAccumulationRecords<T>(map: AttributeHashMap<T>): AccumulationRecord<T>[] {\n  return Array.from(map.entries()) as unknown as AccumulationRecord<T>[];\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MetricStorage } from './MetricStorage';\nimport { isDescriptorCompatibleWith } from '../InstrumentDescriptor';\nimport * as api from '@opentelemetry/api';\nimport { Maybe } from '../utils';\nimport { getConflictResolutionRecipe, getIncompatibilityDetails } from '../view/RegistrationConflicts';\n\n/**\n * Internal class for storing {@link MetricStorage}\n */\nexport class MetricStorageRegistry {\n  private readonly _metricStorageRegistry = new Map<string, MetricStorage[]>();\n\n  static create(){\n    return new MetricStorageRegistry();\n  }\n\n  getStorages(): MetricStorage[] {\n    let storages: MetricStorage[] = [];\n    for (const metricStorages of this._metricStorageRegistry.values()) {\n      storages = storages.concat(metricStorages);\n    }\n\n    return storages;\n  }\n\n  register<T extends MetricStorage>(storage: T): Maybe<T> {\n    const expectedDescriptor = storage.getInstrumentDescriptor();\n    const existingStorages = this._metricStorageRegistry.get(expectedDescriptor.name);\n\n    // Add storage if it does not exist.\n    if (existingStorages === undefined) {\n      this._metricStorageRegistry.set(expectedDescriptor.name, [storage]);\n      return storage;\n    }\n\n    let compatibleStorage = null;\n\n    for (const existingStorage of existingStorages) {\n      const existingDescriptor = existingStorage.getInstrumentDescriptor();\n\n      if (isDescriptorCompatibleWith(existingDescriptor, expectedDescriptor)) {\n        // Use the longer description if it does not match.\n        if (existingDescriptor.description !== expectedDescriptor.description) {\n          if (expectedDescriptor.description.length > existingDescriptor.description.length) {\n            existingStorage.updateDescription(expectedDescriptor.description);\n          }\n\n          api.diag.warn('A view or instrument with the name ',\n            expectedDescriptor.name,\n            ' has already been registered, but has a different description and is incompatible with another registered view.\\n',\n            'Details:\\n',\n            getIncompatibilityDetails(existingDescriptor, expectedDescriptor),\n            'The longer description will be used.\\nTo resolve the conflict:',\n            getConflictResolutionRecipe(existingDescriptor, expectedDescriptor));\n        }\n        // Storage is fully compatible. There will never be more than one pre-existing fully compatible storage.\n        compatibleStorage = existingStorage as T;\n      } else {\n        // The implementation SHOULD warn about duplicate instrument registration\n        // conflicts after applying View configuration.\n        api.diag.warn('A view or instrument with the name ',\n          expectedDescriptor.name,\n          ' has already been registered and is incompatible with another registered view.\\n',\n          'Details:\\n',\n          getIncompatibilityDetails(existingDescriptor, expectedDescriptor),\n          'To resolve the conflict:\\n',\n          getConflictResolutionRecipe(existingDescriptor, expectedDescriptor));\n      }\n    }\n\n    if (compatibleStorage != null) {\n      return compatibleStorage;\n    }\n\n    // None of the storages were compatible, add the current one to the list.\n    existingStorages.push(storage);\n    return storage;\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentSelectorCriteria } from './InstrumentSelector';\nimport { InstrumentDescriptor } from '../InstrumentDescriptor';\n\nexport function getIncompatibilityDetails(existing: InstrumentDescriptor, otherDescriptor: InstrumentDescriptor) {\n  let incompatibility = '';\n  if (existing.unit !== otherDescriptor.unit) {\n    incompatibility += `\\t- Unit '${existing.unit}' does not match '${otherDescriptor.unit}'\\n`;\n  }\n  if (existing.type !== otherDescriptor.type) {\n    incompatibility += `\\t- Type '${existing.type}' does not match '${otherDescriptor.type}'\\n`;\n  }\n  if (existing.valueType !== otherDescriptor.valueType) {\n    incompatibility += `\\t- Value Type '${existing.valueType}' does not match '${otherDescriptor.valueType}'\\n`;\n  }\n  if (existing.description !== otherDescriptor.description) {\n    incompatibility += `\\t- Description '${existing.description}' does not match '${otherDescriptor.description}'\\n`;\n  }\n\n  return incompatibility;\n}\n\nexport function getValueTypeConflictResolutionRecipe(existing: InstrumentDescriptor, otherDescriptor: InstrumentDescriptor) {\n  return `\\t- use valueType '${existing.valueType}' on instrument creation or use an instrument name other than '${otherDescriptor.name}'`;\n}\n\nexport function getUnitConflictResolutionRecipe(existing: InstrumentDescriptor, otherDescriptor: InstrumentDescriptor) {\n  return `\\t- use unit '${existing.unit}' on instrument creation or use an instrument name other than '${otherDescriptor.name}'`;\n}\n\nexport function getTypeConflictResolutionRecipe(existing: InstrumentDescriptor, otherDescriptor: InstrumentDescriptor) {\n  const selector: InstrumentSelectorCriteria = {\n    name: otherDescriptor.name,\n    type: otherDescriptor.type\n  };\n\n  const selectorString = JSON.stringify(selector);\n\n  return `\\t- create a new view with a name other than '${existing.name}' and InstrumentSelector '${selectorString}'`;\n}\n\nexport function getDescriptionResolutionRecipe(existing: InstrumentDescriptor, otherDescriptor: InstrumentDescriptor): string {\n  const selector: InstrumentSelectorCriteria = {\n    name: otherDescriptor.name,\n    type: otherDescriptor.type\n  };\n\n  const selectorString = JSON.stringify(selector);\n\n  return `\\t- create a new view with a name other than '${existing.name}' and InstrumentSelector '${selectorString}'\n    \\t- OR - create a new view with the name ${existing.name} and description '${existing.description}' and InstrumentSelector ${selectorString}\n    \\t- OR - create a new view with the name ${otherDescriptor.name} and description '${existing.description}' and InstrumentSelector ${selectorString}`;\n}\n\nexport function getConflictResolutionRecipe(existing: InstrumentDescriptor, otherDescriptor: InstrumentDescriptor): string {\n  // Conflicts that cannot be solved via views.\n  if (existing.valueType !== otherDescriptor.valueType) {\n    return getValueTypeConflictResolutionRecipe(existing, otherDescriptor);\n  }\n\n  if (existing.unit !== otherDescriptor.unit) {\n    return getUnitConflictResolutionRecipe(existing, otherDescriptor);\n  }\n\n  // Conflicts that can be solved via views.\n  if (existing.type !== otherDescriptor.type) {\n    // this will automatically solve possible description conflicts.\n    return getTypeConflictResolutionRecipe(existing, otherDescriptor);\n  }\n\n  if (existing.description !== otherDescriptor.description) {\n    return getDescriptionResolutionRecipe(existing, otherDescriptor);\n  }\n\n  return '';\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, HrTime } from '@opentelemetry/api';\nimport { MetricAttributes } from '@opentelemetry/api-metrics';\nimport { WritableMetricStorage } from './WritableMetricStorage';\n\n/**\n * Internal interface.\n */\nexport class MultiMetricStorage implements WritableMetricStorage {\n  constructor(private readonly _backingStorages: WritableMetricStorage[]) {}\n\n  record(value: number, attributes: MetricAttributes, context: Context, recordTime: HrTime) {\n    this._backingStorages.forEach(it => {\n      it.record(value, attributes, context, recordTime);\n    });\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { HrTime } from '@opentelemetry/api';\nimport { BatchObservableCallback, Observable, ObservableCallback } from '@opentelemetry/api-metrics';\nimport { isObservableInstrument, ObservableInstrument } from '../Instruments';\nimport { BatchObservableResultImpl, ObservableResultImpl } from '../ObservableResult';\nimport { callWithTimeout, PromiseAllSettled, isPromiseAllSettledRejectionResult, setEquals } from '../utils';\n\n/**\n * Records for single instrument observable callback.\n */\ninterface ObservableCallbackRecord {\n  callback: ObservableCallback;\n  instrument: ObservableInstrument;\n}\n\n/**\n * Records for multiple instruments observable callback.\n */\ninterface BatchObservableCallbackRecord {\n  callback: BatchObservableCallback;\n  instruments: Set<ObservableInstrument>;\n}\n\n/**\n * An internal interface for managing ObservableCallbacks.\n *\n * Every registered callback associated with a set of instruments are be evaluated\n * exactly once during collection prior to reading data for that instrument.\n */\nexport class ObservableRegistry {\n  private _callbacks: ObservableCallbackRecord[] = [];\n  private _batchCallbacks: BatchObservableCallbackRecord[] = [];\n\n  addCallback(callback: ObservableCallback, instrument: ObservableInstrument) {\n    const idx = this._findCallback(callback, instrument);\n    if (idx >= 0) {\n      return;\n    }\n    this._callbacks.push({ callback, instrument });\n  }\n\n  removeCallback(callback: ObservableCallback, instrument: ObservableInstrument) {\n    const idx = this._findCallback(callback, instrument);\n    if (idx < 0) {\n      return;\n    }\n    this._callbacks.splice(idx, 1);\n  }\n\n  addBatchCallback(callback: BatchObservableCallback, instruments: Observable[]) {\n    // Create a set of unique instruments.\n    const observableInstruments = new Set(instruments.filter(isObservableInstrument));\n    if (observableInstruments.size === 0) {\n      api.diag.error('BatchObservableCallback is not associated with valid instruments', instruments);\n      return;\n    }\n    const idx = this._findBatchCallback(callback, observableInstruments);\n    if (idx >= 0) {\n      return;\n    }\n    this._batchCallbacks.push({ callback, instruments: observableInstruments });\n  }\n\n  removeBatchCallback(callback: BatchObservableCallback, instruments: Observable[]) {\n    // Create a set of unique instruments.\n    const observableInstruments = new Set(instruments.filter(isObservableInstrument));\n    const idx = this._findBatchCallback(callback, observableInstruments);\n    if (idx < 0) {\n      return;\n    }\n    this._batchCallbacks.splice(idx, 1);\n  }\n\n  /**\n   * @returns a promise of rejected reasons for invoking callbacks.\n   */\n  async observe(collectionTime: HrTime, timeoutMillis?: number): Promise<unknown[]> {\n    const callbackFutures = this._observeCallbacks(collectionTime, timeoutMillis);\n    const batchCallbackFutures = this._observeBatchCallbacks(collectionTime, timeoutMillis);\n\n    const results = await PromiseAllSettled([...callbackFutures, ...batchCallbackFutures]);\n\n    const rejections = results.filter(isPromiseAllSettledRejectionResult)\n      .map(it => it.reason);\n    return rejections;\n  }\n\n  private _observeCallbacks(observationTime: HrTime, timeoutMillis?: number) {\n    return this._callbacks\n      .map(async ({ callback, instrument }) => {\n        const observableResult = new ObservableResultImpl(instrument._descriptor);\n        let callPromise: Promise<void> = Promise.resolve(callback(observableResult));\n        if (timeoutMillis != null) {\n          callPromise = callWithTimeout(callPromise, timeoutMillis);\n        }\n        await callPromise;\n        instrument._metricStorages.forEach(metricStorage => {\n          metricStorage.record(observableResult._buffer, observationTime);\n        });\n      });\n  }\n\n  private _observeBatchCallbacks(observationTime: HrTime, timeoutMillis?: number) {\n    return this._batchCallbacks\n      .map(async ({ callback, instruments }) => {\n        const observableResult = new BatchObservableResultImpl();\n        let callPromise: Promise<void> = Promise.resolve(callback(observableResult));\n        if (timeoutMillis != null) {\n          callPromise = callWithTimeout(callPromise, timeoutMillis);\n        }\n        await callPromise;\n        instruments.forEach(instrument => {\n          const buffer = observableResult._buffer.get(instrument);\n          if (buffer == null) {\n            return;\n          }\n          instrument._metricStorages.forEach(metricStorage => {\n            metricStorage.record(buffer, observationTime);\n          });\n        });\n      });\n  }\n\n  private _findCallback(callback: ObservableCallback, instrument: ObservableInstrument) {\n    return this._callbacks.findIndex(record => {\n      return record.callback === callback && record.instrument === instrument;\n    });\n  }\n\n  private _findBatchCallback(callback: BatchObservableCallback, instruments: Set<ObservableInstrument>) {\n    return this._batchCallbacks.findIndex(record => {\n      return record.callback === callback && setEquals(record.instruments, instruments);\n    });\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport * as metrics from '@opentelemetry/api-metrics';\nimport { AttributeHashMap } from './state/HashMap';\nimport { isObservableInstrument, ObservableInstrument } from './Instruments';\nimport { InstrumentDescriptor } from '.';\n\n/**\n * The class implements {@link metrics.ObservableResult} interface.\n */\nexport class ObservableResultImpl implements metrics.ObservableResult {\n  /**\n   * @internal\n   */\n  _buffer = new AttributeHashMap<number>();\n\n  constructor(private _descriptor: InstrumentDescriptor) {}\n\n  /**\n   * Observe a measurement of the value associated with the given attributes.\n   */\n  observe(value: number, attributes: metrics.MetricAttributes = {}): void {\n    if (this._descriptor.valueType === metrics.ValueType.INT && !Number.isInteger(value)) {\n      api.diag.warn(\n        `INT value type cannot accept a floating-point value for ${this._descriptor.name}, ignoring the fractional digits.`\n      );\n      value = Math.trunc(value);\n    }\n    this._buffer.set(attributes, value);\n  }\n}\n\n/**\n * The class implements {@link metrics.BatchObservableCallback} interface.\n */\nexport class BatchObservableResultImpl implements metrics.BatchObservableResult {\n  /**\n   * @internal\n   */\n  _buffer: Map<ObservableInstrument, AttributeHashMap<number>> = new Map();\n\n  /**\n   * Observe a measurement of the value associated with the given attributes.\n   */\n  observe(metric: metrics.Observable, value: number, attributes: metrics.MetricAttributes = {}): void {\n    if (!isObservableInstrument(metric)) {\n      return;\n    }\n    let map = this._buffer.get(metric);\n    if (map == null) {\n      map = new AttributeHashMap();\n      this._buffer.set(metric, map);\n    }\n    if (metric._descriptor.valueType === metrics.ValueType.INT && !Number.isInteger(value)) {\n      api.diag.warn(\n        `INT value type cannot accept a floating-point value for ${metric._descriptor.name}, ignoring the fractional digits.`\n      );\n      value = Math.trunc(value);\n    }\n    map.set(attributes, value);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, HrTime } from '@opentelemetry/api';\nimport { MetricAttributes } from '@opentelemetry/api-metrics';\nimport { WritableMetricStorage } from './WritableMetricStorage';\nimport { Accumulation, Aggregator } from '../aggregator/types';\nimport { InstrumentDescriptor } from '../InstrumentDescriptor';\nimport { AttributesProcessor } from '../view/AttributesProcessor';\nimport { MetricStorage } from './MetricStorage';\nimport { MetricData } from '../export/MetricData';\nimport { DeltaMetricProcessor } from './DeltaMetricProcessor';\nimport { TemporalMetricProcessor } from './TemporalMetricProcessor';\nimport { Maybe } from '../utils';\nimport { MetricCollectorHandle } from './MetricCollector';\n\n/**\n * Internal interface.\n *\n * Stores and aggregates {@link MetricData} for synchronous instruments.\n */\nexport class SyncMetricStorage<T extends Maybe<Accumulation>> extends MetricStorage implements WritableMetricStorage {\n  private _deltaMetricStorage: DeltaMetricProcessor<T>;\n  private _temporalMetricStorage: TemporalMetricProcessor<T>;\n\n  constructor(\n    instrumentDescriptor: InstrumentDescriptor,\n    aggregator: Aggregator<T>,\n    private _attributesProcessor: AttributesProcessor\n  ) {\n    super(instrumentDescriptor);\n    this._deltaMetricStorage = new DeltaMetricProcessor(aggregator);\n    this._temporalMetricStorage = new TemporalMetricProcessor(aggregator);\n  }\n\n  record(value: number, attributes: MetricAttributes, context: Context, recordTime: HrTime) {\n    attributes = this._attributesProcessor.process(attributes, context);\n    this._deltaMetricStorage.record(value, attributes, context, recordTime);\n  }\n\n  /**\n   * Collects the metrics from this storage.\n   *\n   * Note: This is a stateful operation and may reset any interval-related\n   * state for the MetricCollector.\n   */\n  collect(\n    collector: MetricCollectorHandle,\n    collectors: MetricCollectorHandle[],\n    collectionTime: HrTime,\n  ): Maybe<MetricData> {\n    const accumulations = this._deltaMetricStorage.collect();\n\n    return this._temporalMetricStorage.buildMetrics(\n      collector,\n      collectors,\n      this._instrumentDescriptor,\n      accumulations,\n      collectionTime\n    );\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { hrTime } from '@opentelemetry/core';\nimport { AggregationTemporalitySelector } from '../export/AggregationTemporality';\nimport { CollectionResult } from '../export/MetricData';\nimport { MetricProducer, MetricCollectOptions } from '../export/MetricProducer';\nimport { MetricReader } from '../export/MetricReader';\nimport { InstrumentType } from '../InstrumentDescriptor';\nimport { ForceFlushOptions, ShutdownOptions } from '../types';\nimport { FlatMap } from '../utils';\nimport { MeterProviderSharedState } from './MeterProviderSharedState';\n\n/**\n * An internal opaque interface that the MetricReader receives as\n * MetricProducer. It acts as the storage key to the internal metric stream\n * state for each MetricReader.\n */\nexport class MetricCollector implements MetricProducer {\n  constructor(private _sharedState: MeterProviderSharedState, private _metricReader: MetricReader) {\n  }\n\n  async collect(options?: MetricCollectOptions): Promise<CollectionResult> {\n    const collectionTime = hrTime();\n    const meterCollectionPromises = Array.from(this._sharedState.meterSharedStates.values())\n      .map(meterSharedState => meterSharedState.collect(this, collectionTime, options));\n    const result = await Promise.all(meterCollectionPromises);\n\n    return {\n      resourceMetrics: {\n        resource: this._sharedState.resource,\n        scopeMetrics: result.map(it => it.scopeMetrics),\n      },\n      errors: FlatMap(result, it => it.errors),\n    };\n  }\n\n  /**\n   * Delegates for MetricReader.forceFlush.\n   */\n  async forceFlush(options?: ForceFlushOptions): Promise<void> {\n    await this._metricReader.forceFlush(options);\n  }\n\n  /**\n   * Delegates for MetricReader.shutdown.\n   */\n  async shutdown(options?: ShutdownOptions): Promise<void> {\n    await this._metricReader.shutdown(options);\n  }\n\n  selectAggregationTemporality(instrumentType: InstrumentType) {\n    return this._metricReader.selectAggregationTemporality(instrumentType);\n  }\n}\n\n/**\n * An internal interface for MetricCollector. Exposes the necessary\n * information for metric collection.\n */\nexport interface MetricCollectorHandle {\n  selectAggregationTemporality: AggregationTemporalitySelector;\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from '@opentelemetry/context-zone-peer-dep';\nimport 'zone.js';\n","'use strict';\n/**\n * @license Angular v12.0.0-next.0\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst Zone$1 = (function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            if (!nativeMicroTaskQueuePromise) {\n                if (global[symbolPromise]) {\n                    nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                }\n            }\n            if (nativeMicroTaskQueuePromise) {\n                let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                if (!nativeThen) {\n                    // native Promise is not patchable, we need to use `then` directly\n                    // issue 1078\n                    nativeThen = nativeMicroTaskQueuePromise['then'];\n                }\n                nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n            }\n            else {\n                global[symbolSetTimeout](drainMicroTaskQueue, 0);\n            }\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n})(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nconst NULL_ON_PROP_VALUE = [null];\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signiture\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // substr(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.substr(2);\n    let eventNameSymbol = zoneSymbolEventNames[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        let previousValue = target[eventNameSymbol];\n        if (previousValue) {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        if (originalDescSet) {\n            originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n        }\n        if (typeof newValue === 'function') {\n            target[eventNameSymbol] = newValue;\n            target.addEventListener(eventName, wrapFn, false);\n        }\n        else {\n            target[eventNameSymbol] = null;\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet && originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.substr(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected : forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames$1 = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames$1[eventName] = {};\n    zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        task.invoke(task, target, [event]);\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return Object.assign(Object.assign({}, options), { passive: true });\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check upatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames$1[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames$1[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames$1[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames$1[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                if (prototype.hasOwnProperty(callback)) {\n                    const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                    if (descriptor && descriptor.value) {\n                        descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                        api._redefineProperty(opts.prototype, callback, descriptor);\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                else if (prototype[callback]) {\n                    prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst globalEventHandlersEventNames = [\n    'abort',\n    'animationcancel',\n    'animationend',\n    'animationiteration',\n    'auxclick',\n    'beforeinput',\n    'blur',\n    'cancel',\n    'canplay',\n    'canplaythrough',\n    'change',\n    'compositionstart',\n    'compositionupdate',\n    'compositionend',\n    'cuechange',\n    'click',\n    'close',\n    'contextmenu',\n    'curechange',\n    'dblclick',\n    'drag',\n    'dragend',\n    'dragenter',\n    'dragexit',\n    'dragleave',\n    'dragover',\n    'drop',\n    'durationchange',\n    'emptied',\n    'ended',\n    'error',\n    'focus',\n    'focusin',\n    'focusout',\n    'gotpointercapture',\n    'input',\n    'invalid',\n    'keydown',\n    'keypress',\n    'keyup',\n    'load',\n    'loadstart',\n    'loadeddata',\n    'loadedmetadata',\n    'lostpointercapture',\n    'mousedown',\n    'mouseenter',\n    'mouseleave',\n    'mousemove',\n    'mouseout',\n    'mouseover',\n    'mouseup',\n    'mousewheel',\n    'orientationchange',\n    'pause',\n    'play',\n    'playing',\n    'pointercancel',\n    'pointerdown',\n    'pointerenter',\n    'pointerleave',\n    'pointerlockchange',\n    'mozpointerlockchange',\n    'webkitpointerlockerchange',\n    'pointerlockerror',\n    'mozpointerlockerror',\n    'webkitpointerlockerror',\n    'pointermove',\n    'pointout',\n    'pointerover',\n    'pointerup',\n    'progress',\n    'ratechange',\n    'reset',\n    'resize',\n    'scroll',\n    'seeked',\n    'seeking',\n    'select',\n    'selectionchange',\n    'selectstart',\n    'show',\n    'sort',\n    'stalled',\n    'submit',\n    'suspend',\n    'timeupdate',\n    'volumechange',\n    'touchcancel',\n    'touchmove',\n    'touchstart',\n    'touchend',\n    'transitioncancel',\n    'transitionend',\n    'waiting',\n    'wheel'\n];\nconst documentEventNames = [\n    'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n    'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n    'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n    'visibilitychange', 'resume'\n];\nconst windowEventNames = [\n    'absolutedeviceorientation',\n    'afterinput',\n    'afterprint',\n    'appinstalled',\n    'beforeinstallprompt',\n    'beforeprint',\n    'beforeunload',\n    'devicelight',\n    'devicemotion',\n    'deviceorientation',\n    'deviceorientationabsolute',\n    'deviceproximity',\n    'hashchange',\n    'languagechange',\n    'message',\n    'mozbeforepaint',\n    'offline',\n    'online',\n    'paint',\n    'pageshow',\n    'pagehide',\n    'popstate',\n    'rejectionhandled',\n    'storage',\n    'unhandledrejection',\n    'unload',\n    'userproximity',\n    'vrdisplayconnected',\n    'vrdisplaydisconnected',\n    'vrdisplaypresentchange'\n];\nconst htmlElementEventNames = [\n    'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n    'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n    'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n];\nconst mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\nconst ieElementEventNames = [\n    'activate',\n    'afterupdate',\n    'ariarequest',\n    'beforeactivate',\n    'beforedeactivate',\n    'beforeeditfocus',\n    'beforeupdate',\n    'cellchange',\n    'controlselect',\n    'dataavailable',\n    'datasetchanged',\n    'datasetcomplete',\n    'errorupdate',\n    'filterchange',\n    'layoutcomplete',\n    'losecapture',\n    'move',\n    'moveend',\n    'movestart',\n    'propertychange',\n    'resizeend',\n    'resizestart',\n    'rowenter',\n    'rowexit',\n    'rowsdelete',\n    'rowsinserted',\n    'command',\n    'compassneedscalibration',\n    'deactivate',\n    'help',\n    'mscontentzoom',\n    'msmanipulationstatechanged',\n    'msgesturechange',\n    'msgesturedoubletap',\n    'msgestureend',\n    'msgesturehold',\n    'msgesturestart',\n    'msgesturetap',\n    'msgotpointercapture',\n    'msinertiastart',\n    'mslostpointercapture',\n    'mspointercancel',\n    'mspointerdown',\n    'mspointerenter',\n    'mspointerhover',\n    'mspointerleave',\n    'mspointermove',\n    'mspointerout',\n    'mspointerover',\n    'mspointerup',\n    'pointerout',\n    'mssitemodejumplistitemremoved',\n    'msthumbnailclick',\n    'stop',\n    'storagecommit'\n];\nconst webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\nconst formEventNames = ['autocomplete', 'autocompleteerror'];\nconst detailEventNames = ['toggle'];\nconst frameEventNames = ['load'];\nconst frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\nconst marqueeEventNames = ['bounce', 'finish', 'start'];\nconst XMLHttpRequestEventNames = [\n    'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n    'readystatechange'\n];\nconst IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\nconst websocketEventNames = ['close', 'error', 'open', 'message'];\nconst workerEventNames = ['error', 'message'];\nconst eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const supportsWebSocket = typeof WebSocket !== 'undefined';\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    if (isBrowser) {\n        const internalWindow = window;\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n        patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n        if (typeof internalWindow['SVGElement'] !== 'undefined') {\n            patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n        }\n        patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n        const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n        if (HTMLMarqueeElement) {\n            patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n        }\n        const Worker = internalWindow['Worker'];\n        if (Worker) {\n            patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n        }\n    }\n    const XMLHttpRequest = _global['XMLHttpRequest'];\n    if (XMLHttpRequest) {\n        // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n        patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget) {\n        patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    if (typeof IDBIndex !== 'undefined') {\n        patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n    }\n    if (supportsWebSocket) {\n        patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('util', (global, Zone, api) => {\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames: zoneSymbolEventNames$1,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    api.patchMethod(global, 'queueMicrotask', delegate => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './ZoneContextManager';\nexport * from './types';\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, ContextManager, ROOT_CONTEXT } from '@opentelemetry/api';\nimport { TargetWithEvents } from './types';\nimport { isListenerObject } from './util';\n\n/* Key name to be used to save a context reference in Zone */\nconst ZONE_CONTEXT_KEY = 'OT_ZONE_CONTEXT';\n\n/**\n * ZoneContextManager\n * This module provides an easy functionality for tracing action between asynchronous operations in web.\n * It was not possible with standard [StackContextManager]{@link https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-sdk-trace-web/src/StackContextManager.ts}.\n * It heavily depends on [zone.js]{@link https://www.npmjs.com/package/zone.js}.\n * It stores the information about context in zone. Each Context will have always new Zone;\n * It also supports binding a certain Span to a target that has \"addEventListener\" and \"removeEventListener\".\n * When this happens a new zone is being created and the provided Span is being assigned to this zone.\n */\nexport class ZoneContextManager implements ContextManager {\n  /**\n   * whether the context manager is enabled or not\n   */\n  private _enabled = false;\n\n  /**\n   * Helps to create a unique name for the zones - part of zone name\n   */\n  private _zoneCounter = 0;\n\n  /**\n   * Returns the active context from certain zone name\n   * @param activeZone\n   */\n  private _activeContextFromZone(activeZone: Zone | undefined): Context {\n    return (activeZone && activeZone.get(ZONE_CONTEXT_KEY)) || ROOT_CONTEXT;\n  }\n\n  /**\n   * @param context A context (span) to be executed within target function\n   * @param target Function to be executed within the context\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _bindFunction<T extends Function>(context: Context, target: T): T {\n    const manager = this;\n    const contextWrapper = function (this: unknown, ...args: unknown[]) {\n      return manager.with(context, () => target.apply(this, args));\n    };\n    Object.defineProperty(contextWrapper, 'length', {\n      enumerable: false,\n      configurable: true,\n      writable: false,\n      value: target.length,\n    });\n    return (contextWrapper as unknown) as T;\n  }\n\n  /**\n   * @param context A context (span) to be bind to target\n   * @param obj target object on which the listeners will be patched\n   */\n  private _bindListener<T>(context: Context, obj: T): T {\n    const target = (obj as unknown) as TargetWithEvents;\n    if (target.__ot_listeners !== undefined) {\n      return obj;\n    }\n    target.__ot_listeners = {};\n\n    if (typeof target.addEventListener === 'function') {\n      target.addEventListener = this._patchAddEventListener(\n        target,\n        target.addEventListener,\n        context\n      );\n    }\n\n    if (typeof target.removeEventListener === 'function') {\n      target.removeEventListener = this._patchRemoveEventListener(\n        target,\n        target.removeEventListener\n      );\n    }\n\n    return obj;\n  }\n\n  /**\n   * Creates a new unique zone name\n   */\n  private _createZoneName() {\n    this._zoneCounter++;\n    const random = Math.random();\n    return `${this._zoneCounter}-${random}`;\n  }\n\n  /**\n   * Creates a new zone\n   * @param zoneName zone name\n   * @param context A context (span) to be bind with Zone\n   */\n  private _createZone(zoneName: string, context: unknown): Zone {\n    return Zone.current.fork({\n      name: zoneName,\n      properties: {\n        [ZONE_CONTEXT_KEY]: context,\n      },\n    });\n  }\n\n  /**\n   * Returns the active zone\n   */\n  private _getActiveZone(): Zone | undefined {\n    return Zone.current;\n  }\n\n  /**\n   * Patches addEventListener method\n   * @param target any target that has \"addEventListener\" method\n   * @param original reference to the patched method\n   * @param [context] context to be bind to the listener\n   */\n  private _patchAddEventListener(\n    target: TargetWithEvents,\n    original: NonNullable<TargetWithEvents['addEventListener']>,\n    context: Context\n  ) {\n    const contextManager = this;\n\n    return function (\n      this: TargetWithEvents,\n      event,\n      listener,\n      opts\n    ) {\n      if (target.__ot_listeners === undefined) {\n        target.__ot_listeners = {};\n      }\n      let listeners = target.__ot_listeners[event];\n      if (listeners === undefined) {\n        listeners = new WeakMap();\n        target.__ot_listeners[event] = listeners;\n      }\n      const patchedListener = contextManager.bind(context, listener);\n      // store a weak reference of the user listener to ours\n      listeners.set(listener, patchedListener);\n      return original.call(this, event, patchedListener, opts);\n    } as TargetWithEvents['addEventListener'];\n  }\n\n  /**\n   * Patches removeEventListener method\n   * @param target any target that has \"removeEventListener\" method\n   * @param original reference to the patched method\n   */\n  private _patchRemoveEventListener(\n    target: TargetWithEvents,\n    original: NonNullable<TargetWithEvents['removeEventListener']>\n  ) {\n    return function (this: TargetWithEvents, event, listener) {\n      if (\n        target.__ot_listeners === undefined ||\n        target.__ot_listeners[event] === undefined\n      ) {\n        return original.call(this, event, listener);\n      }\n      const events = target.__ot_listeners[event];\n      const patchedListener = events.get(listener);\n      events.delete(listener);\n      return original.call(this, event, patchedListener || listener);\n    } as TargetWithEvents['removeEventListener'];\n  }\n\n  /**\n   * Returns the active context\n   */\n  active(): Context {\n    if (!this._enabled) {\n      return ROOT_CONTEXT;\n    }\n    const activeZone = this._getActiveZone();\n\n    const active = this._activeContextFromZone(activeZone);\n    if (active) {\n      return active;\n    }\n\n    return ROOT_CONTEXT;\n  }\n\n  /**\n   * Binds a the certain context or the active one to the target function and then returns the target\n   * @param context A context (span) to be bind to target\n   * @param target a function or event emitter. When target or one of its callbacks is called,\n   *  the provided context will be used as the active context for the duration of the call.\n   */\n  bind<T>(context: Context, target: T | TargetWithEvents): T {\n    // if no specific context to propagate is given, we use the current one\n    if (context === undefined) {\n      context = this.active();\n    }\n    if (typeof target === 'function') {\n      return this._bindFunction(context, target);\n    } else if (isListenerObject(target)) {\n      this._bindListener(context, target);\n    }\n    return (target as unknown) as T;\n  }\n\n  /**\n   * Disable the context manager (clears all the contexts)\n   */\n  disable(): this {\n    this._enabled = false;\n    return this;\n  }\n\n  /**\n   * Enables the context manager and creates a default(root) context\n   */\n  enable(): this {\n    this._enabled = true;\n    return this;\n  }\n\n  /**\n   * Calls the callback function [fn] with the provided [context].\n   *     If [context] is undefined then it will use the active context.\n   *     The context will be set as active\n   * @param context A context (span) to be called with provided callback\n   * @param fn Callback function\n   * @param thisArg optional receiver to be used for calling fn\n   * @param args optional arguments forwarded to fn\n   */\n  with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    context: Context | null,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    const zoneName = this._createZoneName();\n\n    const newZone = this._createZone(zoneName, context);\n\n    return newZone.run(fn, thisArg, args);\n  }\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TargetWithEvents } from './types';\n\n/**\n * check if an object has addEventListener and removeEventListener functions then it will return true\n * @param obj\n */\nexport function isListenerObject(obj: TargetWithEvents = {}): boolean {\n  return (\n    typeof obj.addEventListener === 'function' &&\n    typeof obj.removeEventListener === 'function'\n  );\n}\n",null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type Func<T> = (...args: unknown[]) => T;\n\n/**\n * Minimum requirements that the object needs to have so that it can bind to the events instead of function\n * this is \"addEventListener\" and \"removeEventListener\" - see {@link isListenerObject}\n */\nexport interface TargetWithEvents {\n  addEventListener?(\n    event: string,\n    listener: (...args: unknown[]) => void,\n    opts?: { once: boolean }\n  ): unknown;\n  removeEventListener?(\n    event: string,\n    listener: (...args: unknown[]) => void,\n    opts?: { once: boolean }\n  ): unknown;\n  __ot_listeners?: { [name: string]: WeakMap<Func<void>, Func<void>> };\n}\n"],"names":[],"version":3,"file":"tracing.js.map","sourceRoot":"/__parcel_source_root/"}